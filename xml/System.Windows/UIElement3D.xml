<Type Name="UIElement3D" FullName="System.Windows.UIElement3D">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2be4c3605710c694753de024829eaba3e8a08c94" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75180018" /></Metadata><TypeSignature Language="C#" Value="public abstract class UIElement3D : System.Windows.Media.Media3D.Visual3D, System.Windows.IInputElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract UIElement3D extends System.Windows.Media.Media3D.Visual3D implements class System.Windows.IInputElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.UIElement3D" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UIElement3D&#xA;Inherits Visual3D&#xA;Implements IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class UIElement3D abstract : System::Windows::Media::Media3D::Visual3D, System::Windows::IInputElement" />
  <TypeSignature Language="F#" Value="type UIElement3D = class&#xA;    inherit Visual3D&#xA;    interface IInputElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Media3D.Visual3D</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="368fc-101"><see cref="T:System.Windows.UIElement3D" /> ist eine Basisklasse für Implementierungen auf WPF-Kernebene, die auf WPF-Elementen (Windows Presentation Foundation) und grundlegenden Darstellungsmerkmalen aufbauen.</span><span class="sxs-lookup"><span data-stu-id="368fc-101"><see cref="T:System.Windows.UIElement3D" /> is a base class for WPF core level implementations building on Windows Presentation Foundation (WPF) elements and basic presentation characteristics.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-102"><xref:System.Windows.UIElement3D> ist eine abstrakte Basisklasse, von der Klassen abgeleitet werden können, um bestimmte 3D-Elemente darzustellen.</span><span class="sxs-lookup"><span data-stu-id="368fc-102"><xref:System.Windows.UIElement3D> is an abstract base class from which you can derive classes to represent specific 3D elements.</span></span>  
  
 <span data-ttu-id="368fc-103">Ein Großteil des Eingabe-, Fokus-und Ereignis Verhaltens für 3D-Elemente im Allgemeinen wird in der <xref:System.Windows.UIElement3D>-Klasse definiert.</span><span class="sxs-lookup"><span data-stu-id="368fc-103">Much of the input, focusing, and eventing behavior for 3D elements in general is defined in the <xref:System.Windows.UIElement3D> class.</span></span> <span data-ttu-id="368fc-104">Dies schließt die Ereignisse für Tastatur-, Maus-und Stift Eingaben sowie zugehörige Status Eigenschaften ein.</span><span class="sxs-lookup"><span data-stu-id="368fc-104">This includes the events for keyboard, mouse, and stylus input, and related status properties.</span></span> <span data-ttu-id="368fc-105">Viele dieser Ereignisse sind Routing Ereignisse, und viele der Eingabe bezogenen Ereignisse verfügen sowohl über eine bubblingerweiterungs Version als auch über eine tunnelingversion des Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="368fc-105">Many of these events are routed events, and many of the input-related events have both a bubbling routing version as well as a tunneling version of the event.</span></span> <span data-ttu-id="368fc-106">Diese paarweise vorkommenden Ereignisse sind in der Regel die Ereignisse, die von den Autoren gesteuert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-106">These paired events are typically the events of greatest interest to control authors.</span></span>  
  
 <span data-ttu-id="368fc-107"><xref:System.Windows.UIElement3D> umfasst auch APIs, die sich auf das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Ereignis Modell beziehen, einschließlich Methoden, die bestimmte Routing Ereignisse, die aus einer Element Instanz stammen, auswerfen können.</span><span class="sxs-lookup"><span data-stu-id="368fc-107"><xref:System.Windows.UIElement3D> also includes APIs that relate to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] event model, including methods that can raise specified routed events that are sourced from an element instance.</span></span>  
  
 <span data-ttu-id="368fc-108">Ein <xref:System.Windows.UIElement3D> verfügt über die folgenden Funktionen, die speziell von der <xref:System.Windows.UIElement3D>-Klasse definiert werden:</span><span class="sxs-lookup"><span data-stu-id="368fc-108">A <xref:System.Windows.UIElement3D> has the following capabilities that are specifically defined by the <xref:System.Windows.UIElement3D> class:</span></span>  
  
-   <span data-ttu-id="368fc-109">Kann auf Benutzereingaben (einschließlich der Kontrolle über das Senden von Eingaben über das Ereignis Routing oder Routing von Befehlen) reagieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-109">Can respond to user input (including control of where input is sent via handling of event routing or routing of commands).</span></span>  
  
-   <span data-ttu-id="368fc-110">Kann Routing Ereignisse, die eine Route durch die logische Elementstruktur bewegen, hervorrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-110">Can raise routed events that travel a route through the logical element tree.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="368fc-111"><xref:System.Windows.UIElement3D.Visibility%2A> Zustand wirkt sich auf alle Eingaben dieses Elements aus.</span><span class="sxs-lookup"><span data-stu-id="368fc-111"><xref:System.Windows.UIElement3D.Visibility%2A> state affects all input handling by that element.</span></span> <span data-ttu-id="368fc-112">Elemente, die nicht sichtbar sind, werden nicht an Treffer Tests beteiligt und empfangen keine Eingabeereignisse, auch wenn sich die Maus über dem Bereich befindet, an dem sich das Element befindet, wenn es sichtbar wäre.</span><span class="sxs-lookup"><span data-stu-id="368fc-112">Elements that are not visible do not participate in hit testing and do not receive input events, even if the mouse is over the bounds of where the element would be if were visible.</span></span>  
  
 <span data-ttu-id="368fc-113">Im Gegensatz zur <xref:System.Windows.UIElement>-Klasse schließt die <xref:System.Windows.UIElement3D>-Klasse kein Layout ein.</span><span class="sxs-lookup"><span data-stu-id="368fc-113">Unlike the <xref:System.Windows.UIElement> class, the <xref:System.Windows.UIElement3D> class does not include layout.</span></span> <span data-ttu-id="368fc-114">Daher enthält die <xref:System.Windows.UIElement3D>-Klasse keine **Measure** -oder **Anordnungs** Methoden.</span><span class="sxs-lookup"><span data-stu-id="368fc-114">Therefore, the <xref:System.Windows.UIElement3D> class does not include **Measure** or **Arrange** methods.</span></span>  
  
 <span data-ttu-id="368fc-115">Eine Klasse, die von <xref:System.Windows.UIElement3D> abgeleitet ist und eine eigene Auflistung von <xref:System.Windows.Media.Media3D.Visual3D> Objekten verwaltet, indem Sie <xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A> überschreibt und <xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A> weiterhin neue <xref:System.Windows.Media.Media3D.Visual3D> Objekte an <xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A>übergeben muss.</span><span class="sxs-lookup"><span data-stu-id="368fc-115">A class that derives from <xref:System.Windows.UIElement3D> and maintains its own collection of <xref:System.Windows.Media.Media3D.Visual3D> objects by overriding <xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A> and <xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A> must still pass new <xref:System.Windows.Media.Media3D.Visual3D> objects to <xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A>.</span></span>  
  
 <span data-ttu-id="368fc-116"><xref:System.Windows.UIElement3D> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-116"><xref:System.Windows.UIElement3D> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-117">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-117">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="368fc-118">Im folgenden Beispiel wird gezeigt, wie von der <xref:System.Windows.UIElement3D>-Klasse abgeleitet wird, um eine `Sphere` Klasse zu erstellen:</span><span class="sxs-lookup"><span data-stu-id="368fc-118">The following example shows how to derive from the <xref:System.Windows.UIElement3D> class to create a `Sphere` class:</span></span>  
  
 [!code-csharp[Shapes#Sphere](~/samples/snippets/csharp/VS_Snippets_Wpf/Shapes/CSharp/Sphere.cs#sphere)]
 [!code-vb[Shapes#Sphere](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Shapes/visualbasic/sphere.vb#sphere)]  
  
 <span data-ttu-id="368fc-119">Das komplette Beispiel finden Sie unter [UIElement3D Sphere Sample](https://go.microsoft.com/fwlink/?LinkID=160044).</span><span class="sxs-lookup"><span data-stu-id="368fc-119">For the complete sample, see [UIElement3D Sphere Sample](https://go.microsoft.com/fwlink/?LinkID=160044).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-120">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-120">Handling Events in 3-D Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UIElement3D ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UIElement3D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="368fc-121">Initialisiert eine neue Instanz der <see cref="T:System.Windows.UIElement3D" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="368fc-121">Initializes a new instance of the <see cref="T:System.Windows.UIElement3D" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-122"><xref:System.Windows.UIElement3D.%23ctor%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-122"><xref:System.Windows.UIElement3D.%23ctor%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-123">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-123">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="368fc-124">Fügt einen Routingereignishandler für ein bestimmtes Routingereignis hinzu, wobei der Handler der Handlerauflistung für das aktuelle Element hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-124">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement3D.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="368fc-125">Ein Bezeichner für das zu behandelnde Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-125">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="368fc-126">Ein Verweis auf die Handlerimplementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-126">A reference to the handler implementation.</span></span></param>
        <summary><span data-ttu-id="368fc-127">Fügt einen Routingereignishandler für ein bestimmtes Routingereignis hinzu, wobei der Handler der Handlerauflistung für das aktuelle Element hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-127">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-128">Sie können den gleichen Handler für das gleiche Ereignis mehrmals hinzufügen, ohne eine Ausnahme ausgelöst zu haben.</span><span class="sxs-lookup"><span data-stu-id="368fc-128">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="368fc-129">Der Handler wird jedoch tatsächlich mehrmals aufgerufen, wenn das Ereignis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-129">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="368fc-130">Berücksichtigen Sie daher, wie dieses Verhalten Nebeneffekte haben kann, die in ihrer Handlerimplementierung berücksichtigt werden sollten.</span><span class="sxs-lookup"><span data-stu-id="368fc-130">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="368fc-131">Normalerweise verwenden Sie diese Methode, um die Implementierung des Add-Accessors für das [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] Ereignis Zugriffsmuster eines benutzerdefinierten Routing Ereignisses bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="368fc-131">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 <span data-ttu-id="368fc-132"><xref:System.Windows.UIElement3D.AddHandler%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-132"><xref:System.Windows.UIElement3D.AddHandler%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-133">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-133">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="uIElement3D.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="368fc-134">Ein Bezeichner für das zu behandelnde Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-134">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="368fc-135">Ein Verweis auf die Handlerimplementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-135">A reference to the handler implementation.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="368fc-136"><see langword="true" />, wenn der Handler registriert werden soll, sodass er selbst dann aufgerufen wird, wenn das Routingereignis in den zugehörigen Ereignisdaten als behandelt markiert ist; <see langword="false" />, wenn der Handler mit der Standardbedingung registriert werden soll, dass er nicht aufgerufen wird, wenn das Routingereignis bereits als behandelt markiert ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-136"><see langword="true" /> to register the handler such that it is invoked even when the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span></span>  
  
<span data-ttu-id="368fc-137">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-137">The default is <see langword="false" />.</span></span>  
  
<span data-ttu-id="368fc-138">Legen Sie die Anforderung zum erneuten Behandeln eines Routingereignisses nicht gewohnheitsmäßig fest.</span><span class="sxs-lookup"><span data-stu-id="368fc-138">Do not routinely ask to rehandle a routed event.</span></span></param>
        <summary><span data-ttu-id="368fc-139">Fügt einen Routingereignishandler für ein bestimmtes Routingereignis hinzu, wobei der Handler der Handlerauflistung für das aktuelle Element hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-139">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span> <span data-ttu-id="368fc-140">Legen Sie <paramref name="handledEventsToo" /> auf <see langword="true" /> fest, damit der bereitgestellte Handler für ein Routingereignis aufgerufen wird, das bereits von einem anderen Element auf der Ereignisroute als behandelt markiert wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-140">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-141">Die praktische Verarbeitung von Eingabe Ereignissen auf niedriger Ebene ist eine komplexe Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="368fc-141">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="368fc-142">Viele Steuerelemente implementieren Verhalten, bei dem ein bestimmtes Ereignis als behandelt markiert ist und durch ein weiteres intuitives Ereignis ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-142">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="368fc-143">Im allgemeinen markiert ein Steuerelement nur ein Platt Form Eingabe Ereignis als behandelt, wenn es dafür eine Entwurfs Absicht gibt.</span><span class="sxs-lookup"><span data-stu-id="368fc-143">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="368fc-144">In bestimmten Szenarien ist es möglicherweise nicht sinnvoll, die jeweilige Behandlung des Eingabe Ereignisses zu beachten.</span><span class="sxs-lookup"><span data-stu-id="368fc-144">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="368fc-145">In diesen Szenarien ist die Registrierung von Handlern bei `handledEventsToo` wie `true` angemessen.</span><span class="sxs-lookup"><span data-stu-id="368fc-145">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="368fc-146">Dies sollte jedoch nicht regelmäßig durchzuführen sein.</span><span class="sxs-lookup"><span data-stu-id="368fc-146">But you should not do this routinely.</span></span> <span data-ttu-id="368fc-147">Das Aufrufen von Handlern als Reaktion auf alle Ereignisse, auch wenn Sie behandelt werden, erschwert ihre eigene Logik zur Anwendungs Ereignisverarbeitung.</span><span class="sxs-lookup"><span data-stu-id="368fc-147">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="368fc-148">Wenn die Handlerlogik beträchtlich ist, kann die Leistung beeinträchtigt werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-148">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="368fc-149">Sie sollten die Verwendung von Anfüge Handlern für bereits behandelte Ereignisse in Situationen reservieren, in denen Sie bereits während des Entwicklungsprozesses erkannt haben, dass bestimmte Steuerelemente Ereignisse verarbeiten, die Sie mit der Anwendungslogik noch verarbeiten möchten.</span><span class="sxs-lookup"><span data-stu-id="368fc-149">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="368fc-150">Ein weiteres Verfahren, um das Verhalten der Klassen Behandlung für bestimmte Kombinationen von Ereignis Steuerelementen zu vermeiden, besteht darin, die Vorschau Alternative dieses Ereignisses zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="368fc-150">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="368fc-151">Wenn <xref:System.Windows.UIElement3D.MouseLeftButtonDown> z. b. durch eine Klassen Behandlung als behandelt markiert ist, können Sie stattdessen möglicherweise Handler für <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-151">For example, if <xref:System.Windows.UIElement3D.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="368fc-152">Sie können den gleichen Handler für das gleiche Ereignis mehrmals hinzufügen, ohne eine Ausnahme ausgelöst zu haben.</span><span class="sxs-lookup"><span data-stu-id="368fc-152">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="368fc-153">Der Handler wird jedoch tatsächlich mehrmals aufgerufen, wenn das Ereignis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-153">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="368fc-154">Berücksichtigen Sie daher, wie dieses Verhalten Nebeneffekte haben kann, die in ihrer Handlerimplementierung berücksichtigt werden sollten.</span><span class="sxs-lookup"><span data-stu-id="368fc-154">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="368fc-155">Normalerweise verwenden Sie diese Methode, um die Implementierung des Add-Accessors für das [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] Ereignis Zugriffsmuster eines benutzerdefinierten Routing Ereignisses bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="368fc-155">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 <span data-ttu-id="368fc-156"><xref:System.Windows.UIElement3D.AddHandler%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-156"><xref:System.Windows.UIElement3D.AddHandler%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-157">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-157">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AddToEventRoute : System.Windows.EventRoute * System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement3D.AddToEventRoute (route, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route"><span data-ttu-id="368fc-158">Die Ereignisroute, der Handler hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-158">The event route that handlers are added to.</span></span></param>
        <param name="e"><span data-ttu-id="368fc-159">Die Ereignisdaten, mit denen die Handler hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-159">The event data that is used to add the handlers.</span></span> <span data-ttu-id="368fc-160">Diese Methode verwendet die <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />-Eigenschaft der Ereignisdaten, um die Handler zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="368fc-160">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the event data to create the handlers.</span></span></param>
        <summary><span data-ttu-id="368fc-161">Fügt der angegebenen <see cref="T:System.Windows.EventRoute" /> Handler für die aktuelle Auflistung von <see cref="T:System.Windows.UIElement3D" />-Ereignishandlern hinzu.</span><span class="sxs-lookup"><span data-stu-id="368fc-161">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.UIElement3D" /> event handler collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-162">Diese Methode kann von Inhalts Host Elementen verwendet werden (entweder von, die <xref:System.Windows.IContentHost> implementieren, oder von denen, die nicht sind), um dem <xref:System.Windows.EventRoute>Handler für untergeordnete Elemente hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-162">This method can be used by content host elements (either those that implement <xref:System.Windows.IContentHost> or those that don't) to add handlers for child elements to the <xref:System.Windows.EventRoute>.</span></span>  
  
 <span data-ttu-id="368fc-163"><xref:System.Windows.UIElement3D.AddToEventRoute%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-163"><xref:System.Windows.UIElement3D.AddToEventRoute%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-164">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-164">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.UIElement3D.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-165">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob dieses Element als Ziel eines Drag &amp; Drop-Vorgangs verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="368fc-165">Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.</span></span></summary>
        <value><span data-ttu-id="368fc-166"><see langword="true" />, wenn dieses Element als Ziel eines Drag &amp; Drop-Vorgangs verwendet werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-166"><see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="368fc-167">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-167">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-168">Drag & amp; Drop-Vorgänge sind standardmäßig nicht aktiviert und müssen absichtlich aktiviert werden, indem <xref:System.Windows.UIElement3D.AllowDrop%2A> auf `true`festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-168">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.UIElement3D.AllowDrop%2A> to `true`.</span></span> <span data-ttu-id="368fc-169">Neben dieser grundlegenden Einstellung ist das Drag & Drop-Verhalten vollständig Implementierungs spezifisch und wird nicht von <xref:System.Windows.UIElement3D> oder einer anderen Basiselement Klasse definiert.</span><span class="sxs-lookup"><span data-stu-id="368fc-169">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.UIElement3D> or any other base element class.</span></span> <span data-ttu-id="368fc-170">Bestimmte Steuerelemente, z. b. <xref:System.Windows.Controls.RichTextBox>, verfügen über ein Standardverhalten.</span><span class="sxs-lookup"><span data-stu-id="368fc-170">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior.</span></span> <span data-ttu-id="368fc-171">Weitere Informationen zum Ziehen und ablegen finden Sie unter [Übersicht über Drag](~/docs/framework/wpf/advanced/drag-and-drop-overview.md)& Drop.</span><span class="sxs-lookup"><span data-stu-id="368fc-171">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-172"><xref:System.Windows.UIElement3D.AllowDrop%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-172"><xref:System.Windows.UIElement3D.AllowDrop%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-173">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-173">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-174">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-174">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-175">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-175">Identifier field</span></span>|<xref:System.Windows.UIElement3D.AllowDropProperty>|  
|<span data-ttu-id="368fc-176">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-176">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-177">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-177">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowDropProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.AllowDropProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-178">Identifiziert die <see cref="P:System.Windows.UIElement3D.AllowDrop" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-178">Identifies the <see cref="P:System.Windows.UIElement3D.AllowDrop" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-179"><xref:System.Windows.UIElement3D.AllowDropProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-179"><xref:System.Windows.UIElement3D.AllowDropProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-180">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-180">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCaptured : bool" Usage="System.Windows.UIElement3D.AreAnyTouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-181">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-181">Gets a value that indicates whether at least one touch is captured to this element.</span></span></summary>
        <value><span data-ttu-id="368fc-182"><see langword="true" />, wenn mindestens eine Fingereingabe für dieses Element erfasst wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-182"><see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.AreAnyTouchesCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-183">Identifiziert die <see cref="P:System.Windows.UIElement3D.AreAnyTouchesCaptured" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-183">Identifies the <see cref="P:System.Windows.UIElement3D.AreAnyTouchesCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCapturedWithin : bool" Usage="System.Windows.UIElement3D.AreAnyTouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-184">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-184">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="368fc-185"><see langword="true" />, wenn mindestens eine Fingereingabe für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-185"><see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-186">Identifiziert die <see cref="P:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-186">Identifies the <see cref="P:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesDirectlyOver : bool" Usage="System.Windows.UIElement3D.AreAnyTouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-187">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät über diesem Element gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-187">Gets a value that indicates whether at least one touch is pressed over this element.</span></span></summary>
        <value><span data-ttu-id="368fc-188"><see langword="true" />, wenn mindestens eine Fingereingabe auf diesem Element registriert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-188"><see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-189">Identifiziert die <see cref="P:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-189">Identifies the <see cref="P:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesOver : bool" Usage="System.Windows.UIElement3D.AreAnyTouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-190">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät auf diesem Element oder seinen untergeordneten Elementen in der visuellen Struktur gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-190">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="368fc-191"><see langword="true" />, wenn mindestens eine Fingereingabe auf diesem Element oder den untergeordneten Elementen in der visuellen Struktur erfasst wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-191"><see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.AreAnyTouchesOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-192">Identifiziert die <see cref="P:System.Windows.UIElement3D.AreAnyTouchesOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-192">Identifies the <see cref="P:System.Windows.UIElement3D.AreAnyTouchesOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberSignature Language="F#" Value="abstract member CaptureMouse : unit -&gt; bool&#xA;override this.CaptureMouse : unit -&gt; bool" Usage="uIElement3D.CaptureMouse " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="368fc-193">Versucht, die Mausaufzeichnung für dieses Element zu erzwingen.</span><span class="sxs-lookup"><span data-stu-id="368fc-193">Attempts to force capture of the mouse to this element.</span></span></summary>
        <returns><span data-ttu-id="368fc-194"><see langword="true" />, wenn die Maus erfolgreich aufgezeichnet wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-194"><see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-195">Ein Element muss aktiviert sein, damit es aufgezeichnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="368fc-195">To be captured, an element must be enabled.</span></span> <span data-ttu-id="368fc-196">Überprüfen Sie, ob <xref:System.Windows.UIElement3D.IsEnabled%2A> `true` ist, bevor Sie <xref:System.Windows.UIElement3D.CaptureMouse%2A>aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-196">Check whether <xref:System.Windows.UIElement3D.IsEnabled%2A> is `true` before you call <xref:System.Windows.UIElement3D.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="368fc-197">Wenn der Aufruf von <xref:System.Windows.UIElement3D.CaptureMouse%2A> `true`zurückgibt, wird auch <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> `true`.</span><span class="sxs-lookup"><span data-stu-id="368fc-197">If calling <xref:System.Windows.UIElement3D.CaptureMouse%2A> returns `true`, then <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="368fc-198">Wenn das Aufrufen von <xref:System.Windows.UIElement3D.CaptureMouse%2A> `true`zurückgibt, werden die Ereignisse <xref:System.Windows.UIElement3D.GotMouseCapture> und <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> ausgelöst, wobei <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in den Ereignisdaten als das Element gemeldet wird, in dem die <xref:System.Windows.UIElement3D.CaptureMouse%2A>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-198">If calling <xref:System.Windows.UIElement3D.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.UIElement3D.GotMouseCapture> and <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.UIElement3D.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="368fc-199">Wenn Sie die Erfassung erzwingen, können Sie die vorhandenen Erfassungen stören, insbesondere bei Erfassungen, die sich auf Drag & Drop mit der Maus beziehen.</span><span class="sxs-lookup"><span data-stu-id="368fc-199">If you force capture, you might interfere with existing captures - especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="368fc-200">Um die Maus Aufzeichnung von allen Elementen zu löschen, müssen Sie <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> mit dem `element` Parameter aufrufen, der als `null`bereitgestellt wird</span><span class="sxs-lookup"><span data-stu-id="368fc-200">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
 <span data-ttu-id="368fc-201"><xref:System.Windows.UIElement3D.CaptureMouse%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-201"><xref:System.Windows.UIElement3D.CaptureMouse%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-202">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-202">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberSignature Language="F#" Value="abstract member CaptureStylus : unit -&gt; bool&#xA;override this.CaptureStylus : unit -&gt; bool" Usage="uIElement3D.CaptureStylus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="368fc-203">Versucht, die Tablettstiftaufzeichnung für dieses Element zu erzwingen.</span><span class="sxs-lookup"><span data-stu-id="368fc-203">Attempts to force capture of the stylus to this element.</span></span></summary>
        <returns><span data-ttu-id="368fc-204"><see langword="true" />, wenn der Tablettstift erfolgreich aufgezeichnet wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-204"><see langword="true" /> if the stylus was successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-205">Die Standard Implementierung, die auf dem zugrunde liegenden Standard Stift Gerät basiert, gibt immer `true`zurück.</span><span class="sxs-lookup"><span data-stu-id="368fc-205">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="368fc-206">Wenn Sie jedoch die Eingabegeräte erweitern, die die Geräte Implementierung für das Eingabe System bereitstellen, ist es möglich, ein System mit einer alternativen Stift-Geräte Implementierung zu erstellen, die möglicherweise andere Ergebnisse zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="368fc-206">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="368fc-207">Wenn ein Element den Tablettstift erfasst, empfängt es eine Stift Eingabe, auch wenn sich der Tablettstift außerhalb seiner Begrenzungen befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-207">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="368fc-208">Der Tablettstift wird in der Regel nur während Drag & Drop-Vorgängen aufgezeichnet.</span><span class="sxs-lookup"><span data-stu-id="368fc-208">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="368fc-209">Durch Aufrufen dieser Methode wird eine zugrunde liegende statische <xref:System.Windows.Input.Stylus> Methode <xref:System.Windows.Input.Stylus.Capture%2A>aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-209">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="368fc-210">Das tatsächliche Aufzeichnungs Verhalten wird von der aktiven Stift Geräte Implementierung implementiert.</span><span class="sxs-lookup"><span data-stu-id="368fc-210">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="368fc-211">Ein Element muss aktiviert sein, damit es aufgezeichnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="368fc-211">To be captured, an element must be enabled.</span></span> <span data-ttu-id="368fc-212">Überprüfen Sie, ob <xref:System.Windows.UIElement3D.IsEnabled%2A> `true` zurückgeben wird, bevor Sie <xref:System.Windows.UIElement3D.CaptureStylus%2A>aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-212">Check whether <xref:System.Windows.UIElement3D.IsEnabled%2A> is `true` return before you call <xref:System.Windows.UIElement3D.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="368fc-213">Wenn das Aufrufen von <xref:System.Windows.UIElement3D.CaptureStylus%2A> `true`zurückgibt, wird <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> ebenfalls `true`.</span><span class="sxs-lookup"><span data-stu-id="368fc-213">If calling <xref:System.Windows.UIElement3D.CaptureStylus%2A> returns `true`, <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="368fc-214"><xref:System.Windows.UIElement3D.CaptureStylus%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-214"><xref:System.Windows.UIElement3D.CaptureStylus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-215">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-215">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.CaptureTouch : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement3D.CaptureTouch touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="368fc-216">Das zu erfassende Gerät.</span><span class="sxs-lookup"><span data-stu-id="368fc-216">The device to capture.</span></span></param>
        <summary><span data-ttu-id="368fc-217">Versucht, die Fingereingabe für dieses Element zu erzwingen.</span><span class="sxs-lookup"><span data-stu-id="368fc-217">Attempts to force capture of a touch to this element.</span></span></summary>
        <returns><span data-ttu-id="368fc-218"><see langword="true" />, wenn die angegebene Fingereingabe für dieses Element erfasst wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-218"><see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-219"><xref:System.Windows.UIElement3D.CaptureTouch%2A> gibt `false` zurück, wenn der <xref:System.Windows.Input.TouchDevice> aktuell in einem anderen Element aufgezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-219"><xref:System.Windows.UIElement3D.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="368fc-220">Wenn <xref:System.Windows.UIElement3D.CaptureTouch%2A> `true`zurückgibt, wird das Ereignis <xref:System.Windows.UIElement3D.GotTouchCapture> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-220">If <xref:System.Windows.UIElement3D.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.UIElement3D.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="368fc-221">Verwenden Sie die <xref:System.Windows.UIElement3D.ReleaseTouchCapture%2A>-Methode, und geben Sie das zu veröffentlichenden Fingerabdruck Gerät an, um die Erfassung eines einzelnen Berührungen von diesem Element freizugeben.</span><span class="sxs-lookup"><span data-stu-id="368fc-221">To release capture of a single touch from this element, use the <xref:System.Windows.UIElement3D.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="368fc-222">Um alle Berührungen von diesem Element freizugeben, verwenden Sie die <xref:System.Windows.UIElement3D.ReleaseAllTouchCaptures%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="368fc-222">To release all touches from this element, use the <xref:System.Windows.UIElement3D.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="368fc-223"><paramref name="touchDevice" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-223"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBindings : System.Windows.Input.CommandBindingCollection" Usage="System.Windows.UIElement3D.CommandBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-224">Ruft eine Auflistung von <see cref="T:System.Windows.Input.CommandBinding" />-Objekten ab, die diesem Element zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="368fc-224">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects associated with this element.</span></span></summary>
        <value><span data-ttu-id="368fc-225">Die Auflistung aller <see cref="T:System.Windows.Input.CommandBinding" />-Objekte.</span><span class="sxs-lookup"><span data-stu-id="368fc-225">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-226">Ein <xref:System.Windows.Input.CommandBinding> ermöglicht die Befehls Verarbeitung eines bestimmten Befehls für dieses Element und deklariert die Verknüpfung zwischen einem Befehl, seinen Ereignissen und den von diesem Element angefügten Handlern.</span><span class="sxs-lookup"><span data-stu-id="368fc-226">A <xref:System.Windows.Input.CommandBinding> enables command handling of a specific command for this element, and declares the linkage between a command, its events, and the handlers attached by this element.</span></span>  
  
 <span data-ttu-id="368fc-227">Eine andere Möglichkeit, die <xref:System.Windows.UIElement3D.CommandBindings%2A> Auflistung aufzufüllen, besteht darin, <xref:System.Windows.Input.CommandManager> Methoden Programm gesteuert zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="368fc-227">Another typical way to populate the <xref:System.Windows.UIElement3D.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
 <span data-ttu-id="368fc-228"><xref:System.Windows.UIElement3D.CommandBindings%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-228"><xref:System.Windows.UIElement3D.CommandBindings%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-229">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-229">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="368fc-230">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="368fc-230">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="368fc-231">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="368fc-231">XAML Values</span></span>  
 <span data-ttu-id="368fc-232">*oneormorecommandbindungen*</span><span class="sxs-lookup"><span data-stu-id="368fc-232">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="368fc-233">Mindestens ein <xref:System.Windows.Input.CommandBinding> Elemente.</span><span class="sxs-lookup"><span data-stu-id="368fc-233">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="368fc-234">Jede dieser Attribute sollte ein <xref:System.Windows.Input.CommandBinding.Command%2A> Attribut haben, das auf einen bekannten Befehl festgelegt ist, sowie Attribute, die für die <xref:System.Windows.Input.CommandBinding.CanExecute>-und <xref:System.Windows.Input.CommandBinding.Executed> Handlerimplementierungen festgelegt sind</span><span class="sxs-lookup"><span data-stu-id="368fc-234">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="368fc-235">Weitere Informationen finden Sie unter <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="368fc-235">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.DragEventHandler " Usage="member this.DragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-236">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Ziel meldet.</span><span class="sxs-lookup"><span data-stu-id="368fc-236">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-237">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.DragEnter?displayProperty=nameWithType> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-237">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-238">Ereignishandler, die an das <xref:System.Windows.UIElement3D.DragEnter> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-238">Event handlers that are attached to the <xref:System.Windows.UIElement3D.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-239"><xref:System.Windows.UIElement3D.DragEnter> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-239"><xref:System.Windows.UIElement3D.DragEnter> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-240">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-240">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-241">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-241">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-242">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-242">Identifier field</span></span>|<xref:System.Windows.UIElement3D.DragEnterEvent>|  
|<span data-ttu-id="368fc-243">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-243">Routing strategy</span></span>|<span data-ttu-id="368fc-244">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-244">Bubbling</span></span>|  
|<span data-ttu-id="368fc-245">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-245">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="368fc-246">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="368fc-246">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="368fc-247">Überschreiben Sie <xref:System.Windows.UIElement3D.OnDragEnter%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-247">Override <xref:System.Windows.UIElement3D.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-248">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-248">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-249">Identifiziert das <see cref="E:System.Windows.UIElement3D.DragEnter" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-249">Identifies the <see cref="E:System.Windows.UIElement3D.DragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-250">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-250">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-251">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-251">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-252">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-252">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-253">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-253">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-254">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-254">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-255"><xref:System.Windows.UIElement3D.DragEnterEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-255"><xref:System.Windows.UIElement3D.DragEnterEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-256">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-256">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.DragEventHandler " Usage="member this.DragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-257">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Quelle meldet.</span><span class="sxs-lookup"><span data-stu-id="368fc-257">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-258">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.DragLeave?displayProperty=nameWithType> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-258">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement3D.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-259">Ereignishandler, die an das <xref:System.Windows.UIElement3D.DragLeave> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-259">Event handlers that are attached to the <xref:System.Windows.UIElement3D.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-260"><xref:System.Windows.UIElement3D.DragLeave> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-260"><xref:System.Windows.UIElement3D.DragLeave> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-261">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-261">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-262">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-262">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-263">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-263">Identifier field</span></span>|<xref:System.Windows.UIElement3D.DragLeaveEvent>|  
|<span data-ttu-id="368fc-264">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-264">Routing strategy</span></span>|<span data-ttu-id="368fc-265">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-265">Bubbling</span></span>|  
|<span data-ttu-id="368fc-266">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-266">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="368fc-267">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="368fc-267">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="368fc-268">Überschreiben Sie <xref:System.Windows.UIElement3D.OnDragLeave%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-268">Override <xref:System.Windows.UIElement3D.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragEnter" />
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
        <altmember cref="E:System.Windows.UIElement3D.GiveFeedback" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-269">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-269">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-270">Identifiziert das <see cref="E:System.Windows.UIElement3D.DragLeave" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-270">Identifies the <see cref="E:System.Windows.UIElement3D.DragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-271">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-271">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-272">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-272">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-273">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-273">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-274">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-274">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-275">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-275">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-276"><xref:System.Windows.UIElement3D.DragLeaveEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-276"><xref:System.Windows.UIElement3D.DragLeaveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-277">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-277">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.DragEventHandler " Usage="member this.DragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-278">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als potenzielles Drop-Ziel meldet.</span><span class="sxs-lookup"><span data-stu-id="368fc-278">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-279">Dieses Ereignis tritt auch dann auf, wenn das ziehen aus den Element Begrenzungen stammt.</span><span class="sxs-lookup"><span data-stu-id="368fc-279">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="368fc-280">Wenn der Zieh Vorgang außerhalb der Grenzen beginnt und dann innerhalb von verschoben wird, wird dieses Ereignis ebenfalls ausgelöst sowie <xref:System.Windows.UIElement3D.DragEnter> und verwandte Vorschau Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="368fc-280">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.UIElement3D.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="368fc-281">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.DragOver?displayProperty=nameWithType> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-281">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement3D.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-282">Ereignishandler, die an das <xref:System.Windows.UIElement3D.DragOver> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-282">Event handlers that are attached to the <xref:System.Windows.UIElement3D.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-283"><xref:System.Windows.UIElement3D.DragOver> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-283"><xref:System.Windows.UIElement3D.DragOver> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-284">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-284">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-285">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-285">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-286">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-286">Identifier field</span></span>|<xref:System.Windows.UIElement3D.DragOverEvent>|  
|<span data-ttu-id="368fc-287">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-287">Routing strategy</span></span>|<span data-ttu-id="368fc-288">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-288">Bubbling</span></span>|  
|<span data-ttu-id="368fc-289">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-289">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="368fc-290">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="368fc-290">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="368fc-291">Überschreiben Sie <xref:System.Windows.UIElement3D.OnDragOver%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-291">Override <xref:System.Windows.UIElement3D.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragEnter" />
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
        <altmember cref="E:System.Windows.UIElement3D.Drop" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-292">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-292">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-293">Identifiziert das <see cref="E:System.Windows.UIElement3D.DragOver" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-293">Identifies the <see cref="E:System.Windows.UIElement3D.DragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-294">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-294">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-295">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-295">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-296">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-296">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-297">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-297">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-298">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-298">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-299"><xref:System.Windows.UIElement3D.DragOverEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-299"><xref:System.Windows.UIElement3D.DragOverEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-300">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-300">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberSignature Language="F#" Value="member this.Drop : System.Windows.DragEventHandler " Usage="member this.Drop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-301">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Ablageereignis meldet, das dieses Element als Ablageziel aufweist.</span><span class="sxs-lookup"><span data-stu-id="368fc-301">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-302">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.Drop?displayProperty=nameWithType> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-302">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement3D.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-303">Ereignishandler, die an das <xref:System.Windows.UIElement3D.Drop> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-303">Event handlers that are attached to the <xref:System.Windows.UIElement3D.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-304"><xref:System.Windows.UIElement3D.Drop> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-304"><xref:System.Windows.UIElement3D.Drop> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-305">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-305">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-306">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-306">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-307">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-307">Identifier field</span></span>|<xref:System.Windows.UIElement3D.DropEvent>|  
|<span data-ttu-id="368fc-308">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-308">Routing strategy</span></span>|<span data-ttu-id="368fc-309">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-309">Bubbling</span></span>|  
|<span data-ttu-id="368fc-310">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-310">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="368fc-311">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="368fc-311">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="368fc-312">Überschreiben Sie <xref:System.Windows.UIElement3D.OnDrop%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-312">Override <xref:System.Windows.UIElement3D.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
        <altmember cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-313">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-313">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-314">Identifiziert das <see cref="E:System.Windows.UIElement3D.Drop" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-314">Identifies the <see cref="E:System.Windows.UIElement3D.Drop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-315">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-315">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-316">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-316">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-317">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-317">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-318">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-318">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-319">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-319">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-320"><xref:System.Windows.UIElement3D.DropEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-320"><xref:System.Windows.UIElement3D.DropEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-321">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-321">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="uIElement3D.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="368fc-322">Versucht, den logischen Fokus für dieses Element festzulegen.</span><span class="sxs-lookup"><span data-stu-id="368fc-322">Attempts to set the logical focus on this element.</span></span></summary>
        <returns><span data-ttu-id="368fc-323"><see langword="true" />, wenn der logische und der Tastaturfokus auf dieses Element festgelegt wurden, <see langword="false" />, wenn nur der logische Fokus festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-323"><see langword="true" /> if both logical and keyboard focus were set to this element; <see langword="false" /> if only logical focus was set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-324"><xref:System.Windows.UIElement3D.Focusable%2A> und <xref:System.Windows.UIElement3D.IsEnabled%2A> müssen beide `true`sein, damit Sie als focbrauchbar sind.</span><span class="sxs-lookup"><span data-stu-id="368fc-324">To be focusable, <xref:System.Windows.UIElement3D.Focusable%2A> and <xref:System.Windows.UIElement3D.IsEnabled%2A> must both be `true`.</span></span>  
  
 <span data-ttu-id="368fc-325">Selbst wenn ein Element Fokus fähig und aktiviert ist, kann die Ereignis Behandlung innerhalb einer bestimmten Struktur (z. b. für ein zusammengesetztes Steuerelement) auf die Vorschau Fokus Ereignisse reagieren, da der Fokus dort nicht zugelassen wird. Folglich würde diese Methode `false`zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="368fc-325">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="368fc-326">Wenn das Aufrufen von <xref:System.Windows.UIElement3D.Focus%2A> `true`zurückgibt, werden <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> und <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> ebenfalls `true`.</span><span class="sxs-lookup"><span data-stu-id="368fc-326">If calling  <xref:System.Windows.UIElement3D.Focus%2A> returns `true`, <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="368fc-327">Wenn die zugehörigen Eigenschaften nicht bereits `true`sind, werden beim aufzurufen von <xref:System.Windows.UIElement3D.Focus%2A>mindestens eines der folgenden Ereignisse in der folgenden Reihenfolge ausgelöst: <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> (Quelle ist das neue Fokus Ziel), <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement3D.LostKeyboardFocus>, <xref:System.Windows.UIElement3D.GotKeyboardFocus> (Quelle ist das neue Fokus Ziel).</span><span class="sxs-lookup"><span data-stu-id="368fc-327">If the related properties are not already `true`, when you call  <xref:System.Windows.UIElement3D.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement3D.LostKeyboardFocus>, <xref:System.Windows.UIElement3D.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
 <span data-ttu-id="368fc-328">Damit dieser-Befehl erfolgreich ausgeführt werden kann, musste ein anderes Element in der Anwendung zuvor den Fokus haben.</span><span class="sxs-lookup"><span data-stu-id="368fc-328">In order for this call to be successful, some other element in the application needed to have focus previously.</span></span>  
  
 <span data-ttu-id="368fc-329">Der Fokus im Allgemeinen ist auf zwei separate Konzepte geregelt: Tastaturfokus und logischer Fokus, die nicht immer identisch sind.</span><span class="sxs-lookup"><span data-stu-id="368fc-329">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span> <span data-ttu-id="368fc-330">Diese Methode legt den logischen Fokus fest und versucht auch, den Tastaturfokus festzulegen.</span><span class="sxs-lookup"><span data-stu-id="368fc-330">This method sets the logical focus, and also attempts to set the keyboard focus.</span></span> <span data-ttu-id="368fc-331">Es gibt keine programmatischen Möglichkeiten, den Tastaturfokus speziell festzulegen. Dies geschieht aufgrund von Benutzereingaben.</span><span class="sxs-lookup"><span data-stu-id="368fc-331">There is no programmatic means to set keyboard focus specifically, this happens due to user input.</span></span> <span data-ttu-id="368fc-332">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-332">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-333"><xref:System.Windows.UIElement3D.Focus%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-333"><xref:System.Windows.UIElement3D.Focus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-334">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-334">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="System.Windows.UIElement3D.Focusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-335">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob das Element den Fokus erhalten kann.</span><span class="sxs-lookup"><span data-stu-id="368fc-335">Gets or sets a value that indicates whether the element can receive focus.</span></span></summary>
        <value><span data-ttu-id="368fc-336"><see langword="true" />, wenn das Element den Fokus erhalten kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-336"><see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span></span> <span data-ttu-id="368fc-337">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-337">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-338">Nur das fokussierte Element empfängt Tastatureingaben.</span><span class="sxs-lookup"><span data-stu-id="368fc-338">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="368fc-339"><xref:System.Windows.UIElement3D.Focusable%2A> ist der [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] Eigenschafts Accessor für das, was in Wirklichkeit eine Abhängigkeits Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-339"><xref:System.Windows.UIElement3D.Focusable%2A> is the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property.</span></span> <span data-ttu-id="368fc-340">Bei dieser speziellen Abhängigkeits Eigenschaft ist der sichtbare "Default"-Wert in abgeleiteten Element Klassen anders festgelegt.</span><span class="sxs-lookup"><span data-stu-id="368fc-340">This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes.</span></span> <span data-ttu-id="368fc-341">Dies geschieht in der Regel auf zwei Arten:</span><span class="sxs-lookup"><span data-stu-id="368fc-341">This commonly occurs in one of two ways:</span></span>  
  
-   <span data-ttu-id="368fc-342">Die Abhängigkeits Eigenschaft wird von einer bestimmten abgeleiteten Klasse geerbt, aber diese abgeleitete Klasse überschreibt die Metadaten der Abhängigkeits Eigenschaft und ändert den Standardwert der Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-342">The dependency property is inherited by a particular derived class, but that derived class overrides the metadata of the dependency property and changes the property default value.</span></span>  
  
 <span data-ttu-id="368fc-343"><xref:System.Windows.UIElement3D.Focusable%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-343"><xref:System.Windows.UIElement3D.Focusable%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-344">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-344">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-345">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-345">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-346">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-346">Identifier field</span></span>|<xref:System.Windows.UIElement3D.FocusableProperty>|  
|<span data-ttu-id="368fc-347">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-347">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-348">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-348">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement3D.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberSignature Language="F#" Value="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-349">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.UIElement3D.Focusable" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="368fc-349">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.Focusable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-350">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-350">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="368fc-351"><xref:System.Windows.UIElement3D.FocusableChanged> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-351"><xref:System.Windows.UIElement3D.FocusableChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-352">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-352">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.Focusable" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-353">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-353">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusableProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.FocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-354">Identifiziert die <see cref="P:System.Windows.UIElement3D.Focusable" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-354">Identifies the <see cref="P:System.Windows.UIElement3D.Focusable" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-355"><xref:System.Windows.UIElement3D.FocusableProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-355"><xref:System.Windows.UIElement3D.FocusableProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-356">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-356">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="member this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="uIElement3D.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="368fc-357">Gibt beim Überschreiben in einer abgeleiteten Klasse ein alternatives übergeordnetes [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]-Element für dieses Element zurück, wenn kein visuelles übergeordnetes Element vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-357">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span></span></summary>
        <returns><span data-ttu-id="368fc-358">Ein Objekt, wenn die Implementierung einer abgeleiteten Klasse eine alternative übergeordnete Verbindung melden kann.</span><span class="sxs-lookup"><span data-stu-id="368fc-358">An object, if implementation of a derived class has an alternate parent connection to report.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-359">Die standardmäßige virtuelle Implementierung dieser Methode gibt `null`zurück.</span><span class="sxs-lookup"><span data-stu-id="368fc-359">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="368fc-360"><xref:System.Windows.FrameworkElement> bietet eine praktische Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-360"><xref:System.Windows.FrameworkElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="368fc-361">Alternative übergeordnete Elemente werden für das Ereignis Routing verwendet, in Fällen, in denen ein Element eine Alternative übergeordnete Struktur erstellt, sodass seine Ereignisse auf eine Weise weitergeleitet werden, die von dem Standardmuster für das Routing der visuellen Struktur zum Standardmuster abweicht, oder nach unten im Vorschau der Routing Strategie.</span><span class="sxs-lookup"><span data-stu-id="368fc-361">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 <span data-ttu-id="368fc-362"><xref:System.Windows.UIElement3D.GetUIParentCore%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-362"><xref:System.Windows.UIElement3D.GetUIParentCore%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-363">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-363">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-364">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag &amp;amp; Drop-Ereignis meldet, das dieses Element betrifft.</span><span class="sxs-lookup"><span data-stu-id="368fc-364">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-365">Das <xref:System.Windows.UIElement3D.GiveFeedback>-Ereignis ermöglicht der Quelle eines Drag-Ereignisses, die Darstellung des Mauszeigers zu ändern, um dem Benutzer visuelles Feedback während eines Drag & Drop-Vorgangs zu geben.</span><span class="sxs-lookup"><span data-stu-id="368fc-365">The <xref:System.Windows.UIElement3D.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="368fc-366">Das visuelle Feedback verstärkt, dass ein Drag & Drop-Vorgang durchläuft.</span><span class="sxs-lookup"><span data-stu-id="368fc-366">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="368fc-367">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.GiveFeedback> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-367">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement3D.GiveFeedback> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-368">Ereignishandler, die an das <xref:System.Windows.UIElement3D.GiveFeedback> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-368">Event handlers that are attached to the <xref:System.Windows.UIElement3D.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-369"><xref:System.Windows.UIElement3D.GiveFeedback> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-369"><xref:System.Windows.UIElement3D.GiveFeedback> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-370">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-370">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-371">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-371">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-372">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-372">Identifier field</span></span>|<xref:System.Windows.UIElement3D.GiveFeedbackEvent>|  
|<span data-ttu-id="368fc-373">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-373">Routing strategy</span></span>|<span data-ttu-id="368fc-374">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-374">Bubbling</span></span>|  
|<span data-ttu-id="368fc-375">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-375">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="368fc-376">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="368fc-376">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="368fc-377">Überschreiben Sie <xref:System.Windows.UIElement3D.OnGiveFeedback%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-377">Override <xref:System.Windows.UIElement3D.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-378">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-378">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-379">Identifiziert das <see cref="E:System.Windows.UIElement3D.GiveFeedback" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-379">Identifies the <see cref="E:System.Windows.UIElement3D.GiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-380">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-380">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-381">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-381">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-382">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-382">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-383">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-383">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-384">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-384">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-385"><xref:System.Windows.UIElement3D.GiveFeedbackEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-385"><xref:System.Windows.UIElement3D.GiveFeedbackEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-386">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-386">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.RoutedEventHandler " Usage="member this.GotFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-387">Tritt auf, wenn dieses Element den logischen Fokus erhält.</span><span class="sxs-lookup"><span data-stu-id="368fc-387">Occurs when this element gets logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-388">Der logische Fokus unterscheidet sich vom Tastaturfokus, wenn der Fokus absichtlich mithilfe eines Methoden Aufrufes erzwungen wird, der vorherige Tastaturfokus jedoch in einem anderen Bereich vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-388">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="368fc-389">In diesem Szenario behält der Tastaturfokus bei, und das Element, in dem eine <xref:System.Windows.UIElement3D.Focus%2A> Methode aufgerufen wird, erhält weiterhin den logischen Fokus.</span><span class="sxs-lookup"><span data-stu-id="368fc-389">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.UIElement3D.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="368fc-390">Eine genauere Interpretation dieses Ereignisses besteht darin, dass es ausgelöst wird, wenn der Wert der <xref:System.Windows.UIElement3D.IsFocused%2A>-Eigenschaft eines Elements in der Route von `false` in `true`geändert wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-390">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement3D.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="368fc-391">Da dieses Ereignis bubblingerrouting verwendet, kann das Element, das den Fokus erhält, ein untergeordnetes Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-391">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="368fc-392">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, das den Fokus erhalten hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-392">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
 <span data-ttu-id="368fc-393"><xref:System.Windows.UIElement3D.GotFocus> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-393"><xref:System.Windows.UIElement3D.GotFocus> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-394">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-394">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-395">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-395">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-396">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-396">Identifier field</span></span>|<xref:System.Windows.UIElement3D.GotFocusEvent>|  
|<span data-ttu-id="368fc-397">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-397">Routing strategy</span></span>|<span data-ttu-id="368fc-398">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-398">Bubbling</span></span>|  
|<span data-ttu-id="368fc-399">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-399">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="368fc-400">Es ist kein entsprechendes tunnelingereignis vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-400">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="368fc-401">Überschreiben Sie <xref:System.Windows.UIElement3D.OnGotFocus%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-401">Override <xref:System.Windows.UIElement3D.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-402">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-402">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-403">Identifiziert das <see cref="E:System.Windows.UIElement3D.GotFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-403">Identifies the <see cref="E:System.Windows.UIElement3D.GotFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-404">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-404">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-405">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-405">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-406">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-406">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-407">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-407">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-408">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-408">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-409"><xref:System.Windows.UIElement3D.GotFocusEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-409"><xref:System.Windows.UIElement3D.GotFocusEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-410">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-410">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-411">Tritt auf, wenn sich der Fokus der Tastatur auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-411">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-412"><xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> ist ein ähnliches Ereignis, das Statusänderungen in einer Eigenschaft nachverfolgt, die den Fokus Zustand für ein Element beibehält. Das <xref:System.Windows.UIElement3D.GotKeyboardFocus> Ereignis wird in vielen der gleichen Situationen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-412"><xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.UIElement3D.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="368fc-413">Da dieses Ereignis bubblingerrouting verwendet, kann das Element, das den Fokus besitzt, ein untergeordnetes Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-413">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="368fc-414">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, das den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="368fc-414">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="368fc-415">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.GotKeyboardFocus> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-415">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement3D.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-416">Ereignishandler, die an das <xref:System.Windows.UIElement3D.GotKeyboardFocus> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-416">Event handlers that are attached to the <xref:System.Windows.UIElement3D.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-417"><xref:System.Windows.UIElement3D.GotKeyboardFocus> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-417"><xref:System.Windows.UIElement3D.GotKeyboardFocus> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-418">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-418">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-419">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-419">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-420">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-420">Identifier field</span></span>|<xref:System.Windows.UIElement3D.GotKeyboardFocusEvent>|  
|<span data-ttu-id="368fc-421">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-421">Routing strategy</span></span>|<span data-ttu-id="368fc-422">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-422">Bubbling</span></span>|  
|<span data-ttu-id="368fc-423">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-423">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="368fc-424">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="368fc-424">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="368fc-425">Überschreiben Sie <xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-425">Override <xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-426">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-426">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-427">Identifiziert das <see cref="E:System.Windows.UIElement3D.GotKeyboardFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-427">Identifies the <see cref="E:System.Windows.UIElement3D.GotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-428">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-428">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-429">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-429">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-430">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-430">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-431">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-431">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-432">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-432">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-433"><xref:System.Windows.UIElement3D.GotKeyboardFocusEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-433"><xref:System.Windows.UIElement3D.GotKeyboardFocusEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-434">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-434">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-435">Tritt auf, wenn dieses Element die Mausauswahl erhält.</span><span class="sxs-lookup"><span data-stu-id="368fc-435">Occurs when this element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-436">Wenn ein Element die Maus erfasst, empfängt es auch dann Maus Eingaben, wenn sich der Mauszeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-436">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="368fc-437">Die Maus wird in der Regel nur während Drag & Drop-Vorgängen aufgezeichnet und bleibt so lange aufgezeichnet, bis die Drop-Aktion des Drag & Drop-Vorgangs auftritt.</span><span class="sxs-lookup"><span data-stu-id="368fc-437">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="368fc-438">Da dieses Ereignis bubblingerrouting verwendet, kann das-Element, das Capture aufweist, ein untergeordnetes-Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-438">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="368fc-439">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das eigentliche Element zu bestimmen, das über die Maus Aufzeichnung verfügt.</span><span class="sxs-lookup"><span data-stu-id="368fc-439">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="368fc-440">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.GotMouseCapture> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-440">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.UIElement3D.GotMouseCapture> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-441">Ereignishandler, die an das <xref:System.Windows.UIElement3D.GotMouseCapture> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-441">Event handlers that are attached to the <xref:System.Windows.UIElement3D.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-442"><xref:System.Windows.UIElement3D.GotMouseCapture> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-442"><xref:System.Windows.UIElement3D.GotMouseCapture> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-443">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-443">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-444">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-444">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-445">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-445">Identifier field</span></span>|<xref:System.Windows.UIElement3D.GotMouseCaptureEvent>|  
|<span data-ttu-id="368fc-446">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-446">Routing strategy</span></span>|<span data-ttu-id="368fc-447">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-447">Bubbling</span></span>|  
|<span data-ttu-id="368fc-448">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-448">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="368fc-449">Es ist kein entsprechendes tunnelingereignis definiert.</span><span class="sxs-lookup"><span data-stu-id="368fc-449">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="368fc-450">Überschreiben Sie <xref:System.Windows.UIElement3D.OnGotMouseCapture%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-450">Override <xref:System.Windows.UIElement3D.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureMouse" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-451">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-451">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-452">Identifiziert das <see cref="E:System.Windows.UIElement3D.GotMouseCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-452">Identifies the <see cref="E:System.Windows.UIElement3D.GotMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-453">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-453">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-454">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-454">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-455">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-455">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-456">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-456">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-457">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-457">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-458"><xref:System.Windows.UIElement3D.GotMouseCaptureEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-458"><xref:System.Windows.UIElement3D.GotMouseCaptureEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-459">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-459">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-460">Tritt auf, wenn dieses Element die Stiftauswahl erhält.</span><span class="sxs-lookup"><span data-stu-id="368fc-460">Occurs when this element captures the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-461">Wenn ein Element den Tablettstift erfasst, empfängt er die Stift Eingabe, auch wenn sich der Zeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-461">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="368fc-462">Der Tablettstift wird in der Regel nur bei Drag & Drop-Vorgängen aufgezeichnet und behält die Erfassung bei, bis die Drop-Aktion des Drag & Drop-Vorgangs auftritt.</span><span class="sxs-lookup"><span data-stu-id="368fc-462">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="368fc-463">Da dieses Ereignis bubblingerrouting verwendet, kann das-Element, das Capture aufweist, ein untergeordnetes-Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-463">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="368fc-464">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element mit Capture zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="368fc-464">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="368fc-465">Dieses Ereignis erstellt einen Alias für das angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.GotStylusCapture> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-465">This event creates an alias for the attached event for this class so that <xref:System.Windows.UIElement3D.GotStylusCapture> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-466">Ereignishandler, die an das <xref:System.Windows.UIElement3D.GotStylusCapture> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-466">Event handlers that are attached to the <xref:System.Windows.UIElement3D.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-467"><xref:System.Windows.UIElement3D.GotStylusCapture> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-467"><xref:System.Windows.UIElement3D.GotStylusCapture> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-468">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-468">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-469">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-469">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-470">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-470">Identifier field</span></span>|<xref:System.Windows.UIElement3D.GotStylusCaptureEvent>|  
|<span data-ttu-id="368fc-471">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-471">Routing strategy</span></span>|<span data-ttu-id="368fc-472">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-472">Bubbling</span></span>|  
|<span data-ttu-id="368fc-473">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-473">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="368fc-474">Es ist kein entsprechendes tunnelingereignis definiert.</span><span class="sxs-lookup"><span data-stu-id="368fc-474">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="368fc-475">Überschreiben Sie <xref:System.Windows.UIElement3D.OnGotStylusCapture%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-475">Override <xref:System.Windows.UIElement3D.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-476">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-476">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-477">Identifiziert das <see cref="E:System.Windows.UIElement3D.GotStylusCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-477">Identifies the <see cref="E:System.Windows.UIElement3D.GotStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-478">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-478">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-479">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-479">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-480">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-480">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-481">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-481">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-482">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-482">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-483"><xref:System.Windows.UIElement3D.GotStylusCaptureEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-483"><xref:System.Windows.UIElement3D.GotStylusCaptureEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-484">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-484">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.GotTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.GotTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-485">Tritt ein, wenn eine Fingereingabe für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-485">Occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-486">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-486">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-487">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-487">Identifier field</span></span>|<xref:System.Windows.UIElement3D.GotTouchCaptureEvent>|  
|<span data-ttu-id="368fc-488">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-488">Routing strategy</span></span>|<span data-ttu-id="368fc-489">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-489">Bubbling</span></span>|  
|<span data-ttu-id="368fc-490">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-490">Delegate</span></span>|<span data-ttu-id="368fc-491"><xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs></span><span class="sxs-lookup"><span data-stu-id="368fc-491"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs></span></span>|  
  
-   <span data-ttu-id="368fc-492">Überschreiben Sie <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-492">Override <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GotTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-493">Identifiziert das <see cref="E:System.Windows.UIElement3D.GotTouchCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-493">Identifies the <see cref="E:System.Windows.UIElement3D.GotTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBindings : System.Windows.Input.InputBindingCollection" Usage="System.Windows.UIElement3D.InputBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-494">Ruft die Auflistung der mit diesem Element verbundenen Eingabebindungen ab.</span><span class="sxs-lookup"><span data-stu-id="368fc-494">Gets the collection of input bindings associated with this element.</span></span></summary>
        <value><span data-ttu-id="368fc-495">Die Auflistung der Eingabebindungen.</span><span class="sxs-lookup"><span data-stu-id="368fc-495">The collection of input bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-496">Eingabe Bindungen unterstützen die Bindung von Befehlen an Eingabegeräte.</span><span class="sxs-lookup"><span data-stu-id="368fc-496">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="368fc-497"><xref:System.Windows.Input.MouseBinding> implementiert z. b. Eingabe Bindungen, die spezielle Eigenschaften für Maus Geräte enthalten.</span><span class="sxs-lookup"><span data-stu-id="368fc-497">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are particular to mouse devices.</span></span>  
  
 <span data-ttu-id="368fc-498">Die Auflistung der Eingabe Bindungen enthält sowohl Eingabe Bindungen, die den-Typ betreffen, als auch Eingabe Bindungen, die für die-Instanz deklariert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-498">The collection of input bindings will include both input bindings that pertain to the type as well as input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="368fc-499">Eine zugehörige Eigenschaft, <xref:System.Windows.UIElement3D.CommandBindings%2A>, verwaltet eine Auflistung von Befehls Bindungen.</span><span class="sxs-lookup"><span data-stu-id="368fc-499">A related property, <xref:System.Windows.UIElement3D.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="368fc-500">Diese unterscheiden sich von Eingabe Bindungen darin, dass Sie die nächste Ebene der Befehls Verarbeitung darstellen und Aktionen darstellen, die an bekannte Befehle gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="368fc-500">These differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands.</span></span>  
  
 <span data-ttu-id="368fc-501"><xref:System.Windows.UIElement3D.InputBindings%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-501"><xref:System.Windows.UIElement3D.InputBindings%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-502">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-502">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="368fc-503">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="368fc-503">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="368fc-504">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="368fc-504">XAML Values</span></span>  
 <span data-ttu-id="368fc-505">*oneormoreinputbindungen*</span><span class="sxs-lookup"><span data-stu-id="368fc-505">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="368fc-506">Mindestens ein <xref:System.Windows.Input.InputBinding> Elemente (in der Regel die <xref:System.Windows.Input.KeyBinding> oder <xref:System.Windows.Input.MouseBinding> abgeleiteten Klassen).</span><span class="sxs-lookup"><span data-stu-id="368fc-506">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="368fc-507">Für jedes dieser wird erwartet, dass ein <xref:System.Windows.Input.InputBinding.Command%2A> und <xref:System.Windows.Input.InputBinding.Gesture%2A> Attribut festgelegt sind.</span><span class="sxs-lookup"><span data-stu-id="368fc-507">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateModel">
      <MemberSignature Language="C#" Value="public void InvalidateModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateModel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.InvalidateModel" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateModel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateModel();" />
      <MemberSignature Language="F#" Value="member this.InvalidateModel : unit -&gt; unit" Usage="uIElement3D.InvalidateModel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="368fc-508">Erklärt das Modell, das das Element darstellt, für ungültig.</span><span class="sxs-lookup"><span data-stu-id="368fc-508">Invalidates the model that represents the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-509">Wenn Sie eine Klasse von der <xref:System.Windows.UIElement3D> Klasse ableiten, können Sie diese Methode in Verbindung mit der <xref:System.Windows.UIElement3D.OnUpdateModel%2A>-Methode verwenden, um das Modell des Elements zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-509">When you derive a class from the <xref:System.Windows.UIElement3D> class, you can use this method together with the <xref:System.Windows.UIElement3D.OnUpdateModel%2A> method to refresh the model of the element.</span></span>  
  
 <span data-ttu-id="368fc-510">Diese Methode muss nur in erweiterten Szenarien aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-510">You only need to call this method in advanced scenarios.</span></span> <span data-ttu-id="368fc-511">Eines dieser erweiterten Szenarien ist, wenn die abgeleitete Klasse über mehrere Eigenschaften verfügt, die sich auf die Darstellung auswirken, und Sie das zugrunde liegende Modell nur einmal aktualisieren möchten.</span><span class="sxs-lookup"><span data-stu-id="368fc-511">One such advanced scenario is if the derived class has multiple properties that affect the appearance, and you want to update the underlying model only once.</span></span>  
  
 <span data-ttu-id="368fc-512"><xref:System.Windows.UIElement3D.InvalidateModel%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-512"><xref:System.Windows.UIElement3D.InvalidateModel%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-513">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-513">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="368fc-514">Im folgenden Beispiel wird gezeigt, wie von der <xref:System.Windows.UIElement3D>-Klasse abgeleitet wird, um eine `Sphere` Klasse zu erstellen:</span><span class="sxs-lookup"><span data-stu-id="368fc-514">The following example shows how to derive from the <xref:System.Windows.UIElement3D> class to create a `Sphere` class:</span></span>  
  
 [!code-csharp[Shapes#Sphere](~/samples/snippets/csharp/VS_Snippets_Wpf/Shapes/CSharp/Sphere.cs#sphere)]
 [!code-vb[Shapes#Sphere](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Shapes/visualbasic/sphere.vb#sphere)]  
  
 <span data-ttu-id="368fc-515">Das komplette Beispiel finden Sie unter [UIElement3D Sphere Sample](https://go.microsoft.com/fwlink/?LinkID=160044).</span><span class="sxs-lookup"><span data-stu-id="368fc-515">For the complete sample, see [UIElement3D Sphere Sample](https://go.microsoft.com/fwlink/?LinkID=160044).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.UIElement3D.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-516">Dient zum Abrufen oder Festlegen eines Werts, der angibt, ob dieses Element auf der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-516">Gets or sets a value indicating whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span></summary>
        <value><span data-ttu-id="368fc-517"><see langword="true" />, wenn das Element aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-517"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="368fc-518">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-518">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-519">Beachten Sie, dass diese Eigenschaft durch klassenspezifische Implementierungen von <xref:System.Windows.UIElement3D.IsEnabledCore%2A> auf bestimmte Elemente, häufig zur Laufzeit, beeinflusst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-519">Note that this property is influenced by class-specific implementations of <xref:System.Windows.UIElement3D.IsEnabledCore%2A> on particular elements, often at runtime.</span></span> <span data-ttu-id="368fc-520">Der hier aufgeführte Standardwert ist daher manchmal nicht wirksam.</span><span class="sxs-lookup"><span data-stu-id="368fc-520">Therefore, the default value listed here is sometimes not effective.</span></span> <span data-ttu-id="368fc-521">Der Versuch, diesen Wert festzulegen, wird auch möglicherweise durch den von <xref:System.Windows.UIElement3D.IsEnabledCore%2A>zurückgegebenen Wert überschrieben.</span><span class="sxs-lookup"><span data-stu-id="368fc-521">Attempting to set this value will also potentially be overridden by the value returned by <xref:System.Windows.UIElement3D.IsEnabledCore%2A>.</span></span>  
  
 <span data-ttu-id="368fc-522">Nicht aktivierte Elemente werden nicht an Treffer Tests oder dem Fokus beteiligt und werden daher nicht als Quellen für Eingabeereignisse verwendet.</span><span class="sxs-lookup"><span data-stu-id="368fc-522">Elements that are not enabled do not participate in hit testing or focus and therefore will not be sources of input events.</span></span>  
  
 <span data-ttu-id="368fc-523"><xref:System.Windows.UIElement3D.IsEnabled%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-523"><xref:System.Windows.UIElement3D.IsEnabled%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-524">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-524">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-525">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-525">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-526">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-526">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsEnabledProperty>|  
|<span data-ttu-id="368fc-527">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-527">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-528">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-528">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsEnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-529">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsEnabled" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-529">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsEnabled" /> property on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-530">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-530">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="368fc-531"><xref:System.Windows.UIElement3D.IsEnabledChanged> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-531"><xref:System.Windows.UIElement3D.IsEnabledChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-532">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-532">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-533">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-533">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.UIElement3D.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-534">Ruft einen Wert ab, der in abgeleiteten Klassen zum Rückgabewert von <see cref="P:System.Windows.UIElement3D.IsEnabled" /> wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-534">Gets a value that becomes the return value of <see cref="P:System.Windows.UIElement3D.IsEnabled" /> in derived classes.</span></span></summary>
        <value><span data-ttu-id="368fc-535"><see langword="true" />, wenn das Element aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-535"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-536"><xref:System.Windows.UIElement3D.IsEnabledCore%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-536"><xref:System.Windows.UIElement3D.IsEnabledCore%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-537">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-537">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="368fc-538">Die Standard Implementierung dieser Eigenschaft speichert den Wert zwischen und berechnet auch, ob das übergeordnete Element dieses Elements aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-538">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span></span> <span data-ttu-id="368fc-539">(Wenn das übergeordnete Element nicht aktiviert ist, kann das untergeordnete Element in praktischer [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]nicht effektiv aktiviert werden.) Wenn Sie diese Implementierung außer Kraft setzen möchten, stellen Sie sicher, dass Sie die Basis Implementierung zum Beibehalten dieses Verhaltens aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-539">(If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span></span></para></block>
        <altmember cref="E:System.Windows.UIElement3D.IsEnabledChanged" />
        <altmember cref="P:System.Windows.UIElement3D.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-540">Identifiziert die <see cref="P:System.Windows.UIElement3D.IsEnabled" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-540">Identifies the <see cref="P:System.Windows.UIElement3D.IsEnabled" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-541"><xref:System.Windows.UIElement3D.IsEnabledProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-541"><xref:System.Windows.UIElement3D.IsEnabledProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-542">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-542">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="System.Windows.UIElement3D.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-543">Ruft einen Wert ab, der bestimmt, ob dieses Element den logischen Fokus hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-543">Gets a value that determines whether this element has logical focus.</span></span></summary>
        <value><span data-ttu-id="368fc-544"><see langword="true" />, wenn dieses Element den logischen Fokus hat, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-544"><see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-545">Der logische Fokus kann sich vom Tastaturfokus unterscheiden, wenn eine Anwendung über mehrere Fokusbereiche verfügt, z. b. zwischen den Menü Inhalten und dem Rest der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="368fc-545">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="368fc-546">In diesem Szenario kann sich der Tastaturfokus nur auf einem Element der Benutzeroberfläche der Anwendung befinden. bestimmte Elemente in anderen Schwerpunkt Teilungen behalten jedoch möglicherweise weiterhin den logischen Fokus.</span><span class="sxs-lookup"><span data-stu-id="368fc-546">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="368fc-547">Weitere Informationen zum logischen Fokus finden Sie unter [Fokus Übersicht](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-547">For more information on logical focus, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-548">Der Fokus wird nicht durch Festlegen dieser Eigenschaft festgelegt (schreibgeschützt).</span><span class="sxs-lookup"><span data-stu-id="368fc-548">You do not set focus by setting this property (it is read-only).</span></span> <span data-ttu-id="368fc-549">Die typische Verwendung für diese Eigenschaft besteht darin, Sie als Abhängigkeits Eigenschaft für eine <xref:System.Windows.Setter> oder <xref:System.Windows.EventTrigger>zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="368fc-549">The typical use for this property is to use it as a dependency property for a <xref:System.Windows.Setter> or <xref:System.Windows.EventTrigger>.</span></span> <span data-ttu-id="368fc-550">Um den Fokus Programm gesteuert festzulegen, wenden Sie <xref:System.Windows.UIElement3D.Focus%2A>an.</span><span class="sxs-lookup"><span data-stu-id="368fc-550">To set focus programmatically, call <xref:System.Windows.UIElement3D.Focus%2A>.</span></span> <span data-ttu-id="368fc-551">Der Fokus kann auch durch eine Benutzeraktion oder durch Implementierung von Steuerelementen festgelegt werden, die möglicherweise das Verhalten der Maus Erfassung einschließen.</span><span class="sxs-lookup"><span data-stu-id="368fc-551">Focus can also be set by user action or by control implementations, which possibly include mouse capture behavior.</span></span>  
  
 <span data-ttu-id="368fc-552"><xref:System.Windows.UIElement3D.IsFocused%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-552"><xref:System.Windows.UIElement3D.IsFocused%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-553">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-553">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-554">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-554">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-555">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-555">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsFocusedProperty>|  
|<span data-ttu-id="368fc-556">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-556">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-557">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-557">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.Focusable" />
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-558">Identifiziert die <see cref="P:System.Windows.UIElement3D.IsFocused" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-558">Identifies the <see cref="P:System.Windows.UIElement3D.IsFocused" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-559"><xref:System.Windows.UIElement3D.IsFocusedProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-559"><xref:System.Windows.UIElement3D.IsFocusedProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-560">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-560">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisible">
      <MemberSignature Language="C#" Value="public bool IsHitTestVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsHitTestVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHitTestVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisible : bool with get, set" Usage="System.Windows.UIElement3D.IsHitTestVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-561">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob dieses Element möglicherweise als Treffertestergebnis von einem Teil des gerenderten Inhalts zurückgegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="368fc-561">Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content.</span></span></summary>
        <value><span data-ttu-id="368fc-562"><see langword="true" />, wenn dieses Element als Treffertestergebnis von mindestens einem Punkt zurückgegeben werden konnte, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-562"><see langword="true" /> if this element could be returned as a hit test result from at least one point; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="368fc-563">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-563">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-564">Der effektive Wert dieser Eigenschaft wird von den relativen Positionen der Treffer Test fähige-Elemente in der logischen Struktur beeinflusst.</span><span class="sxs-lookup"><span data-stu-id="368fc-564">The effective value of this property is influenced by the relative positions of hit testable elements in the logical tree.</span></span> <span data-ttu-id="368fc-565">Wenn ein Element beispielsweise ein untergeordnetes Element eines Elements ist, das nicht als Treffer Test sichtbar ist, bleibt der effektive Wert der Eigenschaft für das untergeordnete Element `false`, auch wenn versucht wird, diesen Wert lokal festzulegen.</span><span class="sxs-lookup"><span data-stu-id="368fc-565">For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain `false`, even if attempting to set that value locally.</span></span> <span data-ttu-id="368fc-566">Aus diesem Grund ist es wichtig, dass Sie <xref:System.Windows.UIElement3D.IsHitTestVisible%2A> nicht auf ein zusammengesetzten Steuerelement `false` festlegen, es sei denn, Sie möchten keine Eingabe-oder Treffer Tests für dieses Steuerelement ausführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-566">For this reason, it is important that you do not set <xref:System.Windows.UIElement3D.IsHitTestVisible%2A> to `false` on a composited control unless you do not want any input or hit testing on that control.</span></span> <span data-ttu-id="368fc-567">Weitere Informationen zu Treffertests finden Sie unter [Treffertests in der visuellen Ebene](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-567">For more information on hit testing, see [Hit Testing in the Visual Layer](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span></span>  
  
 <span data-ttu-id="368fc-568"><xref:System.Windows.UIElement3D.IsHitTestVisible%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-568"><xref:System.Windows.UIElement3D.IsHitTestVisible%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-569">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-569">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHitTestVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-570">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-570">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-571">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-571">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsHitTestVisibleProperty>|  
|<span data-ttu-id="368fc-572">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-572">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-573">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-573">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsHitTestVisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsHitTestVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsHitTestVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsHitTestVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-574">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsHitTestVisible" />-Abhängigkeitseigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-574">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsHitTestVisible" /> dependency property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-575">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-575">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="368fc-576"><xref:System.Windows.UIElement3D.IsHitTestVisibleChanged> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-576"><xref:System.Windows.UIElement3D.IsHitTestVisibleChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-577">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-577">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-578">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-578">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHitTestVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsHitTestVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHitTestVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHitTestVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHitTestVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsHitTestVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-579">Identifiziert die <see cref="P:System.Windows.UIElement3D.IsHitTestVisible" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-579">Identifies the <see cref="P:System.Windows.UIElement3D.IsHitTestVisible" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-580"><xref:System.Windows.UIElement3D.IsHitTestVisibleProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-580"><xref:System.Windows.UIElement3D.IsHitTestVisibleProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-581">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-581">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodEnabled : bool" Usage="System.Windows.UIElement3D.IsInputMethodEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-582">Ruft einen Wert ab, der angibt, ob ein Eingabemethodensystem wie z. B. ein [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)] für die Verarbeitung von Eingaben für dieses Element aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-582">Gets a value indicating whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)],  is enabled for processing the input to this element.</span></span></summary>
        <value><span data-ttu-id="368fc-583"><see langword="true" />, wenn eine Eingabemethode aktiv ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-583"><see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="368fc-584">Der Standardwert der zugrunde liegenden verknüpften Eigenschaft ist <see langword="true;" />, jedoch wird dieser Wert durch den tatsächlichen Zustand der Eingabemethoden zur Laufzeit beeinflusst.</span><span class="sxs-lookup"><span data-stu-id="368fc-584">The default value of the underlying attached property is <see langword="true;" /> however, this will be influenced by the actual state of input methods at runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-585">Diese Eigenschaft gibt den Wert zurück, der von der angefügten-Eigenschaft <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> für die derzeit aktivierten Eingabemethoden zurückgegeben wird (Tastatur, Sprache, andere Eingabegeräte).</span><span class="sxs-lookup"><span data-stu-id="368fc-585">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, other input devices).</span></span>  
  
 <span data-ttu-id="368fc-586"><xref:System.Windows.UIElement3D.IsInputMethodEnabled%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-586"><xref:System.Windows.UIElement3D.IsInputMethodEnabled%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-587">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-587">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocused : bool" Usage="System.Windows.UIElement3D.IsKeyboardFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-588">Ruft einen Wert ab, der angibt, ob dieses Element über den Tastaturfokus verfügt.</span><span class="sxs-lookup"><span data-stu-id="368fc-588">Gets a value indicating whether this element has keyboard focus.</span></span></summary>
        <value><span data-ttu-id="368fc-589"><see langword="true" />, wenn dieses Element über den Tastaturfokus verfügt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-589"><see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="368fc-590">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-590">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-591">Änderungen am festgelegten Wert dieser Eigenschaft können von Fokus bezogenen Ereignissen begleitet werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-591">Changes to the determined value of this property may be accompanied by focus-related events.</span></span>  
  
 <span data-ttu-id="368fc-592"><xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> und <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> werden üblicherweise innerhalb von Klassen Ereignis Handlern für andere Eingabe bezogene Ereignisse verwendet, um beispielsweise zu bestimmen, ob das Element bereits über den Tastaturfokus verfügt, oder um Determinationen vorzunehmen, wenn Mausereignisse und Tastatur Ereignisse in Verbindung treten.</span><span class="sxs-lookup"><span data-stu-id="368fc-592"><xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
 <span data-ttu-id="368fc-593"><xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-593"><xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-594">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-594">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-595">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-595">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-596">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-596">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="368fc-597">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-597">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-598">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-598">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotFocus" />
        <altmember cref="E:System.Windows.UIElement3D.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-599">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsKeyboardFocused" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-599">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsKeyboardFocused" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-600">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-600">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="368fc-601"><xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-601"><xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-602">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-602">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-603">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-603">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsKeyboardFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-604">Identifiziert die <see cref="P:System.Windows.UIElement3D.IsKeyboardFocused" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-604">Identifies the <see cref="P:System.Windows.UIElement3D.IsKeyboardFocused" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-605"><xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-605"><xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-606">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-606">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithin : bool" Usage="System.Windows.UIElement3D.IsKeyboardFocusWithin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-607">Ruft einen Wert ab, der angibt, ob sich der Tastaturfokus innerhalb des Elements oder in seinen untergeordneten Elementen in der visuellen Struktur befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-607">Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.</span></span></summary>
        <value><span data-ttu-id="368fc-608"><see langword="true" />, wenn sich der Tastaturfokus auf dem Element oder seinen untergeordneten Elementen befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-608"><see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-609">Änderungen am Wert dieser Eigenschaft erhöhen in der Regel das <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> Ereignis, es sei denn, eine abgeleitete Klasse hat <xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> überschrieben, um das Ereignis zu unterdrücken.</span><span class="sxs-lookup"><span data-stu-id="368fc-609">Changes to the value of this property typically raise the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="368fc-610">Diese Eigenschaft wird nicht direkt festgelegt, aber Sie können den Fokus auf ein Element festlegen, indem Sie <xref:System.Windows.UIElement3D.Focus%2A>aufrufen oder eine <xref:System.Windows.UIElement3D.MoveFocus%2A> Anforderung tätigen.</span><span class="sxs-lookup"><span data-stu-id="368fc-610">You do not set this property directly, but you can set the focus to an element by calling <xref:System.Windows.UIElement3D.Focus%2A>, or by making a <xref:System.Windows.UIElement3D.MoveFocus%2A> request.</span></span> <span data-ttu-id="368fc-611">Dieser Eigenschafts Wert kann durch beide Methodenaufrufe geändert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-611">Either of these method calls might change this property value.</span></span>  
  
 <span data-ttu-id="368fc-612"><xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> und <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> werden in der Regel innerhalb von Klassen Ereignis Handlern für andere Eingabe bezogene Ereignisse verwendet, um beispielsweise zu bestimmen, ob das Element bereits über den Tastaturfokus verfügt, oder um Determinationen vorzunehmen, wenn Mausereignisse und Tastatur Ereignisse in Verbindung treten.</span><span class="sxs-lookup"><span data-stu-id="368fc-612"><xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
 <span data-ttu-id="368fc-613"><xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-613"><xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-614">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-614">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-615">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-615">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-616">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-616">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="368fc-617">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-617">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-618">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-618">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-619">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-619">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-620">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-620">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="368fc-621"><xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-621"><xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-622">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-622">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsKeyboardFocusedChanged" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-623">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-623">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsKeyboardFocusWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-624">Identifiziert die <see cref="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-624">Identifies the <see cref="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-625"><xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-625"><xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-626">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-626">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptured : bool" Usage="System.Windows.UIElement3D.IsMouseCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-627">Ruft einen Wert ab, der angibt, ob die Maus für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-627">Gets a value indicating whether the mouse is captured to this element.</span></span></summary>
        <value><span data-ttu-id="368fc-628"><see langword="true" />, wenn die Maus für dieses Element erfasst wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-628"><see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="368fc-629">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-629">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-630">Der Status der Maus Aufzeichnung bezieht sich auf in-Process-Drag & Drop-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="368fc-630">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="368fc-631"><xref:System.Windows.UIElement3D.IsMouseCaptured%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-631"><xref:System.Windows.UIElement3D.IsMouseCaptured%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-632">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-632">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-633">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-633">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-634">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-634">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsMouseCapturedProperty>|  
|<span data-ttu-id="368fc-635">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-635">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-636">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-636">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureMouse" />
        <altmember cref="E:System.Windows.UIElement3D.GotMouseCapture" />
        <altmember cref="E:System.Windows.UIElement3D.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-637">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsMouseCaptured" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-637">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsMouseCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-638">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-638">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="368fc-639"><xref:System.Windows.UIElement3D.IsMouseCapturedChanged> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-639"><xref:System.Windows.UIElement3D.IsMouseCapturedChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-640">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-640">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-641">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-641">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsMouseCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-642">Identifiziert die <see cref="P:System.Windows.UIElement3D.IsMouseCaptured" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-642">Identifies the <see cref="P:System.Windows.UIElement3D.IsMouseCaptured" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-643"><xref:System.Windows.UIElement3D.IsMouseCapturedProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-643"><xref:System.Windows.UIElement3D.IsMouseCapturedProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-644">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-644">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithin : bool" Usage="System.Windows.UIElement3D.IsMouseCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-645">Ruft einen Wert ab, der bestimmt, ob die Mausaufzeichnung in diesem Element oder in untergeordneten Elementen in seiner visuellen Struktur enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-645">Gets a value that determines whether mouse capture is held by this element or by child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="368fc-646"><see langword="true" />, wenn dieses Element oder ein darin enthaltenes Element die Mausaufzeichnung enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-646"><see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-647"><xref:System.Windows.UIElement3D.IsMouseCaptureWithin%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-647"><xref:System.Windows.UIElement3D.IsMouseCaptureWithin%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-648">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-648">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-649">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-649">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-650">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-650">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="368fc-651">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-651">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-652">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-652">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseCaptured" />
        <altmember cref="M:System.Windows.UIElement3D.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-653">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-653">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-654">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-654">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="368fc-655"><xref:System.Windows.UIElement3D.IsMouseCaptureWithinChanged> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-655"><xref:System.Windows.UIElement3D.IsMouseCaptureWithinChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-656">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-656">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsMouseCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-657">Identifiziert die <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-657">Identifies the <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-658"><xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-658"><xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-659">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-659">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOver : bool" Usage="System.Windows.UIElement3D.IsMouseDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-660">Ruft einen Wert ab, der angibt, ob die Position des Mauszeigers den Treffertestergebnissen entspricht, für die die Elementzusammensetzung berücksichtigt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-660">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="368fc-661"><see langword="true" />, wenn sich der Mauszeiger über demselben Elementergebnis wie ein Treffertest befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-661"><see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="368fc-662">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-662">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-663">Im Gegensatz zu <xref:System.Windows.UIElement3D.IsMouseOver%2A>wird diese Eigenschaft nur `true`, wenn sich der Mauszeiger über dem Literalelement befindet, wie es bei einem Treffer Test der Fall ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-663">Unlike <xref:System.Windows.UIElement3D.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element - as it is for a hit test.</span></span> <span data-ttu-id="368fc-664">Wenn sich der Mauszeiger über einem untergeordneten Element befindet, wird diese Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="368fc-664">If the mouse pointer is instead over a child element, this property will be `false`.</span></span> <span data-ttu-id="368fc-665">Verwenden Sie für die meisten Szenarien, in denen Sie keine Steuerelemente erstellen, stattdessen <xref:System.Windows.UIElement3D.IsMouseOver%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-665">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement3D.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="368fc-666">Wenn die Maus von diesem Element aufgezeichnet wird und diese Eigenschaft zum Zeitpunkt der Erfassung `true` wird, gibt diese Eigenschaft weiterhin `true` zurück, bis die Maus Aufzeichnung verloren geht und sich der Zeiger nicht über dessen Begrenzungen befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-666">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
 <span data-ttu-id="368fc-667"><xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-667"><xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-668">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-668">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-669">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-669">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-670">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-670">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="368fc-671">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-671">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-672">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-672">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement3D.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-673">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-673">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-674">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-674">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="368fc-675"><xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-675"><xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-676">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-676">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsMouseDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-677">Identifiziert die <see cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-677">Identifies the <see cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-678"><xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-678"><xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-679">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-679">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsMouseDirectlyOverChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseOver : bool" Usage="System.Windows.UIElement3D.IsMouseOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-680">Ruft einen Wert ab, der angibt, ob sich der Mauszeiger über diesem Element (einschließlich der untergeordneten Elemente in der visuellen Struktur) befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-680">Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).</span></span></summary>
        <value><span data-ttu-id="368fc-681"><see langword="true" />, wenn sich der Mauszeiger über dem Element oder seinen untergeordneten Elementen befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-681"><see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="368fc-682">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-682">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-683">Normalerweise werden Steuerelemente zusammengesetzt, sodass die verschiedenen Elemente innerhalb des Steuer Elements (der visuellen Struktur) den Maus Zustand für das enthaltende Steuerelement melden.</span><span class="sxs-lookup"><span data-stu-id="368fc-683">Typically, controls are composited such that the various elements inside the control (the visual tree) will all report the mouse state for the containing control.</span></span> <span data-ttu-id="368fc-684">Beispielsweise meldet ein <xref:System.Windows.Controls.ListBox> Stil-Steuerelement <xref:System.Windows.UIElement3D.IsMouseOver%2A> als `true`, wenn sich der Mauszeiger über der Geometrie befindet, einschließlich sämtlicher <xref:System.Windows.Controls.ListBoxItem>.</span><span class="sxs-lookup"><span data-stu-id="368fc-684">For example, a <xref:System.Windows.Controls.ListBox> style control will report <xref:System.Windows.UIElement3D.IsMouseOver%2A> as `true` if the mouse is anywhere over its geometry, including any <xref:System.Windows.Controls.ListBoxItem>.</span></span>  
  
 <span data-ttu-id="368fc-685">Obwohl ein entsprechendes "ismouseoverchanged"-Ereignis nicht vorhanden ist, können mehrere ähnliche Ereignisse verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-685">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="368fc-686">Beispielsweise können Sie <xref:System.Windows.UIElement3D.MouseEnter>, <xref:System.Windows.UIElement3D.MouseMove>und <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="368fc-686">For example, you can handle <xref:System.Windows.UIElement3D.MouseEnter>, <xref:System.Windows.UIElement3D.MouseMove>, and <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="368fc-687">Wenn dieses Element die Maus erfasst, bleibt diese Eigenschaft `true`, bis die Maus Aufzeichnung verloren geht und der Mauszeiger die Elementgrenzen verlässt.</span><span class="sxs-lookup"><span data-stu-id="368fc-687">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
 <span data-ttu-id="368fc-688">Einige Steuerelemente erfassen absichtlich die Maus über bestimmte Aktionen, die anscheinend nicht direkt mit der Maus verbunden sind.</span><span class="sxs-lookup"><span data-stu-id="368fc-688">Some controls deliberately capture the mouse on certain actions that do not appear to directly involve the mouse.</span></span> <span data-ttu-id="368fc-689">Dies kann dazu führen, dass <xref:System.Windows.UIElement3D.IsMouseOver%2A> `true` werden, auch wenn die Maus nicht anscheinend verschoben wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-689">This can lead to <xref:System.Windows.UIElement3D.IsMouseOver%2A> being `true` even though the mouse has not apparently moved.</span></span>  
  
 <span data-ttu-id="368fc-690"><xref:System.Windows.UIElement3D.IsMouseOver%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-690"><xref:System.Windows.UIElement3D.IsMouseOver%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-691">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-691">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-692">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-692">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-693">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-693">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsMouseOverProperty>|  
|<span data-ttu-id="368fc-694">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-694">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-695">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-695">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsMouseOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-696">Identifiziert die <see cref="P:System.Windows.UIElement3D.IsMouseOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-696">Identifies the <see cref="P:System.Windows.UIElement3D.IsMouseOver" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-697"><xref:System.Windows.UIElement3D.IsMouseOverProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-697"><xref:System.Windows.UIElement3D.IsMouseOverProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-698">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-698">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptured : bool" Usage="System.Windows.UIElement3D.IsStylusCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-699">Ruft einen Wert ab, der angibt, ob der Tablettstift für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-699">Gets a value indicating whether the stylus is captured by this element.</span></span></summary>
        <value><span data-ttu-id="368fc-700"><see langword="true" />, wenn der Tablettstift für dieses Element erfasst wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-700"><see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="368fc-701">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-701">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-702">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-702">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-703">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-703">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-704"><xref:System.Windows.UIElement3D.IsStylusCaptured%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-704"><xref:System.Windows.UIElement3D.IsStylusCaptured%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-705">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-705">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-706">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-706">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-707">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-707">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsStylusCapturedProperty>|  
|<span data-ttu-id="368fc-708">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-708">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-709">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-709">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureStylus" />
        <altmember cref="E:System.Windows.UIElement3D.GotStylusCapture" />
        <altmember cref="E:System.Windows.UIElement3D.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-710">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsStylusCaptured" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-710">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsStylusCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-711">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-711">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="368fc-712"><xref:System.Windows.UIElement3D.IsStylusCapturedChanged> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-712"><xref:System.Windows.UIElement3D.IsStylusCapturedChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-713">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-713">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsStylusCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-714">Identifiziert die <see cref="P:System.Windows.UIElement3D.IsStylusCaptured" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-714">Identifies the <see cref="P:System.Windows.UIElement3D.IsStylusCaptured" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-715"><xref:System.Windows.UIElement3D.IsStylusCapturedProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-715"><xref:System.Windows.UIElement3D.IsStylusCapturedProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-716">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-716">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithin : bool" Usage="System.Windows.UIElement3D.IsStylusCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-717">Ruft einen Wert ab, der bestimmt, ob die Tablettstifterfassung von diesem Element oder von einem Element innerhalb der Elementgrenzen und dessen visueller Struktur aufgenommen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-717">Gets a value that determines whether stylus capture is held by this element, or an element within the element bounds and its visual tree.</span></span></summary>
        <value><span data-ttu-id="368fc-718"><see langword="true" />, wenn dieses Element oder ein darin enthaltenes Element die Tablettstifterfassung aufnimmt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-718"><see langword="true" /> if this element or a contained element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="368fc-719">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-719">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-720">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-720">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-721">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-721">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-722"><xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-722"><xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-723">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-723">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-724">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-724">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-725">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-725">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="368fc-726">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-726">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-727">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-727">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureStylus" />
        <altmember cref="P:System.Windows.UIElement3D.IsStylusCaptured" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-728">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsStylusCaptureWithin" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-728">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsStylusCaptureWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-729">Dabei handelt es sich um ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, nicht um ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-729">This is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="368fc-730"><xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-730"><xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-731">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-731">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsStylusCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-732">Identifiziert die <see cref="P:System.Windows.UIElement3D.IsStylusCaptureWithin" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-732">Identifies the <see cref="P:System.Windows.UIElement3D.IsStylusCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-733"><xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-733"><xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-734">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-734">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsStylusCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOver : bool" Usage="System.Windows.UIElement3D.IsStylusDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-735">Ruft einen Wert ab, der angibt, ob die Position des Tablettstifts den Treffertestergebnissen entspricht, für die die Elementzusammensetzung berücksichtigt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-735">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="368fc-736"><see langword="true" />, wenn sich der Tablettstiftzeiger über demselben Elementergebnis wie ein Treffertest befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-736"><see langword="true" /> if the stylus pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="368fc-737">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-737">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-738">Im Gegensatz zu <xref:System.Windows.UIElement3D.IsStylusOver%2A>wird diese Eigenschaft nur `true`, wenn sich der Tablettstift über dem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-738">Unlike <xref:System.Windows.UIElement3D.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="368fc-739">Wenn sich der Tablettstift stattdessen über einem untergeordneten Element oder über Elemente befindet, die Teil der tieferen Zusammensetzung eines Elements (der visuellen Struktur) sind, wird diese Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="368fc-739">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be `false`.</span></span>  
  
 <span data-ttu-id="368fc-740">Wenn Sie nicht wissen, wie ein Steuerelement zusammengesetzt ist (z. b. verwenden Sie diese Eigenschaft in einer benutzerdefinierten Steuerelement Vorlage für ein Steuerelement, das Sie definieren), gibt diese Eigenschaft möglicherweise unerwartete Ergebnisse zurück.</span><span class="sxs-lookup"><span data-stu-id="368fc-740">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="368fc-741">Verwenden Sie für die meisten Szenarien, in denen Sie keine Steuerelemente erstellen, stattdessen <xref:System.Windows.UIElement3D.IsStylusOver%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-741">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement3D.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="368fc-742">Wenn dieses Element die tablettstifterfassung aufweist und diese Eigenschaft zum Zeitpunkt der Erfassung `true` wird, bleibt diese Eigenschaft `true`, bis die tablettstifterfassung verloren gegangen ist und sich der Tablettstift nicht über dessen Begrenzungen befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-742">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="368fc-743">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-743">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-744">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-744">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-745"><xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-745"><xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-746">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-746">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-747">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-747">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-748">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-748">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="368fc-749">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-749">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-750">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-750">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-751">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsStylusDirectlyOver" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-751">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsStylusDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-752">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-752">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="368fc-753"><xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-753"><xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-754">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-754">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsStylusDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-755">Identifiziert die <see cref="P:System.Windows.UIElement3D.IsStylusDirectlyOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-755">Identifies the <see cref="P:System.Windows.UIElement3D.IsStylusDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-756"><xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-756"><xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-757">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-757">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusOver : bool" Usage="System.Windows.UIElement3D.IsStylusOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-758">Ruft einen Wert ab, der anzeigt, ob sich der Stiftcursor über diesem Element (einschließlich der untergeordneten visuellen Elemente) befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-758">Gets a value indicating whether the stylus cursor is located over this element (including visual child elements).</span></span></summary>
        <value><span data-ttu-id="368fc-759"><see langword="true" />, wenn sich der Stiftcursor über dem Element oder seinen untergeordneten Elementen befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-759"><see langword="true" /> if stylus cursor is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="368fc-760">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-760">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-761">Wenn dieses Element die tablettstifterfassung hat, gibt diese Eigenschaft weiterhin `true` zurück, bis die tablettstifterfassung verloren geht und der Zeiger außerhalb des gültigen Bereichs liegt.</span><span class="sxs-lookup"><span data-stu-id="368fc-761">If this element has stylus capture, this property will continue to return `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="368fc-762">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-762">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-763">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-763">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-764"><xref:System.Windows.UIElement3D.IsStylusOver%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-764"><xref:System.Windows.UIElement3D.IsStylusOver%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-765">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-765">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-766">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-766">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-767">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-767">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsStylusOverProperty>|  
|<span data-ttu-id="368fc-768">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-768">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-769">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-769">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsStylusOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-770">Identifiziert die <see cref="P:System.Windows.UIElement3D.IsStylusOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-770">Identifies the <see cref="P:System.Windows.UIElement3D.IsStylusOver" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-771"><xref:System.Windows.UIElement3D.IsStylusOverProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-771"><xref:System.Windows.UIElement3D.IsStylusOverProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-772">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-772">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Windows.UIElement3D.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-773">Ruft einen Wert ab, der angibt, ob dieses Element auf der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-773">Gets a value indicating whether this element is visible in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span></summary>
        <value><span data-ttu-id="368fc-774"><see langword="true" />, wenn das Element sichtbar ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-774"><see langword="true" /> if the element is visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-775">Bei der Ermittlung des <xref:System.Windows.UIElement3D.IsVisible%2A> Werts werden viele Faktoren berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="368fc-775">Determination of the <xref:System.Windows.UIElement3D.IsVisible%2A> value takes many factors into account.</span></span> <span data-ttu-id="368fc-776">Im Gegensatz dazu gibt <xref:System.Windows.UIElement3D.Visibility%2A>, bei dem es sich um eine festleg Bare Eigenschaft handelt, nur die Absicht an, ein Element Programm gesteuert sichtbar oder unsichtbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="368fc-776">In contrast, <xref:System.Windows.UIElement3D.Visibility%2A>, which is a settable property, only indicates the intention to programmatically make an element visible or invisible.</span></span>  
  
 <span data-ttu-id="368fc-777">Durch Änderungen am Wert dieser Eigenschaft wird in der Regel das <xref:System.Windows.UIElement3D.IsVisibleChanged> Ereignis angehoben.</span><span class="sxs-lookup"><span data-stu-id="368fc-777">Changes to the value of this property will typically raise the <xref:System.Windows.UIElement3D.IsVisibleChanged> event.</span></span> <span data-ttu-id="368fc-778">Es gibt keine übereinstimmende [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] "on \*"-Außerkraftsetzungs Methode, die es einer abgeleiteten Klasse ermöglicht, dieses Verhalten zu überschreiben und das Ereignis zu behandeln, aber ein Klassen Handler kann weiterhin direkt mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>angefügt werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-778">There is no matching [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] "On\*" class handling override method that would allow some derived class to override that behavior and handle the event, but a class handler could still be attached directly with <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-779">Elemente, bei denen <xref:System.Windows.UIElement3D.IsVisible%2A> `false`, werden nicht an Eingabe Ereignissen (oder Befehlen) beteiligt, beeinflussen weder das Measure noch das Anordnen des Layouts, sind nicht für die Fokus verwendbar, nicht in einer Registerkarten Sequenz und werden bei Treffer Tests nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="368fc-779">Elements where <xref:System.Windows.UIElement3D.IsVisible%2A> is `false` do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing.</span></span> <span data-ttu-id="368fc-780">Im Gegensatz dazu werden Elemente, bei denen <xref:System.Windows.UIElement3D.IsEnabled%2A> `false` ist, weiterhin an Ereignissen und Befehlen beteiligt, aber auch auf Treffer Tests, aber auch nicht auf die fokussierbar.</span><span class="sxs-lookup"><span data-stu-id="368fc-780">In contrast, elements where <xref:System.Windows.UIElement3D.IsEnabled%2A> is `false` will still participate in events and commands, and hit testing, but are also not focusable.</span></span>  
  
 <span data-ttu-id="368fc-781"><xref:System.Windows.UIElement3D.IsVisible%2A> ist nicht für die Verwendung als Formatvorlagen-Auslösung vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="368fc-781"><xref:System.Windows.UIElement3D.IsVisible%2A> is not intended to be used as a style trigger.</span></span> <span data-ttu-id="368fc-782">Das Verwenden von <xref:System.Windows.UIElement3D.IsVisible%2A> als Stil-Auslösung kann zu unvorhersehbaren Ergebnissen führen.</span><span class="sxs-lookup"><span data-stu-id="368fc-782">Using <xref:System.Windows.UIElement3D.IsVisible%2A> as a style trigger might have unpredictable results.</span></span> <span data-ttu-id="368fc-783"><xref:System.Windows.UIElement3D.IsVisible%2A> ist für die Zustands Überprüfung durch Eingabe Implementierungen auf niedrigerer Ebene vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="368fc-783"><xref:System.Windows.UIElement3D.IsVisible%2A> is intended for state checking by lower level input implementations.</span></span>  
  
 <span data-ttu-id="368fc-784"><xref:System.Windows.UIElement3D.IsVisible%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-784"><xref:System.Windows.UIElement3D.IsVisible%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-785">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-785">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-786">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-786">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-787">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-787">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsVisibleProperty>|  
|<span data-ttu-id="368fc-788">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-788">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-789">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-789">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-790">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsVisible" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-790">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsVisible" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-791">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-791">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="368fc-792"><xref:System.Windows.UIElement3D.IsVisibleChanged> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-792"><xref:System.Windows.UIElement3D.IsVisibleChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-793">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-793">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-794">Identifiziert die <see cref="P:System.Windows.UIElement3D.IsVisible" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-794">Identifies the <see cref="P:System.Windows.UIElement3D.IsVisible" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-795"><xref:System.Windows.UIElement3D.IsVisibleProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-795"><xref:System.Windows.UIElement3D.IsVisibleProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-796">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-796">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-797">Tritt auf, wenn eine Taste gedrückt wird, während sich der Fokus der Tastatur auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-797">Occurs when a key is pressed while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-798">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.KeyDown> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-798">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement3D.KeyDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-799">Ereignishandler, die an das <xref:System.Windows.UIElement3D.KeyDown> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-799">Event handlers that are attached to the <xref:System.Windows.UIElement3D.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-800"><xref:System.Windows.UIElement3D.KeyDown> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-800"><xref:System.Windows.UIElement3D.KeyDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-801">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-801">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-802">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-802">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-803">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-803">Identifier field</span></span>|<xref:System.Windows.UIElement3D.KeyDownEvent>|  
|<span data-ttu-id="368fc-804">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-804">Routing strategy</span></span>|<span data-ttu-id="368fc-805">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-805">Bubbling</span></span>|  
|<span data-ttu-id="368fc-806">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-806">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="368fc-807">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="368fc-807">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="368fc-808">Überschreiben Sie <xref:System.Windows.UIElement3D.OnKeyDown%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-808">Override <xref:System.Windows.UIElement3D.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyUp" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-809">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-809">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-810">Identifiziert das <see cref="E:System.Windows.UIElement3D.KeyDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-810">Identifies the <see cref="E:System.Windows.UIElement3D.KeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-811">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-811">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-812">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-812">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-813">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-813">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-814">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-814">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-815">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-815">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-816"><xref:System.Windows.UIElement3D.KeyDownEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-816"><xref:System.Windows.UIElement3D.KeyDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-817">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-817">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-818">Tritt auf, wenn eine Taste losgelassen wird, während sich der Fokus der Tastatur auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-818">Occurs when a key is released while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-819">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.KeyUp> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-819">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement3D.KeyUp> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-820">Ereignishandler, die an das <xref:System.Windows.UIElement3D.KeyUp> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-820">Event handlers that are attached to the <xref:System.Windows.UIElement3D.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-821"><xref:System.Windows.UIElement3D.KeyUp> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-821"><xref:System.Windows.UIElement3D.KeyUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-822">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-822">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-823">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-823">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-824">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-824">Identifier field</span></span>|<xref:System.Windows.UIElement3D.KeyUpEvent>|  
|<span data-ttu-id="368fc-825">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-825">Routing strategy</span></span>|<span data-ttu-id="368fc-826">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-826">Bubbling</span></span>|  
|<span data-ttu-id="368fc-827">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-827">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="368fc-828">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="368fc-828">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="368fc-829">Überschreiben Sie <xref:System.Windows.UIElement3D.OnKeyUp%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-829">Override <xref:System.Windows.UIElement3D.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyDown" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-830">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-830">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-831">Identifiziert das <see cref="E:System.Windows.UIElement3D.KeyUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-831">Identifies the <see cref="E:System.Windows.UIElement3D.KeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-832">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-832">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-833">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-833">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-834">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-834">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-835">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-835">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-836">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-836">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-837"><xref:System.Windows.UIElement3D.KeyUpEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-837"><xref:System.Windows.UIElement3D.KeyUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-838">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-838">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.RoutedEventHandler " Usage="member this.LostFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-839">Tritt auf, wenn dieses Element den logischen Fokus verliert.</span><span class="sxs-lookup"><span data-stu-id="368fc-839">Occurs when this element loses logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-840">Der logische Fokus unterscheidet sich vom Tastaturfokus, wenn der Fokus absichtlich durch einen Methodenaufruf verloren wird, der vorherige Tastaturfokus jedoch in einem anderen Gültigkeitsbereich vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-840">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="368fc-841">In diesem Szenario behält der Tastaturfokus bei, und das Element, bei dem eine <xref:System.Windows.UIElement3D.Focus%2A> Methode aufgerufen wird, erhält weiterhin den logischen Fokus.</span><span class="sxs-lookup"><span data-stu-id="368fc-841">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.UIElement3D.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="368fc-842">Eine genauere Interpretation dieses Ereignisses besteht darin, dass es ausgelöst wird, wenn der Wert der <xref:System.Windows.UIElement3D.IsFocused%2A>-Eigenschaft eines Elements in der Route von `true` in `false`geändert wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-842">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement3D.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="368fc-843">Da dieses Ereignis bubblingerrouting verwendet, kann das Element, das den Fokus verliert, ein untergeordnetes Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-843">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="368fc-844">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, das den Fokus erhalten hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-844">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
 <span data-ttu-id="368fc-845"><xref:System.Windows.UIElement3D.LostFocus> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-845"><xref:System.Windows.UIElement3D.LostFocus> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-846">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-846">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-847">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-847">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-848">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-848">Identifier field</span></span>|<xref:System.Windows.UIElement3D.LostFocusEvent>|  
|<span data-ttu-id="368fc-849">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-849">Routing strategy</span></span>|<span data-ttu-id="368fc-850">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-850">Bubbling</span></span>|  
|<span data-ttu-id="368fc-851">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-851">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="368fc-852">Es ist kein entsprechendes tunnelingereignis vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-852">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="368fc-853">Überschreiben Sie <xref:System.Windows.UIElement3D.OnLostFocus%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-853">Override <xref:System.Windows.UIElement3D.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-854">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-854">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-855">Identifiziert das <see cref="E:System.Windows.UIElement3D.LostFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-855">Identifies the <see cref="E:System.Windows.UIElement3D.LostFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-856">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-856">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-857">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-857">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-858">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-858">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-859">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-859">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-860">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-860">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-861"><xref:System.Windows.UIElement3D.LostFocusEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-861"><xref:System.Windows.UIElement3D.LostFocusEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-862">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-862">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-863">Tritt auf, wenn sich der Fokus der Tastatur nicht mehr auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-863">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-864">Da dieses Ereignis bubblingerrouting verwendet, kann das Element, das den Fokus verliert, ein untergeordnetes Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-864">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="368fc-865">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, das den Fokus verloren hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-865">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="368fc-866">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.LostKeyboardFocus> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-866">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-867">Ereignishandler, die an das <xref:System.Windows.UIElement3D.LostKeyboardFocus> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-867">Event handlers that are attached to the <xref:System.Windows.UIElement3D.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-868"><xref:System.Windows.UIElement3D.LostKeyboardFocus> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-868"><xref:System.Windows.UIElement3D.LostKeyboardFocus> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-869">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-869">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-870">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-870">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-871">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-871">Identifier field</span></span>|<xref:System.Windows.UIElement3D.LostKeyboardFocusEvent>|  
|<span data-ttu-id="368fc-872">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-872">Routing strategy</span></span>|<span data-ttu-id="368fc-873">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-873">Bubbling</span></span>|  
|<span data-ttu-id="368fc-874">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-874">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="368fc-875">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="368fc-875">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="368fc-876">Überschreiben Sie <xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-876">Override <xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-877">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-877">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-878">Identifiziert das <see cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-878">Identifies the <see cref="E:System.Windows.UIElement3D.LostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-879">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-879">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-880">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-880">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-881">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-881">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-882">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-882">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-883">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-883">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-884"><xref:System.Windows.UIElement3D.LostKeyboardFocusEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-884"><xref:System.Windows.UIElement3D.LostKeyboardFocusEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-885">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-885">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-886">Tritt auf, wenn dieses Element die Mausauswahl verliert.</span><span class="sxs-lookup"><span data-stu-id="368fc-886">Occurs when this element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-887">Wenn ein Element die Maus erfasst, empfängt es auch dann Maus Eingaben, wenn sich der Zeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-887">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="368fc-888">Die Maus wird in der Regel nur während Drag & Drop-Vorgängen aufgezeichnet.</span><span class="sxs-lookup"><span data-stu-id="368fc-888">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="368fc-889">Da dieses Ereignis bubblingerrouting verwendet, kann das-Element, das Capture verliert, ein untergeordnetes-Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-889">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="368fc-890">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das eigentliche Element zu ermitteln, das die Erfassung verloren hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-890">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="368fc-891">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.LostMouseCapture> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-891">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.LostMouseCapture> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-892">Ereignishandler, die an das <xref:System.Windows.UIElement3D.LostMouseCapture> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-892">Event handlers that are attached to the <xref:System.Windows.UIElement3D.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-893"><xref:System.Windows.UIElement3D.LostMouseCapture> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-893"><xref:System.Windows.UIElement3D.LostMouseCapture> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-894">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-894">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-895">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-895">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-896">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-896">Identifier field</span></span>|<xref:System.Windows.UIElement3D.LostMouseCaptureEvent>|  
|<span data-ttu-id="368fc-897">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-897">Routing strategy</span></span>|<span data-ttu-id="368fc-898">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-898">Bubbling</span></span>|  
|<span data-ttu-id="368fc-899">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-899">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="368fc-900">Es ist kein entsprechendes tunnelingereignis definiert.</span><span class="sxs-lookup"><span data-stu-id="368fc-900">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="368fc-901">Überschreiben Sie <xref:System.Windows.UIElement3D.OnLostMouseCapture%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-901">Override <xref:System.Windows.UIElement3D.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-902">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-902">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-903">Identifiziert das <see cref="E:System.Windows.UIElement3D.LostMouseCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-903">Identifies the <see cref="E:System.Windows.UIElement3D.LostMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-904">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-904">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-905">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-905">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-906">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-906">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-907">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-907">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-908">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-908">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-909"><xref:System.Windows.UIElement3D.LostMouseCaptureEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-909"><xref:System.Windows.UIElement3D.LostMouseCaptureEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-910">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-910">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-911">Tritt auf, wenn dieses Element die Stiftauswahl verliert.</span><span class="sxs-lookup"><span data-stu-id="368fc-911">Occurs when this element loses stylus capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-912">Wenn ein Element den Tablettstift erfasst, empfängt er die Stift Eingabe, auch wenn sich der Zeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-912">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="368fc-913">Der Tablettstift wird in der Regel nur während Drag & Drop-Vorgängen aufgezeichnet.</span><span class="sxs-lookup"><span data-stu-id="368fc-913">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="368fc-914">Da dieses Ereignis bubblingerrouting verwendet, kann das Element, das den Fokus verliert, ein untergeordnetes Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-914">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="368fc-915">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, das den Fokus verloren hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-915">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="368fc-916">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.LostStylusCapture> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-916">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.LostStylusCapture> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-917">Ereignishandler, die an das <xref:System.Windows.UIElement3D.LostStylusCapture> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-917">Event handlers that are attached to the <xref:System.Windows.UIElement3D.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-918"><xref:System.Windows.UIElement3D.LostStylusCapture> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-918"><xref:System.Windows.UIElement3D.LostStylusCapture> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-919">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-919">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-920">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-920">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-921">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-921">Identifier field</span></span>|<xref:System.Windows.UIElement3D.LostStylusCaptureEvent>|  
|<span data-ttu-id="368fc-922">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-922">Routing strategy</span></span>|<span data-ttu-id="368fc-923">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-923">Bubbling</span></span>|  
|<span data-ttu-id="368fc-924">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-924">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="368fc-925">Es ist kein entsprechendes tunnelingereignis definiert.</span><span class="sxs-lookup"><span data-stu-id="368fc-925">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="368fc-926">Überschreiben Sie <xref:System.Windows.UIElement3D.OnLostStylusCapture%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-926">Override <xref:System.Windows.UIElement3D.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-927">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-927">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-928">Identifiziert das <see cref="E:System.Windows.UIElement3D.LostStylusCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-928">Identifies the <see cref="E:System.Windows.UIElement3D.LostStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-929">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-929">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-930">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-930">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-931">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-931">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-932">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-932">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-933">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-933">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-934"><xref:System.Windows.UIElement3D.LostStylusCaptureEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-934"><xref:System.Windows.UIElement3D.LostStylusCaptureEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-935">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-935">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.LostTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.LostTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-936">Tritt ein, wenn dieses Element keine Fingereingaben mehr erfasst.</span><span class="sxs-lookup"><span data-stu-id="368fc-936">Occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-937">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-937">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-938">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-938">Identifier field</span></span>|<xref:System.Windows.UIElement3D.LostTouchCaptureEvent>|  
|<span data-ttu-id="368fc-939">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-939">Routing strategy</span></span>|<span data-ttu-id="368fc-940">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-940">Bubbling</span></span>|  
|<span data-ttu-id="368fc-941">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-941">Delegate</span></span>|<span data-ttu-id="368fc-942">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="368fc-942"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="368fc-943">Überschreiben Sie <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-943">Override <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.LostTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-944">Identifiziert das <see cref="E:System.Windows.UIElement3D.LostTouchCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-944">Identifies the <see cref="E:System.Windows.UIElement3D.LostTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-945">Tritt auf, wenn eine Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-945">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-946">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.MouseDown> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-946">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.MouseDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-947">Ereignishandler, die an das <xref:System.Windows.UIElement3D.MouseDown> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-947">Event handlers that are attached to the <xref:System.Windows.UIElement3D.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-948">Das <xref:System.Windows.UIElement3D.MouseDown> Ereignis wird häufig mit <xref:System.Windows.UIElement3D.MouseLeftButtonDown> oder <xref:System.Windows.UIElement3D.MouseRightButtonDown>ausgelöst, das einem Drücken einer der beiden Standard Maustasten entspricht.</span><span class="sxs-lookup"><span data-stu-id="368fc-948">The <xref:System.Windows.UIElement3D.MouseDown> event is often raised together with either <xref:System.Windows.UIElement3D.MouseLeftButtonDown> or <xref:System.Windows.UIElement3D.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="368fc-949"><xref:System.Windows.UIElement3D.MouseLeftButtonDown> und <xref:System.Windows.UIElement3D.MouseRightButtonDown> werden ebenfalls geroutet, aber es handelt sich um direkt geroutete Ereignisse, und das entsprechende Schaltflächen spezifische Ereignis wird ausgelöst, wenn das <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignis dieses Element entlang der Ereignis Route erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-949"><xref:System.Windows.UIElement3D.MouseLeftButtonDown> and <xref:System.Windows.UIElement3D.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="368fc-950">Weitere Informationen finden Sie unter Hinweise zu <xref:System.Windows.UIElement3D.MouseLeftButtonDown> oder <xref:System.Windows.UIElement3D.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="368fc-950">See Remarks for <xref:System.Windows.UIElement3D.MouseLeftButtonDown> or <xref:System.Windows.UIElement3D.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="368fc-951">Einige Steuerelemente verfügen möglicherweise über eine inhärente Klassen Behandlung für Maustasten Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="368fc-951">Some controls might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="368fc-952">Das Ereignis mit der linken Maustaste auf das Ereignis ist das wahrscheinlichste Ereignis, um eine Klassen Behandlung in einem-Steuerelement zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="368fc-952">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="368fc-953">Die Klassen Behandlung markiert häufig das zugrunde liegende <xref:System.Windows.Input.Mouse>-Klassen Ereignis als behandelt.</span><span class="sxs-lookup"><span data-stu-id="368fc-953">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="368fc-954">Wenn das Ereignis als behandelt markiert ist, werden andere Instanzhandler, die diesem Element zugeordnet sind, normalerweise nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-954">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="368fc-955">Alle anderen Klassen-oder Instanzhandler, die an Elemente in der Blasen Richtung an den Stamm in der UI-Struktur angefügt werden, werden normalerweise nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-955">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="368fc-956">Sie können das Problem beheben, das in den vorangehenden wichtigen Ereignissen und weiterhin <xref:System.Windows.UIElement3D.MouseDown>-Ereignissen für eine abgeleitete Klasse, die über eine Klassen Behandlung verfügt, mit einer der folgenden Lösungen behandelt wird:</span><span class="sxs-lookup"><span data-stu-id="368fc-956">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement3D.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="368fc-957">Anfügen von Handlern für das <xref:System.Windows.UIElement3D.PreviewMouseDown>-Ereignis, das von den-Steuerelementen nicht als behandelt markiert ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-957">Attach handlers for the <xref:System.Windows.UIElement3D.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="368fc-958">Da es sich hierbei um ein Vorschau Ereignis handelt, beginnt die Route im Stammverzeichnis und wird zum-Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="368fc-958">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="368fc-959">Registrieren Sie einen Handler im Steuerelement, indem Sie <xref:System.Windows.UIElement3D.AddHandler%2A> aufrufen und die Signatur Option auswählen, mit der Handler Ereignisse überwachen können, auch wenn Sie in den Routing Ereignisdaten bereits als behandelt markiert sind.</span><span class="sxs-lookup"><span data-stu-id="368fc-959">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement3D.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
 <span data-ttu-id="368fc-960"><xref:System.Windows.UIElement3D.MouseDown> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-960"><xref:System.Windows.UIElement3D.MouseDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-961">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-961">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-962">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-962">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-963">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-963">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseDownEvent>|  
|<span data-ttu-id="368fc-964">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-964">Routing strategy</span></span>|<span data-ttu-id="368fc-965">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-965">Bubbling</span></span>|  
|<span data-ttu-id="368fc-966">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-966">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-967">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="368fc-967">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="368fc-968">Überschreiben Sie <xref:System.Windows.UIElement3D.OnMouseDown%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-968">Override <xref:System.Windows.UIElement3D.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-969">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-969">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-970">Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-970">Identifies the <see cref="E:System.Windows.UIElement3D.MouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-971">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-971">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-972">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-972">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-973">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-973">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-974">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-974">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-975">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-975">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-976"><xref:System.Windows.UIElement3D.MouseDownEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-976"><xref:System.Windows.UIElement3D.MouseDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-977">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-977">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Input.MouseEventHandler " Usage="member this.MouseEnter : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-978">Tritt auf, wenn der Mauszeiger in den Bereich dieses Elements eintritt.</span><span class="sxs-lookup"><span data-stu-id="368fc-978">Occurs when the mouse pointer enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-979"><xref:System.Windows.UIElement3D.MouseEnter> ist eine [Übersicht über Routing Ereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) , die die Routing Strategie für die direkte Ereignis Behandlung verwendet.</span><span class="sxs-lookup"><span data-stu-id="368fc-979"><xref:System.Windows.UIElement3D.MouseEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="368fc-980">Direkt geroutete Ereignisse werden nicht entlang einer Route ausgelöst. Stattdessen werden Sie im selben Element behandelt, in dem Sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-980">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span>  
  
 <span data-ttu-id="368fc-981">Obwohl <xref:System.Windows.UIElement3D.MouseEnter> nachverfolgt, wenn der Mauszeiger in die Grenzen eines Elements eintritt, meldet dieses Ereignis eher, dass der Wert der <xref:System.Windows.UIElement3D.IsMouseOver%2A>-Eigenschaft von `false` in `true` für dieses Element geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-981">Although <xref:System.Windows.UIElement3D.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="368fc-982">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.MouseEnter> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-982">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.MouseEnter> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-983">Ereignishandler, die an das <xref:System.Windows.UIElement3D.MouseEnter> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-983">Event handlers that are attached to the <xref:System.Windows.UIElement3D.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-984"><xref:System.Windows.UIElement3D.MouseEnter> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-984"><xref:System.Windows.UIElement3D.MouseEnter> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-985">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-985">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-986">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-986">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-987">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-987">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseEnterEvent>|  
|<span data-ttu-id="368fc-988">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-988">Routing strategy</span></span>|<span data-ttu-id="368fc-989">Direkt</span><span class="sxs-lookup"><span data-stu-id="368fc-989">Direct</span></span>|  
|<span data-ttu-id="368fc-990">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-990">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="368fc-991">Überschreiben Sie <xref:System.Windows.UIElement3D.OnMouseEnter%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-991">Override <xref:System.Windows.UIElement3D.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-992">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-992">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-993">Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseEnter" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-993">Identifies the <see cref="E:System.Windows.UIElement3D.MouseEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-994">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-994">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-995">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-995">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-996">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-996">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-997">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-997">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-998">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-998">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-999"><xref:System.Windows.UIElement3D.MouseEnterEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-999"><xref:System.Windows.UIElement3D.MouseEnterEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1000">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1000">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Input.MouseEventHandler " Usage="member this.MouseLeave : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1001">Tritt auf, wenn der Mauszeiger den Bereich dieses Elements verlässt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1001">Occurs when the mouse pointer leaves the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1002"><xref:System.Windows.UIElement3D.MouseLeave> ist eine [Übersicht über Routing Ereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) , die die Routing Strategie für die direkte Ereignis Behandlung verwendet.</span><span class="sxs-lookup"><span data-stu-id="368fc-1002"><xref:System.Windows.UIElement3D.MouseLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="368fc-1003">Direkt geroutete Ereignisse werden nicht entlang einer Route ausgelöst. Stattdessen werden Sie im selben Element behandelt, in dem Sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1003">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span>  
  
 <span data-ttu-id="368fc-1004">Obwohl <xref:System.Windows.UIElement3D.MouseLeave> nachverfolgt, wenn die Maus ein Element verlässt, meldet dieses Ereignis eher, dass der Wert der <xref:System.Windows.UIElement3D.IsMouseOver%2A>-Eigenschaft von `true` in `false` in diesem Element geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-1004">Although <xref:System.Windows.UIElement3D.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="368fc-1005">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.MouseLeave> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1005">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.MouseLeave> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-1006">Ereignishandler, die an das <xref:System.Windows.UIElement3D.MouseLeave> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-1006">Event handlers that are attached to the <xref:System.Windows.UIElement3D.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-1007"><xref:System.Windows.UIElement3D.MouseLeave> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1007"><xref:System.Windows.UIElement3D.MouseLeave> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1008">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1008">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-1009">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-1009">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-1010">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-1010">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseLeaveEvent>|  
|<span data-ttu-id="368fc-1011">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-1011">Routing strategy</span></span>|<span data-ttu-id="368fc-1012">Direkt</span><span class="sxs-lookup"><span data-stu-id="368fc-1012">Direct</span></span>|  
|<span data-ttu-id="368fc-1013">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-1013">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="368fc-1014">Überschreiben Sie <xref:System.Windows.UIElement3D.OnMouseLeave%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1014">Override <xref:System.Windows.UIElement3D.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-1015">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-1015">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1016">Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseLeave" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1016">Identifies the <see cref="E:System.Windows.UIElement3D.MouseLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1017">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1017">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-1018">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1018">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-1019">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1019">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-1020">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1020">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-1021">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1021">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1022"><xref:System.Windows.UIElement3D.MouseLeaveEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1022"><xref:System.Windows.UIElement3D.MouseLeaveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1023">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1023">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1024">Tritt auf, wenn die linke Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-1024">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1025">Obwohl diese [Übersicht](~/docs/framework/wpf/advanced/routed-events-overview.md) über Routing Ereignisse eine bubblingerroute durch eine Elementstruktur befolgt, handelt es sich tatsächlich um ein direktes Routing Ereignis, das von jedem <xref:System.Windows.UIElement3D>ausgelöst und entlang der Elementstruktur erneut ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1025">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-1026">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignisses melden, bei dem es sich um ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1026">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="368fc-1027">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="368fc-1027">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="368fc-1028">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit <xref:System.Windows.UIElement3D.AddHandler%2A>aufgerufen wird, mit der Option, Ereignisse zu behandeln, die bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="368fc-1028">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="368fc-1029">Wenn Sie <xref:System.Windows.UIElement3D.MouseLeftButtonDown> behandelt markieren, markieren Sie im wesentlichen <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> behandelt für alle weiteren Listener entlang der Route und für alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="368fc-1029">If you mark <xref:System.Windows.UIElement3D.MouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="368fc-1030">Dazu zählen möglicherweise von Klassen Handlern generierte Ereignisse wie z. b. <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1030">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="368fc-1031">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse auf <xref:System.Windows.UIElement3D>) als Maus-"Dienst" vorstellen (mit der Dienst Definition, die von der <xref:System.Windows.Input.Mouse>-Klasse bereitgestellt wird).</span><span class="sxs-lookup"><span data-stu-id="368fc-1031">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="368fc-1032">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1032">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="368fc-1033">Für erweiterte Szenarien, wie z. b. das Überprüfen von Zuständen nicht standardmäßiger Schaltflächen, müssen Sie möglicherweise die APIs für die <xref:System.Windows.Input.Mouse>-Klasse anstelle der-<xref:System.Windows.UIElement3D>verwenden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1033">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="368fc-1034">Die Klassen Behandlung markiert häufig das zugrunde liegende <xref:System.Windows.Input.Mouse>-Klassen Ereignis als behandelt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1034">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="368fc-1035">Wenn das Ereignis als behandelt markiert ist, werden andere Instanzhandler, die diesem Element zugeordnet sind, normalerweise nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-1035">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="368fc-1036">Alle anderen Klassen-oder Instanzhandler, die an Elemente in der Blasen Richtung an den Stamm in der UI-Struktur angefügt werden, werden normalerweise nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-1036">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="368fc-1037">Sie können das Problem beheben, das in den vorangehenden wichtigen Ereignissen und weiterhin <xref:System.Windows.UIElement3D.MouseLeftButtonDown>-Ereignissen für eine abgeleitete Klasse, die über eine Klassen Behandlung verfügt, mit einer der folgenden Lösungen behandelt wird:</span><span class="sxs-lookup"><span data-stu-id="368fc-1037">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement3D.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="368fc-1038">Anfügen von Handlern für das <xref:System.Windows.UIElement3D.PreviewMouseDown>-Ereignis, das von den-Steuerelementen nicht als behandelt markiert ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-1038">Attach handlers for the <xref:System.Windows.UIElement3D.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="368fc-1039">Da es sich hierbei um ein Vorschau Ereignis handelt, beginnt die Route im Stammverzeichnis und wird zum-Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="368fc-1039">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="368fc-1040">Registrieren Sie einen Handler im Steuerelement, indem Sie <xref:System.Windows.UIElement3D.AddHandler%2A> aufrufen und die Signatur Option auswählen, mit der Handler Ereignisse überwachen können, auch wenn Sie in den Routing Ereignisdaten bereits als behandelt markiert sind.</span><span class="sxs-lookup"><span data-stu-id="368fc-1040">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement3D.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
 <span data-ttu-id="368fc-1041"><xref:System.Windows.UIElement3D.MouseLeftButtonDown> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1041"><xref:System.Windows.UIElement3D.MouseLeftButtonDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1042">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1042">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-1043">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-1043">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-1044">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-1044">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="368fc-1045">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-1045">Routing strategy</span></span>|<span data-ttu-id="368fc-1046">Direkt</span><span class="sxs-lookup"><span data-stu-id="368fc-1046">Direct</span></span>|  
|<span data-ttu-id="368fc-1047">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-1047">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-1048">Überschreiben Sie <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1048">Override <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-1049">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-1049">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1050">Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1050">Identifies the <see cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1051">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1051">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-1052">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1052">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-1053">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1053">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-1054">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1054">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-1055">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1055">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1056"><xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1056"><xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1057">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1057">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1058">Tritt auf, wenn die linke Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-1058">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1059">Obwohl diese [Übersicht](~/docs/framework/wpf/advanced/routed-events-overview.md) über Routing Ereignisse eine bubblingerroute durch eine Elementstruktur befolgt, handelt es sich tatsächlich um ein direktes Routing Ereignis, das von jedem <xref:System.Windows.UIElement3D>ausgelöst und entlang der Elementstruktur erneut ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1059">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-1060">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignisses melden, bei dem es sich um ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1060">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="368fc-1061">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="368fc-1061">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="368fc-1062">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit <xref:System.Windows.UIElement3D.AddHandler%2A>aufgerufen wird, mit der Option, Ereignisse zu behandeln, die bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="368fc-1062">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="368fc-1063">Wenn Sie <xref:System.Windows.UIElement3D.MouseLeftButtonUp> behandelt markieren, markieren Sie im wesentlichen <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> behandelt für alle weiteren Listener entlang der Route und für alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="368fc-1063">If you mark <xref:System.Windows.UIElement3D.MouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="368fc-1064">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse auf <xref:System.Windows.UIElement3D>) als Maus-"Dienst" vorstellen (mit der Dienst Definition, die von der <xref:System.Windows.Input.Mouse>-Klasse bereitgestellt wird).</span><span class="sxs-lookup"><span data-stu-id="368fc-1064">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="368fc-1065">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1065">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="368fc-1066">Für erweiterte Szenarien, wie z. b. das Überprüfen von Zuständen nicht standardmäßiger Schaltflächen, müssen Sie möglicherweise die APIs für die <xref:System.Windows.Input.Mouse>-Klasse anstelle der-<xref:System.Windows.UIElement3D>verwenden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1066">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-1067"><xref:System.Windows.UIElement3D.MouseLeftButtonUp> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1067"><xref:System.Windows.UIElement3D.MouseLeftButtonUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1068">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1068">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-1069">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-1069">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-1070">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-1070">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="368fc-1071">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-1071">Routing strategy</span></span>|<span data-ttu-id="368fc-1072">Direkt</span><span class="sxs-lookup"><span data-stu-id="368fc-1072">Direct</span></span>|  
|<span data-ttu-id="368fc-1073">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-1073">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-1074">Überschreiben Sie <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1074">Override <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-1075">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-1075">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1076">Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1076">Identifies the <see cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1077">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1077">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-1078">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1078">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-1079">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1079">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-1080">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1080">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-1081">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1081">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1082"><xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1082"><xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1083">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1083">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1084">Tritt auf, wenn der Mauszeiger bewegt wird, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-1084">Occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1085">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.MouseMove> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1085">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.MouseMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-1086">Ereignishandler, die an das <xref:System.Windows.UIElement3D.MouseMove> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-1086">Event handlers that are attached to the <xref:System.Windows.UIElement3D.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-1087"><xref:System.Windows.UIElement3D.MouseMove> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1087"><xref:System.Windows.UIElement3D.MouseMove> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1088">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1088">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-1089">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-1089">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-1090">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-1090">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseMoveEvent>|  
|<span data-ttu-id="368fc-1091">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-1091">Routing strategy</span></span>|<span data-ttu-id="368fc-1092">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-1092">Bubbling</span></span>|  
|<span data-ttu-id="368fc-1093">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-1093">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="368fc-1094">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1094">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="368fc-1095">Überschreiben Sie <xref:System.Windows.UIElement3D.OnMouseMove%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1095">Override <xref:System.Windows.UIElement3D.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement3D.MouseLeave" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-1096">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-1096">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1097">Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1097">Identifies the <see cref="E:System.Windows.UIElement3D.MouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1098">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1098">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-1099">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1099">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-1100">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1100">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-1101">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1101">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-1102">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1102">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1103"><xref:System.Windows.UIElement3D.MouseMoveEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1103"><xref:System.Windows.UIElement3D.MouseMoveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1104">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1104">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1105">Tritt auf, wenn die rechte Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-1105">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1106">Obwohl diese [Übersicht](~/docs/framework/wpf/advanced/routed-events-overview.md) über Routing Ereignisse eine bubblingerroute durch eine Elementstruktur befolgt, handelt es sich tatsächlich um ein direktes Routing Ereignis, das von jedem <xref:System.Windows.UIElement3D>ausgelöst und entlang der Elementstruktur erneut ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1106">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-1107">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignisses melden, bei dem es sich um ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1107">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="368fc-1108">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="368fc-1108">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="368fc-1109">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit <xref:System.Windows.UIElement3D.AddHandler%2A>aufgerufen wird, mit der Option, Ereignisse zu behandeln, die bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="368fc-1109">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="368fc-1110">Wenn Sie <xref:System.Windows.UIElement3D.MouseRightButtonDown> behandelt markieren, markieren Sie im wesentlichen <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> behandelt für alle weiteren Listener entlang der Route und für alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="368fc-1110">If you mark <xref:System.Windows.UIElement3D.MouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="368fc-1111">Dazu zählen möglicherweise von Klassen Handlern generierte Ereignisse wie z. b. <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1111">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="368fc-1112">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse auf <xref:System.Windows.UIElement3D>) als Maus-"Dienst" vorstellen (mit der Dienst Definition, die von der <xref:System.Windows.Input.Mouse>-Klasse bereitgestellt wird).</span><span class="sxs-lookup"><span data-stu-id="368fc-1112">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="368fc-1113">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1113">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="368fc-1114">Für erweiterte Szenarien, wie z. b. das Überprüfen von Zuständen nicht standardmäßiger Schaltflächen, müssen Sie möglicherweise die APIs für die <xref:System.Windows.Input.Mouse>-Klasse anstelle der-<xref:System.Windows.UIElement3D>verwenden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1114">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-1115">Die Mausereignisse mit der rechten Maustaste verfügen häufig über systemeigene Behandlung in Anwendungsszenarien.</span><span class="sxs-lookup"><span data-stu-id="368fc-1115">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="368fc-1116">Beispielsweise kann mit der rechten Maustaste ein Kontextmenü angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1116">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="368fc-1117">Siehe [Übersicht über ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1117">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-1118"><xref:System.Windows.UIElement3D.MouseRightButtonDown> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1118"><xref:System.Windows.UIElement3D.MouseRightButtonDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1119">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1119">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-1120">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-1120">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-1121">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-1121">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseRightButtonDownEvent>|  
|<span data-ttu-id="368fc-1122">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-1122">Routing strategy</span></span>|<span data-ttu-id="368fc-1123">Direkt</span><span class="sxs-lookup"><span data-stu-id="368fc-1123">Direct</span></span>|  
|<span data-ttu-id="368fc-1124">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-1124">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-1125">Überschreiben Sie <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1125">Override <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-1126">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-1126">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1127">Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseRightButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1127">Identifies the <see cref="E:System.Windows.UIElement3D.MouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1128">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1128">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-1129">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1129">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-1130">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1130">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-1131">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1131">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-1132">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1132">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1133"><xref:System.Windows.UIElement3D.MouseRightButtonDownEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1133"><xref:System.Windows.UIElement3D.MouseRightButtonDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1134">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1134">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1135">Tritt auf, wenn die rechte Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-1135">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1136">Obwohl diese [Übersicht](~/docs/framework/wpf/advanced/routed-events-overview.md) über Routing Ereignisse eine bubblingerroute durch eine Elementstruktur befolgt, handelt es sich tatsächlich um ein direktes Routing Ereignis, das von jedem <xref:System.Windows.UIElement3D>ausgelöst und entlang der Elementstruktur erneut ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1136">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-1137">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignisses melden, bei dem es sich um ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1137">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="368fc-1138">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="368fc-1138">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="368fc-1139">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit <xref:System.Windows.UIElement3D.AddHandler%2A>aufgerufen wird, mit der Option, Ereignisse zu behandeln, die bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="368fc-1139">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="368fc-1140">Wenn Sie <xref:System.Windows.UIElement3D.MouseRightButtonUp> behandelt markieren, markieren Sie im wesentlichen <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> behandelt für alle weiteren Listener entlang der Route und für alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="368fc-1140">If you mark <xref:System.Windows.UIElement3D.MouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="368fc-1141">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse auf <xref:System.Windows.UIElement3D>) als Maus-"Dienst" vorstellen (mit der Dienst Definition, die von der <xref:System.Windows.Input.Mouse>-Klasse bereitgestellt wird).</span><span class="sxs-lookup"><span data-stu-id="368fc-1141">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="368fc-1142">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1142">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="368fc-1143">Für erweiterte Szenarien, wie z. b. das Überprüfen von Zuständen nicht standardmäßiger Schaltflächen, müssen Sie möglicherweise die APIs für die <xref:System.Windows.Input.Mouse>-Klasse anstelle der-<xref:System.Windows.UIElement3D>verwenden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1143">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-1144"><xref:System.Windows.UIElement3D.MouseRightButtonUp> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1144"><xref:System.Windows.UIElement3D.MouseRightButtonUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1145">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1145">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-1146">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-1146">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-1147">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-1147">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseRightButtonUpEvent>|  
|<span data-ttu-id="368fc-1148">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-1148">Routing strategy</span></span>|<span data-ttu-id="368fc-1149">Direkt</span><span class="sxs-lookup"><span data-stu-id="368fc-1149">Direct</span></span>|  
|<span data-ttu-id="368fc-1150">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-1150">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-1151">Überschreiben Sie <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1151">Override <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-1152">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-1152">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1153">Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseRightButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1153">Identifies the <see cref="E:System.Windows.UIElement3D.MouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1154">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1154">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-1155">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1155">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-1156">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1156">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-1157">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1157">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-1158">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1158">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1159"><xref:System.Windows.UIElement3D.MouseRightButtonUpEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1159"><xref:System.Windows.UIElement3D.MouseRightButtonUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1160">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1160">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1161">Tritt auf, wenn eine Maustaste über diesem Element losgelassen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1161">Occurs when any mouse button is released over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1162">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.MouseUp> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1162">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.MouseUp> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-1163">Ereignishandler, die an das <xref:System.Windows.UIElement3D.MouseUp> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-1163">Event handlers that are attached to the <xref:System.Windows.UIElement3D.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-1164">Das <xref:System.Windows.UIElement3D.MouseUp> Ereignis wird häufig mit <xref:System.Windows.UIElement3D.MouseLeftButtonUp> oder <xref:System.Windows.UIElement3D.MouseRightButtonUp>ausgelöst, die einem Release einer der beiden standardmäßigen Maustasten entsprechen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1164">The <xref:System.Windows.UIElement3D.MouseUp> event is often raised together with either <xref:System.Windows.UIElement3D.MouseLeftButtonUp> or <xref:System.Windows.UIElement3D.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="368fc-1165"><xref:System.Windows.UIElement3D.MouseLeftButtonUp> und <xref:System.Windows.UIElement3D.MouseRightButtonUp> werden ebenfalls geroutet, aber es handelt sich um direkt geroutete Ereignisse, und das entsprechende Schaltflächen spezifische Ereignis wird ausgelöst, wenn das <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignis dieses Element entlang der Ereignis Route erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1165"><xref:System.Windows.UIElement3D.MouseLeftButtonUp> and <xref:System.Windows.UIElement3D.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="368fc-1166">Weitere Informationen finden Sie unter Hinweise zu <xref:System.Windows.UIElement3D.MouseLeftButtonUp> oder <xref:System.Windows.UIElement3D.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1166">See Remarks for <xref:System.Windows.UIElement3D.MouseLeftButtonUp> or <xref:System.Windows.UIElement3D.MouseRightButtonUp>.</span></span>  
  
 <span data-ttu-id="368fc-1167"><xref:System.Windows.UIElement3D.MouseUp> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1167"><xref:System.Windows.UIElement3D.MouseUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1168">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1168">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-1169">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-1169">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-1170">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-1170">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseUpEvent>|  
|<span data-ttu-id="368fc-1171">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-1171">Routing strategy</span></span>|<span data-ttu-id="368fc-1172">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-1172">Bubbling</span></span>|  
|<span data-ttu-id="368fc-1173">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-1173">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-1174">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1174">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="368fc-1175">Überschreiben Sie <xref:System.Windows.UIElement3D.OnMouseUp%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1175">Override <xref:System.Windows.UIElement3D.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-1176">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-1176">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1177">Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1177">Identifies the <see cref="E:System.Windows.UIElement3D.MouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1178">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1178">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-1179">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1179">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-1180">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1180">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-1181">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1181">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-1182">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1182">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1183"><xref:System.Windows.UIElement3D.MouseUpEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1183"><xref:System.Windows.UIElement3D.MouseUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1184">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1184">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1185">Tritt auf, wenn der Benutzer das Mausrad dreht, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-1185">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1186">Der Fokus oder die Maus Erfassung haben Vorrang vor der Position des Mauszeigers. Wenn Sie das <xref:System.Windows.UIElement3D.MouseWheel>-Ereignis von einem fokussierten oder erfassten Element erhalten, befindet sich der Mauszeiger daher möglicherweise über einem anderen Element.</span><span class="sxs-lookup"><span data-stu-id="368fc-1186">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.UIElement3D.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="368fc-1187">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.MouseWheel> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1187">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.MouseWheel> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-1188">Ereignishandler, die an das <xref:System.Windows.UIElement3D.MouseWheel> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-1188">Event handlers that are attached to the <xref:System.Windows.UIElement3D.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-1189"><xref:System.Windows.UIElement3D.MouseWheel> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1189"><xref:System.Windows.UIElement3D.MouseWheel> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1190">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1190">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-1191">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-1191">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-1192">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-1192">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseWheelEvent>|  
|<span data-ttu-id="368fc-1193">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-1193">Routing strategy</span></span>|<span data-ttu-id="368fc-1194">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-1194">Bubbling</span></span>|  
|<span data-ttu-id="368fc-1195">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-1195">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="368fc-1196">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1196">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="368fc-1197">Überschreiben Sie <xref:System.Windows.UIElement3D.OnMouseWheel%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1197">Override <xref:System.Windows.UIElement3D.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="368fc-1198">Behandeln von Ereignissen in 3D-Beispielen</span><span class="sxs-lookup"><span data-stu-id="368fc-1198">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-1199">Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseWheel" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1199">Identifies the <see cref="E:System.Windows.UIElement3D.MouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1200">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1200">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-1201">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1201">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-1202">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1202">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-1203">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1203">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-1204">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1204">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1205"><xref:System.Windows.UIElement3D.MouseWheelEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1205"><xref:System.Windows.UIElement3D.MouseWheelEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1206">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1206">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="uIElement3D.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="368fc-1207">Eine Durchlaufanforderung, die eine Eigenschaft enthält, die entweder einen Modus zum Durchlaufen in der vorliegenden Aktivierreihenfolge oder eine Richtung zum visuellen Verschieben angibt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1207">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span></span></param>
        <summary><span data-ttu-id="368fc-1208">Versucht, den Fokus von diesem Element auf ein anderes Element zu verschieben.</span><span class="sxs-lookup"><span data-stu-id="368fc-1208">Attempts to move focus from this element to another element.</span></span> <span data-ttu-id="368fc-1209">Die Richtung, in der der Fokus verschoben wird, wird durch eine Führungsrichtung angegeben, die innerhalb der Organisation des visuellen übergeordneten Elements für dieses Element interpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1209">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span></span></summary>
        <returns><span data-ttu-id="368fc-1210"><see langword="true" />, wenn der angeforderte Durchlauf ausgeführt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-1210"><see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1211">Stellen Sie sicher, dass Sie den Rückgabewert dieser Methode überprüfen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1211">Make sure you check the return value of this method.</span></span> <span data-ttu-id="368fc-1212">Der Rückgabewert `false` kann zurückgegeben werden, wenn die Traversierung in einem Tabstopp ausgeführt wird, der durch die Komposition eines Steuer Elements definiert ist, und die Traversale Anforderung nicht zum Umbruch aufgefordert wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-1212">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 <span data-ttu-id="368fc-1213"><xref:System.Windows.UIElement3D.MoveFocus%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1213"><xref:System.Windows.UIElement3D.MoveFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1214">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1214">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit&#xA;override this.OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit" Usage="uIElement3D.OnAccessKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1215">Die Ereignisdaten für das Tastenkombinationsereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1215">The event data to the access key event.</span></span> <span data-ttu-id="368fc-1216">In den Ereignisdaten wird gemeldet, welche Taste aufgerufen wurde. Zudem wird angegeben, ob das <see cref="T:System.Windows.Input.AccessKeyManager" />-Objekt, das das Senden dieser Ereignisse steuert, den Aufruf dieser Tastenkombination auch an andere Elemente gesendet hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-1216">The event data reports which key was invoked, and indicate whether the <see cref="T:System.Windows.Input.AccessKeyManager" /> object that controls the sending of these events also sent this access key invocation to other elements.</span></span></param>
        <summary><span data-ttu-id="368fc-1217">Stellt die Klassenbehandlung für eine Situation bereit, in der eine Tastenkombination mit Bedeutung für dieses Element aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1217">Provides class handling for when an access key that is meaningful for this element is invoked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1218">Es gibt kein tatsächliches AccessKey-Ereignis in der <xref:System.Windows.UIElement3D>-Klasse oder an einem anderen Ort, für das Sie Handler anordnen oder anfügen können.</span><span class="sxs-lookup"><span data-stu-id="368fc-1218">There is no actual AccessKey event in the <xref:System.Windows.UIElement3D> class, or elsewhere, which you can raise or attach handlers for.</span></span> <span data-ttu-id="368fc-1219">Stattdessen stammt das Ereignis über eine dedizierte Manager-Klasse, <xref:System.Windows.Input.AccessKeyManager>, die alle Eingaben nach verarbeitet, um nach Zugriffs Schlüsseln zu suchen, die für das gesamte Eingabe Modell anwendbar sind.</span><span class="sxs-lookup"><span data-stu-id="368fc-1219">Instead, the event is originated via a dedicated manager class, <xref:System.Windows.Input.AccessKeyManager>, which post-processes all input to search for access keys that are applicable to the entire input model.</span></span>  
  
 <span data-ttu-id="368fc-1220"><xref:System.Windows.UIElement3D.OnAccessKey%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1220"><xref:System.Windows.UIElement3D.OnAccessKey%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1221">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1221">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="368fc-1222">Die Standard Implementierung dieser Methode in <see cref="T:System.Windows.UIElement3D" /> legt den Tastaturfokus auf dieses Element fest (durch Aufrufen von <see cref="M:System.Windows.UIElement3D.Focus" />).</span><span class="sxs-lookup"><span data-stu-id="368fc-1222">The default implementation of this method in <see cref="T:System.Windows.UIElement3D" /> sets keyboard focus to this element (by calling <see cref="M:System.Windows.UIElement3D.Focus" />).</span></span> <span data-ttu-id="368fc-1223">Implementierungen sollten dieses Verhalten fortsetzen, wenn Sie für den Einsatz geeignet sind, da es sich um ein erwartetes Verhalten für Barrierefreiheits Szenarien handelt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1223">Implementations should perpetuate this behavior if they are focusable, because it is an expected behavior for accessibility scenarios.</span></span> <span data-ttu-id="368fc-1224">Beachten Sie, dass die Basis Implementierung nichts mit den bestandenen Ereignisdaten ausführt und kein weiteres Ereignis auslöst. der Fokus wird lediglich festgelegt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1224">Note that the base implementation does nothing with the passed event data and raises no further event; it just sets the focus.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer&#xA;override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="uIElement3D.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="368fc-1225">Gibt klassenspezifische <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />-Implementierungen für die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]-Infrastruktur zurück.</span><span class="sxs-lookup"><span data-stu-id="368fc-1225">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns><span data-ttu-id="368fc-1226">Die typspezifische <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1226">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1227"><xref:System.Windows.UIElement3D.OnCreateAutomationPeer%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1227"><xref:System.Windows.UIElement3D.OnCreateAutomationPeer%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1228">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1228">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="368fc-1229">Bei der Implementierung dieser Methode wird in der Regel der Konstruktor einer bestimmten <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> Implementierung aufgerufen und als Rückgabewert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="368fc-1229">The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.</span></span>  
  
<span data-ttu-id="368fc-1230">Alle <see cref="T:System.Windows.UIElement3D" /> abgeleiteten Klassen sollten diese Methode implementieren, um Ihre eigenen spezifischen <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> Implementierungen für die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Infrastruktur bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1230">All <see cref="T:System.Windows.UIElement3D" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span> <span data-ttu-id="368fc-1231">Ausführliche Informationen zur Implementierung dieses Musters finden Sie unter <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-1231">For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1232">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1232">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1233">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragEnter" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1233">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1234">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1234">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1235">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1235">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1236">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1236">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1237">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1237">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1238">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1238">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1239">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1239">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1240">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1240">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1241">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1241">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1242">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1242">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1243">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1243">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1244"><xref:System.Windows.UIElement3D.OnDragEnter%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1244"><xref:System.Windows.UIElement3D.OnDragEnter%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1245">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1245">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1246">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1246">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1247">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragLeave" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1247">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1248">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1248">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1249">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1249">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1250">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1250">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1251">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1251">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1252">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1252">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1253">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1253">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1254">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1254">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1255">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1255">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1256">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1256">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1257">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1257">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1258"><xref:System.Windows.UIElement3D.OnDragLeave%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1258"><xref:System.Windows.UIElement3D.OnDragLeave%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1259">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1259">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1260">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1260">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1261">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragOver" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1261">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1262">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1262">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1263">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1263">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1264">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1264">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1265">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1265">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1266">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1266">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1267">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1267">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1268">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1268">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1269">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1269">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1270">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1270">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1271">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1271">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1272"><xref:System.Windows.UIElement3D.OnDragOver%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1272"><xref:System.Windows.UIElement3D.OnDragOver%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1273">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1273">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1274">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1274">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1275">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.Drop" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1275">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.Drop" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1276">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1276">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1277">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1277">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1278">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1278">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1279">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1279">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1280">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1280">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1281">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1281">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1282">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1282">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1283">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1283">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1284">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1284">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1285">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1285">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1286"><xref:System.Windows.UIElement3D.OnDrop%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1286"><xref:System.Windows.UIElement3D.OnDrop%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1287">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1287">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement3D.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1288">Das <see cref="T:System.Windows.GiveFeedbackEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1288">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1289">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.GiveFeedback" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1289">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1290">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1290">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1291">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1291">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1292">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1292">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1293">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1293">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1294">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1294">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1295">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1295">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1296">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1296">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1297">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1297">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1298">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1298">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1299">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1299">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1300"><xref:System.Windows.UIElement3D.OnGiveFeedback%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1300"><xref:System.Windows.UIElement3D.OnGiveFeedback%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1301">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1301">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement3D.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1302">Ein <see cref="T:System.Windows.RoutedEventArgs" />, das Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1302">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="368fc-1303">Diese Ereignisdaten müssen den Bezeichner für das <see cref="E:System.Windows.UIElement3D.GotFocus" />-Ereignis enthalten.</span><span class="sxs-lookup"><span data-stu-id="368fc-1303">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement3D.GotFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="368fc-1304">Löst das <see cref="E:System.Windows.UIElement3D.GotFocus" />-Routingereignis mithilfe der bereitgestellten Ereignisdaten aus.</span><span class="sxs-lookup"><span data-stu-id="368fc-1304">Raises the <see cref="E:System.Windows.UIElement3D.GotFocus" /> routed event by using the event data provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1305">Diese Methode, obwohl virtuell, verfügt über eine Standard Implementierung, die das-Ereignis auslöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-1305">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="368fc-1306">Diese on \*-Methoden Implementierung dient dazu, das-Ereignis zu erhöhen, und dieselbe Methoden Implementierung wird intern aufgerufen, um das-Ereignis zu erhöhen, wenn sich der <xref:System.Windows.UIElement3D.IsFocused%2A>-Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="368fc-1306">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement3D.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="368fc-1307">Die <xref:System.Windows.UIElement3D.OnGotFocus%2A>-Implementierung unterscheidet sich von anderen [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] bei \*-Implementierungen, die nur eine bequeme Möglichkeit zum Hinzufügen einer Klassen Behandlung für dieses Ereignis bieten.</span><span class="sxs-lookup"><span data-stu-id="368fc-1307">The <xref:System.Windows.UIElement3D.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 <span data-ttu-id="368fc-1308"><xref:System.Windows.UIElement3D.OnGotFocus%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1308"><xref:System.Windows.UIElement3D.OnGotFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1309">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1309">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="368fc-1310">Wenn Sie nicht über eine absichtliche und ungewöhnliche Notwendigkeit verfügen, die Fokus Ereignisse nicht zu erhöhen, stellen Sie sicher, dass die Implementierung die Basis Implementierung aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1310">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="368fc-1311">Andernfalls wird das <see cref="E:System.Windows.UIElement3D.GotFocus" />-Ereignis nicht bei normalen Benutzer Vorgängen ausgelöst, bei denen normalerweise der Fokus auf dieses Element festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1311">Otherwise, the <see cref="E:System.Windows.UIElement3D.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="368fc-1312">Wenn Sie nicht beabsichtigen, das Element zu verwenden, können Sie verhindern, dass das Element in den Fokus verwendet wird, indem Sie <see cref="P:System.Windows.UIElement3D.Focusable" /> auf <see langword="false" />festlegen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1312">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement3D.Focusable" /> to <see langword="false" />.</span></span></para></block>
        <altmember cref="P:System.Windows.UIElement3D.Focusable" />
        <altmember cref="E:System.Windows.UIElement3D.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement3D.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1313">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1313">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1314">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1314">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1315">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1315">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1316">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1316">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1317">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1317">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1318">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1318">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1319">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1319">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1320">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1320">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1321">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1321">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1322">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1322">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1323">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1323">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1324">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1324">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1325"><xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1325"><xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1326">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1326">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnGotMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1327">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1327">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1328">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1328">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1329">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1329">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1330">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1330">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1331">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1331">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1332">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1332">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1333">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1333">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1334">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1334">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1335">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1335">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1336">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1336">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1337">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1337">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1338">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1338">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1339"><xref:System.Windows.UIElement3D.OnGotMouseCapture%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1339"><xref:System.Windows.UIElement3D.OnGotMouseCapture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1340">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1340">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnGotStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1341">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1341">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1342">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1342">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1343">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1343">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1344">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1344">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1345">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1345">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1346">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1346">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1347">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1347">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1348">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1348">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1349">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1349">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1350">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1350">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1351">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1351">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1352">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1352">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1353"><xref:System.Windows.UIElement3D.OnGotStylusCapture%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1353"><xref:System.Windows.UIElement3D.OnGotStylusCapture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1354">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1354">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnGotTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1355">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1355">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1356">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.GotTouchCapture" />-Routingereignis bereit, das eintritt, wenn eine Berührung für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1356">Provides class handling for the <see cref="E:System.Windows.UIElement3D.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1357">Die <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A>-Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1357">The <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="368fc-1358">Überschreiben Sie <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> in einer abgeleiteten Klasse, um das <xref:System.Windows.UIElement3D.GotTouchCapture> Ereignis zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="368fc-1358">Override <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.GotTouchCapture> event.</span></span> <span data-ttu-id="368fc-1359">Stellen Sie sicher, dass die <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A>-Methode der Basisklasse aufgerufen wird, damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1359">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsKeyboardFocusedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1360">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1360">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1361">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.IsKeyboardFocusedChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1361">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.IsKeyboardFocusedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="368fc-1362">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1362">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1363">Diese virtuelle Methode wird aufgerufen, wenn sich der Wert der <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A>-Abhängigkeits Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="368fc-1363">This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="368fc-1364">Die virtuelle-Methode wird zuerst aufgerufen und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="368fc-1364">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="368fc-1365">Anschließend wird das <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>-Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-1365">Then the <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="368fc-1366">Beachten Sie, dass das <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>-Ereignis kein Routing Ereignis ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-1366">Notice that the  <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="368fc-1367">Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1367">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="368fc-1368">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1368">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1369">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1369">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="368fc-1370">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1370">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="368fc-1371"><xref:System.Windows.UIElement3D.OnIsKeyboardFocusedChanged%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1371"><xref:System.Windows.UIElement3D.OnIsKeyboardFocusedChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1372">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1372">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1373">Ein <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1373">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1374">Wird aufgerufen, kurz bevor das <see cref="E:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged" />-Ereignis von diesem Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1374">Invoked just before the <see cref="E:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span></span> <span data-ttu-id="368fc-1375">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1375">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1376">Diese virtuelle Methode wird aufgerufen, wenn der Wert der <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A>-Abhängigkeits Eigenschaft ihren Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="368fc-1376">This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="368fc-1377">Die virtuelle-Methode wird zuerst aufgerufen und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="368fc-1377">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="368fc-1378">Anschließend wird das <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>-Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-1378">Then the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="368fc-1379">Beachten Sie, dass das <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>-Ereignis kein Routing Ereignis ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-1379">Notice that the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="368fc-1380">Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1380">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="368fc-1381">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1381">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1382">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1382">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="368fc-1383">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1383">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="368fc-1384"><xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1384"><xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1385">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1385">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1386">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1386">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1387">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.IsMouseCapturedChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1387">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.IsMouseCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="368fc-1388">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1388">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1389">Diese virtuelle Methode wird aufgerufen, wenn der Wert der <xref:System.Windows.UIElement3D.IsMouseCaptured%2A>-Abhängigkeits Eigenschaft ihren Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="368fc-1389">This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="368fc-1390">Die virtuelle-Methode wird zuerst aufgerufen und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="368fc-1390">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="368fc-1391">Anschließend wird das <xref:System.Windows.UIElement3D.IsMouseCapturedChanged>-Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-1391">Then the <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="368fc-1392">Beachten Sie, dass das <xref:System.Windows.UIElement3D.IsMouseCapturedChanged>-Ereignis kein Routing Ereignis ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-1392">Notice that the <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> event is not a routed event.</span></span> <span data-ttu-id="368fc-1393">Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1393">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="368fc-1394">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1394">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1395">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1395">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="368fc-1396">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1396">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="368fc-1397"><xref:System.Windows.UIElement3D.OnIsMouseCapturedChanged%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1397"><xref:System.Windows.UIElement3D.OnIsMouseCapturedChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1398">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1398">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsMouseCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1399">Ein <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1399">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1400">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1400">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="368fc-1401">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1401">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1402"><xref:System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1402"><xref:System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1403">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1403">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="368fc-1404">Diese virtuelle Methode wird aufgerufen, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" />-Abhängigkeits Eigenschaft ihren Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="368fc-1404">This virtual method is called when the value of the <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" /> dependency property changes its value.</span></span> <span data-ttu-id="368fc-1405">Die virtuelle-Methode wird zuerst aufgerufen und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="368fc-1405">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="368fc-1406">Anschließend wird das <see cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" />-Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-1406">Then the <see cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span></span> <span data-ttu-id="368fc-1407">Beachten Sie, dass das Ereignis kein Routing Ereignis ist. Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1407">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span></span>  
  
<span data-ttu-id="368fc-1408">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1408">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1409">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1409">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="368fc-1410">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1410">You may call base either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsMouseDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1411">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1411">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1412">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.IsMouseDirectlyOverChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1412">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.IsMouseDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="368fc-1413">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1413">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1414">Diese virtuelle Methode wird aufgerufen, wenn der Wert der <xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A>-Abhängigkeits Eigenschaft ihren Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="368fc-1414">This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="368fc-1415">Die virtuelle-Methode wird zuerst aufgerufen und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="368fc-1415">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="368fc-1416">Anschließend wird das <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>-Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-1416">Then the <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="368fc-1417">Beachten Sie, dass das <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>-Ereignis kein Routing Ereignis ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-1417">Notice that the <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="368fc-1418">Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1418">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="368fc-1419">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1419">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1420">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1420">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="368fc-1421">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1421">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="368fc-1422"><xref:System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1422"><xref:System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1423">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1423">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsStylusCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1424">Ein <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1424">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1425">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.IsStylusCapturedChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1425">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.IsStylusCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="368fc-1426">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1426">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1427">Diese virtuelle Methode wird aufgerufen, wenn der Wert der <xref:System.Windows.UIElement3D.IsStylusCaptured%2A>-Abhängigkeits Eigenschaft ihren Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="368fc-1427">This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="368fc-1428">Die virtuelle-Methode wird zuerst aufgerufen und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="368fc-1428">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="368fc-1429">Anschließend wird das <xref:System.Windows.UIElement3D.IsStylusCapturedChanged>-Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-1429">Then the <xref:System.Windows.UIElement3D.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="368fc-1430">Beachten Sie, dass das Ereignis kein Routing Ereignis ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-1430">Notice that the event is not a routed event.</span></span> <span data-ttu-id="368fc-1431">Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1431">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="368fc-1432">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1432">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1433">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1433">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="368fc-1434">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1434">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="368fc-1435"><xref:System.Windows.UIElement3D.OnIsStylusCapturedChanged%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1435"><xref:System.Windows.UIElement3D.OnIsStylusCapturedChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1436">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1436">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsStylusCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1437">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1437">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1438">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.IsStylusCaptureWithinChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1438">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.IsStylusCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="368fc-1439">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1439">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1440">Diese virtuelle Methode wird aufgerufen, wenn der Wert der <xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A>-Abhängigkeits Eigenschaft ihren Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="368fc-1440">This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="368fc-1441">Die virtuelle-Methode wird zuerst aufgerufen und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="368fc-1441">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="368fc-1442">Anschließend wird das <xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged>-Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-1442">Then the <xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="368fc-1443">Beachten Sie, dass das Ereignis kein Routing Ereignis ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-1443">Notice that the event is not a routed event.</span></span> <span data-ttu-id="368fc-1444">Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1444">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="368fc-1445">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1445">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1446">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1446">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="368fc-1447">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1447">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="368fc-1448"><xref:System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1448"><xref:System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1449">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1449">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsStylusDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1450">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1450">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1451">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.IsStylusDirectlyOverChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1451">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.IsStylusDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="368fc-1452">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1452">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1453">Diese virtuelle Methode wird aufgerufen, wenn der Wert der <xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A>-Abhängigkeits Eigenschaft ihren Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="368fc-1453">This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="368fc-1454">Die virtuelle-Methode wird zuerst aufgerufen und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="368fc-1454">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="368fc-1455">Anschließend wird das <xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged>-Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-1455">Then the <xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="368fc-1456">Beachten Sie, dass das Ereignis kein Routing Ereignis ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-1456">Notice that the event is not a routed event.</span></span> <span data-ttu-id="368fc-1457">Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1457">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="368fc-1458">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1458">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1459">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1459">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="368fc-1460">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1460">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="368fc-1461"><xref:System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1461"><xref:System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1462">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1462">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement3D.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1463">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1463">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1464">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.KeyDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1464">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1465">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1465">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1466">Keystrokes werden von einem dedizierten Eingabe-Manager behandelt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1466">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="368fc-1467">Andere Programmierfunktionen, die auf Tastatureingaben basieren (z. b. Eingabe-und Befehls Bindungen), können den Tastatur Schlag verarbeiten, bevor er als allgemeine Tastatureingaben verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1467">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="368fc-1468">Wenn diese Eingabe System Features das Ereignis als behandelt markieren, wird <xref:System.Windows.UIElement3D.OnKeyDown%2A> nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1468">If these input system features mark the event as handled, then <xref:System.Windows.UIElement3D.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1469">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1469">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1470">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1470">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1471">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1471">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1472">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1472">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1473">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1473">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1474">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1474">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1475">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1475">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1476">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1476">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1477">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1477">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1478"><xref:System.Windows.UIElement3D.OnKeyDown%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1478"><xref:System.Windows.UIElement3D.OnKeyDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1479">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1479">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement3D.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1480">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1480">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1481">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.KeyUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1481">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1482">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1482">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1483">Keystrokes werden von einem dedizierten Eingabe-Manager behandelt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1483">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="368fc-1484">Andere Programmierfunktionen, die auf Tastatureingaben basieren (z. b. Eingabe-und Befehls Bindungen), können den Tastatur Schlag verarbeiten, bevor er als allgemeine Tastatureingaben verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1484">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="368fc-1485">Wenn diese Eingabe System Features das Ereignis als behandelt markieren, wird <xref:System.Windows.UIElement3D.OnKeyUp%2A> nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1485">If these input system features mark the event as handled, then <xref:System.Windows.UIElement3D.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1486">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1486">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1487">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1487">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1488">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1488">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1489">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1489">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1490">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1490">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1491">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1491">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1492">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1492">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1493">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1493">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1494">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1494">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1495"><xref:System.Windows.UIElement3D.OnKeyUp%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1495"><xref:System.Windows.UIElement3D.OnKeyUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1496">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1496">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement3D.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1497">Ein <see cref="T:System.Windows.RoutedEventArgs" />, das Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1497">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="368fc-1498">Diese Ereignisdaten müssen den Bezeichner für das <see cref="E:System.Windows.UIElement3D.LostFocus" />-Ereignis enthalten.</span><span class="sxs-lookup"><span data-stu-id="368fc-1498">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement3D.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="368fc-1499">Löst das <see cref="E:System.Windows.UIElement3D.LostFocus" />- Routingereignis mithilfe der bereitgestellten Ereignisdaten aus.</span><span class="sxs-lookup"><span data-stu-id="368fc-1499">Raises the <see cref="E:System.Windows.UIElement3D.LostFocus" /> routed event by using the event data that is provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1500">Diese Methode, obwohl virtuell, verfügt über eine Standard Implementierung, die das-Ereignis auslöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-1500">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="368fc-1501">Diese on \*-Methoden Implementierung dient dazu, das-Ereignis zu erhöhen, und dieselbe Methoden Implementierung wird intern aufgerufen, um das-Ereignis zu erhöhen, wenn sich der <xref:System.Windows.UIElement3D.IsFocused%2A>-Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="368fc-1501">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement3D.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="368fc-1502">Diese Implementierung unterscheidet sich von anderen [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] auf \*-Implementierungen, die nur eine bequeme Möglichkeit zum Hinzufügen einer Klassen Behandlung für dieses Ereignis bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1502">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 <span data-ttu-id="368fc-1503"><xref:System.Windows.UIElement3D.OnLostFocus%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1503"><xref:System.Windows.UIElement3D.OnLostFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1504">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1504">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="368fc-1505">Wenn Sie nicht über eine absichtliche und ungewöhnliche Notwendigkeit verfügen, die Fokus Ereignisse nicht zu erhöhen, stellen Sie sicher, dass die Implementierung die Basis Implementierung aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1505">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="368fc-1506">Andernfalls wird das <see cref="E:System.Windows.UIElement3D.LostFocus" />-Ereignis nicht bei normalen Benutzer Vorgängen ausgelöst, bei denen normalerweise der Fokus auf dieses Element festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1506">Otherwise, the <see cref="E:System.Windows.UIElement3D.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="368fc-1507">Wenn Sie nicht beabsichtigen, das Element zu verwenden, können Sie verhindern, dass das Element in den Fokus verwendet wird, indem Sie <see cref="P:System.Windows.UIElement3D.Focusable" /> auf <see langword="false" />festlegen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1507">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement3D.Focusable" /> to <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement3D.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1508">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />-Objekt, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1508">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1509">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1509">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1510">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1510">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1511">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1511">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1512">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1512">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1513">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1513">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1514">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1514">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1515">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1515">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1516">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1516">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1517">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1517">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1518">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1518">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1519">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1519">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1520"><xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1520"><xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1521">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1521">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1522">Das <see cref="T:System.Windows.Input.MouseEventArgs" />-Objekt, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1522">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1523">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1523">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1524">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1524">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1525">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1525">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1526">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1526">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1527">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1527">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1528">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1528">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1529">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1529">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1530">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1530">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1531">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1531">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1532">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1532">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1533">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1533">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1534"><xref:System.Windows.UIElement3D.OnLostMouseCapture%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1534"><xref:System.Windows.UIElement3D.OnLostMouseCapture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1535">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1535">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnLostStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1536">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Objekt, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1536">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1537">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1537">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1538">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1538">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1539">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1539">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1540">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1540">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1541">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1541">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1542">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1542">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1543">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1543">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1544">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1544">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1545">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1545">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1546">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1546">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1547">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1547">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1548"><xref:System.Windows.UIElement3D.OnLostStylusCapture%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1548"><xref:System.Windows.UIElement3D.OnLostStylusCapture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1549">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1549">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnLostTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1550">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1550">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1551">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.LostTouchCapture" />-Routingereignis bereit, das auftritt, wenn in diesem Element die Fingereingabenerfassung verloren geht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1551">Provides class handling for the <see cref="E:System.Windows.UIElement3D.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1552">Die <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A>-Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1552">The <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="368fc-1553">Überschreiben Sie <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> in einer abgeleiteten Klasse, um das <xref:System.Windows.UIElement3D.LostTouchCapture> Ereignis zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="368fc-1553">Override <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.LostTouchCapture> event.</span></span> <span data-ttu-id="368fc-1554">Stellen Sie sicher, dass die <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A>-Methode der Basisklasse aufgerufen wird, damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1554">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1555">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1555">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="368fc-1556">Diese Ereignisdaten melden Details zur Maustaste, die gedrückt wurde, und zum behandelten Zustand.</span><span class="sxs-lookup"><span data-stu-id="368fc-1556">This event data reports details about the mouse button that was pressed and the handled state.</span></span></param>
        <summary><span data-ttu-id="368fc-1557">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1557">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1558">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1558">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1559">MouseButton-Aktionen werden auch von einem dedizierten Eingabe-Manager behandelt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1559">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="368fc-1560">Andere Programmierfunktionen, die auf MouseButton-Aktionen (z. b. Eingabe-und Befehls Bindungen) basieren, können Handler für die Aktion aufrufen, bevor Sie als allgemeine MouseButton-Aktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1560">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="368fc-1561">Wenn diese Eingabe System Features das <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>-Ereignis als behandelt markieren, wird <xref:System.Windows.UIElement3D.OnMouseDown%2A> nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1561">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement3D.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1562">Wenn Sie diesen Klassen Handler verwenden, um das Ereignis als behandelt zu markieren, haben Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement3D.MouseLeftButtonDown> und <xref:System.Windows.UIElement3D.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1562">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.MouseLeftButtonDown> and <xref:System.Windows.UIElement3D.MouseRightButtonDown>.</span></span> <span data-ttu-id="368fc-1563">Jedes dieser Ereignisse wird möglicherweise für das empfangende Element ausgelöst, wenn <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1563">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="368fc-1564">Wenn Sie dieses Ereignis als behandelt in der Klassen Behandlung markieren, werden subevents weiterhin ausgelöst. Allerdings übergeben Sie den behandelten Zustand in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="368fc-1564">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="368fc-1565">Wenn das Ereignis in der Klassen Behandlung behandelt wird, werden Instanzhandler für die untergeordneten Ereignisse nicht aufgerufen, es sei denn, Sie verwenden explizit <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true`, um Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1565">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="368fc-1566">Klassen Handler werden auch dann nicht aufgerufen, wenn diese Klassen Handler bei der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`registriert wurden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1566">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="368fc-1567">Durch die Behandlung von <xref:System.Windows.UIElement3D.OnMouseDown%2A>wird impliziert, dass die Klassen Behandlung alle möglichen Aktionen bei der MouseButton-Durchführung berücksichtigt hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-1567">By handling <xref:System.Windows.UIElement3D.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="368fc-1568">Dieses Verhalten ist möglicherweise nicht erwünscht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1568">This behavior might be unwanted.</span></span> <span data-ttu-id="368fc-1569">Verwenden Sie daher Vorsicht, wenn Sie diese virtuelle Methode verwenden, um Ereignisse als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1569">Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="368fc-1570">Jedes der Schaltflächen spezifischen direkten Ereignisse verfügt auch über eine Virtual On \*-Methode. Beachten Sie, ob das Überschreiben dieser Schaltflächen spezifischen Klassen Handler besser geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-1570">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="368fc-1571">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1571">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1572">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1572">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1573">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1573">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1574">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1574">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1575">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1575">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1576">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1576">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1577">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1577">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1578">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1578">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1579">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1579">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1580"><xref:System.Windows.UIElement3D.OnMouseDown%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1580"><xref:System.Windows.UIElement3D.OnMouseDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1581">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1581">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1582">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1582">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1583">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Mouse.MouseEnter" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1583">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span></span> <span data-ttu-id="368fc-1584">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1584">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1585">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1585">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1586">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1586">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="368fc-1587">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1587">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="368fc-1588">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1588">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1589">In diesem Fall handelt es sich bei dem entsprechenden Ereignis um ein Routing Ereignis mit einer direkten Routing Strategie.</span><span class="sxs-lookup"><span data-stu-id="368fc-1589">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="368fc-1590">Das Markieren des Ereignisses als behandelt ist immer noch nützlich, um zu verhindern, dass typische Instanzhandler (die `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1590">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="368fc-1591"><xref:System.Windows.UIElement3D.OnMouseEnter%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1591"><xref:System.Windows.UIElement3D.OnMouseEnter%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1592">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1592">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1593">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1593">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1594">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Mouse.MouseLeave" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1594">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span></span> <span data-ttu-id="368fc-1595">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1595">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1596">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1596">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1597">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1597">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="368fc-1598">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1598">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="368fc-1599">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1599">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1600">In diesem Fall handelt es sich bei dem entsprechenden Ereignis um ein Routing Ereignis mit einer direkten Routing Strategie.</span><span class="sxs-lookup"><span data-stu-id="368fc-1600">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="368fc-1601">Das Markieren des Ereignisses als behandelt ist immer noch nützlich, um zu verhindern, dass typische Instanzhandler (die `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1601">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="368fc-1602"><xref:System.Windows.UIElement3D.OnMouseLeave%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1602"><xref:System.Windows.UIElement3D.OnMouseLeave%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1603">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1603">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1604">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1604">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="368fc-1605">Die Ereignisdaten melden, dass die linke Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-1605">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="368fc-1606">Wird aufgerufen, wenn ein nicht behandeltes geroutetes <see cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1606">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" /> routed event is raised on this element.</span></span> <span data-ttu-id="368fc-1607">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1607">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1608">Das <xref:System.Windows.UIElement3D.MouseLeftButtonDown> Ereignis scheint eine bubblingerroute zu reisen, aber es erfolgt indirekt auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="368fc-1608">The <xref:System.Windows.UIElement3D.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="368fc-1609"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Blasen geroutet ist, und jede <xref:System.Windows.UIElement3D> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis <xref:System.Windows.UIElement3D.MouseLeftButtonDown>zu erhöhen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1609"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseLeftButtonDown>.</span></span> <span data-ttu-id="368fc-1610">Obwohl Sie das <xref:System.Windows.UIElement3D.MouseLeftButtonDown> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente auf der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="368fc-1610">Although you can mark the <xref:System.Windows.UIElement3D.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="368fc-1611">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die keine `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1611">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="368fc-1612">Die Standard Implementierung für die Behandlung allgemeiner Mausereignisse in <xref:System.Windows.UIElement3D> lauscht auf <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1612">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="368fc-1613">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1613">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="368fc-1614">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1614">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="368fc-1615">Sie können das Verhalten der Maus Behandlung von <xref:System.Windows.UIElement3D> nicht ändern, indem Sie <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>außer Kraft setzen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1615">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1616">Alternativ können Sie diese Methode überschreiben, um die Ereignis Behandlung für einen bestimmten Maus Zustand zu ändern.</span><span class="sxs-lookup"><span data-stu-id="368fc-1616">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="368fc-1617">Ob Sie die Basis Implementierung aufzurufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="368fc-1617">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="368fc-1618">Wenn Sie die Basis nicht aufrufen, wird die Standardeingabe Behandlung für dieses Maus Ereignis für Vorgänger Klassen deaktiviert, die ebenfalls <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>aufrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1618">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="368fc-1619">Beispielsweise können Sie von <xref:System.Windows.Controls.Button> ableiten und <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> in der abgeleiteten Klasse überschreiben, ohne die Basis Implementierung aufrufen zu müssen. Diese außer Kraft Setzung deaktiviert jedoch das <xref:System.Windows.Controls.Primitives.ButtonBase.Click>-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1619">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="368fc-1620"><xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1620"><xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1621">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1621">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1622">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1622">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="368fc-1623">Die Ereignisdaten melden, dass die linke Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-1623">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="368fc-1624">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1624">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1625">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1625">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1626">Das <xref:System.Windows.UIElement3D.MouseLeftButtonUp> Ereignis scheint eine bubblingerroute zu reisen, aber es erfolgt indirekt auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="368fc-1626">The <xref:System.Windows.UIElement3D.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="368fc-1627"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Blasen geroutet ist, und jede <xref:System.Windows.UIElement3D> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis <xref:System.Windows.UIElement3D.MouseLeftButtonUp>zu erhöhen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1627"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseLeftButtonUp>.</span></span> <span data-ttu-id="368fc-1628">Obwohl Sie das <xref:System.Windows.UIElement3D.MouseLeftButtonUp> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente auf der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="368fc-1628">Although you can mark the <xref:System.Windows.UIElement3D.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="368fc-1629">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die keine `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1629">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="368fc-1630">Die Standard Implementierung für die Behandlung allgemeiner Mausereignisse in <xref:System.Windows.UIElement3D> lauscht auf <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1630">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="368fc-1631">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1631">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="368fc-1632">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1632">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="368fc-1633">Sie können das Verhalten der Maus Behandlung von <xref:System.Windows.UIElement3D> nicht ändern, indem Sie <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A>außer Kraft setzen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1633">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1634"><xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1634"><xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1635">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1635">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1636">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1636">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1637">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1637">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1638">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1638">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1639">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1639">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1640">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1640">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1641">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1641">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1642">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1642">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1643">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1643">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1644">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1644">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1645">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1645">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1646">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1646">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1647">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1647">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1648"><xref:System.Windows.UIElement3D.OnMouseMove%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1648"><xref:System.Windows.UIElement3D.OnMouseMove%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1649">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1649">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1650">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1650">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="368fc-1651">Die Ereignisdaten melden, dass die rechte Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-1651">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="368fc-1652">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.MouseRightButtonDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1652">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1653">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1653">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1654">Das <xref:System.Windows.UIElement3D.MouseRightButtonDown> Ereignis scheint eine bubblingerroute zu reisen, aber es erfolgt indirekt auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="368fc-1654">The <xref:System.Windows.UIElement3D.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="368fc-1655"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Blasen geroutet ist, und jede <xref:System.Windows.UIElement3D> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis <xref:System.Windows.UIElement3D.MouseRightButtonDown>zu erhöhen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1655"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseRightButtonDown>.</span></span> <span data-ttu-id="368fc-1656">Obwohl Sie das <xref:System.Windows.UIElement3D.MouseRightButtonDown> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente auf der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="368fc-1656">Although you can mark the <xref:System.Windows.UIElement3D.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="368fc-1657">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die keine `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1657">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="368fc-1658">Die Standard Implementierung für die Behandlung allgemeiner Mausereignisse in <xref:System.Windows.UIElement3D> lauscht auf <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1658">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="368fc-1659">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1659">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="368fc-1660">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1660">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="368fc-1661">Sie können das Verhalten der Maus Behandlung von <xref:System.Windows.UIElement3D> nicht ändern, indem Sie <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>außer Kraft setzen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1661">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1662">Alternativ können Sie diese Methode überschreiben, um die Ereignis Behandlung für einen bestimmten Maus Zustand zu ändern.</span><span class="sxs-lookup"><span data-stu-id="368fc-1662">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="368fc-1663">Ob Sie die Basis Implementierung aufzurufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="368fc-1663">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="368fc-1664">Wenn Sie die Basis nicht aufrufen, wird die Standardeingabe Behandlung für dieses Maus Ereignis für Vorgänger Klassen deaktiviert, die ebenfalls <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>aufrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1664">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="368fc-1665">Sie können z. b. von <xref:System.Windows.Controls.Control> ableiten und <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> in der abgeleiteten Klasse überschreiben, ohne Base aufrufen zu müssen. Diese außer Kraft Setzung deaktiviert jedoch die Kontextmenü Dienste auf dem Steuerelement, die Teil der <xref:System.Windows.Controls.Control> Standardverhalten sind.</span><span class="sxs-lookup"><span data-stu-id="368fc-1665">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 <span data-ttu-id="368fc-1666"><xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1666"><xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1667">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1667">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1668">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1668">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="368fc-1669">Die Ereignisdaten melden, dass die rechte Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-1669">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="368fc-1670">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.MouseRightButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1670">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1671">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1671">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1672">Das <xref:System.Windows.UIElement3D.MouseRightButtonUp> Ereignis scheint eine bubblingerroute zu reisen, aber es erfolgt indirekt auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="368fc-1672">The <xref:System.Windows.UIElement3D.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="368fc-1673"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Blasen geroutet ist, und jede <xref:System.Windows.UIElement3D> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis <xref:System.Windows.UIElement3D.MouseRightButtonUp>zu erhöhen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1673"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseRightButtonUp>.</span></span> <span data-ttu-id="368fc-1674">Obwohl Sie das <xref:System.Windows.UIElement3D.MouseRightButtonUp> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente auf der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="368fc-1674">Although you can mark the <xref:System.Windows.UIElement3D.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="368fc-1675">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die keine `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1675">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="368fc-1676">Die Standard Implementierung für die Behandlung allgemeiner Mausereignisse in <xref:System.Windows.UIElement3D> lauscht auf <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1676">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="368fc-1677">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1677">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="368fc-1678">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1678">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="368fc-1679">Sie können das Verhalten der Maus Behandlung von <xref:System.Windows.UIElement3D> nicht ändern, indem Sie <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A>außer Kraft setzen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1679">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1680"><xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1680"><xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1681">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1681">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1682">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1682">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="368fc-1683">Die Ereignisdaten melden, dass die Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-1683">The event data reports that the mouse button was released.</span></span></param>
        <summary><span data-ttu-id="368fc-1684">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.Input.Mouse.MouseUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1684">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1685">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1685">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1686">MouseButton-Aktionen werden auch von einem dedizierten Eingabe-Manager behandelt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1686">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="368fc-1687">Andere Programmierfunktionen, die auf MouseButton-Aktionen (z. b. Eingabe-und Befehls Bindungen) basieren, können Handler für die Aktion aufrufen, bevor Sie als allgemeine MouseButton-Aktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1687">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="368fc-1688">Wenn diese Eingabe System Features das <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>-Ereignis als behandelt markieren, wird <xref:System.Windows.UIElement3D.OnMouseUp%2A> nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1688">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement3D.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1689">Wenn Sie diesen Klassen Handler verwenden, um das Ereignis als behandelt zu markieren, haben Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement3D.MouseLeftButtonUp> und <xref:System.Windows.UIElement3D.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1689">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.MouseLeftButtonUp> and <xref:System.Windows.UIElement3D.MouseRightButtonUp>.</span></span> <span data-ttu-id="368fc-1690">Beide Ereignisse werden möglicherweise für das empfangende Element ausgelöst, wenn <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1690">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="368fc-1691">Wenn Sie dieses Ereignis als behandelt in der Klassen Behandlung markieren, werden subevents weiterhin ausgelöst. Allerdings übergeben Sie den behandelten Zustand in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="368fc-1691">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="368fc-1692">Wenn das Ereignis in der Klassen Behandlung behandelt wird, werden Instanzhandler für die untergeordneten Ereignisse nicht aufgerufen, es sei denn, Sie verwenden explizit <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true`, um Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1692">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="368fc-1693">Klassen Handler werden auch dann nicht aufgerufen, wenn diese Klassen Handler bei der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`registriert wurden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1693">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="368fc-1694">Durch die Behandlung von <xref:System.Windows.UIElement3D.OnMouseUp%2A>wird impliziert, dass die Klassen Behandlung alle möglichen Aktionen für die Maustaste auf das Mausrad berücksichtigt hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-1694">By handling <xref:System.Windows.UIElement3D.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="368fc-1695">Dieses Verhalten ist möglicherweise nicht erwünscht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1695">This behavior might be unwanted.</span></span> <span data-ttu-id="368fc-1696">Verwenden Sie daher Vorsicht, wenn Sie diese virtuelle Methode verwenden, um Ereignisse als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1696">Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="368fc-1697">Jedes der Schaltflächen spezifischen direkten Ereignisse verfügt auch über eine Virtual On \*-Methode. Beachten Sie, ob das Überschreiben dieser Schaltflächen spezifischen Klassen Handler besser geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-1697">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="368fc-1698">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1698">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1699">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1699">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1700">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1700">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1701">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1701">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1702">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1702">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1703">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1703">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1704">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1704">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1705">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1705">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1706">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1706">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1707"><xref:System.Windows.UIElement3D.OnMouseUp%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1707"><xref:System.Windows.UIElement3D.OnMouseUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1708">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1708">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement3D.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1709">Das <see cref="T:System.Windows.Input.MouseWheelEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1709">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1710">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseWheel" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1710">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1711">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1711">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1712">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1712">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1713">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1713">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1714">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1714">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1715">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1715">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1716">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1716">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1717">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1717">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1718">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1718">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1719">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1719">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1720">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1720">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1721"><xref:System.Windows.UIElement3D.OnMouseWheel%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1721"><xref:System.Windows.UIElement3D.OnMouseWheel%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1722">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1722">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1723">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1723">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1724">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDragEnter" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1724">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1725">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1725">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1726">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1726">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1727">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1727">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1728">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1728">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1729">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1729">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1730">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1730">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1731">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1731">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1732">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1732">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1733">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1733">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1734">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1734">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-1735">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1735">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1736"><xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1736"><xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1737">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1737">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1738">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1738">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1739">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDragLeave" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1739">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1740">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1740">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1741">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1741">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1742">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1742">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1743">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1743">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1744">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1744">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1745">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1745">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1746">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1746">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1747">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1747">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1748">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1748">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1749">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1749">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-1750">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1750">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1751"><xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1751"><xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1752">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1752">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1753">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1753">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1754">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDragOver" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1754">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1755">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1755">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1756">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1756">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1757">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1757">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1758">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1758">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1759">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1759">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1760">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1760">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1761">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1761">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1762">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1762">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1763">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1763">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1764">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1764">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-1765">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1765">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1766"><xref:System.Windows.UIElement3D.OnPreviewDragOver%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1766"><xref:System.Windows.UIElement3D.OnPreviewDragOver%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1767">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1767">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1768">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1768">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1769">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDrop" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1769">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1770">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1770">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1771">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1771">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1772">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1772">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1773">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1773">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1774">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1774">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1775">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1775">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1776">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1776">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1777">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1777">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1778">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1778">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1779">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1779">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-1780">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1780">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1781"><xref:System.Windows.UIElement3D.OnPreviewDrop%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1781"><xref:System.Windows.UIElement3D.OnPreviewDrop%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1782">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1782">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1783">Das <see cref="T:System.Windows.GiveFeedbackEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1783">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1784">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1784">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1785">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1785">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1786">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1786">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1787">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1787">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1788">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1788">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1789">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1789">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1790">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1790">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1791">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1791">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1792">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1792">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1793">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1793">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1794">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1794">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-1795">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1795">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1796"><xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1796"><xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1797">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1797">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1798">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1798">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1799">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1799">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1800">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1800">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1801">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1801">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1802">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1802">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1803">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1803">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1804">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1804">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1805">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1805">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1806">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1806">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1807">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1807">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1808">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1808">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1809">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1809">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-1810">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1810">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1811"><xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1811"><xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1812">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1812">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1813">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1813">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1814">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1814">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1815">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1815">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1816">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1816">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1817">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1817">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1818">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1818">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1819">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1819">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1820">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1820">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1821">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1821">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1822">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1822">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1823">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1823">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1824">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1824">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-1825">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1825">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1826"><xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1826"><xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1827">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1827">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1828">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1828">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1829">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1829">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1830">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1830">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1831">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1831">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1832">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1832">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1833">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1833">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1834">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1834">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1835">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1835">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1836">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1836">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1837">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1837">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1838">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1838">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1839">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1839">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-1840">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1840">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1841"><xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1841"><xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1842">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1842">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1843">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1843">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1844">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1844">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1845">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1845">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1846">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1846">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1847">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1847">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1848">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1848">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1849">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1849">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1850">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1850">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1851">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1851">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1852">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1852">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1853">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1853">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1854">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1854">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-1855">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1855">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1856"><xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1856"><xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1857">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1857">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1858">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1858">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="368fc-1859">Die Ereignisdaten melden, dass eine oder mehrere Maustasten gedrückt wurden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1859">The event data reports that one or more mouse buttons were pressed.</span></span></param>
        <summary><span data-ttu-id="368fc-1860">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1860">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1861">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1861">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1862">MouseButton-Aktionen werden auch von einem dedizierten Eingabe-Manager behandelt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1862">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="368fc-1863">Andere Programmierfunktionen, die auf MouseButton-Aktionen (z. b. Eingabe-und Befehls Bindungen) basieren, können Handler für die Aktion aufrufen, bevor Sie als allgemeine MouseButton-Aktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1863">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="368fc-1864">Wenn diese Eingabe System Features das <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>-Ereignis als behandelt markieren, wird <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1864">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1865">Wenn Sie diesen Klassen Handler verwenden, um das Ereignis als behandelt zu markieren, haben Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> und <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1865">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="368fc-1866">Jedes dieser Ereignisse wird möglicherweise für das empfangende Element ausgelöst, wenn <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1866">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="368fc-1867">Wenn Sie dieses Ereignis als behandelt in der Klassen Behandlung markieren, werden subevents weiterhin ausgelöst. Allerdings übergeben Sie den behandelten Zustand in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="368fc-1867">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="368fc-1868">Wenn das Ereignis in der Klassen Behandlung behandelt wird, werden Instanzhandler für die untergeordneten Ereignisse nicht aufgerufen, es sei denn, Sie verwenden explizit <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true`, um Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1868">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="368fc-1869">Klassen Handler werden auch dann nicht aufgerufen, wenn diese Klassen Handler bei der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`registriert wurden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1869">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="368fc-1870">Durch die Behandlung von <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A>wird impliziert, dass die Klassen Behandlung alle möglichen Aktionen bei der MouseButton-Durchführung berücksichtigt hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-1870">By handling <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="368fc-1871">Dieses Verhalten ist möglicherweise nicht erwünscht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1871">This behavior might be unwanted.</span></span> <span data-ttu-id="368fc-1872">Verwenden Sie daher Vorsicht, wenn Sie diese virtuelle Methode verwenden, um Ereignisse als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1872">Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="368fc-1873">Jedes der Schaltflächen spezifischen direkten Ereignisse verfügt auch über eine Virtual On \*-Methode. Beachten Sie, ob das Überschreiben dieser Schaltflächen spezifischen Klassen Handler besser geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-1873">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="368fc-1874">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1874">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1875">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1875">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1876">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1876">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1877">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1877">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1878">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1878">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1879">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1879">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1880">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1880">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1881">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1881">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1882">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1882">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-1883">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1883">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1884"><xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1884"><xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1885">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1885">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1886">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1886">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="368fc-1887">Die Ereignisdaten melden, dass die linke Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-1887">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="368fc-1888">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1888">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1889">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1889">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1890">Das <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>-Ereignis scheint eine tunnelingroute zu übertragen, wird jedoch auf indirekte Weise durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1890">The <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="368fc-1891"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Tunnel geroutet ist, und jede <xref:System.Windows.UIElement3D> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>zu erhöhen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1891"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="368fc-1892">Obwohl Sie das <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente auf der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="368fc-1892">Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="368fc-1893">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die keine `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1893">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="368fc-1894">Die Standard Implementierung für die Behandlung allgemeiner Mausereignisse in <xref:System.Windows.UIElement3D> lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1894">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="368fc-1895">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1895">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="368fc-1896">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1896">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="368fc-1897">Sie können das Verhalten der Maus Behandlung von <xref:System.Windows.UIElement3D> nicht ändern, indem Sie <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>außer Kraft setzen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1897">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1898">Alternativ können Sie diese Methode überschreiben, um die Ereignis Behandlung für einen bestimmten Maus Zustand zu ändern.</span><span class="sxs-lookup"><span data-stu-id="368fc-1898">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="368fc-1899">Ob Sie die Basis Implementierung aufzurufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="368fc-1899">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="368fc-1900">Wenn Sie die Basis nicht aufrufen, wird die Standardeingabe Behandlung für dieses Maus Ereignis für Vorgänger Klassen deaktiviert, die ebenfalls <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>aufrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1900">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="368fc-1901">Beispielsweise können Sie von <xref:System.Windows.Controls.Button> ableiten und <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> in der abgeleiteten Klasse überschreiben, ohne die Basis Implementierung aufrufen zu müssen. Diese außer Kraft Setzung deaktiviert jedoch das <xref:System.Windows.Controls.Primitives.ButtonBase.Click>-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1901">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="368fc-1902"><xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1902"><xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1903">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1903">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1904">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1904">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="368fc-1905">Die Ereignisdaten melden, dass die linke Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-1905">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="368fc-1906">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1906">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1907">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1907">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1908">Das <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>-Ereignis scheint eine tunnelingroute zu übertragen, wird jedoch auf indirekte Weise durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1908">The <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="368fc-1909"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Tunnel geroutet ist, und jede <xref:System.Windows.UIElement3D> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>zu erhöhen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1909"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="368fc-1910">Obwohl Sie das <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente auf der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="368fc-1910">Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="368fc-1911">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die keine `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1911">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="368fc-1912">Die Standard Implementierung für die Behandlung allgemeiner Mausereignisse in <xref:System.Windows.UIElement3D> lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1912">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="368fc-1913">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1913">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="368fc-1914">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1914">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="368fc-1915">Sie können das Verhalten der Maus Behandlung von <xref:System.Windows.UIElement3D> nicht ändern, indem Sie <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A>außer Kraft setzen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1915">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1916"><xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1916"><xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1917">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1917">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1918">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1918">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1919">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1919">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1920">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1920">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1921">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1921">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1922">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1922">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1923">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1923">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1924">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1924">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1925">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1925">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1926">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1926">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1927">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1927">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1928">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1928">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1929">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1929">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-1930">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1930">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1931"><xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1931"><xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1932">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1932">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1933">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1933">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="368fc-1934">Die Ereignisdaten melden, dass die rechte Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-1934">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="368fc-1935">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1935">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1936">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1936">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1937">Das <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>-Ereignis scheint eine tunnelingroute zu übertragen, wird jedoch auf indirekte Weise durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1937">The <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="368fc-1938"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Tunnel geroutet ist, und jede <xref:System.Windows.UIElement3D> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis <xref:System.Windows.UIElement3D.MouseRightButtonDown>zu erhöhen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1938"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseRightButtonDown>.</span></span> <span data-ttu-id="368fc-1939">Obwohl Sie das <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente auf der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="368fc-1939">Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="368fc-1940">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die keine `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1940">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="368fc-1941">Die Standard Implementierung für die Behandlung allgemeiner Mausereignisse in <xref:System.Windows.UIElement3D> lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1941">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="368fc-1942">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1942">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="368fc-1943">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1943">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="368fc-1944">Sie können das Verhalten der Maus Behandlung von <xref:System.Windows.UIElement3D> nicht ändern, indem Sie <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>außer Kraft setzen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1944">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1945">Alternativ können Sie diese Methode überschreiben, um die Ereignis Behandlung für einen bestimmten Maus Zustand zu ändern.</span><span class="sxs-lookup"><span data-stu-id="368fc-1945">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="368fc-1946">Ob Sie die Basis Implementierung aufzurufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="368fc-1946">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="368fc-1947">Wenn Sie die Basis nicht aufrufen, wird die Standardeingabe Behandlung für dieses Maus Ereignis für Vorgänger Klassen deaktiviert, die ebenfalls <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>aufrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1947">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="368fc-1948">Sie können z. b. von <xref:System.Windows.Controls.Control> ableiten und <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> in der abgeleiteten Klasse überschreiben, ohne Base aufrufen zu müssen. Diese außer Kraft Setzung deaktiviert jedoch die Kontextmenü Dienste auf dem Steuerelement, die Teil der <xref:System.Windows.Controls.Control> Standardverhalten sind.</span><span class="sxs-lookup"><span data-stu-id="368fc-1948">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 <span data-ttu-id="368fc-1949"><xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1949"><xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1950">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1950">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1951">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1951">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="368fc-1952">Die Ereignisdaten melden, dass die rechte Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-1952">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="368fc-1953">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1953">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1954">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1954">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1955">Das <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>-Ereignis scheint eine tunnelingroute zu übertragen, wird jedoch auf indirekte Weise durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1955">The <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="368fc-1956"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Tunnel geroutet ist, und jede <xref:System.Windows.UIElement3D> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>zu erhöhen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1956"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="368fc-1957">Obwohl Sie das <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente auf der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="368fc-1957">Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="368fc-1958">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die keine `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1958">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="368fc-1959">Die Standard Implementierung für die Behandlung allgemeiner Mausereignisse in <xref:System.Windows.UIElement3D> lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1959">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="368fc-1960">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1960">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="368fc-1961">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1961">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="368fc-1962">Sie können das Verhalten der Maus Behandlung von <xref:System.Windows.UIElement3D> nicht ändern, indem Sie <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A>außer Kraft setzen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1962">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 <span data-ttu-id="368fc-1963"><xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1963"><xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1964">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1964">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1965">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1965">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="368fc-1966">Die Ereignisdaten melden, dass eine oder mehrere Maustasten losgelassen wurden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1966">The event data reports that one or more mouse buttons were released.</span></span></param>
        <summary><span data-ttu-id="368fc-1967">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1967">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1968">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1968">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1969">MouseButton-Aktionen werden auch von einem dedizierten Eingabe-Manager behandelt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1969">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="368fc-1970">Andere Programmierfunktionen, die auf MouseButton-Aktionen (z. b. Eingabe-und Befehls Bindungen) basieren, können Handler für die Aktion aufrufen, bevor Sie als allgemeine MouseButton-Aktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1970">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="368fc-1971">Wenn diese Eingabe System Features das <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>-Ereignis als behandelt markieren, wird <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1971">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="368fc-1972">Wenn Sie diesen Klassen Handler verwenden, um das Ereignis als behandelt zu markieren, haben Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> und <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="368fc-1972">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="368fc-1973">Beide Ereignisse werden möglicherweise für das empfangende Element ausgelöst, wenn <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1973">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="368fc-1974">Wenn Sie dieses Ereignis als behandelt in der Klassen Behandlung markieren, werden subevents weiterhin ausgelöst. Allerdings übergeben Sie den behandelten Zustand in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="368fc-1974">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="368fc-1975">Wenn das Ereignis in der Klassen Behandlung behandelt wird, werden Instanzhandler für die untergeordneten Ereignisse nicht aufgerufen, es sei denn, Sie verwenden explizit <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true`, um Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1975">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="368fc-1976">Klassen Handler werden auch dann nicht aufgerufen, wenn diese Klassen Handler bei der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`registriert wurden.</span><span class="sxs-lookup"><span data-stu-id="368fc-1976">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="368fc-1977">Durch die Behandlung von <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A>wird impliziert, dass die Klassen Behandlung alle möglichen Aktionen für die Maustaste auf das Mausrad berücksichtigt hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-1977">By handling <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="368fc-1978">Dieses Verhalten ist möglicherweise nicht erwünscht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1978">This behavior might be unwanted.</span></span> <span data-ttu-id="368fc-1979">Verwenden Sie daher Vorsicht, wenn Sie diese virtuelle Methode verwenden, um Ereignisse als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1979">Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="368fc-1980">Jedes der Schaltflächen spezifischen direkten Ereignisse verfügt auch über eine Virtual On \*-Methode. Beachten Sie, ob das Überschreiben dieser Schaltflächen spezifischen Klassen Handler besser geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-1980">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="368fc-1981">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1981">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1982">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1982">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1983">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1983">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1984">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1984">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1985">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1985">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-1986">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1986">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-1987">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1987">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-1988">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1988">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-1989">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-1989">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-1990"><xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-1990"><xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-1991">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-1991">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-1992">Das <see cref="T:System.Windows.Input.MouseWheelEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-1992">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-1993">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-1993">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-1994">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1994">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-1995">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-1995">This method has no default implementation.</span></span> <span data-ttu-id="368fc-1996">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-1996">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-1997">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-1997">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-1998">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-1998">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-1999">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-1999">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2000">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2000">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2001">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2001">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2002">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2002">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2003">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2003">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-2004">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2004">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-2005"><xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2005"><xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2006">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2006">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2007">Das <see cref="T:System.Windows.QueryContinueDragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2007">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2008">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2008">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2009">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2009">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2010">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2010">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2011">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2011">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2012">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2012">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2013">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2013">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2014">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2014">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2015">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2015">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2016">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2016">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2017">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2017">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2018">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2018">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-2019">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2019">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-2020"><xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2020"><xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2021">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2021">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2022">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2022">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2023">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2023">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2024">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2024">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2025">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2025">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2026">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2026">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2027">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2027">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2028">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2028">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2029">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2029">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2030">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2030">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2031">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2031">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2032">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2032">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2033">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2033">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-2034">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2034">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-2035"><xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2035"><xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2036">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2036">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2037">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2037">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2038">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2038">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2039">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2039">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2040">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2040">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2041">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2041">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2042">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2042">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2043">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2043">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2044">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2044">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2045">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2045">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2046">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2046">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2047">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2047">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2048">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2048">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-2049">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2049">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-2050"><xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2050"><xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2051">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2051">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2052">Das <see cref="T:System.Windows.Input.StylusDownEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2052">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2053">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2053">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2054">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2054">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2055">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2055">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2056">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2056">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2057">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2057">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2058">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2058">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2059">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2059">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2060">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2060">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2061">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2061">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2062">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2062">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2063">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2063">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-2064">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2064">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-2065"><xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2065"><xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2066">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2066">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2067">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2067">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2068">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2068">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2069">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2069">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2070">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2070">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2071">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2071">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2072">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2072">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2073">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2073">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2074">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2074">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2075">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2075">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2076">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2076">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2077">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2077">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2078">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2078">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-2079">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2079">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-2080"><xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2080"><xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2081">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2081">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2082">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2082">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2083">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2083">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2084">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2084">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2085">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2085">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2086">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2086">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2087">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2087">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2088">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2088">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2089">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2089">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2090">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2090">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2091">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2091">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2092">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2092">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2093">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2093">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-2094">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2094">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-2095"><xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2095"><xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2096">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2096">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2097">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2097">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2098">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2098">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2099">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2099">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2100">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2100">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2101">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2101">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2102">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2102">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2103">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2103">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2104">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2104">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2105">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2105">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2106">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2106">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2107">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2107">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2108">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2108">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-2109">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2109">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-2110"><xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2110"><xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2111">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2111">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2112">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2112">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2113">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2113">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2114">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2114">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2115">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2115">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2116">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2116">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2117">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2117">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2118">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2118">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2119">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2119">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2120">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2120">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2121">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2121">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2122">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2122">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2123">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2123">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-2124">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2124">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-2125"><xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2125"><xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2126">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2126">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2127">Das <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2127">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2128">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2128">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2129">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2129">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2130">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2130">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2131">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2131">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2132">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2132">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2133">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2133">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2134">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2134">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2135">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2135">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2136">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2136">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2137">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2137">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2138">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2138">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-2139">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2139">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-2140"><xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2140"><xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2141">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2141">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2142">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2142">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2143">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2143">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2144">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2144">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2145">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2145">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2146">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2146">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2147">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2147">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2148">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2148">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2149">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2149">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2150">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2150">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2151">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2151">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2152">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2152">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2153">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2153">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-2154">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2154">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-2155"><xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2155"><xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2156">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2156">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2157">Das <see cref="T:System.Windows.Input.TextCompositionEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2157">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2158">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2158">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2159">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2159">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2160">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2160">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2161">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2161">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2162">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2162">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2163">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2163">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2164">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2164">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2165">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2165">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2166">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2166">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2167">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2167">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2168">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2168">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="368fc-2169">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2169">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="368fc-2170"><xref:System.Windows.UIElement3D.OnPreviewTextInput%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2170"><xref:System.Windows.UIElement3D.OnPreviewTextInput%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2171">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2171">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.UIElement3D.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2172">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2172">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2173">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.PreviewTouchDown" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe in diesem Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2173">Provides class handling for the <see cref="E:System.Windows.UIElement3D.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2174">Die <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A>-Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2174">The <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="368fc-2175">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> in einer abgeleiteten Klasse, um das <xref:System.Windows.UIElement3D.PreviewTouchDown> Ereignis zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="368fc-2175">Override <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchDown> event.</span></span> <span data-ttu-id="368fc-2176">Stellen Sie sicher, dass die <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A>-Methode der Basisklasse aufgerufen wird, damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2176">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2177">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2177">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2178">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.PreviewTouchMove" />-Routingereignis bereit, das auftritt, wenn sich eine Fingereingabe innerhalb dieses Elements bewegt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2178">Provides class handling for the <see cref="E:System.Windows.UIElement3D.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2179">Die <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A>-Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2179">The <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="368fc-2180">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> in einer abgeleiteten Klasse, um das <xref:System.Windows.UIElement3D.PreviewTouchMove> Ereignis zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="368fc-2180">Override <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchMove> event.</span></span> <span data-ttu-id="368fc-2181">Stellen Sie sicher, dass die <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A>-Methode der Basisklasse aufgerufen wird, damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2181">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2182">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2182">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2183">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.PreviewTouchUp" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe innerhalb dieses Elements freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2183">Provides class handling for the <see cref="E:System.Windows.UIElement3D.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2184">Die <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A>-Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2184">The <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="368fc-2185">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> in einer abgeleiteten Klasse, um das <xref:System.Windows.UIElement3D.PreviewTouchUp> Ereignis zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="368fc-2185">Override <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchUp> event.</span></span> <span data-ttu-id="368fc-2186">Stellen Sie sicher, dass die <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A>-Methode der Basisklasse aufgerufen wird, damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2186">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement3D.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2187">Das <see cref="T:System.Windows.QueryContinueDragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2187">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2188">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.QueryContinueDrag" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2188">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2189">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2189">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2190">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2190">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2191">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2191">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2192">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2192">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2193">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2193">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2194">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2194">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2195">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2195">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2196">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2196">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2197">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2197">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2198">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2198">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-2199"><xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2199"><xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2200">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2200">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit&#xA;override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="uIElement3D.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2201">Das <see cref="T:System.Windows.Input.QueryCursorEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2201">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2202">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.QueryCursor" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2202">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2203">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2203">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2204">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2204">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2205">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2205">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2206">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2206">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2207">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2207">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2208">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2208">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2209">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2209">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2210">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2210">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2211">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2211">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2212">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2212">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-2213"><xref:System.Windows.UIElement3D.OnQueryCursor%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2213"><xref:System.Windows.UIElement3D.OnQueryCursor%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2214">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2214">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement3D.OnStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2215">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2215">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2216">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2216">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2217">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2217">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2218">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2218">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2219">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2219">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2220">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2220">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2221">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2221">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2222">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2222">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2223">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2223">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2224">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2224">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2225">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2225">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2226">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2226">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-2227"><xref:System.Windows.UIElement3D.OnStylusButtonDown%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2227"><xref:System.Windows.UIElement3D.OnStylusButtonDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2228">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2228">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement3D.OnStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2229">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2229">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2230">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2230">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2231">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2231">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2232">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2232">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2233">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2233">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2234">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2234">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2235">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2235">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2236">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2236">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2237">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2237">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2238">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2238">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2239">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2239">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2240">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2240">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-2241"><xref:System.Windows.UIElement3D.OnStylusButtonUp%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2241"><xref:System.Windows.UIElement3D.OnStylusButtonUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2242">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2242">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement3D.OnStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2243">Das <see cref="T:System.Windows.Input.StylusDownEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2243">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2244">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2244">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2245">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2245">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2246">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2246">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2247">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2247">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2248">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2248">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2249">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2249">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2250">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2250">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2251">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2251">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2252">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2252">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2253">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2253">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2254">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2254">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-2255"><xref:System.Windows.UIElement3D.OnStylusDown%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2255"><xref:System.Windows.UIElement3D.OnStylusDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2256">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2256">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2257">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2257">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2258">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Stylus.StylusEnter" />-Ereignis von diesem Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2258">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span></span> <span data-ttu-id="368fc-2259">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2259">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2260">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2260">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2261">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2261">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="368fc-2262">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2262">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="368fc-2263">Der Zweck dieser Methode ähnelt [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2263">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2264">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2264">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2265">Das Markieren des Ereignisses als behandelt ist immer noch nützlich, um zu verhindern, dass typische Instanzhandler (die keine `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2265">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="368fc-2266"><xref:System.Windows.UIElement3D.OnStylusEnter%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2266"><xref:System.Windows.UIElement3D.OnStylusEnter%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2267">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2267">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2268">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2268">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2269">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2269">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2270">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2270">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2271">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2271">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2272">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2272">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2273">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2273">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2274">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2274">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2275">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2275">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2276">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2276">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2277">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2277">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2278">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2278">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2279">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2279">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-2280"><xref:System.Windows.UIElement3D.OnStylusInAirMove%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2280"><xref:System.Windows.UIElement3D.OnStylusInAirMove%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2281">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2281">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2282">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2282">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2283">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusInRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2283">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2284">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2284">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2285">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2285">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2286">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2286">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2287">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2287">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2288">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2288">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2289">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2289">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2290">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2290">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2291">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2291">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2292">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2292">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2293">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2293">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-2294"><xref:System.Windows.UIElement3D.OnStylusInRange%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2294"><xref:System.Windows.UIElement3D.OnStylusInRange%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2295">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2295">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2296">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2296">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2297">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Stylus.StylusLeave" />-Ereignis von diesem Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2297">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span></span> <span data-ttu-id="368fc-2298">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2298">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2299">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2299">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2300">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2300">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="368fc-2301">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2301">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="368fc-2302">Der Zweck dieser Methode ähnelt [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2302">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2303">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2303">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2304">Das Markieren des Ereignisses als behandelt ist immer noch nützlich, um zu verhindern, dass typische Instanzhandler (die keine `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2304">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="368fc-2305"><xref:System.Windows.UIElement3D.OnStylusLeave%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2305"><xref:System.Windows.UIElement3D.OnStylusLeave%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2306">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2306">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2307">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2307">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2308">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2308">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2309">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2309">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2310">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2310">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2311">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2311">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2312">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2312">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2313">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2313">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2314">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2314">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2315">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2315">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2316">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2316">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2317">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2317">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2318">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2318">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-2319"><xref:System.Windows.UIElement3D.OnStylusMove%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2319"><xref:System.Windows.UIElement3D.OnStylusMove%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2320">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2320">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2321">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2321">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2322">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2322">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2323">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2323">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2324">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2324">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2325">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2325">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2326">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2326">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2327">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2327">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2328">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2328">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2329">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2329">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2330">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2330">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2331">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2331">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2332">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2332">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-2333"><xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2333"><xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2334">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2334">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement3D.OnStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2335">Das <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2335">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2336">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2336">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2337">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2337">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2338">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2338">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2339">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2339">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2340">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2340">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2341">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2341">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2342">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2342">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2343">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2343">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2344">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2344">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2345">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2345">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2346">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2346">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-2347"><xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2347"><xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2348">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2348">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2349">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2349">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2350">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2350">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2351">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2351">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2352">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2352">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2353">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2353">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2354">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2354">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2355">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2355">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2356">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2356">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2357">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2357">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2358">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2358">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2359">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2359">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2360">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2360">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-2361"><xref:System.Windows.UIElement3D.OnStylusUp%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2361"><xref:System.Windows.UIElement3D.OnStylusUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2362">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2362">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement3D.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2363">Das <see cref="T:System.Windows.Input.TextCompositionEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2363">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2364">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2364">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="368fc-2365">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2365">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2366">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2366">This method has no default implementation.</span></span> <span data-ttu-id="368fc-2367">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2367">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="368fc-2368">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2368">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="368fc-2369">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2369">In this case the matching event is a routed event.</span></span> <span data-ttu-id="368fc-2370">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="368fc-2370">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="368fc-2371">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2371">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="368fc-2372">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2372">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="368fc-2373">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>können abgeleitete Klassen von <xref:System.Windows.UIElement3D> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2373">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="368fc-2374">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2374">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="368fc-2375"><xref:System.Windows.UIElement3D.OnTextInput%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2375"><xref:System.Windows.UIElement3D.OnTextInput%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2376">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2376">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2377">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2377">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2378">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.TouchDown" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe innerhalb dieses Elements erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2378">Provides class handling for the <see cref="E:System.Windows.UIElement3D.TouchDown" /> routed event that occurs when a touch presses inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2379">Die <xref:System.Windows.UIElement3D.OnTouchDown%2A>-Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2379">The <xref:System.Windows.UIElement3D.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="368fc-2380">Überschreiben Sie <xref:System.Windows.UIElement3D.OnTouchDown%2A> in einer abgeleiteten Klasse, um das <xref:System.Windows.UIElement3D.TouchDown> Ereignis zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="368fc-2380">Override <xref:System.Windows.UIElement3D.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.TouchDown> event.</span></span> <span data-ttu-id="368fc-2381">Stellen Sie sicher, dass die <xref:System.Windows.UIElement3D.OnTouchDown%2A>-Methode der Basisklasse aufgerufen wird, damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2381">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnTouchEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2382">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2382">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2383">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.TouchEnter" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe von außerhalb der Grenzen dieses Elements nach innen verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2383">Provides class handling for the <see cref="E:System.Windows.UIElement3D.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2384">Die <xref:System.Windows.UIElement3D.OnTouchEnter%2A>-Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2384">The <xref:System.Windows.UIElement3D.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="368fc-2385">Überschreiben Sie <xref:System.Windows.UIElement3D.OnTouchEnter%2A> in einer abgeleiteten Klasse, um das <xref:System.Windows.UIElement3D.TouchEnter> Ereignis zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="368fc-2385">Override <xref:System.Windows.UIElement3D.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.TouchEnter> event.</span></span> <span data-ttu-id="368fc-2386">Stellen Sie sicher, dass die <xref:System.Windows.UIElement3D.OnTouchEnter%2A>-Methode der Basisklasse aufgerufen wird, damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2386">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnTouchLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2387">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2387">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2388">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.TouchLeave" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe von innerhalb der Grenzen dieses Elements nach außen verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2388">Provides class handling for the <see cref="E:System.Windows.UIElement3D.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2389">Die <xref:System.Windows.UIElement3D.OnTouchLeave%2A>-Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2389">The <xref:System.Windows.UIElement3D.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="368fc-2390">Überschreiben Sie <xref:System.Windows.UIElement3D.OnTouchLeave%2A> in einer abgeleiteten Klasse, um das <xref:System.Windows.UIElement3D.TouchLeave> Ereignis zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="368fc-2390">Override <xref:System.Windows.UIElement3D.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.TouchLeave> event.</span></span> <span data-ttu-id="368fc-2391">Stellen Sie sicher, dass die <xref:System.Windows.UIElement3D.OnTouchLeave%2A>-Methode der Basisklasse aufgerufen wird, damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2391">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2392">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2392">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2393">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.TouchMove" />-Routingereignis bereit, das auftritt, wenn sich eine Fingereingabe innerhalb dieses Elements bewegt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2393">Provides class handling for the <see cref="E:System.Windows.UIElement3D.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2394">Die <xref:System.Windows.UIElement3D.OnTouchMove%2A>-Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2394">The <xref:System.Windows.UIElement3D.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="368fc-2395">Überschreiben Sie <xref:System.Windows.UIElement3D.OnTouchMove%2A> in einer abgeleiteten Klasse, um das <xref:System.Windows.UIElement3D.TouchMove> Ereignis zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="368fc-2395">Override <xref:System.Windows.UIElement3D.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.TouchMove> event.</span></span> <span data-ttu-id="368fc-2396">Stellen Sie sicher, dass die <xref:System.Windows.UIElement3D.OnTouchMove%2A>-Methode der Basisklasse aufgerufen wird, damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2396">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-2397">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="368fc-2397">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="368fc-2398">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.TouchUp" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe innerhalb dieses Elements freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2398">Provides class handling for the <see cref="E:System.Windows.UIElement3D.TouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2399">Die <xref:System.Windows.UIElement3D.OnTouchUp%2A>-Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="368fc-2399">The <xref:System.Windows.UIElement3D.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="368fc-2400">Überschreiben Sie <xref:System.Windows.UIElement3D.OnTouchUp%2A> in einer abgeleiteten Klasse, um das <xref:System.Windows.UIElement3D.TouchUp> Ereignis zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="368fc-2400">Override <xref:System.Windows.UIElement3D.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.TouchUp> event.</span></span> <span data-ttu-id="368fc-2401">Stellen Sie sicher, dass die <xref:System.Windows.UIElement3D.OnTouchUp%2A>-Methode der Basisklasse aufgerufen wird, damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2401">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUpdateModel">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateModel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateModel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnUpdateModel" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateModel ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateModel();" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateModel : unit -&gt; unit&#xA;override this.OnUpdateModel : unit -&gt; unit" Usage="uIElement3D.OnUpdateModel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="368fc-2402">Nimmt beim Überschreiben in einer abgeleiteten Klasse an Renderingvorgängen teil.</span><span class="sxs-lookup"><span data-stu-id="368fc-2402">Participates in rendering operations when overridden in a derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2403">Wenn Sie eine Klasse von der <xref:System.Windows.UIElement3D> Klasse ableiten, können Sie diese Methode in Verbindung mit der <xref:System.Windows.UIElement3D.InvalidateModel%2A>-Methode verwenden, um das Modell des Elements zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2403">When you derive a class from the <xref:System.Windows.UIElement3D> class, you can use this method together with the <xref:System.Windows.UIElement3D.InvalidateModel%2A> method to refresh the model of the element.</span></span>  
  
 <span data-ttu-id="368fc-2404">Diese Methode muss nur in erweiterten Szenarien aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2404">You only need to call this method in advanced scenarios.</span></span> <span data-ttu-id="368fc-2405">Eines dieser erweiterten Szenarien ist, wenn die abgeleitete Klasse über mehrere Eigenschaften verfügt, die sich auf die Darstellung auswirken, und Sie das zugrunde liegende Modell nur einmal aktualisieren möchten.</span><span class="sxs-lookup"><span data-stu-id="368fc-2405">One such advanced scenario is if the derived class has multiple properties that affect the appearance, and you want to update the underlying model only once.</span></span> <span data-ttu-id="368fc-2406">In der <xref:System.Windows.UIElement3D.OnUpdateModel%2A>-Methode können Sie die <xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A>-Eigenschaft der <xref:System.Windows.Media.Media3D.Visual3D>-Klasse aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2406">Within the <xref:System.Windows.UIElement3D.OnUpdateModel%2A> method you could update the <xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A> property of the <xref:System.Windows.Media.Media3D.Visual3D> class.</span></span>  
  
 <span data-ttu-id="368fc-2407">Diese Methode hat keine Standard Implementierung in der <xref:System.Windows.UIElement3D>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="368fc-2407">This method has no default implementation in the <xref:System.Windows.UIElement3D> class.</span></span>  
  
 <span data-ttu-id="368fc-2408"><xref:System.Windows.UIElement3D.OnUpdateModel%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2408"><xref:System.Windows.UIElement3D.OnUpdateModel%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2409">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2409">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="368fc-2410">Im folgenden Beispiel wird gezeigt, wie von der <xref:System.Windows.UIElement3D>-Klasse abgeleitet wird, um eine `Sphere` Klasse zu erstellen:</span><span class="sxs-lookup"><span data-stu-id="368fc-2410">The following example shows how to derive from the <xref:System.Windows.UIElement3D> class to create a `Sphere` class:</span></span>  
  
 [!code-csharp[Shapes#Sphere](~/samples/snippets/csharp/VS_Snippets_Wpf/Shapes/CSharp/Sphere.cs#sphere)]
 [!code-vb[Shapes#Sphere](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Shapes/visualbasic/sphere.vb#sphere)]  
  
 <span data-ttu-id="368fc-2411">Das komplette Beispiel finden Sie unter [UIElement3D Sphere Sample](https://go.microsoft.com/fwlink/?LinkID=160044).</span><span class="sxs-lookup"><span data-stu-id="368fc-2411">For the complete sample, see [UIElement3D Sphere Sample](https://go.microsoft.com/fwlink/?LinkID=160044).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="uIElement3D.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="368fc-2412">Das bisherige übergeordnete Element.</span><span class="sxs-lookup"><span data-stu-id="368fc-2412">The previous parent.</span></span> <span data-ttu-id="368fc-2413">Dieses wird u. U. mit dem Wert <see langword="null" /> bereitgestellt, wenn für das <see cref="T:System.Windows.DependencyObject" /> zuvor kein übergeordnetes Element vorhanden war.</span><span class="sxs-lookup"><span data-stu-id="368fc-2413">This may be provided as <see langword="null" /> if the <see cref="T:System.Windows.DependencyObject" /> did not have a parent element previously.</span></span></param>
        <summary><span data-ttu-id="368fc-2414">Wird aufgerufen, wenn das übergeordnete Element dieses <see cref="T:System.Windows.UIElement3D" /> eine Änderung an seinem zugrunde liegenden visuellen übergeordneten Element meldet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2414">Invoked when the parent element of this <see cref="T:System.Windows.UIElement3D" /> reports a change to its underlying visual parent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2415"><xref:System.Windows.UIElement3D.OnVisualParentChanged%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2415"><xref:System.Windows.UIElement3D.OnVisualParentChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2416">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2416">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="368fc-2417">Wenn Sie diese Methode überschreiben, wird immer die Basis Implementierung aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2417">If you override this method, always call the base implementation.</span></span> <span data-ttu-id="368fc-2418">Die Standard-Basis Implementierung führt einen internen Wartungs Vorgang für einen umgekehrten vererbten Eigenschafts Status durch.</span><span class="sxs-lookup"><span data-stu-id="368fc-2418">The default base implementation performs some internal maintenance of reverse-inherited property state.</span></span> <span data-ttu-id="368fc-2419">Wenn Sie die Basis Implementierung nicht aufzurufen, wird dieser Zustand ungültig.</span><span class="sxs-lookup"><span data-stu-id="368fc-2419">Failing to call the base implementation will invalidate this state.</span></span>  
  
<span data-ttu-id="368fc-2420">Diese Methode überschreibt <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-2420">This method overrides <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span></span> <span data-ttu-id="368fc-2421"><see cref="T:System.Windows.FrameworkElement" /> und <see cref="T:System.Windows.Window" /> überschreiben auch die <see cref="T:System.Windows.UIElement3D" /> Implementierung <see cref="M:System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)" />und <see cref="T:System.Windows.Window" /> Sie versiegelt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2421"><see cref="T:System.Windows.FrameworkElement" /> and <see cref="T:System.Windows.Window" /> both also override the <see cref="T:System.Windows.UIElement3D" /> implementation of <see cref="M:System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)" />, and <see cref="T:System.Windows.Window" /> seals it.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject&#xA;override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="uIElement3D.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="368fc-2422">Die Richtung des angeforderten Fokusdurchlaufs.</span><span class="sxs-lookup"><span data-stu-id="368fc-2422">The direction of the requested focus traversal.</span></span></param>
        <summary><span data-ttu-id="368fc-2423">Gibt beim Überschreiben in einer abgeleiteten Klasse das Element zurück, das den Fokus für eine bestimmte Richtung des Fokusdurchlaufs empfängt, ohne dass der Fokus tatsächlich auf das betreffende Element verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2423">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span></span></summary>
        <returns><span data-ttu-id="368fc-2424">Das Element, das den Fokus erhält, wenn <see cref="M:System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)" /> tatsächlich aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2424">The element that would have received focus if <see cref="M:System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2425">Die Standard Implementierung dieser Methode in dieser Klasse ist unvollständig und gibt immer `null`zurück.</span><span class="sxs-lookup"><span data-stu-id="368fc-2425">The default implementation of this method in this class is incomplete, and always returns `null`.</span></span>  
  
 <span data-ttu-id="368fc-2426"><xref:System.Windows.UIElement3D.PredictFocus%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2426"><xref:System.Windows.UIElement3D.PredictFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2427">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2427">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragEnter : System.Windows.DragEventHandler " Usage="member this.PreviewDragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2428">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Ziel meldet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2428">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2429">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewDragEnter> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2429">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewDragEnter> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2430">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewDragEnter> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2430">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2431"><xref:System.Windows.UIElement3D.PreviewDragEnter> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2431"><xref:System.Windows.UIElement3D.PreviewDragEnter> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2432">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2432">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2433">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2433">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2434">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2434">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewDragEnterEvent>|  
|<span data-ttu-id="368fc-2435">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2435">Routing strategy</span></span>|<span data-ttu-id="368fc-2436">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2436">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2437">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2437">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="368fc-2438">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2438">The corresponding bubbling event is <xref:System.Windows.UIElement3D.DragEnter>.</span></span>  
  
-   <span data-ttu-id="368fc-2439">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2439">Override <xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2440">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewDragEnter" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2440">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewDragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2441">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2441">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2442">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2442">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2443">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2443">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2444">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2444">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2445">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2445">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2446"><xref:System.Windows.UIElement3D.PreviewDragEnterEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2446"><xref:System.Windows.UIElement3D.PreviewDragEnterEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2447">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2447">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragLeave : System.Windows.DragEventHandler " Usage="member this.PreviewDragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2448">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Quelle meldet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2448">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2449">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewDragLeave> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2449">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewDragLeave> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2450">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewDragLeave> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2450">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2451"><xref:System.Windows.UIElement3D.PreviewDragLeave> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2451"><xref:System.Windows.UIElement3D.PreviewDragLeave> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2452">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2452">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2453">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2453">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2454">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2454">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewDragLeaveEvent>|  
|<span data-ttu-id="368fc-2455">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2455">Routing strategy</span></span>|<span data-ttu-id="368fc-2456">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2456">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2457">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2457">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="368fc-2458">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2458">The corresponding bubbling event is <xref:System.Windows.UIElement3D.DragLeave>.</span></span>  
  
-   <span data-ttu-id="368fc-2459">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2459">Override <xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2460">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewDragLeave" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2460">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewDragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2461">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2461">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2462">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2462">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2463">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2463">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2464">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2464">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2465">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2465">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2466"><xref:System.Windows.UIElement3D.PreviewDragLeaveEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2466"><xref:System.Windows.UIElement3D.PreviewDragLeaveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2467">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2467">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragOver : System.Windows.DragEventHandler " Usage="member this.PreviewDragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2468">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als potenzielles Drop-Ziel meldet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2468">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2469">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewDragOver> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2469">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewDragOver> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2470">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewDragOver> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2470">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2471"><xref:System.Windows.UIElement3D.PreviewDragOver> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2471"><xref:System.Windows.UIElement3D.PreviewDragOver> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2472">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2472">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2473">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2473">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2474">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2474">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewDragOverEvent>|  
|<span data-ttu-id="368fc-2475">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2475">Routing strategy</span></span>|<span data-ttu-id="368fc-2476">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2476">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2477">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2477">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="368fc-2478">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2478">The corresponding bubbling event is <xref:System.Windows.UIElement3D.DragOver>.</span></span>  
  
-   <span data-ttu-id="368fc-2479">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewDragOver%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2479">Override <xref:System.Windows.UIElement3D.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2480">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewDragOver" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2480">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewDragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2481">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2481">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2482">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2482">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2483">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2483">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2484">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2484">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2485">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2485">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2486"><xref:System.Windows.UIElement3D.PreviewDragOverEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2486"><xref:System.Windows.UIElement3D.PreviewDragOverEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2487">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2487">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberSignature Language="F#" Value="member this.PreviewDrop : System.Windows.DragEventHandler " Usage="member this.PreviewDrop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2488">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Ablageereignis meldet, das dieses Element als Ablageziel aufweist.</span><span class="sxs-lookup"><span data-stu-id="368fc-2488">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2489">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewDrop> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2489">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewDrop> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2490">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewDrop> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2490">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2491"><xref:System.Windows.UIElement3D.PreviewDrop> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2491"><xref:System.Windows.UIElement3D.PreviewDrop> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2492">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2492">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2493">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2493">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2494">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2494">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewDropEvent>|  
|<span data-ttu-id="368fc-2495">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2495">Routing strategy</span></span>|<span data-ttu-id="368fc-2496">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2496">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2497">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2497">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="368fc-2498">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.Drop>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2498">The corresponding bubbling event is <xref:System.Windows.UIElement3D.Drop>.</span></span>  
  
-   <span data-ttu-id="368fc-2499">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewDrop%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2499">Override <xref:System.Windows.UIElement3D.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2500">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewDrop" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2500">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewDrop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2501">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2501">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2502">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2502">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2503">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2503">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2504">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2504">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2505">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2505">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2506"><xref:System.Windows.UIElement3D.PreviewDropEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2506"><xref:System.Windows.UIElement3D.PreviewDropEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2507">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2507">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2508">Tritt auf, wenn ein Drag &amp;amp; Drop-Vorgang gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2508">Occurs when a drag-and-drop operation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2509">Das <xref:System.Windows.UIElement3D.PreviewGiveFeedback>-Ereignis ermöglicht der Quelle eines Drag-Ereignisses, die Darstellung des Mauszeigers zu ändern, um dem Benutzer visuelles Feedback während eines Drag & Drop-Vorgangs zu geben.</span><span class="sxs-lookup"><span data-stu-id="368fc-2509">The <xref:System.Windows.UIElement3D.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="368fc-2510">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewGiveFeedback> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2510">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2511">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewGiveFeedback> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2511">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2512"><xref:System.Windows.UIElement3D.PreviewGiveFeedback> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2512"><xref:System.Windows.UIElement3D.PreviewGiveFeedback> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2513">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2513">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2514">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2514">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2515">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2515">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="368fc-2516">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2516">Routing strategy</span></span>|<span data-ttu-id="368fc-2517">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2517">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2518">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2518">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="368fc-2519">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2519">The corresponding bubbling event is <xref:System.Windows.UIElement3D.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="368fc-2520">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2520">Override <xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2521">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewGiveFeedback" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2521">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewGiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2522">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2522">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2523">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2523">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2524">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2524">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2525">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2525">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2526">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2526">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2527"><xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2527"><xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2528">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2528">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2529">Tritt auf, wenn sich der Fokus der Tastatur auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2529">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2530">Da dieses Ereignis tunnelingrouting verwendet, kann das Element, das den Fokus besitzt, anstelle des Elements, an das der Ereignishandler angefügt ist, ein untergeordnetes Element sein.</span><span class="sxs-lookup"><span data-stu-id="368fc-2530">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="368fc-2531">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, das den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2531">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="368fc-2532">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2532">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2533">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2533">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2534"><xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2534"><xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2535">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2535">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2536">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2536">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2537">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2537">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="368fc-2538">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2538">Routing strategy</span></span>|<span data-ttu-id="368fc-2539">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2539">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2540">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2540">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="368fc-2541">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2541">The corresponding bubbling event is <xref:System.Windows.UIElement3D.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="368fc-2542">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2542">Override <xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2543">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2543">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2544">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2544">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2545">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2545">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2546">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2546">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2547">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2547">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2548">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2548">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2549"><xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2549"><xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2550">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2550">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2551">Tritt auf, wenn eine Taste gedrückt wird, während sich der Fokus der Tastatur auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2551">Occurs when a key is pressed while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2552">Die Schlüssel Behandlung interagiert mit anderen Platt Form Features, wie z. b. Befehlszeilen und Textkomposition.</span><span class="sxs-lookup"><span data-stu-id="368fc-2552">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="368fc-2553">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewKeyDown> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2553">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewKeyDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2554">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewKeyDown> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2554">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2555"><xref:System.Windows.UIElement3D.PreviewKeyDown> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2555"><xref:System.Windows.UIElement3D.PreviewKeyDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2556">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2556">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2557">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2557">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2558">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2558">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewKeyDownEvent>|  
|<span data-ttu-id="368fc-2559">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2559">Routing strategy</span></span>|<span data-ttu-id="368fc-2560">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2560">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2561">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2561">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="368fc-2562">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2562">The corresponding bubbling event is <xref:System.Windows.UIElement3D.KeyDown>.</span></span>  
  
-   <span data-ttu-id="368fc-2563">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2563">Override <xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2564">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewKeyDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2564">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewKeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2565">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2565">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2566">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2566">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2567">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2567">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2568">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2568">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2569">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2569">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2570"><xref:System.Windows.UIElement3D.PreviewKeyDownEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2570"><xref:System.Windows.UIElement3D.PreviewKeyDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2571">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2571">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2572">Tritt auf, wenn eine Taste losgelassen wird, während sich der Fokus der Tastatur auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2572">Occurs when a key is released while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2573">Die Schlüssel Behandlung interagiert mit anderen Platt Form Features, wie z. b. Befehlszeilen und Textkomposition.</span><span class="sxs-lookup"><span data-stu-id="368fc-2573">Key handling interacts with other platform features such as commanding and text composition.</span></span>  
  
 <span data-ttu-id="368fc-2574">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewKeyUp> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2574">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewKeyUp> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2575">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewKeyUp> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2575">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2576"><xref:System.Windows.UIElement3D.PreviewKeyUp> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2576"><xref:System.Windows.UIElement3D.PreviewKeyUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2577">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2577">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2578">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2578">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2579">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2579">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewKeyUpEvent>|  
|<span data-ttu-id="368fc-2580">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2580">Routing strategy</span></span>|<span data-ttu-id="368fc-2581">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2581">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2582">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2582">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="368fc-2583">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2583">The corresponding bubbling event is <xref:System.Windows.UIElement3D.KeyUp>.</span></span>  
  
-   <span data-ttu-id="368fc-2584">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2584">Override <xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2585">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewKeyUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2585">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewKeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2586">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2586">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2587">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2587">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2588">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2588">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2589">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2589">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2590">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2590">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2591"><xref:System.Windows.UIElement3D.PreviewKeyUpEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2591"><xref:System.Windows.UIElement3D.PreviewKeyUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2592">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2592">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2593">Tritt auf, wenn sich der Fokus der Tastatur nicht mehr auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2593">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2594">Da dieses Ereignis tunnelingrouting verwendet, kann das Element, das den Fokus verliert, ein untergeordnetes Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2594">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="368fc-2595">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, das den Fokus verloren hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-2595">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="368fc-2596">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2596">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2597">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2597">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2598"><xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2598"><xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2599">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2599">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2600">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2600">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2601">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2601">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="368fc-2602">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2602">Routing strategy</span></span>|<span data-ttu-id="368fc-2603">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2603">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2604">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2604">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="368fc-2605">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2605">The corresponding bubbling event is <xref:System.Windows.UIElement3D.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="368fc-2606">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2606">Override <xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2607">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2607">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2608">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2608">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2609">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2609">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2610">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2610">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2611">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2611">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2612">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2612">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2613"><xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2613"><xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2614">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2614">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2615">Tritt auf, wenn eine Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2615">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2616">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewMouseDown> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2616">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewMouseDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2617">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewMouseDown> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2617">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2618">Das <xref:System.Windows.UIElement3D.PreviewMouseDown> Ereignis wird häufig mit <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> oder <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>ausgelöst, das einem Drücken einer der beiden Standard Maustasten entspricht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2618">The <xref:System.Windows.UIElement3D.PreviewMouseDown> event is often raised together with either <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="368fc-2619"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> und <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> werden ebenfalls geroutet, aber es handelt sich um direkt geroutete Ereignisse, und das entsprechende Schaltflächen spezifische Ereignis wird ausgelöst, wenn das <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignis dieses Element entlang der Ereignis Route erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2619"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="368fc-2620">Weitere Informationen finden Sie unter Hinweise zu <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> oder <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2620">See Remarks for <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>.</span></span>  
  
 <span data-ttu-id="368fc-2621"><xref:System.Windows.UIElement3D.PreviewMouseDown> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2621"><xref:System.Windows.UIElement3D.PreviewMouseDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2622">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2622">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2623">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2623">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2624">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2624">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseDownEvent>|  
|<span data-ttu-id="368fc-2625">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2625">Routing strategy</span></span>|<span data-ttu-id="368fc-2626">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2626">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2627">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2627">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-2628">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2628">The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseDown>.</span></span>  
  
-   <span data-ttu-id="368fc-2629">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2629">Override <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2630">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2630">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2631">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2631">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2632">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2632">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2633">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2633">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2634">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2634">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2635">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2635">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2636"><xref:System.Windows.UIElement3D.PreviewMouseDownEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2636"><xref:System.Windows.UIElement3D.PreviewMouseDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2637">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2637">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2638">Tritt auf, wenn die linke Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2638">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2639">Obwohl diese [Übersicht](~/docs/framework/wpf/advanced/routed-events-overview.md) über Routing Ereignisse eine tunnelingroute durch eine Elementstruktur befolgt, handelt es sich tatsächlich um ein direktes Routing Ereignis, das von jedem <xref:System.Windows.UIElement3D>ausgelöst und entlang der Elementstruktur erneut ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2639">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-2640">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignisses melden, bei dem es sich um ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2640">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="368fc-2641">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="368fc-2641">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="368fc-2642">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit <xref:System.Windows.UIElement3D.AddHandler%2A>aufgerufen wird, mit der Option, Ereignisse zu behandeln, die bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="368fc-2642">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="368fc-2643">Wenn Sie <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> behandelt markieren, markieren Sie im wesentlichen <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> behandelt für alle weiteren Listener entlang der Route und für alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="368fc-2643">If you mark <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="368fc-2644">Dazu zählen möglicherweise von Klassen Handlern generierte Ereignisse wie z. b. <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2644">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="368fc-2645">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse auf <xref:System.Windows.UIElement3D>) als Maus-"Dienst" vorstellen (mit der Dienst Definition, die von der <xref:System.Windows.Input.Mouse>-Klasse bereitgestellt wird).</span><span class="sxs-lookup"><span data-stu-id="368fc-2645">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="368fc-2646">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2646">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="368fc-2647">Für erweiterte Szenarien, wie z. b. das Überprüfen von Zuständen nicht standardmäßiger Schaltflächen, müssen Sie möglicherweise die APIs für die <xref:System.Windows.Input.Mouse>-Klasse anstelle der-<xref:System.Windows.UIElement3D>verwenden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2647">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-2648"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2648"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2649">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2649">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2650">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2650">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2651">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2651">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="368fc-2652">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2652">Routing strategy</span></span>|<span data-ttu-id="368fc-2653">Direkt</span><span class="sxs-lookup"><span data-stu-id="368fc-2653">Direct</span></span>|  
|<span data-ttu-id="368fc-2654">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2654">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-2655">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2655">Override <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2656">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2656">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2657">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2657">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2658">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2658">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2659">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2659">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2660">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2660">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2661">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2661">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2662"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2662"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2663">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2663">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2664">Tritt auf, wenn die linke Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2664">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2665">Obwohl diese [Übersicht](~/docs/framework/wpf/advanced/routed-events-overview.md) über Routing Ereignisse eine tunnelingroute durch eine Elementstruktur befolgt, handelt es sich tatsächlich um ein direktes Routing Ereignis, das von jedem <xref:System.Windows.UIElement3D>ausgelöst und entlang der Elementstruktur erneut ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2665">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-2666">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignisses melden, bei dem es sich um ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2666">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="368fc-2667">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="368fc-2667">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="368fc-2668">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit <xref:System.Windows.UIElement3D.AddHandler%2A>aufgerufen wird, mit der Option, Ereignisse zu behandeln, die bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="368fc-2668">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="368fc-2669">Wenn Sie <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> behandelt markieren, markieren Sie im wesentlichen <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> behandelt für alle weiteren Listener entlang der Route und für alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="368fc-2669">If you mark <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="368fc-2670">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse auf <xref:System.Windows.UIElement3D>) als Maus-"Dienst" vorstellen (mit der Dienst Definition, die von der <xref:System.Windows.Input.Mouse>-Klasse bereitgestellt wird).</span><span class="sxs-lookup"><span data-stu-id="368fc-2670">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="368fc-2671">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2671">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="368fc-2672">Für erweiterte Szenarien, wie z. b. das Überprüfen von Zuständen nicht standardmäßiger Schaltflächen, müssen Sie möglicherweise die APIs für die <xref:System.Windows.Input.Mouse>-Klasse anstelle der-<xref:System.Windows.UIElement3D>verwenden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2672">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-2673"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2673"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2674">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2674">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2675">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2675">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2676">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2676">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="368fc-2677">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2677">Routing strategy</span></span>|<span data-ttu-id="368fc-2678">Direkt</span><span class="sxs-lookup"><span data-stu-id="368fc-2678">Direct</span></span>|  
|<span data-ttu-id="368fc-2679">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2679">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-2680">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2680">Override <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2681">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2681">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2682">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2682">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2683">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2683">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2684">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2684">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2685">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2685">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2686">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2686">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2687"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2687"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2688">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2688">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2689">Tritt auf, wenn der Mauszeiger bewegt wird, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2689">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2690">Dieses Ereignis tritt auf, wenn der Mauszeiger zuerst in die Element Begrenzungen wechselt, und auch wenn der Mauszeiger bewegt wird, während er sich noch innerhalb der Element Begrenzungen befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2690">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="368fc-2691">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewMouseMove> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2691">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2692">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewMouseMove> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2692">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2693"><xref:System.Windows.UIElement3D.PreviewMouseMove> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2693"><xref:System.Windows.UIElement3D.PreviewMouseMove> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2694">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2694">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2695">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2695">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2696">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2696">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseMoveEvent>|  
|<span data-ttu-id="368fc-2697">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2697">Routing strategy</span></span>|<span data-ttu-id="368fc-2698">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2698">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2699">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2699">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="368fc-2700">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2700">The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseMove>.</span></span>  
  
-   <span data-ttu-id="368fc-2701">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2701">Override <xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2702">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2702">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2703">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2703">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2704">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2704">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2705">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2705">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2706">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2706">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2707">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2707">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2708"><xref:System.Windows.UIElement3D.PreviewMouseMoveEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2708"><xref:System.Windows.UIElement3D.PreviewMouseMoveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2709">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2709">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2710">Tritt auf, wenn die rechte Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2710">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2711">Obwohl diese [Übersicht](~/docs/framework/wpf/advanced/routed-events-overview.md) über Routing Ereignisse eine tunnelingroute durch eine Elementstruktur befolgt, handelt es sich tatsächlich um ein direktes Routing Ereignis, das von jedem <xref:System.Windows.UIElement3D>ausgelöst und entlang der Elementstruktur erneut ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2711">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-2712">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignisses melden, bei dem es sich um ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2712">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="368fc-2713">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="368fc-2713">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="368fc-2714">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit <xref:System.Windows.UIElement3D.AddHandler%2A>aufgerufen wird, mit der Option, Ereignisse zu behandeln, die bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="368fc-2714">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="368fc-2715">Wenn Sie <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> behandelt markieren, markieren Sie im wesentlichen <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> behandelt für alle weiteren Listener entlang der Route und für alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="368fc-2715">If you mark <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="368fc-2716">Dazu zählen möglicherweise von Klassen Handlern generierte Ereignisse wie z. b. <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2716">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="368fc-2717">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse auf <xref:System.Windows.UIElement3D>) als Maus-"Dienst" vorstellen (mit der Dienst Definition, die von der <xref:System.Windows.Input.Mouse>-Klasse bereitgestellt wird).</span><span class="sxs-lookup"><span data-stu-id="368fc-2717">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="368fc-2718">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2718">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="368fc-2719">Für erweiterte Szenarien, wie z. b. das Überprüfen von Zuständen nicht standardmäßiger Schaltflächen, müssen Sie möglicherweise die APIs für die <xref:System.Windows.Input.Mouse>-Klasse anstelle der-<xref:System.Windows.UIElement3D>verwenden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2719">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-2720"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2720"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2721">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2721">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2722">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2722">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2723">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2723">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="368fc-2724">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2724">Routing strategy</span></span>|<span data-ttu-id="368fc-2725">Direkt</span><span class="sxs-lookup"><span data-stu-id="368fc-2725">Direct</span></span>|  
|<span data-ttu-id="368fc-2726">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2726">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-2727">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2727">Override <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2728">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2728">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2729">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2729">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2730">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2730">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2731">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2731">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2732">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2732">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2733">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2733">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2734"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2734"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2735">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2735">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2736">Tritt auf, wenn die rechte Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2736">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2737">Obwohl diese [Übersicht](~/docs/framework/wpf/advanced/routed-events-overview.md) über Routing Ereignisse eine tunnelingroute durch eine Elementstruktur befolgt, handelt es sich tatsächlich um ein direktes Routing Ereignis, das von jedem <xref:System.Windows.UIElement3D>ausgelöst und entlang der Elementstruktur erneut ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2737">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-2738">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignisses melden, bei dem es sich um ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2738">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="368fc-2739">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="368fc-2739">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="368fc-2740">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit <xref:System.Windows.UIElement3D.AddHandler%2A>aufgerufen wird, mit der Option, Ereignisse zu behandeln, die bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="368fc-2740">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="368fc-2741">Wenn Sie <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> behandelt markieren, markieren Sie im wesentlichen <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> behandelt für alle weiteren Listener entlang der Route und für alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="368fc-2741">If you mark <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="368fc-2742">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse auf <xref:System.Windows.UIElement3D>) als Maus-"Dienst" vorstellen (mit der Dienst Definition, die von der <xref:System.Windows.Input.Mouse>-Klasse bereitgestellt wird).</span><span class="sxs-lookup"><span data-stu-id="368fc-2742">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="368fc-2743">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2743">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="368fc-2744">Für erweiterte Szenarien, wie z. b. das Überprüfen von Zuständen nicht standardmäßiger Schaltflächen, müssen Sie möglicherweise die APIs für die <xref:System.Windows.Input.Mouse>-Klasse anstelle der-<xref:System.Windows.UIElement3D>verwenden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2744">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-2745"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2745"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2746">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2746">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2747">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2747">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2748">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2748">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="368fc-2749">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2749">Routing strategy</span></span>|<span data-ttu-id="368fc-2750">Direkt</span><span class="sxs-lookup"><span data-stu-id="368fc-2750">Direct</span></span>|  
|<span data-ttu-id="368fc-2751">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2751">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-2752">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2752">Override <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2753">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2753">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2754">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2754">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2755">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2755">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2756">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2756">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2757">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2757">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2758">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2758">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2759"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2759"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2760">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2760">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2761">Tritt auf, wenn eine Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2761">Occurs when any mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2762">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewMouseUp> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2762">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewMouseUp> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2763">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewMouseUp> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2763">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2764">Das <xref:System.Windows.UIElement3D.PreviewMouseUp> Ereignis wird häufig mit <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> oder <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>ausgelöst, das einem Drücken einer der beiden Standard Maustasten entspricht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2764">The <xref:System.Windows.UIElement3D.PreviewMouseUp> event is often raised together with either <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="368fc-2765"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> und <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> werden ebenfalls geroutet, aber es handelt sich um direkt geroutete Ereignisse, und das entsprechende Schaltflächen spezifische Ereignis wird ausgelöst, wenn das <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignis dieses Element entlang der Ereignis Route erreicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-2765"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="368fc-2766">Weitere Informationen finden Sie unter Hinweise zu <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> oder <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2766">See Remarks for <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.</span></span>  
  
 <span data-ttu-id="368fc-2767"><xref:System.Windows.UIElement3D.PreviewMouseUp> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2767"><xref:System.Windows.UIElement3D.PreviewMouseUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2768">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2768">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2769">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2769">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2770">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2770">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseUpEvent>|  
|<span data-ttu-id="368fc-2771">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2771">Routing strategy</span></span>|<span data-ttu-id="368fc-2772">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2772">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2773">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2773">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-2774">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2774">The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseUp>.</span></span>  
  
-   <span data-ttu-id="368fc-2775">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2775">Override <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2776">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2776">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2777">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2777">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2778">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2778">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2779">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2779">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2780">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2780">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2781">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2781">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2782"><xref:System.Windows.UIElement3D.PreviewMouseUpEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2782"><xref:System.Windows.UIElement3D.PreviewMouseUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2783">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2783">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2784">Tritt auf, wenn der Benutzer das Mausrad dreht, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2784">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2785">Der Fokus oder die Maus Erfassung haben Vorrang vor der Position des Mauszeigers. Wenn Sie dieses Ereignis von einem fokussierten oder erfassten Element erhalten, ist der Mauszeiger daher möglicherweise über einem anderen Element.</span><span class="sxs-lookup"><span data-stu-id="368fc-2785">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="368fc-2786">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewMouseMove> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2786">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2787">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewMouseMove> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2787">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2788"><xref:System.Windows.UIElement3D.PreviewMouseWheel> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2788"><xref:System.Windows.UIElement3D.PreviewMouseWheel> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2789">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2789">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2790">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2790">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2791">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2791">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseWheelEvent>|  
|<span data-ttu-id="368fc-2792">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2792">Routing strategy</span></span>|<span data-ttu-id="368fc-2793">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2793">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2794">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2794">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="368fc-2795">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2795">The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="368fc-2796">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2796">Override <xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2797">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseWheel" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2797">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2798">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2798">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2799">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2799">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2800">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2800">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2801">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2801">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2802">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2802">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2803"><xref:System.Windows.UIElement3D.PreviewMouseWheelEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2803"><xref:System.Windows.UIElement3D.PreviewMouseWheelEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2804">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2804">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2805">Tritt auf, wenn sich der Status der Tastatur oder der Maustaste während eines Drag &amp;amp; Drop-Vorgangs ändert.</span><span class="sxs-lookup"><span data-stu-id="368fc-2805">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2806">Das <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag>-Ereignis ermöglicht der Drag-Quelle, zu deklarieren, ob der Drag & Drop-Vorgang abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="368fc-2806">The <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="368fc-2807">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2807">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2808">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2808">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2809"><xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2809"><xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2810">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2810">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2811">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2811">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2812">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2812">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="368fc-2813">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2813">Routing strategy</span></span>|<span data-ttu-id="368fc-2814">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2814">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2815">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2815">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="368fc-2816">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2816">The corresponding bubbling event is <xref:System.Windows.UIElement3D.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="368fc-2817">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2817">Override <xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2818">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewQueryContinueDrag" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2818">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewQueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2819">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2819">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2820">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2820">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2821">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2821">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2822">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2822">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2823">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2823">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2824"><xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2824"><xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2825">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2825">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2826">Tritt auf, wenn die Stifttaste gedrückt wird, während sich der Zeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2826">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2827">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewStylusButtonDown> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2827">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2828">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewStylusButtonDown> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2828">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2829">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2829">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-2830">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2830">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-2831"><xref:System.Windows.UIElement3D.PreviewStylusButtonDown> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2831"><xref:System.Windows.UIElement3D.PreviewStylusButtonDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2832">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2832">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2833">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2833">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2834">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2834">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="368fc-2835">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2835">Routing strategy</span></span>|<span data-ttu-id="368fc-2836">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2836">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2837">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2837">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-2838">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2838">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="368fc-2839">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2839">Override <xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2840">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2840">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2841">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2841">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2842">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2842">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2843">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2843">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2844">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2844">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2845">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2845">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2846"><xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2846"><xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2847">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2847">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2848">Tritt auf, wenn die Stifttaste losgelassen wird, während sich der Zeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2848">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2849">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewStylusButtonUp> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2849">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2850">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewStylusButtonUp> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2850">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2851">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2851">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-2852">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2852">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-2853"><xref:System.Windows.UIElement3D.PreviewStylusButtonUp> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2853"><xref:System.Windows.UIElement3D.PreviewStylusButtonUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2854">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2854">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2855">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2855">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2856">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2856">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="368fc-2857">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2857">Routing strategy</span></span>|<span data-ttu-id="368fc-2858">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2858">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2859">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2859">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-2860">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2860">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="368fc-2861">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2861">Override <xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2862">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2862">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2863">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2863">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2864">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2864">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2865">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2865">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2866">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2866">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2867">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2867">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2868"><xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2868"><xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2869">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2869">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2870">Tritt auf, wenn der Stift den Digitizer berührt, während dieser sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2870">Occurs when the stylus touches the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2871">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewStylusDown> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2871">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2872">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewStylusDown> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2872">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2873">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2873">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-2874">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2874">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-2875"><xref:System.Windows.UIElement3D.PreviewStylusDown> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2875"><xref:System.Windows.UIElement3D.PreviewStylusDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2876">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2876">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2877">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2877">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2878">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2878">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusDownEvent>|  
|<span data-ttu-id="368fc-2879">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2879">Routing strategy</span></span>|<span data-ttu-id="368fc-2880">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2880">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2881">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2881">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="368fc-2882">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2882">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusDown>.</span></span>  
  
-   <span data-ttu-id="368fc-2883">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2883">Override <xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2884">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2884">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2885">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2885">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2886">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2886">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2887">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2887">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2888">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2888">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2889">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2889">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2890"><xref:System.Windows.UIElement3D.PreviewStylusDownEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2890"><xref:System.Windows.UIElement3D.PreviewStylusDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2891">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2891">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2892">Tritt auf, wenn der Stift über ein Element bewegt wird, ohne den Digitizer zu berühren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2892">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2893">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewStylusInAirMove> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2893">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2894">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewStylusInAirMove> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2894">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2895">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2895">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-2896">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2896">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-2897"><xref:System.Windows.UIElement3D.PreviewStylusInAirMove> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2897"><xref:System.Windows.UIElement3D.PreviewStylusInAirMove> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2898">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2898">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2899">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2899">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2900">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2900">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="368fc-2901">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2901">Routing strategy</span></span>|<span data-ttu-id="368fc-2902">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2902">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2903">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2903">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="368fc-2904">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2904">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="368fc-2905">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2905">Override <xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2906">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2906">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2907">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2907">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2908">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2908">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2909">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2909">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2910">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2910">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2911">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2911">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2912"><xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2912"><xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2913">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2913">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2914">Tritt auf, wenn sich der Tablettstift nah genug am Digitizer befindet, um erkannt zu werden, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2914">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2915">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewStylusInRange> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2915">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2916">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewStylusInRange> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2916">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2917">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2917">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-2918">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2918">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-2919"><xref:System.Windows.UIElement3D.PreviewStylusInRange> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2919"><xref:System.Windows.UIElement3D.PreviewStylusInRange> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2920">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2920">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2921">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2921">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2922">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2922">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="368fc-2923">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2923">Routing strategy</span></span>|<span data-ttu-id="368fc-2924">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2924">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2925">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2925">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="368fc-2926">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2926">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="368fc-2927">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2927">Override <xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2928">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusInRange" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2928">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2929">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2929">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2930">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2930">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2931">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2931">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2932">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2932">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2933">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2933">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2934"><xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2934"><xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2935">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2935">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2936">Tritt auf, wenn der Tablettstift bewegt wird, während er sich über dem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-2936">Occurs when the stylus moves while over the element.</span></span> <span data-ttu-id="368fc-2937">Der Tablettstift muss während der Erkennung durch den Digitizer bewegt werden, damit dieses Ereignis ausgelöst wird, andernfalls wird stattdessen <see cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-2937">The stylus must move while being detected by the digitizer to raise this event, otherwise, <see cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2938">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewStylusMove> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2938">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2939">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewStylusMove> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2939">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2940">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2940">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-2941">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2941">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-2942"><xref:System.Windows.UIElement3D.PreviewStylusMove> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2942"><xref:System.Windows.UIElement3D.PreviewStylusMove> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2943">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2943">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2944">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2944">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2945">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2945">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusMoveEvent>|  
|<span data-ttu-id="368fc-2946">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2946">Routing strategy</span></span>|<span data-ttu-id="368fc-2947">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2947">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2948">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2948">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="368fc-2949">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2949">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusMove>.</span></span>  
  
-   <span data-ttu-id="368fc-2950">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2950">Override <xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2951">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2951">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2952">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2952">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2953">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2953">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2954">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2954">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2955">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2955">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2956">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2956">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2957"><xref:System.Windows.UIElement3D.PreviewStylusMoveEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2957"><xref:System.Windows.UIElement3D.PreviewStylusMoveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2958">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2958">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2959">Tritt auf, wenn sich der Stift zu weit vom Digitizer entfernt befindet, um erkannt zu werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2959">Occurs when the stylus is too far from the digitizer to be detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2960">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2960">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2961">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2961">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2962">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2962">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-2963">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2963">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-2964"><xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2964"><xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2965">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2965">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2966">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2966">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2967">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2967">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="368fc-2968">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2968">Routing strategy</span></span>|<span data-ttu-id="368fc-2969">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2969">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2970">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2970">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="368fc-2971">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2971">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="368fc-2972">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2972">Override <xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2973">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusOutOfRange" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2973">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2974">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2974">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2975">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2975">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2976">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2976">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-2977">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2977">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-2978">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2978">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-2979"><xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2979"><xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2980">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2980">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2981">Tritt auf, wenn ein Benutzer eine von mehreren Gesten ausführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2981">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2982">Weitere Informationen zu Stift Gesten finden Sie unter <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2982">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="368fc-2983">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-2983">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-2984">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-2984">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-2985">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2985">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-2986">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2986">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-2987"><xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-2987"><xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-2988">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-2988">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-2989">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-2989">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-2990">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-2990">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="368fc-2991">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-2991">Routing strategy</span></span>|<span data-ttu-id="368fc-2992">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-2992">Tunneling</span></span>|  
|<span data-ttu-id="368fc-2993">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-2993">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="368fc-2994">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="368fc-2994">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="368fc-2995">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-2995">Override <xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-2996">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusSystemGesture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2996">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-2997">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-2997">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-2998">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-2998">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-2999">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-2999">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3000">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3000">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3001">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3001">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3002"><xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3002"><xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3003">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3003">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3004">Tritt auf, wenn der Benutzer den Tablettstift vom Digitizer hebt, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3004">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3005">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewStylusDown> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3005">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3006">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewStylusDown> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3006">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3007">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3007">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-3008">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3008">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-3009"><xref:System.Windows.UIElement3D.PreviewStylusUp> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3009"><xref:System.Windows.UIElement3D.PreviewStylusUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3010">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3010">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3011">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3011">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3012">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3012">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusUpEvent>|  
|<span data-ttu-id="368fc-3013">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3013">Routing strategy</span></span>|<span data-ttu-id="368fc-3014">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-3014">Tunneling</span></span>|  
|<span data-ttu-id="368fc-3015">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3015">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="368fc-3016">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3016">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusUp>.</span></span>  
  
-   <span data-ttu-id="368fc-3017">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3017">Override <xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3018">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3018">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3019">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3019">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3020">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3020">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3021">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3021">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3022">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3022">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3023">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3023">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3024"><xref:System.Windows.UIElement3D.PreviewStylusUpEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3024"><xref:System.Windows.UIElement3D.PreviewStylusUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3025">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3025">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberSignature Language="F#" Value="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3026">Tritt auf, wenn dieses Element Text geräteunabhängig empfängt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3026">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3027">Mit dem <xref:System.Windows.UIElement3D.PreviewTextInput>-Ereignis kann eine Komponente oder Anwendung auf geräteunabhängige Weise auf Texteingaben lauschen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3027">The <xref:System.Windows.UIElement3D.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="368fc-3028">Die Tastatur ist das primäre Mittel <xref:System.Windows.UIElement3D.PreviewTextInput>; sprach-, Handschrift-und andere Eingabegeräte können jedoch auch <xref:System.Windows.UIElement3D.PreviewTextInput>generieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3028">The keyboard is the primary means of <xref:System.Windows.UIElement3D.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.UIElement3D.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="368fc-3029">Aufgrund von Tastenkombinationen (entweder in Standard-Tastaturen oder über Eingabemethoden-Editoren) können mehrere Schlüsselereignisse nur ein Texteingabe Ereignis aufwerfen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3029">Because of key combinations - either in default keyboards or through input method editors - multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="368fc-3030">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.PreviewTextInput> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3030">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewTextInput> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3031">Ereignishandler, die an das <xref:System.Windows.UIElement3D.PreviewTextInput> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3031">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3032"><xref:System.Windows.UIElement3D.PreviewTextInput> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3032"><xref:System.Windows.UIElement3D.PreviewTextInput> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3033">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3033">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3034">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3034">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3035">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3035">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewTextInputEvent>|  
|<span data-ttu-id="368fc-3036">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3036">Routing strategy</span></span>|<span data-ttu-id="368fc-3037">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-3037">Tunneling</span></span>|  
|<span data-ttu-id="368fc-3038">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3038">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="368fc-3039">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3039">The corresponding bubbling event is <xref:System.Windows.UIElement3D.TextInput>.</span></span>  
  
-   <span data-ttu-id="368fc-3040">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewTextInput%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3040">Override <xref:System.Windows.UIElement3D.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewTextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3041">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewTextInput" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3041">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewTextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3042">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3042">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3043">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3043">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3044">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3044">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3045">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3045">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3046">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3046">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3047"><xref:System.Windows.UIElement3D.PreviewTextInputEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3047"><xref:System.Windows.UIElement3D.PreviewTextInputEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3048">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3048">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3049">Tritt auf, wenn ein Finger den Bildschirm berührt und sich dieser über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3049">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3050">Standardmäßig treten die <xref:System.Windows.UIElement3D.PreviewTouchDown>-und <xref:System.Windows.UIElement3D.TouchDown> Ereignisse erst auf, wenn ein Finger den Bildschirm berührt und sich verschiebt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3050">By default, the <xref:System.Windows.UIElement3D.PreviewTouchDown> and <xref:System.Windows.UIElement3D.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="368fc-3051">Wenn Sie auf dem Bildschirm einen Finger drücken und ihn ohne verschieben bewegen, wird das Verhalten einer <xref:System.Windows.Input.Stylus>gedrückt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3051">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="368fc-3052">Das Verhalten von Press und Hold entspricht einem Mausklick mit der rechten Maustaste.</span><span class="sxs-lookup"><span data-stu-id="368fc-3052">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="368fc-3053">Damit die <xref:System.Windows.UIElement3D.PreviewTouchDown> und <xref:System.Windows.UIElement3D.TouchDown> Ereignisse auftreten, sobald ein Finger den Bildschirm berührt, legen Sie die <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> angefügte-Eigenschaft auf `false` für dieses Element fest.</span><span class="sxs-lookup"><span data-stu-id="368fc-3053">To cause the <xref:System.Windows.UIElement3D.PreviewTouchDown> and <xref:System.Windows.UIElement3D.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3054">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3054">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3055">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3055">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewTouchDownEvent>|  
|<span data-ttu-id="368fc-3056">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3056">Routing strategy</span></span>|<span data-ttu-id="368fc-3057">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-3057">Tunneling</span></span>|  
|<span data-ttu-id="368fc-3058">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3058">Delegate</span></span>|<span data-ttu-id="368fc-3059">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3059"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="368fc-3060">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3060">The corresponding bubbling event is <xref:System.Windows.UIElement3D.TouchDown>.</span></span>  
  
-   <span data-ttu-id="368fc-3061">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3061">Override <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewTouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3062">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewTouchDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3062">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewTouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3063">Tritt auf, wenn sich ein Finger auf dem Bildschirm bewegt, während sich der Finger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3063">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3064">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3064">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3065">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3065">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewTouchMoveEvent>|  
|<span data-ttu-id="368fc-3066">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3066">Routing strategy</span></span>|<span data-ttu-id="368fc-3067">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-3067">Tunneling</span></span>|  
|<span data-ttu-id="368fc-3068">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3068">Delegate</span></span>|<span data-ttu-id="368fc-3069">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3069"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="368fc-3070">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3070">The corresponding bubbling event is <xref:System.Windows.UIElement3D.TouchMove>.</span></span>  
  
-   <span data-ttu-id="368fc-3071">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3071">Override <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewTouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3072">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewTouchMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3072">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewTouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3073">Tritt auf, wenn ein Finger vom Bildschirm genommen wird, während sich der Finger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3073">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3074">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3074">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3075">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3075">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewTouchUpEvent>|  
|<span data-ttu-id="368fc-3076">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3076">Routing strategy</span></span>|<span data-ttu-id="368fc-3077">Tunneling</span><span class="sxs-lookup"><span data-stu-id="368fc-3077">Tunneling</span></span>|  
|<span data-ttu-id="368fc-3078">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3078">Delegate</span></span>|<span data-ttu-id="368fc-3079">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3079"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="368fc-3080">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement3D.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3080">The corresponding bubbling event is <xref:System.Windows.UIElement3D.TouchUp>.</span></span>  
  
-   <span data-ttu-id="368fc-3081">Überschreiben Sie <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3081">Override <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewTouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3082">Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewTouchUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3082">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewTouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3083">Tritt auf, wenn sich der Status der Tastatur oder der Maustaste während eines Drag &amp;amp; Drop-Vorgangs ändert.</span><span class="sxs-lookup"><span data-stu-id="368fc-3083">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3084">Das <xref:System.Windows.UIElement3D.QueryContinueDrag>-Ereignis ermöglicht der Zieh Quelle, zu bestimmen, ob der Drag & Drop-Vorgang abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="368fc-3084">The <xref:System.Windows.UIElement3D.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="368fc-3085">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.QueryContinueDrag> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3085">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.QueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3086">Ereignishandler, die an das <xref:System.Windows.UIElement3D.QueryContinueDrag> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3086">Event handlers that are attached to the <xref:System.Windows.UIElement3D.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3087"><xref:System.Windows.UIElement3D.QueryContinueDrag> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3087"><xref:System.Windows.UIElement3D.QueryContinueDrag> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3088">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3088">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3089">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3089">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3090">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3090">Identifier field</span></span>|<xref:System.Windows.UIElement3D.QueryContinueDragEvent>|  
|<span data-ttu-id="368fc-3091">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3091">Routing strategy</span></span>|<span data-ttu-id="368fc-3092">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-3092">Bubbling</span></span>|  
|<span data-ttu-id="368fc-3093">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3093">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="368fc-3094">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3094">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="368fc-3095">Überschreiben Sie <xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3095">Override <xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3096">Identifiziert das <see cref="E:System.Windows.UIElement3D.QueryContinueDrag" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3096">Identifies the <see cref="E:System.Windows.UIElement3D.QueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3097">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3097">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3098">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3098">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3099">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3099">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3100">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3100">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3101">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3101">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3102"><xref:System.Windows.UIElement3D.QueryContinueDragEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3102"><xref:System.Windows.UIElement3D.QueryContinueDragEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3103">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3103">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberSignature Language="F#" Value="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " Usage="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3104">Tritt auf, wenn die Anzeige des Cursors angefordert wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3104">Occurs when the cursor is requested to display.</span></span> <span data-ttu-id="368fc-3105">Dieses Ereignis wird immer dann für ein Element ausgelöst, wenn der Mauszeiger an eine neue Position bewegt wird, d  h., das Cursorobjekt muss möglicherweise in Abhängigkeit von seiner neuen Position geändert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3105">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3106">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.QueryCursor> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3106">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.QueryCursor> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3107">Ereignishandler, die an das <xref:System.Windows.UIElement3D.QueryCursor> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3107">Event handlers that are attached to the <xref:System.Windows.UIElement3D.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3108">Der Cursor, auf den dieser Ereignis Name verweist, ist nicht notwendigerweise der Textcursor (manchmal auch als Einfügemarke bezeichnet).</span><span class="sxs-lookup"><span data-stu-id="368fc-3108">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="368fc-3109">Stattdessen ist der Cursor in diesem Kontext das-Objekt, das die grafische Bildschirm Anzeige auf mehreren möglichen Eingabe bezogenen Geräten oder Konzepten in der Windows-Programmierung deklariert.</span><span class="sxs-lookup"><span data-stu-id="368fc-3109">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="368fc-3110">Dieses Objekt wird durch die <xref:System.Windows.Input.Cursor>-Klasse in WPF dargestellt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3110">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="368fc-3111">Mit dem WPF-Eingabe System können Sie diesen Cursor ändern, wenn er die Bildschirmposition des Mauszeigers darstellt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3111">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="368fc-3112">Sie können vordefinierte Werte aus der <xref:System.Windows.Input.Cursors>-Enumeration verwenden, oder Sie können einen benutzerdefinierten Cursor als Bilddatei deklarieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3112">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="368fc-3113">Das Lauschen auf das <xref:System.Windows.UIElement3D.QueryCursor> Ereignis ist keine effiziente Methode für die Cursor Verwaltung.</span><span class="sxs-lookup"><span data-stu-id="368fc-3113">Listening for the <xref:System.Windows.UIElement3D.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="368fc-3114">Stattdessen sollte jedes Element sein eigenes Cursor Verhalten mit <xref:System.Windows.FrameworkContentElement.Cursor%2A> und <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>definieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3114">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="368fc-3115">Sie sollten sich nur auf <xref:System.Windows.UIElement3D.QueryCursor> verlassen, wenn Sie nicht die Basiselemente der WPF-Frameworkebene verwenden oder in außergewöhnlichen Fällen, in denen das Definieren des Cursor Verhaltens auf einer einzelnen Element Basis nicht Ihren Anforderungen entspricht.</span><span class="sxs-lookup"><span data-stu-id="368fc-3115">You should only rely on <xref:System.Windows.UIElement3D.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="368fc-3116">Weitere Informationen zum Implementieren des Cursor Verhaltens als Reaktion auf <xref:System.Windows.UIElement3D.QueryCursor>finden Sie unter <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3116">For more information on implementing cursor behavior in response to <xref:System.Windows.UIElement3D.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
 <span data-ttu-id="368fc-3117"><xref:System.Windows.UIElement3D.QueryCursor> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3117"><xref:System.Windows.UIElement3D.QueryCursor> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3118">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3118">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3119">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3119">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3120">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3120">Identifier field</span></span>|<xref:System.Windows.UIElement3D.QueryCursorEvent>|  
|<span data-ttu-id="368fc-3121">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3121">Routing strategy</span></span>|<span data-ttu-id="368fc-3122">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-3122">Bubbling</span></span>|  
|<span data-ttu-id="368fc-3123">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3123">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="368fc-3124">Es ist kein entsprechendes tunnelingereignis definiert.</span><span class="sxs-lookup"><span data-stu-id="368fc-3124">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="368fc-3125">Überschreiben Sie <xref:System.Windows.UIElement3D.OnQueryCursor%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3125">Override <xref:System.Windows.UIElement3D.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3126">Identifiziert das <see cref="E:System.Windows.UIElement3D.QueryCursor" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3126">Identifies the <see cref="E:System.Windows.UIElement3D.QueryCursor" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3127">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3127">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3128">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3128">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3129">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3129">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3130">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3130">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3131">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3131">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3132"><xref:System.Windows.UIElement3D.QueryCursorEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3132"><xref:System.Windows.UIElement3D.QueryCursorEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3133">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3133">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement3D.RaiseEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="368fc-3134">Ein <see cref="T:System.Windows.RoutedEventArgs" />, das die Ereignisdaten enthält und zudem das auszulösende Ereignis angibt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3134">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span></span></param>
        <summary><span data-ttu-id="368fc-3135">Löst ein bestimmtes Routingereignis aus.</span><span class="sxs-lookup"><span data-stu-id="368fc-3135">Raises a specific routed event.</span></span> <span data-ttu-id="368fc-3136">Das auszulösende <see cref="T:System.Windows.RoutedEvent" /> wird innerhalb der <see cref="T:System.Windows.RoutedEventArgs" />-Instanz identifiziert, die bereitgestellt wird (als <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />-Eigenschaft für diese Ereignisdaten).</span><span class="sxs-lookup"><span data-stu-id="368fc-3136">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3137">Der `e`-Parameter ist als allgemeiner Basistyp für alle gerouteten Ereignisdaten typisiert. die Ereignisdaten sollten jedoch als spezifischsten Ereignis Datentyp angegeben werden, der für das Ereignis ausgelöst werden kann, da <xref:System.Windows.RoutedEventArgs> abgeleiteten Klassen die tatsächlichen spezifischen Daten Eigenschaften enthalten, die für das jeweilige Ereignis bestimmt sind, wenn es ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3137">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="368fc-3138"><xref:System.Windows.RoutedEventArgs> ist nicht nur die Zustands Eigenschaften für das Ereignis. Außerdem wird angegeben, welches Routing Ereignis erhoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="368fc-3138"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="368fc-3139">Dieses Ereignis Erstellungs Muster und die Daten des Routing Ereignisses unterscheiden sich von [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignissen und Daten Klassen, die in der Regel nur Eigenschaften enthalten, die mit dem Ereignis verknüpft sind.</span><span class="sxs-lookup"><span data-stu-id="368fc-3139">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
 <span data-ttu-id="368fc-3140"><xref:System.Windows.UIElement3D.RaiseEvent%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3140"><xref:System.Windows.UIElement3D.RaiseEvent%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3141">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3141">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberSignature Language="F#" Value="member this.ReleaseAllTouchCaptures : unit -&gt; unit" Usage="uIElement3D.ReleaseAllTouchCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="368fc-3142">Gibt alle erfassten Fingereingabegeräte für das Element frei.</span><span class="sxs-lookup"><span data-stu-id="368fc-3142">Releases all captured touch devices from this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMouseCapture : unit -&gt; unit&#xA;override this.ReleaseMouseCapture : unit -&gt; unit" Usage="uIElement3D.ReleaseMouseCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="368fc-3143">Gibt die Erfassung von Mauseingaben frei, wenn für dieses Element die Erfassung festgelegt war.</span><span class="sxs-lookup"><span data-stu-id="368fc-3143">Releases the mouse capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3144">Wenn dieses Element die Erfassung nicht enthielt, hat das Aufrufen dieser Methode keine Auswirkung.</span><span class="sxs-lookup"><span data-stu-id="368fc-3144">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="368fc-3145">Überprüfen Sie den Wert <xref:System.Windows.UIElement3D.IsMouseCaptured%2A>, bevor Sie diese Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3145">Consider checking the value of <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> before you call this method.</span></span>  
  
 <span data-ttu-id="368fc-3146"><xref:System.Windows.UIElement3D.ReleaseMouseCapture%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3146"><xref:System.Windows.UIElement3D.ReleaseMouseCapture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3147">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3147">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStylusCapture : unit -&gt; unit&#xA;override this.ReleaseStylusCapture : unit -&gt; unit" Usage="uIElement3D.ReleaseStylusCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="368fc-3148">Gibt das Erfassen der Eingaben von Tablettstiftgeräten frei, wenn für dieses Element die Erfassung festgelegt war.</span><span class="sxs-lookup"><span data-stu-id="368fc-3148">Releases the stylus device capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3149">Wenn dieses Element die Erfassung nicht enthielt, hat das Aufrufen dieser Methode keine Auswirkung.</span><span class="sxs-lookup"><span data-stu-id="368fc-3149">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="368fc-3150">Überprüfen Sie den Wert <xref:System.Windows.UIElement3D.IsStylusCaptured%2A>, bevor Sie diese Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3150">Consider checking the value of <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 <span data-ttu-id="368fc-3151"><xref:System.Windows.UIElement3D.ReleaseStylusCapture%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3151"><xref:System.Windows.UIElement3D.ReleaseStylusCapture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3152">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3152">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.ReleaseTouchCapture : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement3D.ReleaseTouchCapture touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="368fc-3153">Das freizugebende Gerät.</span><span class="sxs-lookup"><span data-stu-id="368fc-3153">The device to release.</span></span></param>
        <summary><span data-ttu-id="368fc-3154">Versucht, das angegebene Fingereingabegerät von diesem Element freizugeben.</span><span class="sxs-lookup"><span data-stu-id="368fc-3154">Attempts to release the specified touch device from this element.</span></span></summary>
        <returns><span data-ttu-id="368fc-3155"><see langword="true" />, wenn das Fingereingabegerät freigegeben wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-3155"><see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="368fc-3156"><paramref name="touchDevice" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-3156"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement3D.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="368fc-3157">Der Bezeichner des Routingereignisses, für das der Handler angefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-3157">The identifier of the routed event for which the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="368fc-3158">Die spezifische Handlerimplementierung, die aus der Ereignishandlerauflistung dieses Elements entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="368fc-3158">The specific handler implementation to remove from the event handler collection on this element.</span></span></param>
        <summary><span data-ttu-id="368fc-3159">Entfernt den angegebenen Routingereignishandler aus diesem Element.</span><span class="sxs-lookup"><span data-stu-id="368fc-3159">Removes the specified routed event handler from this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3160">Das häufigste Szenario für die Verwendung dieser API ist, wenn Sie das [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "Wrapper"-Ereignis implementieren, das einem benutzerdefinierten Routing Ereignis zugeordnet ist. Dies gilt insbesondere dann, wenn Sie die Logik zum Entfernen von Handlern auf [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ebene implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3160">The most common scenario for using this API is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span>  
  
 <span data-ttu-id="368fc-3161">Das Aufrufen dieser Methode hat keine Auswirkungen, wenn keine Handler mit Kriterien registriert wurden, die mit den Eingabe Parametern für den Methodenaufruf übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3161">Calling this method has no effect if there were no handlers registered with criteria that match the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="368fc-3162">Wenn mehr als ein Handler angefügt ist, der mit den Kriterien übereinstimmt, wird nur der erste Handler im Ereignishandlerspeicher entfernt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3162">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="368fc-3163">Dieses Verhalten ist mit [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Verhalten des `-=` Operators konsistent.</span><span class="sxs-lookup"><span data-stu-id="368fc-3163">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="368fc-3164">Weder `routedEvent` noch `handler` werden möglicherweise `null`.</span><span class="sxs-lookup"><span data-stu-id="368fc-3164">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="368fc-3165">Wenn Sie versuchen, einen Wert als `null` anzugeben, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-3165">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="368fc-3166">Diese Methode ignoriert die `handledEventsToo` Parameterinformationen, die bereitgestellt werden, wenn der Handler zum ersten Mal mit der <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur hinzugefügt wurde, die die Verarbeitung von bereits behandelten Ereignissen ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="368fc-3166">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="368fc-3167">Beide Arten von Handlern werden entfernt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3167">Either type of handler is removed.</span></span>  
  
 <span data-ttu-id="368fc-3168"><xref:System.Windows.UIElement3D.RemoveHandler%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3168"><xref:System.Windows.UIElement3D.RemoveHandler%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3169">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3169">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeCommandBindings : unit -&gt; bool" Usage="uIElement3D.ShouldSerializeCommandBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="368fc-3170">Gibt zurück, ob in Serialisierungsprozessen der Inhalt der <see cref="P:System.Windows.UIElement3D.CommandBindings" />-Eigenschaft für Instanzen dieser Klasse serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="368fc-3170">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement3D.CommandBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="368fc-3171"><see langword="true" />, wenn der <see cref="P:System.Windows.UIElement3D.CommandBindings" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-3171"><see langword="true" /> if the <see cref="P:System.Windows.UIElement3D.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3172">Dadurch wird `true` zurückgegeben, wenn <xref:System.Windows.UIElement3D.CommandBindings%2A> lokal festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-3172">This will return `true` if <xref:System.Windows.UIElement3D.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="368fc-3173">Diese `ShouldSerialize` Methode wird bereitgestellt, da die <xref:System.Windows.UIElement3D.CommandBindings%2A>-Eigenschaft keinen einfachen Standardwert hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-3173">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement3D.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="368fc-3174">Diese Methode gibt an, ob die-Eigenschaft ihren Standardwert geändert hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-3174">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="368fc-3175">Sie rufen diese Methode in der Regel auf, wenn Sie einen Designer entwickeln oder ein eigenes Steuerelement entwickeln, das eine <xref:System.Windows.UIElement3D>einbezieht.</span><span class="sxs-lookup"><span data-stu-id="368fc-3175">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-3176">Weitere Informationen finden Sie unter [Definieren von Standardwerten mit den Methoden "dauerdserialisieren" und "Zurücksetzen](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md)".</span><span class="sxs-lookup"><span data-stu-id="368fc-3176">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 <span data-ttu-id="368fc-3177"><xref:System.Windows.UIElement3D.ShouldSerializeCommandBindings%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3177"><xref:System.Windows.UIElement3D.ShouldSerializeCommandBindings%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3178">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3178">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeInputBindings : unit -&gt; bool" Usage="uIElement3D.ShouldSerializeInputBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="368fc-3179">Gibt zurück, ob in Serialisierungsprozessen der Inhalt der <see cref="P:System.Windows.UIElement3D.InputBindings" />-Eigenschaft für Instanzen dieser Klasse serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="368fc-3179">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement3D.InputBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="368fc-3180"><see langword="true" />, wenn der <see cref="P:System.Windows.UIElement3D.InputBindings" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-3180"><see langword="true" /> if the <see cref="P:System.Windows.UIElement3D.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3181">Dadurch wird `true` zurückgegeben, wenn <xref:System.Windows.UIElement3D.InputBindings%2A> lokal festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="368fc-3181">This will return `true` if <xref:System.Windows.UIElement3D.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="368fc-3182">Diese `ShouldSerialize` Methode wird bereitgestellt, da die <xref:System.Windows.UIElement3D.InputBindings%2A>-Eigenschaft keinen einfachen Standardwert hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-3182">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement3D.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="368fc-3183">Diese Methode gibt an, ob die-Eigenschaft ihren Standardwert geändert hat.</span><span class="sxs-lookup"><span data-stu-id="368fc-3183">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="368fc-3184">Sie rufen diese Methode in der Regel auf, wenn Sie einen Designer entwickeln oder ein eigenes Steuerelement entwickeln, das eine <xref:System.Windows.UIElement3D>einbezieht.</span><span class="sxs-lookup"><span data-stu-id="368fc-3184">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="368fc-3185">Weitere Informationen finden Sie unter [Definieren von Standardwerten mit den Methoden "dauerdserialisieren" und "Zurücksetzen](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md)".</span><span class="sxs-lookup"><span data-stu-id="368fc-3185">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 <span data-ttu-id="368fc-3186"><xref:System.Windows.UIElement3D.ShouldSerializeInputBindings%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3186"><xref:System.Windows.UIElement3D.ShouldSerializeInputBindings%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3187">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3187">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3188">Tritt auf, wenn die Stifttaste gedrückt wird, während sich der Zeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3188">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3189">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.StylusButtonDown> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3189">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3190">Ereignishandler, die an das <xref:System.Windows.UIElement3D.StylusButtonDown> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3190">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3191">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3191">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-3192">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3192">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-3193"><xref:System.Windows.UIElement3D.StylusButtonDown> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3193"><xref:System.Windows.UIElement3D.StylusButtonDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3194">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3194">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3195">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3195">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3196">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3196">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusButtonDownEvent>|  
|<span data-ttu-id="368fc-3197">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3197">Routing strategy</span></span>|<span data-ttu-id="368fc-3198">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-3198">Bubbling</span></span>|  
|<span data-ttu-id="368fc-3199">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3199">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-3200">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3200">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="368fc-3201">Überschreiben Sie <xref:System.Windows.UIElement3D.OnStylusButtonDown%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3201">Override <xref:System.Windows.UIElement3D.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3202">Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3202">Identifies the <see cref="E:System.Windows.UIElement3D.StylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3203">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3203">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3204">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3204">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3205">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3205">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3206">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3206">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3207">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3207">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3208"><xref:System.Windows.UIElement3D.StylusButtonDownEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3208"><xref:System.Windows.UIElement3D.StylusButtonDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3209">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3209">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3210">Tritt auf, wenn die Stifttaste losgelassen wird, während sich der Zeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3210">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3211">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.StylusButtonUp> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3211">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3212">Ereignishandler, die an das <xref:System.Windows.UIElement3D.StylusButtonUp> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3212">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3213">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3213">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-3214">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3214">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-3215"><xref:System.Windows.UIElement3D.StylusButtonUp> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3215"><xref:System.Windows.UIElement3D.StylusButtonUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3216">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3216">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3217">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3217">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3218">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3218">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusButtonUpEvent>|  
|<span data-ttu-id="368fc-3219">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3219">Routing strategy</span></span>|<span data-ttu-id="368fc-3220">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-3220">Bubbling</span></span>|  
|<span data-ttu-id="368fc-3221">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3221">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="368fc-3222">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3222">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="368fc-3223">Überschreiben Sie <xref:System.Windows.UIElement3D.OnStylusButtonUp%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3223">Override <xref:System.Windows.UIElement3D.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3224">Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3224">Identifies the <see cref="E:System.Windows.UIElement3D.StylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3225">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3225">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3226">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3226">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3227">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3227">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3228">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3228">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3229">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3229">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3230"><xref:System.Windows.UIElement3D.StylusButtonUpEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3230"><xref:System.Windows.UIElement3D.StylusButtonUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3231">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3231">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberSignature Language="F#" Value="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3232">Tritt auf, wenn der Stift den Digitizer berührt, während sich der Stift über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3232">Occurs when the stylus touches the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3233">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.StylusDown> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3233">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3234">Ereignishandler, die an das <xref:System.Windows.UIElement3D.StylusDown> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3234">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3235">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3235">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-3236">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3236">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-3237"><xref:System.Windows.UIElement3D.StylusDown> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3237"><xref:System.Windows.UIElement3D.StylusDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3238">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3238">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3239">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3239">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3240">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3240">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusDownEvent>|  
|<span data-ttu-id="368fc-3241">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3241">Routing strategy</span></span>|<span data-ttu-id="368fc-3242">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-3242">Bubbling</span></span>|  
|<span data-ttu-id="368fc-3243">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3243">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="368fc-3244">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3244">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="368fc-3245">Überschreiben Sie <xref:System.Windows.UIElement3D.OnStylusDown%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3245">Override <xref:System.Windows.UIElement3D.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3246">Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3246">Identifies the <see cref="E:System.Windows.UIElement3D.StylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3247">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3247">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3248">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3248">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3249">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3249">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3250">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3250">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3251">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3251">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3252"><xref:System.Windows.UIElement3D.StylusDownEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3252"><xref:System.Windows.UIElement3D.StylusDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3253">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3253">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberSignature Language="F#" Value="member this.StylusEnter : System.Windows.Input.StylusEventHandler " Usage="member this.StylusEnter : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3254">Tritt auf, wenn der Stift in den Bereich dieses Elements eintritt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3254">Occurs when the stylus enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3255"><xref:System.Windows.UIElement3D.StylusEnter> ist eine [Übersicht über Routing Ereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) , die die Routing Strategie für die direkte Ereignis Behandlung verwendet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3255"><xref:System.Windows.UIElement3D.StylusEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="368fc-3256">Direkt geroutete Ereignisse werden nicht entlang einer Route ausgelöst. Stattdessen werden Sie im selben Element behandelt, in dem Sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3256">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="368fc-3257">Allerdings ermöglichen Sie andere Aspekte des Routing Ereignis Verhaltens, z. b. Ereignis Trigger in Stilen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3257">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="368fc-3258">Obwohl <xref:System.Windows.UIElement3D.StylusEnter> nachverfolgt, wenn der Tablettstift in den Bereich eines Elements eintritt, meldet dieses Ereignis eher, dass der Wert der <xref:System.Windows.UIElement3D.IsStylusOver%2A>-Eigenschaft von `false` in `true` in diesem Element geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-3258">Although <xref:System.Windows.UIElement3D.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="368fc-3259">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.StylusEnter> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3259">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusEnter> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3260">Ereignishandler, die an das <xref:System.Windows.UIElement3D.StylusEnter> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3260">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3261">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3261">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-3262">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3262">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-3263"><xref:System.Windows.UIElement3D.StylusEnter> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3263"><xref:System.Windows.UIElement3D.StylusEnter> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3264">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3264">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3265">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3265">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3266">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3266">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusEnterEvent>|  
|<span data-ttu-id="368fc-3267">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3267">Routing strategy</span></span>|<span data-ttu-id="368fc-3268">Direkt</span><span class="sxs-lookup"><span data-stu-id="368fc-3268">Direct</span></span>|  
|<span data-ttu-id="368fc-3269">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3269">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="368fc-3270">Überschreiben Sie <xref:System.Windows.UIElement3D.OnStylusEnter%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3270">Override <xref:System.Windows.UIElement3D.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3271">Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusEnter" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3271">Identifies the <see cref="E:System.Windows.UIElement3D.StylusEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3272">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3272">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3273">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3273">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3274">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3274">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3275">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3275">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3276">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3276">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3277"><xref:System.Windows.UIElement3D.StylusEnterEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3277"><xref:System.Windows.UIElement3D.StylusEnterEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3278">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3278">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3279">Tritt auf, wenn der Stift über ein Element bewegt wird, ohne den Digitizer zu berühren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3279">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3280">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.StylusInAirMove> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3280">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3281">Ereignishandler, die an das <xref:System.Windows.UIElement3D.StylusInAirMove> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3281">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3282">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3282">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-3283">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3283">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-3284"><xref:System.Windows.UIElement3D.StylusInAirMove> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3284"><xref:System.Windows.UIElement3D.StylusInAirMove> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3285">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3285">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3286">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3286">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3287">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3287">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusInAirMoveEvent>|  
|<span data-ttu-id="368fc-3288">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3288">Routing strategy</span></span>|<span data-ttu-id="368fc-3289">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-3289">Bubbling</span></span>|  
|<span data-ttu-id="368fc-3290">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3290">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="368fc-3291">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3291">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="368fc-3292">Überschreiben Sie <xref:System.Windows.UIElement3D.OnStylusInAirMove%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3292">Override <xref:System.Windows.UIElement3D.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3293">Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusInAirMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3293">Identifies the <see cref="E:System.Windows.UIElement3D.StylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3294">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3294">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3295">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3295">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3296">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3296">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3297">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3297">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3298">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3298">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3299"><xref:System.Windows.UIElement3D.StylusInAirMoveEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3299"><xref:System.Windows.UIElement3D.StylusInAirMoveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3300">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3300">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberSignature Language="F#" Value="member this.StylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3301">Tritt auf, wenn sich der Tablettstift nah genug am Digitizer befindet, um erkannt zu werden, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3301">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3302">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.StylusInRange> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3302">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusInRange> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3303">Ereignishandler, die an das <xref:System.Windows.UIElement3D.StylusInRange> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3303">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3304">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3304">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-3305">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3305">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-3306"><xref:System.Windows.UIElement3D.StylusInRange> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3306"><xref:System.Windows.UIElement3D.StylusInRange> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3307">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3307">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3308">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3308">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3309">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3309">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusInRangeEvent>|  
|<span data-ttu-id="368fc-3310">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3310">Routing strategy</span></span>|<span data-ttu-id="368fc-3311">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-3311">Bubbling</span></span>|  
|<span data-ttu-id="368fc-3312">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3312">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="368fc-3313">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3313">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="368fc-3314">Überschreiben Sie <xref:System.Windows.UIElement3D.OnStylusInRange%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3314">Override <xref:System.Windows.UIElement3D.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3315">Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusInRange" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3315">Identifies the <see cref="E:System.Windows.UIElement3D.StylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3316">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3316">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3317">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3317">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3318">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3318">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3319">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3319">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3320">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3320">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3321"><xref:System.Windows.UIElement3D.StylusInRangeEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3321"><xref:System.Windows.UIElement3D.StylusInRangeEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3322">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3322">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberSignature Language="F#" Value="member this.StylusLeave : System.Windows.Input.StylusEventHandler " Usage="member this.StylusLeave : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3323">Tritt auf, wenn der Stift den Bereich des Elements verlässt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3323">Occurs when the stylus leaves the bounds of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3324"><xref:System.Windows.UIElement3D.StylusLeave> ist eine [Übersicht über Routing Ereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) , die die Routing Strategie für die direkte Ereignis Behandlung verwendet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3324"><xref:System.Windows.UIElement3D.StylusLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="368fc-3325">Direkt geroutete Ereignisse werden nicht entlang einer Route ausgelöst. Stattdessen werden Sie im selben Element behandelt, in dem Sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3325">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="368fc-3326">Allerdings ermöglichen Sie andere Aspekte des Routing Ereignis Verhaltens, z. b. Ereignis Trigger in Stilen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3326">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="368fc-3327">Obwohl <xref:System.Windows.UIElement3D.StylusLeave> nachverfolgt, wenn der Tablettstift die Begrenzungen eines Elements verlässt, meldet dieses Ereignis eher, dass der Wert der <xref:System.Windows.UIElement3D.IsStylusOver%2A>-Eigenschaft von `true` in `false` in diesem Element geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="368fc-3327">Although <xref:System.Windows.UIElement3D.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="368fc-3328">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.StylusLeave> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3328">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusLeave> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3329">Ereignishandler, die an das <xref:System.Windows.UIElement3D.StylusLeave> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3329">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3330">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3330">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-3331">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3331">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-3332"><xref:System.Windows.UIElement3D.StylusLeave> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3332"><xref:System.Windows.UIElement3D.StylusLeave> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3333">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3333">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3334">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3334">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3335">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3335">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusLeaveEvent>|  
|<span data-ttu-id="368fc-3336">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3336">Routing strategy</span></span>|<span data-ttu-id="368fc-3337">Direkt</span><span class="sxs-lookup"><span data-stu-id="368fc-3337">Direct</span></span>|  
|<span data-ttu-id="368fc-3338">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3338">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="368fc-3339">Überschreiben Sie <xref:System.Windows.UIElement3D.OnStylusLeave%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3339">Override <xref:System.Windows.UIElement3D.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3340">Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusLeave" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3340">Identifies the <see cref="E:System.Windows.UIElement3D.StylusLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3341">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3341">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3342">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3342">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3343">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3343">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3344">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3344">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3345">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3345">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3346"><xref:System.Windows.UIElement3D.StylusLeaveEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3346"><xref:System.Windows.UIElement3D.StylusLeaveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3347">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3347">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberSignature Language="F#" Value="member this.StylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3348">Tritt auf, wenn der Stift über das Element bewegt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3348">Occurs when the stylus moves over this element.</span></span> <span data-ttu-id="368fc-3349">Zum Auslösen dieses Ereignisses muss der Stift auf dem Digitizer bewegt werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3349">The stylus must move while on the digitizer to raise this event.</span></span> <span data-ttu-id="368fc-3350">Andernfalls wird <see cref="E:System.Windows.UIElement3D.StylusInAirMove" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="368fc-3350">Otherwise, <see cref="E:System.Windows.UIElement3D.StylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3351">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.StylusMove> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3351">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3352">Ereignishandler, die an das <xref:System.Windows.UIElement3D.StylusMove> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3352">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3353">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3353">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-3354">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3354">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-3355"><xref:System.Windows.UIElement3D.StylusMove> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3355"><xref:System.Windows.UIElement3D.StylusMove> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3356">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3356">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3357">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3357">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3358">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3358">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusMoveEvent>|  
|<span data-ttu-id="368fc-3359">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3359">Routing strategy</span></span>|<span data-ttu-id="368fc-3360">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-3360">Bubbling</span></span>|  
|<span data-ttu-id="368fc-3361">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3361">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="368fc-3362">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3362">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="368fc-3363">Überschreiben Sie <xref:System.Windows.UIElement3D.OnStylusMove%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3363">Override <xref:System.Windows.UIElement3D.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3364">Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3364">Identifies the <see cref="E:System.Windows.UIElement3D.StylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3365">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3365">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3366">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3366">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3367">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3367">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3368">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3368">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3369">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3369">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3370"><xref:System.Windows.UIElement3D.StylusMoveEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3370"><xref:System.Windows.UIElement3D.StylusMoveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3371">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3371">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3372">Tritt auf, wenn der Stift zu weit vom Digitizer entfernt ist, um erkannt zu werden, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3372">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3373">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.StylusOutOfRange> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3373">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3374">Ereignishandler, die an das <xref:System.Windows.UIElement3D.StylusOutOfRange> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3374">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3375">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3375">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-3376">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3376">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-3377"><xref:System.Windows.UIElement3D.StylusOutOfRange> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3377"><xref:System.Windows.UIElement3D.StylusOutOfRange> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3378">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3378">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3379">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3379">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3380">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3380">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusOutOfRangeEvent>|  
|<span data-ttu-id="368fc-3381">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3381">Routing strategy</span></span>|<span data-ttu-id="368fc-3382">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-3382">Bubbling</span></span>|  
|<span data-ttu-id="368fc-3383">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3383">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="368fc-3384">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3384">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="368fc-3385">Überschreiben Sie <xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3385">Override <xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3386">Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusOutOfRange" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3386">Identifies the <see cref="E:System.Windows.UIElement3D.StylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3387">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3387">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3388">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3388">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3389">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3389">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3390">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3390">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3391">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3391">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3392"><xref:System.Windows.UIElement3D.StylusOutOfRangeEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3392"><xref:System.Windows.UIElement3D.StylusOutOfRangeEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3393">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3393">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3394">Tritt auf, wenn ein Benutzer eine von mehreren Gesten ausführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3394">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3395">Weitere Informationen zu Stift Gesten finden Sie unter <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3395">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="368fc-3396">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.StylusSystemGesture> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3396">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3397">Ereignishandler, die an das <xref:System.Windows.UIElement3D.StylusSystemGesture> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3397">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3398">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3398">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-3399">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3399">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-3400"><xref:System.Windows.UIElement3D.StylusSystemGesture> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3400"><xref:System.Windows.UIElement3D.StylusSystemGesture> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3401">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3401">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3402">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3402">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3403">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3403">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusSystemGestureEvent>|  
|<span data-ttu-id="368fc-3404">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3404">Routing strategy</span></span>|<span data-ttu-id="368fc-3405">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-3405">Bubbling</span></span>|  
|<span data-ttu-id="368fc-3406">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3406">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="368fc-3407">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3407">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="368fc-3408">Überschreiben Sie <xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3408">Override <xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3409">Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusSystemGesture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3409">Identifies the <see cref="E:System.Windows.UIElement3D.StylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3410">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3410">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3411">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3411">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3412">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3412">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3413">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3413">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3414">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3414">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3415"><xref:System.Windows.UIElement3D.StylusSystemGestureEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3415"><xref:System.Windows.UIElement3D.StylusSystemGestureEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3416">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3416">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberSignature Language="F#" Value="member this.StylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.StylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3417">Tritt auf, wenn ein Benutzer den Stift vom Digitizer hebt, während sich der Stift über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3417">Occurs when the user raises the stylus off the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3418">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.StylusUp> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3418">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusUp> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3419">Ereignishandler, die an das <xref:System.Windows.UIElement3D.StylusUp> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3419">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3420">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3420">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="368fc-3421">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Eingabe Übersicht](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3421">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="368fc-3422"><xref:System.Windows.UIElement3D.StylusUp> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3422"><xref:System.Windows.UIElement3D.StylusUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3423">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3423">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3424">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3424">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3425">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3425">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusUpEvent>|  
|<span data-ttu-id="368fc-3426">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3426">Routing strategy</span></span>|<span data-ttu-id="368fc-3427">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-3427">Bubbling</span></span>|  
|<span data-ttu-id="368fc-3428">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3428">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="368fc-3429">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3429">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="368fc-3430">Überschreiben Sie <xref:System.Windows.UIElement3D.OnStylusUp%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3430">Override <xref:System.Windows.UIElement3D.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3431">Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3431">Identifies the <see cref="E:System.Windows.UIElement3D.StylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3432">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3432">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3433">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3433">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3434">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3434">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3435">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3435">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3436">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3436">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3437"><xref:System.Windows.UIElement3D.StylusUpEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3437"><xref:System.Windows.UIElement3D.StylusUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3438">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3438">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3439">Tritt auf, wenn dieses Element Text geräteunabhängig empfängt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3439">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3440">Mit dem <xref:System.Windows.UIElement3D.TextInput>-Ereignis kann eine Komponente oder Anwendung auf geräteunabhängige Weise auf Texteingaben lauschen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3440">The <xref:System.Windows.UIElement3D.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="368fc-3441">Die Tastatur ist das primäre Mittel der <xref:System.Windows.UIElement3D.TextInput>, aber Sprache, Handschrift und andere Eingabegeräte können auch <xref:System.Windows.UIElement3D.TextInput>hervorrufen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3441">The keyboard is the primary means of <xref:System.Windows.UIElement3D.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.UIElement3D.TextInput>.</span></span>  
  
 <span data-ttu-id="368fc-3442">Aufgrund von Tastenkombinationen (entweder in Standard-Tastaturen oder über Eingabemethoden-Editoren) können mehrere Schlüsselereignisse nur ein Texteingabe Ereignis aufwerfen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3442">Because of key combinations - either in default keyboards or through input method editors - multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="368fc-3443">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> angefügte Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement3D.TextInput> Teil der Klassenmembers-Liste ist, wenn <xref:System.Windows.UIElement3D> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3443">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.TextInput> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="368fc-3444">Ereignishandler, die an das <xref:System.Windows.UIElement3D.TextInput> Ereignis angefügt sind, werden an das zugrunde liegende <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen die gleiche Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="368fc-3444">Event handlers that are attached to the <xref:System.Windows.UIElement3D.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="368fc-3445"><xref:System.Windows.UIElement3D.TextInput> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3445"><xref:System.Windows.UIElement3D.TextInput> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3446">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3446">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3447">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3447">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3448">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3448">Identifier field</span></span>|<xref:System.Windows.UIElement3D.TextInputEvent>|  
|<span data-ttu-id="368fc-3449">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3449">Routing strategy</span></span>|<span data-ttu-id="368fc-3450">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-3450">Bubbling</span></span>|  
|<span data-ttu-id="368fc-3451">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3451">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="368fc-3452">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3452">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="368fc-3453">Überschreiben Sie <xref:System.Windows.UIElement3D.OnTextInput%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3453">Override <xref:System.Windows.UIElement3D.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3454">Identifiziert das <see cref="E:System.Windows.UIElement3D.TextInput" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3454">Identifies the <see cref="E:System.Windows.UIElement3D.TextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3455">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3455">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="368fc-3456">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3456">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="368fc-3457">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="368fc-3457">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="368fc-3458">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3458">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="368fc-3459">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3459">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="368fc-3460"><xref:System.Windows.UIElement3D.TextInputEvent> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3460"><xref:System.Windows.UIElement3D.TextInputEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3461">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3461">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberSignature Language="F#" Value="member this.TouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3462">Tritt auf, wenn ein Finger den Bildschirm berührt und sich dieser über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3462">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3463">Standardmäßig treten die <xref:System.Windows.UIElement3D.PreviewTouchDown>-und <xref:System.Windows.UIElement3D.TouchDown> Ereignisse erst auf, wenn ein Finger den Bildschirm berührt und sich verschiebt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3463">By default, the <xref:System.Windows.UIElement3D.PreviewTouchDown> and <xref:System.Windows.UIElement3D.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="368fc-3464">Wenn Sie auf dem Bildschirm einen Finger drücken und ihn ohne verschieben bewegen, wird das Verhalten einer <xref:System.Windows.Input.Stylus>gedrückt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3464">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="368fc-3465">Das Verhalten von Press und Hold entspricht einem Mausklick mit der rechten Maustaste.</span><span class="sxs-lookup"><span data-stu-id="368fc-3465">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="368fc-3466">Damit die <xref:System.Windows.UIElement3D.PreviewTouchDown> und <xref:System.Windows.UIElement3D.TouchDown> Ereignisse auftreten, sobald ein Finger den Bildschirm berührt, legen Sie die <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> angefügte-Eigenschaft auf `false` für dieses Element fest.</span><span class="sxs-lookup"><span data-stu-id="368fc-3466">To cause the <xref:System.Windows.UIElement3D.PreviewTouchDown> and <xref:System.Windows.UIElement3D.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3467">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3467">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3468">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3468">Identifier field</span></span>|<xref:System.Windows.UIElement3D.TouchDownEvent>|  
|<span data-ttu-id="368fc-3469">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3469">Routing strategy</span></span>|<span data-ttu-id="368fc-3470">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-3470">Bubbling</span></span>|  
|<span data-ttu-id="368fc-3471">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3471">Delegate</span></span>|<span data-ttu-id="368fc-3472">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3472"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="368fc-3473">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3473">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="368fc-3474">Überschreiben Sie <xref:System.Windows.UIElement3D.OnTouchDown%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3474">Override <xref:System.Windows.UIElement3D.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3475">Identifiziert das <see cref="E:System.Windows.UIElement3D.TouchDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3475">Identifies the <see cref="E:System.Windows.UIElement3D.TouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberSignature Language="F#" Value="member this.TouchEnter : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchEnter : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3476">Tritt ein, wenn sich eine Fingereingabe in die Grenzen dieses Elements hineinbewegt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3476">Occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3477">Dieses Ereignis wird immer ausgelöst, unabhängig davon, ob das Finger Eingabegerät für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="368fc-3477">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3478">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3478">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3479">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3479">Identifier field</span></span>|<xref:System.Windows.UIElement3D.TouchEnterEvent>|  
|<span data-ttu-id="368fc-3480">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3480">Routing strategy</span></span>|<span data-ttu-id="368fc-3481">Direkt</span><span class="sxs-lookup"><span data-stu-id="368fc-3481">Direct</span></span>|  
|<span data-ttu-id="368fc-3482">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3482">Delegate</span></span>|<span data-ttu-id="368fc-3483">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3483"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="368fc-3484">Überschreiben Sie <xref:System.Windows.UIElement3D.OnTouchEnter%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3484">Override <xref:System.Windows.UIElement3D.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TouchEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3485">Identifiziert das <see cref="E:System.Windows.UIElement3D.TouchEnter" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3485">Identifies the <see cref="E:System.Windows.UIElement3D.TouchEnter" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCaptured : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement3D.TouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3486">Ruft alle Fingereingabegeräte ab, die für dieses Element erfasst werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3486">Gets all touch devices that are captured to this element.</span></span></summary>
        <value><span data-ttu-id="368fc-3487">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die für dieses Element erfasst werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3487">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCapturedWithin : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement3D.TouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3488">Ruft alle Fingereingabegeräte ab, die für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3488">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="368fc-3489">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst werden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3489">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesDirectlyOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement3D.TouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3490">Ruft alle Fingereingabegeräte ab, die sich über diesem Element befinden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3490">Gets all touch devices that are over this element.</span></span></summary>
        <value><span data-ttu-id="368fc-3491">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die sich über diesem Element befinden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3491">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement3D.TouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3492">Ruft alle Fingereingabegeräte ab, die sich über diesem Element oder seinen untergeordneten Elementen in der visuellen Struktur befinden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3492">Gets all touch devices that are over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="368fc-3493">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die sich über diesem Element oder seinen untergeordneten Elemente in der visuellen Struktur befinden.</span><span class="sxs-lookup"><span data-stu-id="368fc-3493">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberSignature Language="F#" Value="member this.TouchLeave : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchLeave : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3494">Tritt ein, wenn sich eine Fingereingabe aus den Grenzen dieses Elements herausbewegt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3494">Occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3495">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3495">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3496">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3496">Identifier field</span></span>|<xref:System.Windows.UIElement3D.TouchLeaveEvent>|  
|<span data-ttu-id="368fc-3497">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3497">Routing strategy</span></span>|<span data-ttu-id="368fc-3498">Direkt</span><span class="sxs-lookup"><span data-stu-id="368fc-3498">Direct</span></span>|  
|<span data-ttu-id="368fc-3499">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3499">Delegate</span></span>|<span data-ttu-id="368fc-3500">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3500"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="368fc-3501">Überschreiben Sie <xref:System.Windows.UIElement3D.OnTouchLeave%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3501">Override <xref:System.Windows.UIElement3D.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TouchLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3502">Identifiziert das <see cref="E:System.Windows.UIElement3D.TouchLeave" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3502">Identifies the <see cref="E:System.Windows.UIElement3D.TouchLeave" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberSignature Language="F#" Value="member this.TouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3503">Tritt auf, wenn sich ein Finger auf dem Bildschirm bewegt, während sich der Finger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3503">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3504">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3504">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3505">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3505">Identifier field</span></span>|<xref:System.Windows.UIElement3D.TouchMoveEvent>|  
|<span data-ttu-id="368fc-3506">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3506">Routing strategy</span></span>|<span data-ttu-id="368fc-3507">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-3507">Bubbling</span></span>|  
|<span data-ttu-id="368fc-3508">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3508">Delegate</span></span>|<span data-ttu-id="368fc-3509">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3509"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="368fc-3510">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3510">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="368fc-3511">Überschreiben Sie <xref:System.Windows.UIElement3D.OnTouchMove%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3511">Override <xref:System.Windows.UIElement3D.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3512">Identifiziert das <see cref="E:System.Windows.UIElement3D.TouchMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3512">Identifies the <see cref="E:System.Windows.UIElement3D.TouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberSignature Language="F#" Value="member this.TouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3513">Tritt auf, wenn ein Finger vom Bildschirm genommen wird, während sich der Finger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3513">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="368fc-3514">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="368fc-3514">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3515">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3515">Identifier field</span></span>|<xref:System.Windows.UIElement3D.TouchUpEvent>|  
|<span data-ttu-id="368fc-3516">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="368fc-3516">Routing strategy</span></span>|<span data-ttu-id="368fc-3517">Blasen</span><span class="sxs-lookup"><span data-stu-id="368fc-3517">Bubbling</span></span>|  
|<span data-ttu-id="368fc-3518">Delegat</span><span class="sxs-lookup"><span data-stu-id="368fc-3518">Delegate</span></span>|<span data-ttu-id="368fc-3519">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3519"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="368fc-3520">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="368fc-3520">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="368fc-3521">Überschreiben Sie <xref:System.Windows.UIElement3D.OnTouchUp%2A>, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="368fc-3521">Override <xref:System.Windows.UIElement3D.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3522">Identifiziert das <see cref="E:System.Windows.UIElement3D.TouchUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="368fc-3522">Identifies the <see cref="E:System.Windows.UIElement3D.TouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility Visibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberSignature Language="F#" Value="member this.Visibility : System.Windows.Visibility with get, set" Usage="System.Windows.UIElement3D.Visibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3523">Ruft die [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]-Sichtbarkeit dieses Elements ab oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="368fc-3523">Gets or sets the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] visibility of this element.</span></span></summary>
        <value><span data-ttu-id="368fc-3524">Ein Wert aus der Enumeration.</span><span class="sxs-lookup"><span data-stu-id="368fc-3524">A value of the enumeration.</span></span> <span data-ttu-id="368fc-3525">Der Standardwert ist <see cref="F:System.Windows.Visibility.Visible" />.</span><span class="sxs-lookup"><span data-stu-id="368fc-3525">The default value is <see cref="F:System.Windows.Visibility.Visible" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3526">Wenn Sie diese Eigenschaft festlegen, wirkt sich dies auf den Wert von <xref:System.Windows.UIElement3D.IsVisible%2A>aus, der wiederum das <xref:System.Windows.UIElement3D.IsVisibleChanged> Ereignis hervorrufen kann.</span><span class="sxs-lookup"><span data-stu-id="368fc-3526">Setting this property affects the value of <xref:System.Windows.UIElement3D.IsVisible%2A>, which in turn may raise the <xref:System.Windows.UIElement3D.IsVisibleChanged> event.</span></span> <span data-ttu-id="368fc-3527"><xref:System.Windows.UIElement3D.IsVisible%2A> hat jedoch andere Faktoren, die dies beeinflussen, z. a. die Sichtbarkeitseinstellungen von übergeordneten Elementen, die Sie enthalten.</span><span class="sxs-lookup"><span data-stu-id="368fc-3527">However, <xref:System.Windows.UIElement3D.IsVisible%2A> has other factors that influence it, for instance the visibility settings of parents that contain it.</span></span>  
  
 <span data-ttu-id="368fc-3528">Elemente, bei denen <xref:System.Windows.UIElement3D.Visibility%2A> nicht <xref:System.Windows.Visibility.Visible> ist, nehmen nicht an Eingabe Ereignissen (oder Befehlen) Teil und werden nicht in Treffer Tests gemeldet.</span><span class="sxs-lookup"><span data-stu-id="368fc-3528">Elements where <xref:System.Windows.UIElement3D.Visibility%2A> is not <xref:System.Windows.Visibility.Visible> do not participate in input events (or commands) and are not reported in hit testing.</span></span>  
  
 <span data-ttu-id="368fc-3529"><xref:System.Windows.UIElement3D.Visibility%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3529"><xref:System.Windows.UIElement3D.Visibility%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3530">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3530">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_Visibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="368fc-3531">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="368fc-3531">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="368fc-3532">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="368fc-3532">Identifier field</span></span>|<xref:System.Windows.UIElement3D.VisibilityProperty>|  
|<span data-ttu-id="368fc-3533">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="368fc-3533">Metadata properties set to `true`</span></span>|<span data-ttu-id="368fc-3534">Keine</span><span class="sxs-lookup"><span data-stu-id="368fc-3534">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsVisible" />
        <altmember cref="T:System.Windows.Visibility" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.VisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.VisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="368fc-3535">Identifiziert die <see cref="P:System.Windows.UIElement3D.Visibility" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="368fc-3535">Identifies the <see cref="P:System.Windows.UIElement3D.Visibility" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368fc-3536"><xref:System.Windows.UIElement3D.VisibilityProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="368fc-3536"><xref:System.Windows.UIElement3D.VisibilityProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="368fc-3537">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="368fc-3537">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
