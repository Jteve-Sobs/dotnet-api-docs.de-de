<Type Name="NameScope" FullName="System.Windows.NameScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="54363e8fcdc2b3d6e2f5479db58db92c116934de" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69444338" /></Metadata><TypeSignature Language="C#" Value="public class NameScope : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, System.Collections.Generic.IDictionary&lt;string,object&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, System.Windows.Markup.INameScopeDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameScope extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;string, object&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable, class System.Windows.Markup.INameScope, class System.Windows.Markup.INameScopeDictionary" />
  <TypeSignature Language="DocId" Value="T:System.Windows.NameScope" />
  <TypeSignature Language="VB.NET" Value="Public Class NameScope&#xA;Implements ICollection(Of KeyValuePair(Of String, Object)), IDictionary(Of String, Object), IEnumerable(Of KeyValuePair(Of String, Object)), INameScopeDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameScope : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;, System::Windows::Markup::INameScopeDictionary" />
  <TypeSignature Language="F#" Value="type NameScope = class&#xA;    interface INameScopeDictionary&#xA;    interface INameScope&#xA;    interface IDictionary&lt;string, obj&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.INameScope</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.INameScopeDictionary</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fb0e9-101">Implementiert WPF-Basisunterstützung für die <see cref="T:System.Windows.Markup.INameScope" />-Methoden zum Speichern oder Abrufen von Name-Objekt-Zuordnungen in einem bestimmten XAML-Namensbereich.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-101">Implements base WPF support for the <see cref="T:System.Windows.Markup.INameScope" /> methods that store or retrieve name-object mappings into a particular XAML namescope.</span></span> <span data-ttu-id="fb0e9-102">Fügt Unterstützung für angefügte Eigenschaften hinzu, damit Namen im XAML-Namensbereich auf Elementebene leichter dynamisch abgerufen oder festgelegt werden können.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-102">Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb0e9-103">Diese Klasse implementiert die integrierte XAML-Namescope-Unterstützung für die WPF-Behandlung von XAML.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-103">This class implements built-in XAML namescope support for WPF treatment of XAML.</span></span> <span data-ttu-id="fb0e9-104"><xref:System.Windows.NameScope>unterstützt die Erstellung von anfänglichen XAML-Namescopes auf der Grundlage von XAML-Vorlagen, z. b. beim Instanziieren von Stilen und Vorlagen.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-104"><xref:System.Windows.NameScope> assists in creation of initial XAML namescopes based on parsing XAML, such as when instantiating styles and templates.</span></span> <span data-ttu-id="fb0e9-105">Sie unterstützt auch die Erstellung von XAML-Namescopes durch Prozesse, die außerhalb des normalen XAML-Ladens von Elementen durch die WPF-XAML-Prozessor Implementierung auftreten.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-105">It also supports creation of XAML namescopes by processes that occur outside of normal XAML loading of elements by the WPF XAML processor implementation.</span></span>  
  
 <span data-ttu-id="fb0e9-106"><xref:System.Windows.NameScope>ist im Allgemeinen für die Bereitstellung von Infrastrukturen besser geeignet als für gängige Benutzercode Szenarien, in denen die Arbeit mit einem XAML-Namescope beteiligt ist.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-106"><xref:System.Windows.NameScope> is generally more devoted to supplying infrastructure than for common user code scenarios that involve working with a XAML namescope.</span></span> <span data-ttu-id="fb0e9-107">In den meisten Szenarios <xref:System.Windows.FrameworkElement.FindName%2A> sind die unter <xref:System.Windows.FrameworkElement> und <xref:System.Windows.FrameworkContentElement> verfügbar gemachten Methoden geeignetere Methoden, um aufzurufen, um nach Elementen nach XAML-definiertem Namen zu suchen.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-107">For most scenarios, the <xref:System.Windows.FrameworkElement.FindName%2A> methods exposed on <xref:System.Windows.FrameworkElement> and <xref:System.Windows.FrameworkContentElement> are more appropriate methods to call to search for elements by XAML-defined name.</span></span> <span data-ttu-id="fb0e9-108">Die <xref:System.Windows.FrameworkElement.Name%2A> Eigenschaften, die <xref:System.Windows.FrameworkElement> von <xref:System.Windows.FrameworkContentElement> und verfügbar gemacht werden, sind geeignetere Eigenschaften, mit denen der Anfangs Name als Markup Attribute festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-108">The <xref:System.Windows.FrameworkElement.Name%2A> properties exposed by <xref:System.Windows.FrameworkElement> and <xref:System.Windows.FrameworkContentElement> are more appropriate properties to use to set the initial name as markup attributes.</span></span>  
  
 <span data-ttu-id="fb0e9-109">Die verschiedenen Methoden von <xref:System.Windows.NameScope> werden von Basiselementen und anderen Klassen verwendet, die XAML-Namescopes verwalten, um <xref:System.Windows.Markup.INameScope.RegisterName%2A> und <xref:System.Windows.Markup.INameScope.FindName%2A>zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-109">The various methods of <xref:System.Windows.NameScope> are used by base elements and other classes that maintain XAML namescopes in order to support <xref:System.Windows.Markup.INameScope.RegisterName%2A> and <xref:System.Windows.Markup.INameScope.FindName%2A>.</span></span> <span data-ttu-id="fb0e9-110">In der Regel verwenden Sie die API <xref:System.Windows.NameScope> nur dann in der-Klasse, wenn Sie das Basiselement Verhalten für die Verarbeitung von XAML-Namescopes für Stamm Elemente einer XAML-Seite und als Teil von Vorlagen (die einen separaten XAML-Namescope verwenden, aus dem Rest des ein.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-110">You generally use the API in the <xref:System.Windows.NameScope> class only if you are replacing or augmenting the base element behavior for how they process XAML namescopes for root elements of a XAML page, and as part of templates (which use a separate XAML namescope from the rest of the page).</span></span>  
  
 <span data-ttu-id="fb0e9-111">In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]stellt Auflistungs Schnittstellen Implementierungen bereit, sodass Sie auf die von einem XAML-Namescope gespeicherten Auflistungen von Namen zugreifen können. Dies schließt auch das Hinzufügen zu einer-Methode durch Aufrufe einer-Methode ein <xref:System.Windows.NameScope.Add%2A>. <xref:System.Windows.NameScope></span><span class="sxs-lookup"><span data-stu-id="fb0e9-111">In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.NameScope> provides collection interface implementations such that you can access the collections of names that are held by a XAML namescope, including adding to it through calls to an <xref:System.Windows.NameScope.Add%2A> method.</span></span>  
  
 <span data-ttu-id="fb0e9-112">Weitere Informationen zu XAML-Namescope-Konzepten finden Sie unter [WPF-XAML-Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="fb0e9-112">For more information on XAML namescope concepts, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 <span data-ttu-id="fb0e9-113">Namen in einem XAML-Namescope müssen eine bestimmte Grammatik verwenden, die die Zeichen folgen einschränkt, die Sie <xref:System.Windows.NameScope> für die Eingabe von API verwenden können.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-113">Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <xref:System.Windows.NameScope> API.</span></span> <span data-ttu-id="fb0e9-114">Siehe [XamlName-Grammatik](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="fb0e9-114">See [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.INameScope" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameScope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb0e9-115">Initialisiert eine neue Instanz der <see cref="T:System.Windows.NameScope" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-115">Initializes a new instance of the <see cref="T:System.Windows.NameScope" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb0e9-116">Fügt der Auflistung ein Element hinzu.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-116">Adds an item to the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; unit&#xA;override this.Add : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; unit" Usage="nameScope.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="fb0e9-117">Ein <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (der Schlüssel ist <see cref="T:System.String" />, der Wert ist <see cref="T:System.Object" />), das die Namenszuordnung darstellt, die dem XAML-NameScope hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-117">A <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (key is <see cref="T:System.String" />, value is <see cref="T:System.Object" />) that represents the name mapping to add to the XAML namescope.</span></span></param>
        <summary><span data-ttu-id="fb0e9-118">Fügt der Auflistung ein Element hinzu.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-118">Adds an item to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fb0e9-119">Eine oder beide Komponenten von <paramref name="item" /> sind <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-119">Either or both components of <paramref name="item" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj -&gt; unit&#xA;override this.Add : string * obj -&gt; unit" Usage="nameScope.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fb0e9-120">Der Zeichenfolgenschlüssel, der den Namen der Zuordnung für den XAML-Namescope darstellt, die hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-120">The string key, which is the name of the XAML namescope mapping to add.</span></span></param>
        <param name="value"><span data-ttu-id="fb0e9-121">Der Objektwert, der den Objektverweis der Zuordnung für den XAML-Namescope darstellt, die hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-121">The object value, which is the object reference of the XAML namescope mapping to add.</span></span></param>
        <summary><span data-ttu-id="fb0e9-122">Fügt der Auflistung ein Element hinzu.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-122">Adds an item to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb0e9-123">Diese Methode wird im <xref:System.Windows.NameScope.Add%2A> Grunde umschlossen, sodass es nicht erforderlich ist <xref:System.Collections.Generic.KeyValuePair%602> , den-Typ in ihre Verwendung einzubeziehen.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-123">This method basically wraps <xref:System.Windows.NameScope.Add%2A> so that it is not necessary to involve the <xref:System.Collections.Generic.KeyValuePair%602> type in your usage.</span></span>  
  
 <span data-ttu-id="fb0e9-124">Namen in einem XAML-Namescope müssen eine bestimmte Grammatik verwenden, die die Zeichen folgen einschränkt, die Sie <xref:System.Windows.NameScope> für die Eingabe von API verwenden können.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-124">Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <xref:System.Windows.NameScope> API.</span></span> <span data-ttu-id="fb0e9-125">Siehe [XamlName-Grammatik](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="fb0e9-125">See [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fb0e9-126"><paramref name="key" /> oder <paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-126"><paramref name="key" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="nameScope.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb0e9-127">Entfernt alle Elemente aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-127">Removes all items from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As KeyValuePair(Of String, Object)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool&#xA;override this.Contains : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool" Usage="nameScope.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="fb0e9-128">Das Element, das in der Auflistung gesucht werden soll, angegeben als <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (der Schlüssel ist <see cref="T:System.String" />, der Wert ist <see cref="T:System.Object" />).</span><span class="sxs-lookup"><span data-stu-id="fb0e9-128">The item to find in the collection, specified as a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (key is <see cref="T:System.String" />, value is <see cref="T:System.Object" />).</span></span></param>
        <summary><span data-ttu-id="fb0e9-129">Bestimmt, ob die Auflistung ein angegebenes Element enthält.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-129">Determines whether the collection contains a specified item.</span></span></summary>
        <returns><span data-ttu-id="fb0e9-130"><see langword="true" />, wenn das angegebene <see cref="T:System.Collections.Generic.KeyValuePair`2" /> eine vorhandene Zuordnung in diesem <see cref="T:System.Windows.NameScope" /> identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-130"><see langword="true" /> if the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> identifies an existing mapping in this <see cref="T:System.Windows.NameScope" /> .</span></span> <span data-ttu-id="fb0e9-131"><see langword="false" />, wenn der angegebene <see cref="T:System.Collections.Generic.KeyValuePair`2" /> im aktuellen <see cref="T:System.Windows.NameScope" /> nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-131"><see langword="false" /> if the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> does not exist in the current <see cref="T:System.Windows.NameScope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb0e9-132">Im Allgemeinen sind Sie nur daran interessiert, ob ein Name bereits im XAML-Namescope definiert ist und welcher Objekt Verweis Wert, dem er zugeordnet ist, unerheblich ist.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-132">Generally you are only interested in whether a name is already defined in the XAML namescope, and what object reference value it is mapped to is immaterial.</span></span> <span data-ttu-id="fb0e9-133">In diesem Szenario können Sie stattdessen aufruft <xref:System.Windows.NameScope.ContainsKey%2A> .</span><span class="sxs-lookup"><span data-stu-id="fb0e9-133">For this scenario, you can call <xref:System.Windows.NameScope.ContainsKey%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fb0e9-134"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-134"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="nameScope.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fb0e9-135">Der zu suchende Zeichenfolgenschlüssel.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-135">The string key to find.</span></span></param>
        <summary><span data-ttu-id="fb0e9-136">Gibt zurück, ob ein angegebener Name bereits in diesem <see cref="T:System.Windows.NameScope" /> vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-136">Returns whether a provided name already exists in this <see cref="T:System.Windows.NameScope" />.</span></span></summary>
        <returns><span data-ttu-id="fb0e9-137"><see langword="true" />, wenn der angegebene <paramref name="key" /> einen Namen für eine vorhandene Zuordnung in diesem <see cref="T:System.Windows.NameScope" /> identifiziert.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-137"><see langword="true" /> if the specified <paramref name="key" /> identifies a name for an existing mapping in this <see cref="T:System.Windows.NameScope" />.</span></span> <span data-ttu-id="fb0e9-138"><see langword="false" />, wenn der angegebene <paramref name="key" /> im aktuellen <see cref="T:System.Windows.NameScope" /> nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-138"><see langword="false" /> if the specified <paramref name="key" /> does not exist in the current <see cref="T:System.Windows.NameScope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb0e9-139">Namen in einem XAML-Namescope müssen eine bestimmte Grammatik verwenden, die die Zeichen folgen einschränkt, die Sie <xref:System.Windows.NameScope> für die Eingabe von API verwenden können.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-139">Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <xref:System.Windows.NameScope> API.</span></span> <span data-ttu-id="fb0e9-140">Siehe [XamlName-Grammatik](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="fb0e9-140">See [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fb0e9-141"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-141"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of String, Object)(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] * int -&gt; unit" Usage="nameScope.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="fb0e9-142">Das eindimensionale Array, das das Ziel der aus der Auflistung kopierten Elemente darstellt. Das Array muss eine nullbasierte Indizierung aufweisen.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-142">The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="fb0e9-143">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-143">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="fb0e9-144">Kopiert die Elemente der Auflistung in ein Array, wobei an einem bestimmten Arrayindex begonnen wird.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-144">Copies the elements of the collection to an array, starting at a particular array index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.NameScope.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb0e9-145">Gibt die Anzahl der Elemente in der Auflistung zugeordneter Namen in diesem <see cref="T:System.Windows.NameScope" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-145">Returns the number of items in the collection of mapped names in this <see cref="T:System.Windows.NameScope" />.</span></span></summary>
        <value><span data-ttu-id="fb0e9-146">Die Anzahl der Elemente in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-146">The number of items in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ FindName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member FindName : string -&gt; obj&#xA;override this.FindName : string -&gt; obj" Usage="nameScope.FindName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.FindName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fb0e9-147">Der Namensteil einer vorhandenen Zuordnung, für den der Objektteil abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-147">Name portion of an existing mapping to retrieve the object portion for.</span></span></param>
        <summary><span data-ttu-id="fb0e9-148">Gibt das einer angegebenen Namenszeichenfolge entsprechende Objekt im XAML-Namensbereich zurück, das von diesem <see cref="T:System.Windows.NameScope" /> verwaltet wird.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-148">Returns the corresponding object in the XAML namescope maintained by this <see cref="T:System.Windows.NameScope" />, based on a provided name string.</span></span></summary>
        <returns><span data-ttu-id="fb0e9-149">Das angeforderte Objekt, das <paramref name="name" /> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-149">The requested object that is mapped with <paramref name="name" />.</span></span> <span data-ttu-id="fb0e9-150">Kann <see langword="null" /> zurückgeben, wenn <see langword="null" /> oder leere Zeichenfolge für <paramref name="name" /> bereitgestellt wurde oder wenn kein übereinstimmendes Objekt gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-150">Can return <see langword="null" /> if <paramref name="name" /> was provided as <see langword="null" /> or empty string, or if no matching object was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb0e9-151">Mehrere Basiselemente (<xref:System.Windows.FrameworkElement>, <xref:System.Windows.FrameworkElement>) machen außerdem eine `FindName` Methode mit identischer Funktionalität verfügbar.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-151">Several base elements (<xref:System.Windows.FrameworkElement>, <xref:System.Windows.FrameworkElement>) also expose a `FindName` method with identical functionality.</span></span> <span data-ttu-id="fb0e9-152">Die Basiselement Versionen führen eine XAML-Namescope-Suche innerhalb der konventionellen logischen Struktur durch und arbeiten an dem Stamm Element.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-152">The base element versions perform a XAML namescope search within the conventional logical tree, working towards the root element.</span></span> <span data-ttu-id="fb0e9-153">Sobald der XAML-Namescope bestimmt ist, wird der XAML-Namescope nach dem angeforderten Namen abgefragt.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-153">Once the XAML namescope is determined, that XAML namescope is queried for the requested name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.FindName(System.String)" />
        <altmember cref="M:System.Windows.FrameworkContentElement.FindName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNameScope">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.INameScope GetNameScope (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.INameScope GetNameScope(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::INameScope ^ GetNameScope(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetNameScope : System.Windows.DependencyObject -&gt; System.Windows.Markup.INameScope" Usage="System.Windows.NameScope.GetNameScope dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.8;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="fb0e9-154">Das Objekt, aus dem der XAML-Namensbereich abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-154">The object to get the XAML namescope from.</span></span></param>
        <summary><span data-ttu-id="fb0e9-155">Stellt den get-Accessor für die angefügte <see cref="P:System.Windows.NameScope.NameScope" />-Eigenschaft bereit.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-155">Provides the attached property get accessor for the <see cref="P:System.Windows.NameScope.NameScope" /> attached property.</span></span></summary>
        <returns><span data-ttu-id="fb0e9-156">Ein XAML-Namensbereich als <see cref="T:System.Windows.Markup.INameScope" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-156">A XAML namescope, as an <see cref="T:System.Windows.Markup.INameScope" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb0e9-157">Der Zweck dieser Methode besteht darin, den-Accessor für die `get` Verwendung <xref:System.Windows.NameScope.NameScope%2A> von als angefügte Eigenschaft in der XAML-Verwendung zu implementieren und den-Accessor für die Ausführung der entsprechenden Operation im Code bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-157">The purpose of this method is both to implement the `get` accessor for using <xref:System.Windows.NameScope.NameScope%2A> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fb0e9-158"><paramref name="dependencyObject" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-158"><paramref name="dependencyObject" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.NameScope.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb0e9-159">Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-159">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="fb0e9-160">Gibt immer <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-160">Always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Windows.NameScope.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fb0e9-161">Der Zeichenfolgenname für die XAML-Namenszuordnung, die abgerufen oder festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-161">The string name for the XAML name mapping to get or set.</span></span></param>
        <summary><span data-ttu-id="fb0e9-162">Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-162">Gets or sets the item with the specified key.</span></span></summary>
        <value><span data-ttu-id="fb0e9-163">Der Wert des Objekts, das vom XAML-Namen zugeordnet wird, angegeben als <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-163">The value of the object mapped by the XAML name provided as <paramref name="key" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fb0e9-164"><paramref name="key" /> wird als <see langword="null" /> bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-164"><paramref name="key" /> is provided as <see langword="null" />.</span></span>  
  
<span data-ttu-id="fb0e9-165">- oder -</span><span class="sxs-lookup"><span data-stu-id="fb0e9-165">-or-</span></span> 
 <span data-ttu-id="fb0e9-166"><paramref name="value" /> wird als <see langword="null" /> für einen Set-Vorgang bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-166"><paramref name="value" /> is provided as <see langword="null" /> for a set operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;string&gt;" Usage="System.Windows.NameScope.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb0e9-167">Ruft eine Auflistung aller im <see cref="T:System.Windows.NameScope" />-Wörterbuch enthaltenen Schlüssel ab.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-167">Gets a collection of the keys in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></summary>
        <value><span data-ttu-id="fb0e9-168">Eine Auflistung aller im <see cref="T:System.Windows.NameScope" />-Wörterbuch enthaltenen Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-168">A collection of the keys in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameScope">
      <MemberSignature Language="C#" Value="see GetNameScope, and SetNameScope" />
      <MemberSignature Language="ILAsm" Value="see GetNameScope, and SetNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.NameScope" />
      <MemberSignature Language="VB.NET" Value="see GetNameScope, and SetNameScope" />
      <MemberSignature Language="F#" Value="see GetNameScope, and SetNameScope" Usage="see GetNameScope, and SetNameScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb0e9-169">Ruft dynamisch angefügte <see cref="T:System.Windows.NameScope" />-Instanzen ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-169">Gets or sets dynamically attached <see cref="T:System.Windows.NameScope" /> instances.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb0e9-170">Diese angefügte Eigenschaft erfordert die Verwendung angefügter Eigenschaften in XAML oder <xref:System.Windows.NameScope.GetNameScope%2A> die <xref:System.Windows.NameScope.SetNameScope%2A> Verwendung der Accessoren und im Code.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-170">This attached property requires attached property usage in XAML, or use of the <xref:System.Windows.NameScope.GetNameScope%2A> and <xref:System.Windows.NameScope.SetNameScope%2A> accessors in code.</span></span> <span data-ttu-id="fb0e9-171">Das Festlegen des Namescope in XAML ist nicht üblich.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-171">Setting the namescope in XAML is not common.</span></span> <span data-ttu-id="fb0e9-172">Die Verwendung angefügter Eigenschaften dient in erster Linie dazu, XAML-Namescopes an Objekte anzufügen, die keine Vererbung für XAML-Namescope-Implementierungen gemeinsam verwenden.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-172">The attached property usage is primarily to facilitate attaching XAML namescopes to objects that do not share inheritance for XAML namescope implementations.</span></span> <span data-ttu-id="fb0e9-173"><xref:System.Windows.DependencyObject>und abgeleitete Klassen unterstützen diese Vererbung nativ.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-173"><xref:System.Windows.DependencyObject> and derived classes support this inheritance natively.</span></span>  
  
<a name="dependencyPropertyInfo_NameScope"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fb0e9-174">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="fb0e9-174">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fb0e9-175">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="fb0e9-175">Identifier field</span></span>|<xref:System.Windows.NameScope.NameScopeProperty>|  
|<span data-ttu-id="fb0e9-176">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="fb0e9-176">Metadata properties set to `true`</span></span>|<span data-ttu-id="fb0e9-177">Keine</span><span class="sxs-lookup"><span data-stu-id="fb0e9-177">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.INameScope" />
      </Docs>
    </Member>
    <Member MemberName="NameScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.NameScope.NameScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.NameScope.NameScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb0e9-178">Bezeichnet die angefügte <see cref="P:System.Windows.NameScope.NameScope" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-178">Identifies the <see cref="P:System.Windows.NameScope.NameScope" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit&#xA;override this.RegisterName : string * obj -&gt; unit" Usage="nameScope.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="scopedElement" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fb0e9-179">Der Name, der zum Zuordnen des angegebenen Objekts verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-179">The name to use for mapping the given object.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="fb0e9-180">Das Objekt, das dem angegebenen Namen zugeordnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-180">The object to be mapped to the provided name.</span></span></param>
        <summary><span data-ttu-id="fb0e9-181">Registriert ein neues Name/Objekt-Paar beim aktuellen XAML-Namensbereich.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-181">Registers a new name-object pair into the current XAML namescope.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fb0e9-182"><paramref name="name" /> oder <paramref name="scopedElement" /> wurde als <see langword="null" /> bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-182"><paramref name="name" /> or <paramref name="scopedElement" /> was provided as <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fb0e9-183"><paramref name="name" /> wurde als leere Zeichenfolge bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-183"><paramref name="name" /> was provided as empty string</span></span> 
<span data-ttu-id="fb0e9-184">- oder -</span><span class="sxs-lookup"><span data-stu-id="fb0e9-184">-or-</span></span> 
 <span data-ttu-id="fb0e9-185">Der bereitgestellte <paramref name="name" /> wurde vom Parser abgelehnt, da er Zeichen enthält, die für XAML-Namen ungültig sind</span><span class="sxs-lookup"><span data-stu-id="fb0e9-185"><paramref name="name" /> provided was rejected by the parser, because it contained characters that are invalid for a XAML name</span></span> 
<span data-ttu-id="fb0e9-186">- oder -</span><span class="sxs-lookup"><span data-stu-id="fb0e9-186">-or-</span></span> 
 <span data-ttu-id="fb0e9-187">Der bereitgestellte <paramref name="name" /> würde zu einer doppelten Namensregistrierung führen.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-187"><paramref name="name" /> provided would result in a duplicate name registration.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
        <altmember cref="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)" />
        <altmember cref="M:System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb0e9-188">Entfernt das spezifische Objekt aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-188">Removes the specific object from the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As KeyValuePair(Of String, Object)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool&#xA;override this.Remove : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool" Usage="nameScope.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="fb0e9-189">Das Objekt, das aus der Auflistung entfernt werden soll, angegeben als <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (der Schlüssel ist <see cref="T:System.String" />, der Wert ist <see cref="T:System.Object" />).</span><span class="sxs-lookup"><span data-stu-id="fb0e9-189">The object to remove from the collection, specified as a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (key is <see cref="T:System.String" />, value is <see cref="T:System.Object" />).</span></span></param>
        <summary><span data-ttu-id="fb0e9-190">Entfernt das spezifische Objekt aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-190">Removes the specific object from the collection.</span></span></summary>
        <returns><span data-ttu-id="fb0e9-191"><see langword="true" />, wenn das Element erfolgreich aus der Auflistung entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-191"><see langword="true" /> if item was successfully removed from the collection, otherwise <see langword="false" />.</span></span> <span data-ttu-id="fb0e9-192">Gibt auch dann <see langword="false" /> zurück, wenn das Element nicht in der Auflistung gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-192">Also returns <see langword="false" /> if the item was not found in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb0e9-193">Da <xref:System.Windows.NameScope> ein Wörterbuch ist, gibt es kein Konzept des ersten Vorkommens <xref:System.Collections.Generic.KeyValuePair%602> ; jede angegebene ist garantiert eindeutig.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-193">Because <xref:System.Windows.NameScope> is a dictionary there is no concept of first occurrence; any given <xref:System.Collections.Generic.KeyValuePair%602> is guaranteed unique.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; bool&#xA;override this.Remove : string -&gt; bool" Usage="nameScope.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fb0e9-194">Der Zeichenfolgenschlüssel, der den Namen der Zuordnung für den XAML-Namescope darstellt, die entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-194">The string key, which is the name of the XAML namescope mapping to remove.</span></span></param>
        <summary><span data-ttu-id="fb0e9-195">Entfernt eine Zuordnung für einen angegebenen Namen aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-195">Removes a mapping for a specified name from the collection.</span></span></summary>
        <returns><span data-ttu-id="fb0e9-196"><see langword="true" />, wenn das Element erfolgreich aus der Auflistung entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-196"><see langword="true" /> if item was successfully removed from the collection, otherwise <see langword="false" />.</span></span> <span data-ttu-id="fb0e9-197">Gibt auch dann <see langword="false" /> zurück, wenn das Element nicht in der Auflistung gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-197">Also returns <see langword="false" /> if the item was not found in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb0e9-198">Diese Methode <xref:System.Windows.NameScope.UnregisterName%2A>wird im Grunde umschlossen und gibt in Fällen zurück `false` , in denen <xref:System.Windows.NameScope.UnregisterName%2A>andernfalls Ausnahmen in ausgelöst wurden.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-198">This method basically wraps <xref:System.Windows.NameScope.UnregisterName%2A>, returning `false` in cases that otherwise would have raised exceptions in <xref:System.Windows.NameScope.UnregisterName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNameScope">
      <MemberSignature Language="C#" Value="public static void SetNameScope (System.Windows.DependencyObject dependencyObject, System.Windows.Markup.INameScope value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNameScope(class System.Windows.DependencyObject dependencyObject, class System.Windows.Markup.INameScope value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetNameScope(System::Windows::DependencyObject ^ dependencyObject, System::Windows::Markup::INameScope ^ value);" />
      <MemberSignature Language="F#" Value="static member SetNameScope : System.Windows.DependencyObject * System.Windows.Markup.INameScope -&gt; unit" Usage="System.Windows.NameScope.SetNameScope (dependencyObject, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="value" Type="System.Windows.Markup.INameScope" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="fb0e9-199">Objekt, für das der XAML-Namensbereich geändert werden soll.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-199">Object to change XAML namescope for.</span></span></param>
        <param name="value"><span data-ttu-id="fb0e9-200">Der neue XAML-Namensbereich über eine Schnittstellenumwandlung.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-200">The new XAML namescope, using an interface cast.</span></span></param>
        <summary><span data-ttu-id="fb0e9-201">Stellt die Set-Zugriffsmethode für die angefügte <see cref="P:System.Windows.NameScope.NameScope" />-Eigenschaft bereit.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-201">Provides the attached property set accessor for the <see cref="P:System.Windows.NameScope.NameScope" /> attached property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb0e9-202">Der Zweck dieser Methode besteht darin, als Accessor für `set` die Verwendung <xref:System.Windows.NameScope.NameScope%2A> von als angefügte Eigenschaft in der XAML-Verwendung zu fungieren und den Accessor für die Durchführung der entsprechenden Operation im Code bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-202">The purpose of this method is both to act as the `set` accessor for using <xref:System.Windows.NameScope.NameScope%2A> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fb0e9-203"><paramref name="dependencyObject" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-203"><paramref name="dependencyObject" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb0e9-204">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-204">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="fb0e9-205">Ein Enumerator, der eine Auflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-205">An enumerator that iterates through a collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb0e9-206">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-206">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="fb0e9-207">Ein Enumerator, der eine Auflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-207">An enumerator that iterates through a collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (string key, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(string key, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::String ^ key, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : string *  -&gt; bool&#xA;override this.TryGetValue : string *  -&gt; bool" Usage="nameScope.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" RefType="out" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fb0e9-208">Der Schlüssel des abzurufenden Werts.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-208">The key of the value to get.</span></span></param>
        <param name="value"><span data-ttu-id="fb0e9-209">Wenn diese Methode beendet wird, enthält sie den Wert, der dem angegebenen Schlüssel zugeordnet ist; wenn der Schlüssel nicht gefunden wird, enthält die Methode ein NULL-Objekt.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-209">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object.</span></span> <span data-ttu-id="fb0e9-210">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-210">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="fb0e9-211">Ruft den dem angegebenen Schlüssel zugeordneten Wert ab.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-211">Gets the value associated with the specified key.</span></span></summary>
        <returns><span data-ttu-id="fb0e9-212">True, wenn der <see cref="T:System.Windows.NameScope" /> eine Zuordnung für den Namen enthält, der als <paramref name="key" /> angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-212">true if the <see cref="T:System.Windows.NameScope" /> contains a mapping for the name provided as <paramref name="key" />.</span></span> <span data-ttu-id="fb0e9-213">Andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-213">Otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit&#xA;override this.UnregisterName : string -&gt; unit" Usage="nameScope.UnregisterName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.UnregisterName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fb0e9-214">Der Name der zu entfernenden Zuordnung.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-214">The name of the mapping to remove.</span></span></param>
        <summary><span data-ttu-id="fb0e9-215">Entfernt eine Name-Objekt-Zuordnung aus dem XAML-Namensbereich.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-215">Removes a name-object mapping from the XAML namescope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb0e9-216">Bevor Sie diese Methode aufrufen, können Sie <xref:System.Windows.NameScope.FindName%2A> verwenden, um zu bestimmen, ob eine bestimmte namens Objekt Zuordnung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-216">Before calling this method, you can use <xref:System.Windows.NameScope.FindName%2A> to determine whether a specific name-object mapping exists.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fb0e9-217"><paramref name="name" /> wurde als leere Zeichenfolge angegeben.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-217"><paramref name="name" /> was provided as empty string.</span></span>  
  
<span data-ttu-id="fb0e9-218">- oder -</span><span class="sxs-lookup"><span data-stu-id="fb0e9-218">-or-</span></span> 
 <span data-ttu-id="fb0e9-219">Der angegebene <paramref name="name" /> wurde nicht registriert.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-219"><paramref name="name" /> provided had not been registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fb0e9-220"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-220"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
        <altmember cref="M:System.Windows.FrameworkElement.UnregisterName(System.String)" />
        <altmember cref="M:System.Windows.FrameworkContentElement.UnregisterName(System.String)" />
        <altmember cref="M:System.Windows.NameScope.RegisterName(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;object&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;object&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Object ^&gt; ^ Values { System::Collections::Generic::ICollection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;obj&gt;" Usage="System.Windows.NameScope.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb0e9-221">Ruft eine Auflistung aller im <see cref="T:System.Windows.NameScope" />-Wörterbuch enthaltenen Werte ab.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-221">Gets a collection of the values in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></summary>
        <value><span data-ttu-id="fb0e9-222">Eine Auflistung aller im <see cref="T:System.Windows.NameScope" />-Wörterbuch enthaltenen Werte.</span><span class="sxs-lookup"><span data-stu-id="fb0e9-222">A collection of the values in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
