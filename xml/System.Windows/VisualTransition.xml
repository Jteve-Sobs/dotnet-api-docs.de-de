<Type Name="VisualTransition" FullName="System.Windows.VisualTransition">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a68eaadc906142e1be7033bb40118231a62ef1a4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30679494" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualTransition : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualTransition extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualTransition" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualTransition&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualTransition : System::Windows::DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt das visuelle Verhalten dar, das auftritt, wenn ein Steuerelement von einem Zustand in einen anderen wechselt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können das visuelle Verhalten eines Steuerelements angeben, beim Übergang zwischen Zuständen durch Hinzufügen von <xref:System.Windows.VisualTransition> Objekte. Beim Erstellen einer <xref:System.Windows.VisualTransition>, Sie geben eine oder mehrere der folgenden:  
  
-   Die Zeit, die für einen Übergang zwischen Zuständen durch Festlegen der <xref:System.Windows.VisualTransition.GeneratedDuration%2A> Eigenschaft.  
  
-   Zusätzliche Änderungen in die Darstellung des Steuerelements, die zum Zeitpunkt des Übergangs, durch Festlegen auftreten der <xref:System.Windows.VisualTransition.Storyboard%2A> Eigenschaft.  
  
-   Wenn die <xref:System.Windows.VisualTransition> angewendet, indem die <xref:System.Windows.VisualTransition.To%2A> und <xref:System.Windows.VisualTransition.From%2A> Eigenschaften.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Windows.VisualTransition> , der angibt, dass wenn der Benutzer die Maus vom Steuerelement bewegt, Steuerelementrahmens, Gelb, und klicken Sie dann auf Schwarz in 1,5 Sekunden Blau. Das vollständige Beispiel finden Sie unter [Anpassen der Darstellung von einem vorhandenen Steuerelement durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualTransition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualTransition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.VisualTransition" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public string From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string From" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ From { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des <see cref="T:System.Windows.VisualState" /> ab, aus dem gewechselt wird, oder legt diesen fest.</summary>
        <value>Der Name des <see cref="T:System.Windows.VisualState" />, aus dem gewechselt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.VisualTransition.From%2A> Eigenschaft ist optional. Ein <xref:System.Windows.VisualTransition> können beschränkt auf bestimmte Zustände angewendet werden oder kann angewendet werden jedes Mal, wenn das Steuerelement Übergänge zwischen Zuständen. Schränken Sie ein <xref:System.Windows.VisualTransition> angewendet, indem die <xref:System.Windows.VisualTransition.To%2A> und <xref:System.Windows.VisualTransition.From%2A> Eigenschaften. In der folgenden Tabelle sind die Beschränkungsebenen aufgelistet, von der restriktivsten bis zu der am wenigsten restriktiven.  
  
|Art der Einschränkung|From-Wert|To-Wert|  
|-------------------------|-------------------|-----------------|  
|Aus einem angegebenen Zustand in einen anderen angegebenen Zustand|Der Name des ein <xref:System.Windows.VisualState>|Der Name des ein <xref:System.Windows.VisualState>|  
|Aus einem beliebigen Zustand in einen angegebenen Zustand|Nicht festgelegt|Der Name des ein <xref:System.Windows.VisualState>|  
|Aus einem angegebenen Zustand in einen beliebigen Zustand|Der Name des ein <xref:System.Windows.VisualState>|Nicht festgelegt|  
|Aus einem beliebigen Zustand in einen beliebigen Zustand|Nicht festgelegt|Nicht festgelegt|  
  
 Haben Sie mehrere <xref:System.Windows.VisualTransition> Objekte in eine <xref:System.Windows.VisualStateGroup> mit Verweisen auf den gleichen Status, aber sie in der Reihenfolge, der angibt, die vorherige Tabelle verwendet werden.  
  
 Sie können dieses Verhalten ändern, indem Sie erstellen eine neue Klasse, die von erben <xref:System.Windows.VisualStateManager> und überschreiben die <xref:System.Windows.VisualStateManager.GoToStateCore%2A> Methode.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt zwei <xref:System.Windows.VisualTransition> Objekte. Beim Übergang des Steuerelements von der `Pressed` Zustands, in der `MouseOver` Zustand, der <xref:System.Windows.VisualTransition> , besitzt sowohl <xref:System.Windows.VisualTransition.From%2A> und <xref:System.Windows.VisualTransition.To%2A> Satz verwendet wird. Wenn das Steuerelement von einem anderen Zustand als `Pressed` in den Zustand `MouseOver` wechselt, wird der andere Zustand verwendet.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration GeneratedDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration GeneratedDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration GeneratedDuration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Dauer des Übergangs von einem Zustand in einen anderen ab oder legt diese fest.</summary>
        <value>Die Dauer des Übergangs von einem Zustand in einen anderen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können angeben, wie lange dauert ein Übergang durch Festlegen der <xref:System.Windows.VisualTransition.GeneratedDuration%2A> Eigenschaft. Beim Festlegen der <xref:System.Windows.VisualTransition.GeneratedDuration%2A> -Eigenschaft, geben Sie die Zeit, die es, bis der Übergang dauert auftritt.  
  
   
  
## Examples  
 Im folgende Beispiel gibt an, dass das Steuerelement eine halbe Sekunde in wechseln akzeptiert die `MouseOver` Zustand. Das vollständige Beispiel finden Sie unter [Anpassen der Darstellung von einem vorhandenen Steuerelement durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#MouseOverTransition](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#mouseovertransition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedEasingFunction">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedEasingFunction As IEasingFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::IEasingFunction ^ GeneratedEasingFunction { System::Windows::Media::Animation::IEasingFunction ^ get(); void set(System::Windows::Media::Animation::IEasingFunction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.IEasingFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine benutzerdefinierte mathematische Formel ab, die für Übergange zwischen Zuständen verwendet wird, oder legt sie fest.</summary>
        <value>Eine benutzerdefinierte mathematische Formel, die für Übergange zwischen Zuständen verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können festlegen, die <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> -Eigenschaft an die Möglichkeit, ein Übergang auftritt. Beispielsweise können Sie eine Beschleunigungsfunktion zum beschleunigen oder verlangsamen des Übergangs angeben. Weitere Informationen finden Sie unter [einfachere Funktionen](~/docs/framework/wpf/graphics-multimedia/easing-functions.md).  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Windows.VisualTransition> , wodurch eine <xref:System.Windows.Shapes.Rectangle> , vertikal zu wechseln, wenn der Benutzer über die Maustaste drückt die <xref:System.Windows.Controls.Canvas>. Im Beispiel wird die <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> Eigenschaft, um eine <xref:System.Windows.Media.Animation.BounceEase> Objekt, das dazu führen, dass die <xref:System.Windows.Shapes.Rectangle> springen beim Erreichen des endgültigen angezeigt werden. Die <xref:System.Windows.VisualTransition> , die verwendet wird, wenn der Benutzer die Schaltfläche "" hat eine andere <xref:System.Windows.Media.Animation.BounceEase> Objekt, das dazu führen, dass die <xref:System.Windows.Shapes.Rectangle> zu springen, bevor er an seine ursprüngliche Position zurückgibt.  
  
 [!code-xaml[VSMCustomControl#VSMEasingFunction](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmeasingfunction)]  
  
 Im folgenden Beispiel wird des ereignishandlers für das <xref:System.Windows.UIElement3D.MouseDown> und <xref:System.Windows.UIElement.MouseUp> Ereignisse. Im Beispiel wird die <xref:System.Windows.VisualStateManager.GoToElementState%2A> Methode so ändern Sie die <xref:System.Windows.VisualState> des Zeichenbereichs.  
  
 [!code-csharp[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#vsmeasingfunctionlogic)]
 [!code-vb[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#vsmeasingfunctionlogic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Windows.Media.Animation.Storyboard" /> ab, das beim Eintritt des Übergangs eintritt, oder legt dieses fest.</summary>
        <value>Das <see cref="T:System.Windows.Media.Animation.Storyboard" />, das beim Eintritt des Übergangs eintritt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Windows.VisualTransition> enthält eine <xref:System.Windows.Media.Animation.Storyboard>, die <xref:System.Windows.Media.Animation.Storyboard> führt immer die <xref:System.Windows.VisualTransition> angewendet wird. Z. B. ggf. den Rahmen einer <xref:System.Windows.Controls.Button> Ändern der Farben, wenn der Benutzer der Mauszeiger bewegt wird, erstellen Sie eine <xref:System.Windows.VisualTransition> mit dem eine <xref:System.Windows.Media.Animation.Storyboard> , die den Hintergrund der Schaltfläche ändert.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Windows.VisualTransition> , der angibt, dass wenn der Benutzer die Maus vom Steuerelement bewegt, Steuerelementrahmens, Gelb, und klicken Sie dann auf Schwarz in 1,5 Sekunden Blau. Das vollständige Beispiel finden Sie unter [Anpassen der Darstellung von einem vorhandenen Steuerelement durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public string To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string To" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ To { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des <see cref="T:System.Windows.VisualState" /> ab, in den gewechselt werden soll, oder legt diesen fest.</summary>
        <value>Der Name der <see cref="T:System.Windows.VisualState" />, zu der ein Übergang stattfindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.VisualTransition.To%2A> Eigenschaft ist optional. Ein <xref:System.Windows.VisualTransition> können beschränkt auf bestimmte Zustände angewendet werden oder kann angewendet werden jedes Mal, wenn das Steuerelement Übergänge zwischen Zuständen. Schränken Sie ein <xref:System.Windows.VisualTransition> angewendet, indem die <xref:System.Windows.VisualTransition.To%2A> und <xref:System.Windows.VisualTransition.From%2A> Eigenschaften. In der folgenden Tabelle sind die Beschränkungsebenen aufgelistet, von der restriktivsten bis zu der am wenigsten restriktiven.  
  
|Art der Einschränkung|From-Wert|To-Wert|  
|-------------------------|-------------------|-----------------|  
|Aus einem angegebenen Zustand in einen anderen angegebenen Zustand|Der Name des ein <xref:System.Windows.VisualState>|Der Name des ein <xref:System.Windows.VisualState>|  
|Aus einem beliebigen Zustand in einen angegebenen Zustand|Nicht festgelegt|Der Name des ein <xref:System.Windows.VisualState>|  
|Aus einem angegebenen Zustand in einen beliebigen Zustand|Der Name des ein <xref:System.Windows.VisualState>|Nicht festgelegt|  
|Aus einem beliebigen Zustand in einen beliebigen Zustand|Nicht festgelegt|Nicht festgelegt|  
  
 Haben Sie mehrere <xref:System.Windows.VisualTransition> Objekte in eine <xref:System.Windows.VisualStateGroup> mit Verweisen auf den gleichen Status, aber sie in der Reihenfolge, der angibt, die vorherige Tabelle verwendet werden.  
  
 Sie können dieses Verhalten ändern, indem Sie erstellen eine neue Klasse, die von erben <xref:System.Windows.VisualStateManager> und überschreiben die <xref:System.Windows.VisualStateManager.GoToStateCore%2A> Methode.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt zwei <xref:System.Windows.VisualTransition> Objekte. Beim Übergang des Steuerelements von der `Pressed` Zustands, in der `MouseOver` Zustand, der <xref:System.Windows.VisualTransition> , besitzt sowohl <xref:System.Windows.VisualTransition.From%2A> und <xref:System.Windows.VisualTransition.To%2A> Satz verwendet wird. Wenn das Steuerelement von einem anderen Zustand als `Pressed` in den Zustand `MouseOver` wechselt, wird der andere Zustand verwendet.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>