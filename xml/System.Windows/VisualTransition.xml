<Type Name="VisualTransition" FullName="System.Windows.VisualTransition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28b6863b2a2868d20f566573bd386ff0b3324735" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70708375" /></Metadata><TypeSignature Language="C#" Value="public class VisualTransition : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualTransition extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualTransition" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualTransition&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualTransition : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualTransition = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt das visuelle Verhalten dar, das auftritt, wenn ein Steuerelement von einem Zustand in einen anderen wechselt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können das visuelle Verhalten eines-Steuer Elements angeben, wenn es durch Hinzufügen <xref:System.Windows.VisualTransition> von-Objekten zwischen Zuständen übergeht. Wenn Sie einen <xref:System.Windows.VisualTransition>erstellen, geben Sie einen oder mehrere der folgenden Informationen an:  
  
-   Die Zeit, die für den Übergang zwischen Zuständen benötigt wird, indem die <xref:System.Windows.VisualTransition.GeneratedDuration%2A> -Eigenschaft festgelegt wird.  
  
-   Weitere Änderungen an der Darstellung des Steuer Elements, die zum Zeitpunkt des Übergangs auftreten, indem die <xref:System.Windows.VisualTransition.Storyboard%2A> -Eigenschaft festgelegt wird.  
  
-   Wenn angewendet <xref:System.Windows.VisualTransition.To%2A> <xref:System.Windows.VisualTransition.From%2A> wird, indem die Eigenschaften und festgelegt werden. <xref:System.Windows.VisualTransition>  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Windows.VisualTransition> -Element erstellt, das angibt, dass der Rahmen des Steuer Elements, wenn der Benutzer die Maus vom Steuerelement bewegt, in blau, dann in gelb und dann in schwarz in 1,5 Sekunden wechselt. Das gesamte Beispiel finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuer Elements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualTransition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualTransition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.VisualTransition" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public string From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string From" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ From { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : string with get, set" Usage="System.Windows.VisualTransition.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des <see cref="T:System.Windows.VisualState" /> ab, aus dem gewechselt wird, oder legt diesen fest.</summary>
        <value>Der Name des <see cref="T:System.Windows.VisualState" />, aus dem gewechselt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.VisualTransition.From%2A> -Eigenschaft ist optional. Eine <xref:System.Windows.VisualTransition> kann so eingeschränkt werden, dass Sie nur auf bestimmte Zustände angewendet wird, oder Sie kann jedes Mal angewendet werden, wenn das Steuerelement zwischen Zuständen übergeht. Sie schränken durch Festlegen <xref:System.Windows.VisualTransition> der-Eigenschaft und der <xref:System.Windows.VisualTransition.To%2A> - <xref:System.Windows.VisualTransition.From%2A> Eigenschaft ein, wenn angewendet wird. In der folgenden Tabelle sind die Beschränkungsebenen aufgelistet, von der restriktivsten bis zu der am wenigsten restriktiven.  
  
|Art der Einschränkung|From-Wert|To-Wert|  
|-------------------------|-------------------|-----------------|  
|Aus einem angegebenen Zustand in einen anderen angegebenen Zustand|Der Name eines<xref:System.Windows.VisualState>|Der Name eines<xref:System.Windows.VisualState>|  
|Aus einem beliebigen Zustand in einen angegebenen Zustand|Nicht festgelegt|Der Name eines<xref:System.Windows.VisualState>|  
|Aus einem angegebenen Zustand in einen beliebigen Zustand|Der Name eines<xref:System.Windows.VisualState>|Nicht festgelegt|  
|Aus einem beliebigen Zustand in einen beliebigen Zustand|Nicht festgelegt|Nicht festgelegt|  
  
 Sie können mehrere <xref:System.Windows.VisualTransition> -Objekte in einem <xref:System.Windows.VisualStateGroup> -Objekt verwenden, die auf denselben Zustand verweisen, aber Sie werden in der Reihenfolge verwendet, in der die vorherige Tabelle angegeben ist.  
  
 Sie können dieses Verhalten ändern, indem Sie eine neue Klasse erstellen, die <xref:System.Windows.VisualStateManager> von erbt <xref:System.Windows.VisualStateManager.GoToStateCore%2A> und die-Methode überschreibt.  
  
   
  
## Examples  
 Im folgenden Beispiel werden zwei <xref:System.Windows.VisualTransition> -Objekte erstellt. Wenn das `Pressed` Steuerelement vom-Zustand in den `MouseOver` -Zustand übergeht, wird das <xref:System.Windows.VisualTransition.From%2A> <xref:System.Windows.VisualTransition> - <xref:System.Windows.VisualTransition.To%2A> Element verwendet, das sowohl als auch festgelegt ist. Wenn das Steuerelement von einem anderen Zustand als `Pressed` in den Zustand `MouseOver` wechselt, wird der andere Zustand verwendet.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration GeneratedDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration GeneratedDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration GeneratedDuration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedDuration : System.Windows.Duration with get, set" Usage="System.Windows.VisualTransition.GeneratedDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DurationConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Dauer des Übergangs von einem Zustand in einen anderen ab oder legt diese fest.</summary>
        <value>Die Dauer des Übergangs von einem Zustand in einen anderen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können angeben, wie lange ein Übergang dauert, indem <xref:System.Windows.VisualTransition.GeneratedDuration%2A> Sie die-Eigenschaft festlegen. Wenn Sie die <xref:System.Windows.VisualTransition.GeneratedDuration%2A> -Eigenschaft festlegen, geben Sie die Zeit an, die für den Übergang benötigt wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird angegeben, dass das-Steuerelement eine halbe Sekunde braucht `MouseOver` , um in den-Zustand zu gelangen. Das gesamte Beispiel finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuer Elements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#MouseOverTransition](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#mouseovertransition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedEasingFunction">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedEasingFunction As IEasingFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::IEasingFunction ^ GeneratedEasingFunction { System::Windows::Media::Animation::IEasingFunction ^ get(); void set(System::Windows::Media::Animation::IEasingFunction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedEasingFunction : System.Windows.Media.Animation.IEasingFunction with get, set" Usage="System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.IEasingFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine benutzerdefinierte mathematische Formel ab, die für Übergange zwischen Zuständen verwendet wird, oder legt sie fest.</summary>
        <value>Eine benutzerdefinierte mathematische Formel, die für Übergange zwischen Zuständen verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> -Eigenschaft so festlegen, dass die Art und Weise eines Übergangs angegeben wird. Beispielsweise können Sie eine Beschleunigungs Funktion angeben, um den Übergang zu beschleunigen oder zu verlangsamen. Weitere Informationen finden Sie unter Beschleunigungs [Funktionen](~/docs/framework/wpf/graphics-multimedia/easing-functions.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Windows.VisualTransition> erstellt, die <xref:System.Windows.Shapes.Rectangle> bewirkt, dass ein vertikal verschoben wird, wenn der Benutzer die <xref:System.Windows.Controls.Canvas>Maustaste über den drückt. Im Beispiel wird die <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> -Eigenschaft auf <xref:System.Windows.Media.Animation.BounceEase> ein-Objekt fest <xref:System.Windows.Shapes.Rectangle> gelegt, damit das beim erreichen seines Ziels in den Sprung springt. Der <xref:System.Windows.VisualTransition> , der verwendet wird, wenn der Benutzer die Schaltfläche <xref:System.Windows.Media.Animation.BounceEase> loslässt, verfügt <xref:System.Windows.Shapes.Rectangle> über ein anderes-Objekt, das bewirkt, dass das springt, bevor es an die ursprüngliche Position  
  
 [!code-xaml[VSMCustomControl#VSMEasingFunction](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmeasingfunction)]  
  
 Das folgende Beispiel zeigt den Ereignishandler für das <xref:System.Windows.UIElement3D.MouseDown> - <xref:System.Windows.UIElement.MouseUp> Ereignis und das-Ereignis. Im Beispiel wird die <xref:System.Windows.VisualStateManager.GoToElementState%2A> -Methode aufgerufen, <xref:System.Windows.VisualState> um die der Canvas zu ändern.  
  
 [!code-csharp[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#vsmeasingfunctionlogic)]
 [!code-vb[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#vsmeasingfunctionlogic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualTransition.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Windows.Media.Animation.Storyboard" /> ab, das beim Eintritt des Übergangs eintritt, oder legt dieses fest.</summary>
        <value>Das <see cref="T:System.Windows.Media.Animation.Storyboard" />, das beim Eintritt des Übergangs eintritt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Windows.VisualTransition> <xref:System.Windows.Media.Animation.Storyboard>eine enthält, <xref:System.Windows.Media.Animation.Storyboard> wird <xref:System.Windows.VisualTransition>  die immer dann ausgeführt, wenn angewendet wird. Wenn Sie z. b. möchten, dass der <xref:System.Windows.Controls.Button> Rahmen einer die Farben ändert, wenn der Benutzer die Maus von ihm bewegt, können Sie <xref:System.Windows.VisualTransition> einen erstellen, <xref:System.Windows.Media.Animation.Storyboard> der über ein verfügt, das den Hintergrund der Schaltfläche ändert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Windows.VisualTransition> -Element erstellt, das angibt, dass der Rahmen des Steuer Elements, wenn der Benutzer die Maus vom Steuerelement bewegt, in blau, dann in gelb und dann in schwarz in 1,5 Sekunden wechselt. Das gesamte Beispiel finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuer Elements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public string To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string To" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ To { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.To : string with get, set" Usage="System.Windows.VisualTransition.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des <see cref="T:System.Windows.VisualState" /> ab, in den gewechselt werden soll, oder legt diesen fest.</summary>
        <value>Der Name der <see cref="T:System.Windows.VisualState" />, zu der ein Übergang stattfindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.VisualTransition.To%2A> -Eigenschaft ist optional. Eine <xref:System.Windows.VisualTransition> kann so eingeschränkt werden, dass Sie nur auf bestimmte Zustände angewendet wird, oder Sie kann jedes Mal angewendet werden, wenn das Steuerelement zwischen Zuständen übergeht. Sie schränken durch Festlegen <xref:System.Windows.VisualTransition> der-Eigenschaft und der <xref:System.Windows.VisualTransition.To%2A> - <xref:System.Windows.VisualTransition.From%2A> Eigenschaft ein, wenn angewendet wird. In der folgenden Tabelle sind die Beschränkungsebenen aufgelistet, von der restriktivsten bis zu der am wenigsten restriktiven.  
  
|Art der Einschränkung|From-Wert|To-Wert|  
|-------------------------|-------------------|-----------------|  
|Aus einem angegebenen Zustand in einen anderen angegebenen Zustand|Der Name eines<xref:System.Windows.VisualState>|Der Name eines<xref:System.Windows.VisualState>|  
|Aus einem beliebigen Zustand in einen angegebenen Zustand|Nicht festgelegt|Der Name eines<xref:System.Windows.VisualState>|  
|Aus einem angegebenen Zustand in einen beliebigen Zustand|Der Name eines<xref:System.Windows.VisualState>|Nicht festgelegt|  
|Aus einem beliebigen Zustand in einen beliebigen Zustand|Nicht festgelegt|Nicht festgelegt|  
  
 Sie können mehrere <xref:System.Windows.VisualTransition> -Objekte in einem <xref:System.Windows.VisualStateGroup> -Objekt verwenden, die auf denselben Zustand verweisen, aber Sie werden in der Reihenfolge verwendet, in der die vorherige Tabelle angegeben ist.  
  
 Sie können dieses Verhalten ändern, indem Sie eine neue Klasse erstellen, die <xref:System.Windows.VisualStateManager> von erbt <xref:System.Windows.VisualStateManager.GoToStateCore%2A> und die-Methode überschreibt.  
  
   
  
## Examples  
 Im folgenden Beispiel werden zwei <xref:System.Windows.VisualTransition> -Objekte erstellt. Wenn das `Pressed` Steuerelement vom-Zustand in den `MouseOver` -Zustand übergeht, wird das <xref:System.Windows.VisualTransition.From%2A> <xref:System.Windows.VisualTransition> - <xref:System.Windows.VisualTransition.To%2A> Element verwendet, das sowohl als auch festgelegt ist. Wenn das Steuerelement von einem anderen Zustand als `Pressed` in den Zustand `MouseOver` wechselt, wird der andere Zustand verwendet.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
