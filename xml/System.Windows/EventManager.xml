<Type Name="EventManager" FullName="System.Windows.EventManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c07ba11c7438326eddb5331a443033c7ee73acb9" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39844482" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class EventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventManager abstract sealed" />
  <TypeSignature Language="F#" Value="type EventManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="962c8-101">Stellt ereignisbezogene Hilfsprogrammmethoden bereit, die Routingereignisse für Klassenbesitzer registrieren und Klassenhandler hinzufügen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="962c8-101">Provides event-related utility methods that register routed events for class owners and add class handlers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="962c8-102">Diese Klasse wird am häufigsten verwendet, um ein neues Routingereignis beim Registrieren <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="962c8-102">This class is most commonly used to register a new routed event, with <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span>  
  
 <span data-ttu-id="962c8-103">Die zweithäufigste [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] Verwendung <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="962c8-103">The second most common [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] usage is <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span> <span data-ttu-id="962c8-104">Sie verwenden diese Methode zum Behandeln eines Routingereignisses für die Klasse oder eines angefügten Ereignisses Klasse zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="962c8-104">You use this method to enable class handling of a routed event on the class, or an attached event.</span></span> <span data-ttu-id="962c8-105">Weitere Informationen finden Sie unter [Markieren von Routingereignissen als behandelt und Klassenbehandlung](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="962c8-105">For details, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="962c8-106">Im folgenden Beispiel wird veranschaulicht, wie diese Klasse verwenden, um ein neues Ereignis als Klassenmember, zusammen mit das Routingereignis-"Wrapper"-Verfahren der überschreibenden hinzufügen zu registrieren und entfernen Implementierungen für eine [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis.</span><span class="sxs-lookup"><span data-stu-id="962c8-106">The following example show how to use this class to register a new routed event as a class member, along with the routed event "wrapper" technique of overriding the add and remove implementations for a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event.</span></span>  
  
 [!code-csharp[DPCustom#EventManagerClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#eventmanagerclass)]
 [!code-vb[DPCustom#EventManagerClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#eventmanagerclass)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRoutedEvents">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent[] GetRoutedEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent[] GetRoutedEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.GetRoutedEvents" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRoutedEvents () As RoutedEvent()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Windows::RoutedEvent ^&gt; ^ GetRoutedEvents();" />
      <MemberSignature Language="F#" Value="static member GetRoutedEvents : unit -&gt; System.Windows.RoutedEvent[]" Usage="System.Windows.EventManager.GetRoutedEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="962c8-107">Gibt Bezeichner für Routingereignisse zurück, die im Ereignissystem registriert wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-107">Returns identifiers for routed events that have been registered to the event system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="962c8-108">Ein Array vom Typ <see cref="T:System.Windows.RoutedEvent" />, das die registrierten Objekte enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-108">An array of type <see cref="T:System.Windows.RoutedEvent" /> that contains the registered objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="962c8-109">Weitere <xref:System.Windows.RoutedEvent> Objekte später registriert werden können.</span><span class="sxs-lookup"><span data-stu-id="962c8-109">More <xref:System.Windows.RoutedEvent> objects can be registered later.</span></span> <span data-ttu-id="962c8-110">Diese Methode ruft eine Momentaufnahme ab, und die Auflistung von Routingereignissen kann geschrieben werden, während der Lebensdauer einer Anwendung.</span><span class="sxs-lookup"><span data-stu-id="962c8-110">This method gets a snapshot and the collection of routed events is writeable throughout an application's lifetime.</span></span> <span data-ttu-id="962c8-111">Die zurückgegebene Auflistung möglicherweise sehr groß sein.</span><span class="sxs-lookup"><span data-stu-id="962c8-111">The collection returned might be quite large.</span></span> <span data-ttu-id="962c8-112">Zählen auch nur die Ereignisse, die Teil der [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], die Auflistung in die hohe Hunderte enthält.</span><span class="sxs-lookup"><span data-stu-id="962c8-112">Even just counting the events that are part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], the collection count is in the high hundreds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoutedEventsForOwner">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent[] GetRoutedEventsForOwner (Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent[] GetRoutedEventsForOwner(class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRoutedEventsForOwner (ownerType As Type) As RoutedEvent()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Windows::RoutedEvent ^&gt; ^ GetRoutedEventsForOwner(Type ^ ownerType);" />
      <MemberSignature Language="F#" Value="static member GetRoutedEventsForOwner : Type -&gt; System.Windows.RoutedEvent[]" Usage="System.Windows.EventManager.GetRoutedEventsForOwner ownerType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ownerType">
          <span data-ttu-id="962c8-113">Der Typ, mit dem die Suche begonnen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-113">The type to start the search with.</span>
          </span>
          <span data-ttu-id="962c8-114">Basisklassen werden in der Suche eingeschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-114">Base classes are included in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="962c8-115">Sucht alle Routingereignisbezeichner für Ereignisse, die mit dem angegebenen Besitzertyp registriert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-115">Finds all routed event identifiers for events that are registered with the provided owner type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="962c8-116">Ein Array mit übereinstimmenden Routingereignisbezeichnern, wenn eine Übereinstimmung gefunden wird, andernfalls <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-116">An array of matching routed event identifiers if any match is found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClassHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="962c8-117">Registriert einen Klassenhandler für ein bestimmtes Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-117">Registers a class handler for a particular routed event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClassHandler">
      <MemberSignature Language="C#" Value="public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassHandler(class System.Type classType, class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassHandler(Type ^ classType, System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="static member RegisterClassHandler : Type * System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="System.Windows.EventManager.RegisterClassHandler (classType, routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="classType">
          <span data-ttu-id="962c8-118">Der Typ der Klasse, die die Klassenbehandlung deklariert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-118">The type of the class that is declaring class handling.</span>
          </span>
        </param>
        <param name="routedEvent">
          <span data-ttu-id="962c8-119">Der Routingereignisbezeichner des zu behandelnden Ereignisses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-119">The routed event identifier of the event to handle.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="962c8-120">Ein Verweis auf die Klassenhandlerimplementierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-120">A reference to the class handler implementation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="962c8-121">Registriert einen Klassenhandler für ein bestimmtes Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-121">Registers a class handler for a particular routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="962c8-122">Klassenbehandlung ist ein Feature, das für weitergeleitete Ereignisse, einschließlich des angefügten Ereignisse, die implementiert werden, mit dem Routingereignis sichern verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="962c8-122">Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</span></span> <span data-ttu-id="962c8-123">Ein Klassenhandler ist z. B. einen statischen Handler, der für alle Instanzen der Klasse vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="962c8-123">A class handler is like a static handler that exists for all instances of the class.</span></span> <span data-ttu-id="962c8-124">Da der Handler statisch ist, Instanzeigenschaften direkt mit einem Klassenhandler kann nicht geändert, aber es die Serverinstanzen über stehen die `sender` Parameter und/oder die Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="962c8-124">Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the `sender` parameter and/or the event data.</span></span>  
  
 <span data-ttu-id="962c8-125">Klassenhandler werden vor dem Instanzhandler aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="962c8-125">Class handlers are invoked before instance handlers.</span></span> <span data-ttu-id="962c8-126">Sie können einen Klassenhandler implementieren, der das Verhalten der das Ereignis als behandelt markiert wurde.</span><span class="sxs-lookup"><span data-stu-id="962c8-126">You can implement a class handler that has the behavior of marking the event as handled.</span></span> <span data-ttu-id="962c8-127">Aus diesem Grund werden Instanzhandler für ein Ereignis Klasse behandelt nicht aufgerufen werden, es sei denn, die Instanzhandler speziell für behandelten Ereignisse registrieren.</span><span class="sxs-lookup"><span data-stu-id="962c8-127">Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</span></span>  
  
 <span data-ttu-id="962c8-128">Viele der [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Basiselement-Ereignisse bieten eine Klassenbehandlung virtuelle Methoden.</span><span class="sxs-lookup"><span data-stu-id="962c8-128">Many of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] base element events provide class handling virtual methods.</span></span> <span data-ttu-id="962c8-129">Durch das Überschreiben dieser Methoden in Klassen, die die Basisklassen erben, können Sie ohne Klassenbehandlung implementieren <xref:System.Windows.EventManager.RegisterClassHandler%2A> in statischen Konstruktoren.</span><span class="sxs-lookup"><span data-stu-id="962c8-129">By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <xref:System.Windows.EventManager.RegisterClassHandler%2A> in static constructors.</span></span> <span data-ttu-id="962c8-130">Diese Behandlung-Klasse, Methoden in der Regel für Eingabeereignisse vorhanden und haben Namen, die mit "On" beginnen und enden mit den Namen des Ereignisses Klasse behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="962c8-130">These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</span></span>  
  
 <span data-ttu-id="962c8-131">Weitere Informationen zur Klassenbehandlung von finden Sie unter [Markieren von Routingereignissen als behandelt und Klassenbehandlung](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="962c8-131">For more information about class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="962c8-132">Mithilfe dieser Signatur werden Klassenhandler registriert werden, um nur als Reaktion auf Ereignisse ohne Behandlung aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="962c8-132">Using this signature, class handlers will be registered to invoke only in response to unhandled events.</span></span> <span data-ttu-id="962c8-133">Sie können auch registrieren Klassenhandler aufzurufen, auch wenn die Ereignisargumente behandelt,, mithilfe markiert sind der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="962c8-133">You can also register class handlers to invoke even if the event arguments are marked handled, by using the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature, with `handledEventsToo` set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="962c8-134">Das folgende Beispiel fügt einen Handler für <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, wird beim Aufruf <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="962c8-134">The following example adds a handler for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, calling <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 [!code-csharp[ClassHandling#StaticAndRegisterClassHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/ClassHandling/CSharp/SDKSampleLibrary/class1.cs#staticandregisterclasshandler)]
 [!code-vb[ClassHandling#StaticAndRegisterClassHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClassHandling/visualbasic/sdksamplelibrary/class1.vb#staticandregisterclasshandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterClassHandler">
      <MemberSignature Language="C#" Value="public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassHandler(class System.Type classType, class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassHandler(Type ^ classType, System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="static member RegisterClassHandler : Type * System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="System.Windows.EventManager.RegisterClassHandler (classType, routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="classType">
          <span data-ttu-id="962c8-135">Der Typ der Klasse, die die Klassenbehandlung deklariert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-135">The type of the class that is declaring class handling.</span>
          </span>
        </param>
        <param name="routedEvent">
          <span data-ttu-id="962c8-136">Der Routingereignisbezeichner des zu behandelnden Ereignisses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-136">The routed event identifier of the event to handle.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="962c8-137">Ein Verweis auf die Klassenhandlerimplementierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-137">A reference to the class handler implementation.</span>
          </span>
        </param>
        <param name="handledEventsToo">
          <span data-ttu-id="962c8-138">
            <see langword="true" />, um diesen Klassenhandler aufzurufen, auch wenn Argumente des Routingereignisses als behandelt gekennzeichnet sind, <see langword="false" />, um das Standardverhalten beizubehalten, d. h. der Handler wird bei allen als behandelt markierten Ereignissen nicht aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-138">
              <see langword="true" /> to invoke this class handler even if arguments of the routed event have been marked as handled; <see langword="false" /> to retain the default behavior of not invoking the handler on any marked-handled event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="962c8-139">Registriert einen Klassenhandler für ein bestimmtes Routingereignis mit der Option zum Behandeln von Ereignissen, wenn Ereignisdaten bereits als behandelt gekennzeichnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-139">Registers a class handler for a particular routed event, with the option to handle events where event data is already marked handled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="962c8-140">Klassenbehandlung ist ein Feature, das für weitergeleitete Ereignisse, einschließlich des angefügten Ereignisse, die implementiert werden, mit dem Routingereignis sichern verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="962c8-140">Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</span></span> <span data-ttu-id="962c8-141">Ein Klassenhandler ist z. B. einen statischen Handler, der für alle Instanzen der Klasse vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="962c8-141">A class handler is like a static handler that exists for all instances of the class.</span></span> <span data-ttu-id="962c8-142">Da der Handler statisch ist, Instanzeigenschaften direkt mit einem Klassenhandler kann nicht geändert, aber es die Serverinstanzen über stehen die `sender` Parameter und/oder die Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="962c8-142">Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the `sender` parameter and/or the event data.</span></span>  
  
 <span data-ttu-id="962c8-143">Klassenhandler werden vor dem Instanzhandler aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="962c8-143">Class handlers are invoked before instance handlers.</span></span> <span data-ttu-id="962c8-144">Sie können einen Klassenhandler implementieren, der das Verhalten der das Ereignis als behandelt markiert wurde.</span><span class="sxs-lookup"><span data-stu-id="962c8-144">You can implement a class handler that has the behavior of marking the event as handled.</span></span> <span data-ttu-id="962c8-145">Aus diesem Grund werden Instanzhandler für ein Ereignis Klasse behandelt nicht aufgerufen werden, es sei denn, die Instanzhandler speziell für behandelten Ereignisse registrieren.</span><span class="sxs-lookup"><span data-stu-id="962c8-145">Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</span></span>  
  
 <span data-ttu-id="962c8-146">Viele der [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Basiselement-Ereignisse bieten eine Klassenbehandlung virtuelle Methoden.</span><span class="sxs-lookup"><span data-stu-id="962c8-146">Many of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] base element events provide class handling virtual methods.</span></span> <span data-ttu-id="962c8-147">Durch das Überschreiben dieser Methoden in Klassen, die die Basisklassen erben, können Sie ohne Klassenbehandlung implementieren <xref:System.Windows.EventManager.RegisterClassHandler%2A> in statischen Konstruktoren.</span><span class="sxs-lookup"><span data-stu-id="962c8-147">By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <xref:System.Windows.EventManager.RegisterClassHandler%2A> in static constructors.</span></span> <span data-ttu-id="962c8-148">Diese Behandlung-Klasse, Methoden in der Regel für Eingabeereignisse vorhanden und haben Namen, die mit "On" beginnen und enden mit den Namen des Ereignisses Klasse behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="962c8-148">These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</span></span>  
  
 <span data-ttu-id="962c8-149">Weitere Informationen zur Klassenbehandlung von finden Sie unter [Markieren von Routingereignissen als behandelt und Klassenbehandlung](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="962c8-149">For more information about class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="962c8-150">Mithilfe dieser Signatur Klassenhandler können registriert werden, um durch Festlegen von behandelten Ereignisse Aufrufen `handledEventsToo` festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="962c8-150">Using this signature, class handlers can be registered to invoke upon handled events, by setting `handledEventsToo` set to `true`.</span></span> <span data-ttu-id="962c8-151">Im Allgemeinen sollten Sie dies tun, nur dann, wenn ein von bekannten Behandlungsproblem zu umgehen, z. B. Verarbeiten von Ereignissen von Maus oder Tastatur Eingabesystem gewünschten vorliegt.</span><span class="sxs-lookup"><span data-stu-id="962c8-151">Generally, you should do this only if there is a known handling issue you are trying to work around, such as input system handling from mouse or keyboard events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterRoutedEvent">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent RegisterRoutedEvent (string name, System.Windows.RoutingStrategy routingStrategy, Type handlerType, Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent RegisterRoutedEvent(string name, valuetype System.Windows.RoutingStrategy routingStrategy, class System.Type handlerType, class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::RoutedEvent ^ RegisterRoutedEvent(System::String ^ name, System::Windows::RoutingStrategy routingStrategy, Type ^ handlerType, Type ^ ownerType);" />
      <MemberSignature Language="F#" Value="static member RegisterRoutedEvent : string * System.Windows.RoutingStrategy * Type * Type -&gt; System.Windows.RoutedEvent" Usage="System.Windows.EventManager.RegisterRoutedEvent (name, routingStrategy, handlerType, ownerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="routingStrategy" Type="System.Windows.RoutingStrategy" />
        <Parameter Name="handlerType" Type="System.Type" />
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="962c8-152">Der Name des Routingereignisses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-152">The name of the routed event.</span>
          </span>
          <span data-ttu-id="962c8-153">Der Name muss im Besitzertyp eindeutig sein und darf nicht <see langword="null" /> oder eine leere Zeichenfolge sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-153">The name must be unique within the owner type and cannot be <see langword="null" /> or an empty string.</span>
          </span>
        </param>
        <param name="routingStrategy">
          <span data-ttu-id="962c8-154">Die Routingstrategie des Ereignisses als Wert der Enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-154">The routing strategy of the event as a value of the enumeration.</span>
          </span>
        </param>
        <param name="handlerType">
          <span data-ttu-id="962c8-155">Der Typ des Ereignishandlers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-155">The type of the event handler.</span>
          </span>
          <span data-ttu-id="962c8-156">Dies muss ein Delegattyp sein und darf nicht <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-156">This must be a delegate type and cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="ownerType">
          <span data-ttu-id="962c8-157">Der Besitzerklassentyp des Routingereignisses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-157">The owner class type of the routed event.</span>
          </span>
          <span data-ttu-id="962c8-158">Darf nicht <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-158">This cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="962c8-159">Registriert ein neues Routingereignis beim [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]-Ereignissystem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-159">Registers a new routed event with the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] event system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="962c8-160">Der Bezeichner für das neu registrierte Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-160">The identifier for the newly registered routed event.</span>
          </span>
          <span data-ttu-id="962c8-161">Dieses Bezeichnerobjekt kann jetzt als statisches Feld in einer Klasse gespeichert und dann als Parameter für Methoden verwendet werden, die Handler an das Ereignis anfügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-161">This identifier object can now be stored as a static field in a class and then used as a parameter for methods that attach handlers to the event.</span>
          </span>
          <span data-ttu-id="962c8-162">Der Routingereignisbezeichner wird auch für andere [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] des Ereignissystems verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="962c8-162">The routed event identifier is also used for other event system [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="962c8-163">Den Rückgabewert dieser Methode verwenden, erstellen Sie die statische Deklaration für eine eindeutige <xref:System.Windows.RoutedEvent> Feld "ID".</span><span class="sxs-lookup"><span data-stu-id="962c8-163">Use the return value of this method to create the static declaration for a unique <xref:System.Windows.RoutedEvent> identifier field.</span></span> <span data-ttu-id="962c8-164">Dieses Feld muss im Besitzertyp gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="962c8-164">This field should be stored within the owner type.</span></span>  
  
 <span data-ttu-id="962c8-165">Es gibt eine beträchtliche Anzahl von Konventionen und bewährte Methoden wie Routingereignisse zu sollte mit dem Namen, registriert und in einer Klasse verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="962c8-165">There are a considerable number of conventions and best practices associated with how routed events should be named, registered, and exposed in a class.</span></span> <span data-ttu-id="962c8-166">Weitere Informationen finden Sie unter [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="962c8-166">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>