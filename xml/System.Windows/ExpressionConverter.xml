<Type Name="ExpressionConverter" FullName="System.Windows.ExpressionConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="965a8590f27fc1dd6fee33d1778cc12a042c837b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExpressionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpressionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ExpressionConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpressionConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e712b-101">Konvertiert Instanzen von <see cref="T:System.Windows.Expression" /> in andere Typen und aus anderen Typen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e712b-101">Converts instances of <see cref="T:System.Windows.Expression" /> to and from other types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e712b-102">Die <xref:System.Windows.Expression> Typ sollten einen Typ-Konverter-Pfad nicht verwenden, um Werte zu konvertieren (sollten stattdessen Markuperweiterungen).</span><span class="sxs-lookup"><span data-stu-id="e712b-102">The <xref:System.Windows.Expression> type should not use a type converter pathway to convert values (should use markup extensions instead).</span></span> <span data-ttu-id="e712b-103">Aus diesem Grund <xref:System.Windows.ExpressionConverter.CanConvertFrom%2A?displayProperty=nameWithType> und <xref:System.Windows.ExpressionConverter.CanConvertTo%2A?displayProperty=nameWithType> stets `false`.</span><span class="sxs-lookup"><span data-stu-id="e712b-103">For this reason, <xref:System.Windows.ExpressionConverter.CanConvertFrom%2A?displayProperty=nameWithType> and <xref:System.Windows.ExpressionConverter.CanConvertTo%2A?displayProperty=nameWithType> always return `false`.</span></span> <span data-ttu-id="e712b-104"><xref:System.Windows.ExpressionConverter.ConvertFrom%2A?displayProperty=nameWithType> und <xref:System.Windows.ExpressionConverter.ConvertTo%2A?displayProperty=nameWithType> immer eine Ausnahme auslösen.</span><span class="sxs-lookup"><span data-stu-id="e712b-104"><xref:System.Windows.ExpressionConverter.ConvertFrom%2A?displayProperty=nameWithType> and <xref:System.Windows.ExpressionConverter.ConvertTo%2A?displayProperty=nameWithType> always throw an exception.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ExpressionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e712b-105">Initialisiert eine neue Instanz der <see cref="T:System.Windows.ExpressionConverter" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-105">Initializes a new instance of the <see cref="T:System.Windows.ExpressionConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e712b-106">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-106">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="e712b-107">Eine <see cref="T:System.Type" />-Klasse, die den Ausgangstyp der Konvertierung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-107">A <see cref="T:System.Type" /> that represents the type you wish to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e712b-108">Gibt zurück, ob dieser Konverter von einem Quellobjekt in ein <see cref="T:System.Windows.Expression" />-Objekt konvertieren kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-108">Returns whether this converter can convert from a source object to an <see cref="T:System.Windows.Expression" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e712b-109">Immer <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-109">Always <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e712b-110">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-110">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="e712b-111">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-111">A <see cref="T:System.Type" /> that represents the type you wish to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e712b-112">Gibt zurück, ob dieser Konverter ein <see cref="T:System.Windows.Expression" />-Objekt in einen bestimmten Zieltyp konvertieren kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-112">Returns whether this converter can convert an <see cref="T:System.Windows.Expression" /> object to a specific destination type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e712b-113">Immer <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-113">Always <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e712b-114">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="e712b-115">Das als aktuelle Kultur zu verwendende <see cref="T:System.Globalization.CultureInfo" />-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-115">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e712b-116">Das zu konvertierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-116">The object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e712b-117">Konvertiert den angegebenen Wert in den <see cref="T:System.Windows.Expression" />-Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-117">Converts the provided value to the <see cref="T:System.Windows.Expression" /> type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e712b-118">Löst immer eine Ausnahme aus und gibt <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-118">Always throws an exception and returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e712b-119">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-119">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="e712b-120">Das als aktuelle Kultur zu verwendende <see cref="T:System.Globalization.CultureInfo" />-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-120">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e712b-121">Das zu konvertierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-121">The object to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="e712b-122">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-122">A <see cref="T:System.Type" /> that represents the type you wish to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e712b-123">Konvertiert das angegebene <see cref="T:System.Windows.Expression" />-Objekt in den angegebenen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-123">Converts the provided <see cref="T:System.Windows.Expression" /> object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e712b-124">Löst immer eine Ausnahme aus und gibt <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e712b-124">Always throws an exception and returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>