<Type Name="FrameworkContentElement" FullName="System.Windows.FrameworkContentElement">
  <TypeSignature Language="C#" Value="public class FrameworkContentElement : System.Windows.ContentElement, System.ComponentModel.ISupportInitialize, System.Windows.IFrameworkInputElement, System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi FrameworkContentElement extends System.Windows.ContentElement implements class System.ComponentModel.ISupportInitialize, class System.Windows.IFrameworkInputElement, class System.Windows.IInputElement, class System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkContentElement" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkContentElement&#xA;Inherits ContentElement&#xA;Implements IFrameworkInputElement, IQueryAmbient, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkContentElement : System::Windows::ContentElement, System::ComponentModel::ISupportInitialize, System::Windows::IFrameworkInputElement, System::Windows::Markup::IQueryAmbient" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.ContentElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.IFrameworkInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IQueryAmbient</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.UsableDuringInitialization(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.XmlLangProperty("Language")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="FocusVisualStyle", StyleTargetType=typeof(System.Windows.Controls.Control))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="21112-101"><see cref="T:System.Windows.FrameworkContentElement" /> stellt die Implementierung auf WPF-Frameworkebene und die Erweiterung der <see cref="T:System.Windows.ContentElement" />-Basisklasse dar.</span><span class="sxs-lookup"><span data-stu-id="21112-101"><see cref="T:System.Windows.FrameworkContentElement" /> is the WPF framework-level implementation and expansion of the <see cref="T:System.Windows.ContentElement" /> base class.</span></span> <span data-ttu-id="21112-102"><see cref="T:System.Windows.FrameworkContentElement" /> bietet Unterstützung für zusätzliche Eingabe-APIs (einschließlich QuickInfos und Kontextmenüs), Storyboards, Datenkontexte für die Datenbindung, Formatvorlagen und APIs für Hilfsprogramme für logische Strukturen.</span><span class="sxs-lookup"><span data-stu-id="21112-102"><see cref="T:System.Windows.FrameworkContentElement" /> adds support for additional input APIs (including tooltips and context menus), storyboards, data context for data binding, styles support, and logical tree helper APIs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-103"><xref:System.Windows.FrameworkContentElement> eigene Renderingverhalten definieren nicht noch; Instanziieren ein tatsächliches <xref:System.Windows.FrameworkContentElement> Klasseninstanz im Code oder Markup ist möglich, aber zeigt "nothing" in einem [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Anwendung [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="21112-103"><xref:System.Windows.FrameworkContentElement> does not yet define its own rendering behavior; instantiating an actual <xref:System.Windows.FrameworkContentElement> class instance in code or markup is possible but displays nothing in a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span> <span data-ttu-id="21112-104">Renderinglogik muss angegeben werden, von Klassen, <xref:System.Windows.FrameworkContentElement> untergeordneten Elemente als Teil ihrer Inhaltsmodell oder in <xref:System.Windows.FrameworkContentElement> abgeleitete Klassen.</span><span class="sxs-lookup"><span data-stu-id="21112-104">Rendering logic must be provided by classes that take <xref:System.Windows.FrameworkContentElement> child elements as part of their content model, or in <xref:System.Windows.FrameworkContentElement> derived classes.</span></span>  
  
 <span data-ttu-id="21112-105"><xref:System.Windows.FrameworkContentElement> Viele der gleichen absichtlich codenavigation [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] als <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="21112-105"><xref:System.Windows.FrameworkContentElement> deliberately parallels many of the same [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] as <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="21112-106">Beachten Sie, dass bestimmte [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] finden Sie auf <xref:System.Windows.FrameworkElement> keine <xref:System.Windows.FrameworkContentElement> entspricht.</span><span class="sxs-lookup"><span data-stu-id="21112-106">Note that certain [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] found on <xref:System.Windows.FrameworkElement> will not have a <xref:System.Windows.FrameworkContentElement> equivalent.</span></span> <span data-ttu-id="21112-107">Einige der <xref:System.Windows.FrameworkElement> [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] sind für Funktionen wie die Darstellung von Geometrie oder das Layout, die für nicht relevant sind eine <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="21112-107">Several of the <xref:System.Windows.FrameworkElement> [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] are for functionality such as geometry representation or layout, which are not relevant for a <xref:System.Windows.FrameworkContentElement>.</span></span>  
  
 <span data-ttu-id="21112-108">Die meisten vorhandenen <xref:System.Windows.FrameworkContentElement> abgeleitete Klassen befinden sich der <xref:System.Windows.Documents> Namespace.</span><span class="sxs-lookup"><span data-stu-id="21112-108">The majority of existing <xref:System.Windows.FrameworkContentElement> derived classes will be found in the <xref:System.Windows.Documents> namespace.</span></span> <span data-ttu-id="21112-109">Viele dieser abgeleiteten Klassen implementieren Elemente für die flussdokumentmodells.</span><span class="sxs-lookup"><span data-stu-id="21112-109">Many of these derived classes implement elements for the flow document model.</span></span> <span data-ttu-id="21112-110">Bestimmte abgeleiteten Klassen, z. B. <xref:System.Windows.Documents.Hyperlink> einige Steuerelement-ähnliche Funktionalität, sondern abgeleitet sind <xref:System.Windows.FrameworkContentElement> , dass das Steuerelement in das Flussdokumentmodell mit einbezogen werden können.</span><span class="sxs-lookup"><span data-stu-id="21112-110">Certain derived classes such as <xref:System.Windows.Documents.Hyperlink> have some control-like functionality, but are derived from <xref:System.Windows.FrameworkContentElement> such that the control-like elements can still participate in the flow document model.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.FrameworkElement" />
    <altmember cref="T:System.Windows.ContentElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkContentElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkContentElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21112-111">Initialisiert eine neue Instanz der <see cref="T:System.Windows.FrameworkContentElement" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="21112-111">Initializes a new instance of the <see cref="T:System.Windows.FrameworkContentElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLogicalChild">
      <MemberSignature Language="C#" Value="protected internal void AddLogicalChild (object child);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddLogicalChild(object child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.AddLogicalChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddLogicalChild (child As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddLogicalChild(System::Object ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="21112-112">Das untergeordnete Element, das hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="21112-112">The child element to be added.</span></span></param>
        <summary><span data-ttu-id="21112-113">Fügt das bereitgestellte Element als untergeordnetes Element dieses Elements hinzu.</span><span class="sxs-lookup"><span data-stu-id="21112-113">Adds the provided element as a child of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-114">Diese Methode kann eine Ausnahme ausgelöst, wenn Sie zu einem Zeitpunkt aufgerufen wird, wenn die logische Struktur von einem anderen Prozess durchlaufen wird.</span><span class="sxs-lookup"><span data-stu-id="21112-114">This method can throw an exception if called at a time when the logical tree is being iterated by another process.</span></span>  
  
 <span data-ttu-id="21112-115">Die meisten <xref:System.Windows.FrameworkContentElement> abgeleitete Klassen verfügbar zu machen, dedizierte Auflistungen, die für die Kapselung verantwortlich sind (z. B. <xref:System.Windows.Documents.Span.Inlines%2A> auf die <xref:System.Windows.Documents.Span> Klasse. <xref:System.Windows.Documents.Section.Blocks%2A> auf die <xref:System.Windows.Documents.Section> Klasse).</span><span class="sxs-lookup"><span data-stu-id="21112-115">Most <xref:System.Windows.FrameworkContentElement> derived classes expose dedicated collections that are responsible for containment (for example, <xref:System.Windows.Documents.Span.Inlines%2A> on the <xref:System.Windows.Documents.Span> class; <xref:System.Windows.Documents.Section.Blocks%2A> on the <xref:System.Windows.Documents.Section> class).</span></span> <span data-ttu-id="21112-116">Sie können in der Regel vermeiden, indem der logischen Struktur direkt zu bearbeiten, wenn Sie von diesen Klassen ableiten.</span><span class="sxs-lookup"><span data-stu-id="21112-116">You can typically avoid any need to manipulate the logical tree directly if you derive from these classes instead.</span></span> <span data-ttu-id="21112-117">Arbeiten mit der logischen Struktur für Inhaltselemente ist, die einen speziellen Parser oder ein spezieller benötigen möglicherweise erweiterte Szenario <xref:System.Windows.FrameworkElement> , fungiert als übergeordnetes Rendering-Element (Inhaltshost).</span><span class="sxs-lookup"><span data-stu-id="21112-117">Working with the logical tree for content elements is an advanced scenario that may require a specialized parser or a specialized <xref:System.Windows.FrameworkElement> that acts as the parent rendering element (content host).</span></span>  
  
 <span data-ttu-id="21112-118">Weitere Informationen zur Verwendung von <xref:System.Windows.FrameworkContentElement.LogicalChildren%2A> und <xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A>, finden Sie unter [Strukturen in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="21112-118">For more information about how to use <xref:System.Windows.FrameworkContentElement.LogicalChildren%2A> and <xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A>, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)" />
        <altmember cref="P:System.Windows.FrameworkContentElement.LogicalChildren" />
        <altmember cref="T:System.Windows.LogicalTreeHelper" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public virtual void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21112-119">Wird aufgerufen, bevor ein Element initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="21112-119">Called before an element is initialized.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="21112-120">Überschreiben Sie diese Methode, um eine besondere Behandlung bereitstellen, die ausgeführt werden soll, bevor das Element während der Prozess des Ladens Element initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="21112-120">Override this method to provide special handling that should occur before your element is initialized during the element loading process.</span></span>  
  
 <span data-ttu-id="21112-121">Die Implementierung sollte die basisimplementierung aufrufen, da die Implementierung Base (Standard) einige interne Flags Initialisierung des festlegt.</span><span class="sxs-lookup"><span data-stu-id="21112-121">Your implementation should call the base implementation, because the base (default) implementation sets some internal flags to keep track of initialization.</span></span>  
  
 <span data-ttu-id="21112-122">Die grundlegende Implementierung löst eine Ausnahme aus, wenn <see cref="M:System.Windows.FrameworkContentElement.BeginInit" /> heißt für dasselbe Element vor dem Erreichen von mehr als einmal <see cref="M:System.Windows.FrameworkContentElement.EndInit" />.</span><span class="sxs-lookup"><span data-stu-id="21112-122">The base implementation will throw an exception if <see cref="M:System.Windows.FrameworkContentElement.BeginInit" /> is called more than one time on the same element prior to reaching <see cref="M:System.Windows.FrameworkContentElement.EndInit" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginStoryboard">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21112-123">Startet die Sequenz von Aktionen, die im bereitgestellten Storyboard enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="21112-123">Begins the sequence of actions that are contained in the provided storyboard.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginStoryboard">
      <MemberSignature Language="C#" Value="public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginStoryboard(class System.Windows.Media.Animation.Storyboard storyboard) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginStoryboard(System::Windows::Media::Animation::Storyboard ^ storyboard);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storyboard" Type="System.Windows.Media.Animation.Storyboard" />
      </Parameters>
      <Docs>
        <param name="storyboard"><span data-ttu-id="21112-124">Das zu startende Storyboard.</span><span class="sxs-lookup"><span data-stu-id="21112-124">The storyboard to begin.</span></span></param>
        <summary><span data-ttu-id="21112-125">Startet die Sequenz von Aktionen, die im bereitgestellten Storyboard enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="21112-125">Begins the sequence of actions that are contained in the provided storyboard.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-126">Für die Signaturen, die keine verwenden die `isControllable`, Parameter, oder wenn dieser Parameter angegeben wird `false`, der Animation zugeordneten Uhren auf der Zeitachse werden entfernt, sobald sie den Zeitraum "Fill" erreicht.</span><span class="sxs-lookup"><span data-stu-id="21112-126">For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the "Fill" period.</span></span> <span data-ttu-id="21112-127">Die Animation kann nicht aus diesem Grund neu gestartet werden, nach der einmal ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21112-127">Therefore the animation cannot be restarted after being run once.</span></span> <span data-ttu-id="21112-128">Beachten Sie, dass eine Animation steuern auch erfordert, dass das Storyboard benannt oder als eine Instanz im Code zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="21112-128">Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStoryboard">
      <MemberSignature Language="C#" Value="public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginStoryboard(class System.Windows.Media.Animation.Storyboard storyboard, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginStoryboard(System::Windows::Media::Animation::Storyboard ^ storyboard, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storyboard" Type="System.Windows.Media.Animation.Storyboard" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="storyboard"><span data-ttu-id="21112-129">Das zu startende Storyboard.</span><span class="sxs-lookup"><span data-stu-id="21112-129">The storyboard to begin.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="21112-130">Ein Wert der Enumeration zum Beschreiben der auszuführenden Aktion, wenn eine im Storyboard beschriebene Eigenschaft bereits animiert ist.</span><span class="sxs-lookup"><span data-stu-id="21112-130">A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</span></span></param>
        <summary><span data-ttu-id="21112-131">Startet die Sequenz von Aktionen, die im bereitgestellten Storyboard enthalten ist. Die angegebenen Optionen legen fest, welche Aktion ausgeführt werden soll, wenn die Eigenschaft bereits animiert ist.</span><span class="sxs-lookup"><span data-stu-id="21112-131">Begins the sequence of actions that are contained in the provided storyboard, with options specified for what should occur if the property is already animated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-132">Für die Signaturen, die keine verwenden die `isControllable`, Parameter, oder wenn dieser Parameter angegeben wird `false`, der Animation zugeordneten Uhren auf der Zeitachse werden entfernt, sobald sie den Zeitraum "Fill" erreicht.</span><span class="sxs-lookup"><span data-stu-id="21112-132">For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the "Fill" period.</span></span> <span data-ttu-id="21112-133">Die Animation kann nicht aus diesem Grund neu gestartet werden, nach der einmal ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21112-133">Therefore the animation cannot be restarted after being run once.</span></span> <span data-ttu-id="21112-134">Beachten Sie, dass eine Animation steuern auch erfordert, dass das Storyboard benannt oder als eine Instanz im Code zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="21112-134">Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="21112-135">Mit dem Verfassen HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="21112-135">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="21112-136">Beim Anwenden einer <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, oder <xref:System.Windows.Media.Animation.AnimationClock> auf eine Eigenschaft mit der <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, stellen alle <xref:System.Windows.Media.Animation.Clock> zuvor mit dieser Eigenschaft zugewiesenen Objekte weiter an Systemressourcen beanspruchen, das Timing-System verwendet wird Entfernen Sie die Uhren nicht automatisch.</span><span class="sxs-lookup"><span data-stu-id="21112-136">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.</span></span>  
  
 <span data-ttu-id="21112-137">Um Leistungsprobleme zu vermeiden, wenn Sie eine große Anzahl von Uhren mit anwenden <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, Sie sollten zusammengesetzte Uhren aus der animierten Eigenschaft nach dem Abschluss entfernen.</span><span class="sxs-lookup"><span data-stu-id="21112-137">To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="21112-138">Es gibt mehrere Möglichkeiten, eine Uhr zu entfernen:</span><span class="sxs-lookup"><span data-stu-id="21112-138">There are several ways to remove a clock:</span></span>  
  
-   <span data-ttu-id="21112-139">Verwenden Sie zum Entfernen aller Uhren aus einer Eigenschaft der <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> oder <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> -Methode des animierten Objekts.</span><span class="sxs-lookup"><span data-stu-id="21112-139">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="21112-140">Geben Sie die Eigenschaft als erster Parameter animierten und `null` als das zweite.</span><span class="sxs-lookup"><span data-stu-id="21112-140">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="21112-141">Dadurch werden alle Animationsuhren aus der Eigenschaft entfernt.</span><span class="sxs-lookup"><span data-stu-id="21112-141">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="21112-142">Zum Entfernen einer bestimmten <xref:System.Windows.Media.Animation.AnimationClock> , aus einer Liste von Uhren verwenden die <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft der <xref:System.Windows.Media.Animation.AnimationClock> abgerufen eine <xref:System.Windows.Media.Animation.ClockController>, rufen Sie anschließend die <xref:System.Windows.Media.Animation.ClockController.Remove%2A> Methode der <xref:System.Windows.Media.Animation.ClockController>.</span><span class="sxs-lookup"><span data-stu-id="21112-142">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="21112-143">Dies erfolgt in der Regel in der <xref:System.Windows.Media.Animation.Clock.Completed> -Ereignishandler für eine Uhr.</span><span class="sxs-lookup"><span data-stu-id="21112-143">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="21112-144">Beachten Sie, dass nur Stammuhren von gesteuert werden, können eine <xref:System.Windows.Media.Animation.ClockController>; das <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft einer untergeordneten Uhr gibt `null`.</span><span class="sxs-lookup"><span data-stu-id="21112-144">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="21112-145">Beachten Sie auch, dass die <xref:System.Windows.Media.Animation.Clock.Completed> Ereignis wird nicht ausgelöst, wenn die effektive Dauer der Uhr endlos ist.</span><span class="sxs-lookup"><span data-stu-id="21112-145">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="21112-146">In diesem Fall muss der Benutzer bestimmen beim Aufrufen <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="21112-146">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="21112-147">Dies betrifft hauptsächlich Animationen für Objekte, die eine lange Lebensdauer haben.</span><span class="sxs-lookup"><span data-stu-id="21112-147">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="21112-148">Wenn ein Objekt Garbage Collection durchgeführt wird, wird die Uhren werden auch getrennt, und Sammlung veralteter Objekte aufgenommen.</span><span class="sxs-lookup"><span data-stu-id="21112-148">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="21112-149">Weitere Informationen zu Uhr Objekten finden Sie unter [Animationen und zeitlichen Steuerung Systemübersicht](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span><span class="sxs-lookup"><span data-stu-id="21112-149">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStoryboard">
      <MemberSignature Language="C#" Value="public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginStoryboard(class System.Windows.Media.Animation.Storyboard storyboard, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginStoryboard(System::Windows::Media::Animation::Storyboard ^ storyboard, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storyboard" Type="System.Windows.Media.Animation.Storyboard" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="storyboard"><span data-ttu-id="21112-150">Das zu startende Storyboard.</span><span class="sxs-lookup"><span data-stu-id="21112-150">The storyboard to begin.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="21112-151">Ein Wert der Enumeration zum Beschreiben der auszuführenden Aktion, wenn eine im Storyboard beschriebene Eigenschaft bereits animiert ist.</span><span class="sxs-lookup"><span data-stu-id="21112-151">A value of the enumeration that describes behavior to use if a  property described in the storyboard is already animated.</span></span></param>
        <param name="isControllable"><span data-ttu-id="21112-152">Bestimmt, ob die Animation steuerbar ist (angehalten werden kann), nachdem sie gestartet wurde.</span><span class="sxs-lookup"><span data-stu-id="21112-152">Declares whether the animation is controllable (can be paused) after it is started.</span></span></param>
        <summary><span data-ttu-id="21112-153">Startet die Sequenz von Aktionen, die im bereitgestellten Storyboard enthalten ist, im angegebenen Zustand für das Steuerelement der Animation nach deren Start.</span><span class="sxs-lookup"><span data-stu-id="21112-153">Begins the sequence of actions that are contained in the provided storyboard, with specified state for control of the animation after it is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-154">Für die Signaturen, die keine verwenden die `isControllable`, Parameter, oder wenn dieser Parameter angegeben wird `false`, der Animation zugeordneten Uhren auf der Zeitachse werden entfernt, sobald sie den Zeitraum "Fill" erreicht.</span><span class="sxs-lookup"><span data-stu-id="21112-154">For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the "Fill" period.</span></span> <span data-ttu-id="21112-155">Die Animation kann nicht aus diesem Grund neu gestartet werden, nach der einmal ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21112-155">Therefore the animation cannot be restarted after being run once.</span></span> <span data-ttu-id="21112-156">Beachten Sie, dass eine Animation steuern auch erfordert, dass das Storyboard benannt oder als eine Instanz im Code zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="21112-156">Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="21112-157">Mit dem Verfassen HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="21112-157">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="21112-158">Beim Anwenden einer <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, oder <xref:System.Windows.Media.Animation.AnimationClock> auf eine Eigenschaft mit der <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, stellen alle <xref:System.Windows.Media.Animation.Clock> zuvor mit dieser Eigenschaft zugewiesenen Objekte weiter an Systemressourcen beanspruchen, das Timing-System verwendet wird Diese Uhren nicht automatisch entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="21112-158">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="21112-159">Um Leistungsprobleme zu vermeiden, wenn Sie eine große Anzahl von Uhren mit anwenden <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, Sie sollten zusammengesetzte Uhren aus der animierten Eigenschaft nach dem Abschluss entfernen.</span><span class="sxs-lookup"><span data-stu-id="21112-159">To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="21112-160">Es gibt mehrere Möglichkeiten, eine Uhr zu entfernen:</span><span class="sxs-lookup"><span data-stu-id="21112-160">There are several ways to remove a clock:</span></span>  
  
-   <span data-ttu-id="21112-161">Verwenden Sie zum Entfernen aller Uhren aus einer Eigenschaft der <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> oder <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> -Methode des animierten Objekts.</span><span class="sxs-lookup"><span data-stu-id="21112-161">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="21112-162">Geben Sie die Eigenschaft als erster Parameter animierten und `null` als das zweite.</span><span class="sxs-lookup"><span data-stu-id="21112-162">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="21112-163">Dadurch werden alle Animationsuhren aus der Eigenschaft entfernt.</span><span class="sxs-lookup"><span data-stu-id="21112-163">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="21112-164">Zum Entfernen einer bestimmten <xref:System.Windows.Media.Animation.AnimationClock> , aus einer Liste von Uhren verwenden die <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft der <xref:System.Windows.Media.Animation.AnimationClock> abgerufen eine <xref:System.Windows.Media.Animation.ClockController>, rufen Sie anschließend die <xref:System.Windows.Media.Animation.ClockController.Remove%2A> Methode der <xref:System.Windows.Media.Animation.ClockController>.</span><span class="sxs-lookup"><span data-stu-id="21112-164">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="21112-165">Dies erfolgt in der Regel in der <xref:System.Windows.Media.Animation.Clock.Completed> -Ereignishandler für eine Uhr.</span><span class="sxs-lookup"><span data-stu-id="21112-165">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="21112-166">Beachten Sie, dass nur Stammuhren von gesteuert werden, können eine <xref:System.Windows.Media.Animation.ClockController>; das <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft einer untergeordneten Uhr gibt `null`.</span><span class="sxs-lookup"><span data-stu-id="21112-166">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="21112-167">Beachten Sie auch, dass die <xref:System.Windows.Media.Animation.Clock.Completed> Ereignis wird nicht ausgelöst, wenn die effektive Dauer der Uhr endlos ist.</span><span class="sxs-lookup"><span data-stu-id="21112-167">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="21112-168">In diesem Fall muss der Benutzer bestimmen beim Aufrufen <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="21112-168">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="21112-169">Dies betrifft hauptsächlich Animationen für Objekte, die eine lange Lebensdauer haben.</span><span class="sxs-lookup"><span data-stu-id="21112-169">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="21112-170">Wenn ein Objekt Garbage Collection durchgeführt wird, wird die Uhren werden auch getrennt, und Sammlung veralteter Objekte aufgenommen.</span><span class="sxs-lookup"><span data-stu-id="21112-170">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="21112-171">Weitere Informationen zu Uhr Objekten finden Sie unter [Animationen und zeitlichen Steuerung Systemübersicht](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span><span class="sxs-lookup"><span data-stu-id="21112-171">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup BindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup BindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.BindingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingGroup As BindingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingGroup ^ BindingGroup { System::Windows::Data::BindingGroup ^ get(); void set(System::Windows::Data::BindingGroup ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-172">Ruft die für das Element verwendete <see cref="T:System.Windows.Data.BindingGroup" /> ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="21112-172">Gets or sets the <see cref="T:System.Windows.Data.BindingGroup" /> that is used for the element.</span></span></summary>
        <value><span data-ttu-id="21112-173">Die für das Element verwendete <see cref="T:System.Windows.Data.BindingGroup" />.</span><span class="sxs-lookup"><span data-stu-id="21112-173">The <see cref="T:System.Windows.Data.BindingGroup" /> that is used for the element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-174">Ein <xref:System.Windows.Data.BindingGroup> zum Überprüfen der Werte von mehreren Eigenschaften eines Objekts verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="21112-174">A <xref:System.Windows.Data.BindingGroup> can be used to validate the values of multiple properties of an object.</span></span> <span data-ttu-id="21112-175">Nehmen wir beispielsweise an, dass eine Anwendung den Benutzer fordert auf eine Adresse eingeben, und dann ein Objekt des Typs füllt `Address`, die über die Eigenschaften verfügt `Street`, `City`, `ZipCode`, und `Country`, mit den Werten, die der Benutzer bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="21112-175">For example, suppose that an application prompts the user to enter an address and then populates an object of type `Address`, which has the properties `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided.</span></span> <span data-ttu-id="21112-176">Die Anwendung verfügt über einen Bereich, vier enthält <xref:System.Windows.Controls.TextBox> Steuerelemente, von denen jedes an eine der Eigenschaften des Objekts gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="21112-176">The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is bound to one of the object’s properties.</span></span> <span data-ttu-id="21112-177">Können Sie eine <xref:System.Windows.Controls.ValidationRule> in einem <xref:System.Windows.Data.BindingGroup> zum Überprüfen der `Address` Objekt.</span><span class="sxs-lookup"><span data-stu-id="21112-177">You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object.</span></span> <span data-ttu-id="21112-178">Z. B. die <xref:System.Windows.Controls.ValidationRule> können sicherstellen, dass die Postleitzahl für das Land der Adresse gültig ist.</span><span class="sxs-lookup"><span data-stu-id="21112-178">For example, the <xref:System.Windows.Controls.ValidationRule> can ensure that the zip code is valid for the country of the address.</span></span>  
  
 <span data-ttu-id="21112-179">Untergeordnete Elemente erben die <xref:System.Windows.Data.BindingGroup> von den übergeordneten Elementen, genauso wie bei jeder anderen vererbbare Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-179">Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property.</span></span>  
  
<a name="dependencyPropertyInfo_BindingGroup"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="21112-180">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="21112-180">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-181">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-181">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.BindingGroupProperty>|  
|<span data-ttu-id="21112-182">Festgelegte Metadateneigenschaften **"true"**</span><span class="sxs-lookup"><span data-stu-id="21112-182">Metadata properties set to **true**</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingGroupProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BindingGroupProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BindingGroupProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.BindingGroupProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BindingGroupProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BindingGroupProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-183">Bezeichnet die <see cref="P:System.Windows.FrameworkContentElement.BindingGroup" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-183">Identifies the <see cref="P:System.Windows.FrameworkContentElement.BindingGroup" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BringIntoView">
      <MemberSignature Language="C#" Value="public void BringIntoView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BringIntoView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.BringIntoView" />
      <MemberSignature Language="VB.NET" Value="Public Sub BringIntoView ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BringIntoView();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21112-184">Versucht, dieses Element in einem der bildlauffähigen Bereiche anzuzeigen, in denen es enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="21112-184">Attempts to bring this element into view, within any scrollable regions it is contained within.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-185">Durch Aufruf dieser Methode, rufen Sie <xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A> für alle übergeordneten Bereich mit verschiebbarem Fensterinhalt mit dem Element (das übergeordnete Element ist möglicherweise sehr gut eine <xref:System.Windows.FrameworkElement>, sondern eine <xref:System.Windows.FrameworkContentElement>).</span><span class="sxs-lookup"><span data-stu-id="21112-185">By calling this method, you effectively will call <xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A> on any parent scrollable area that contains the element (the parent may very well be a <xref:System.Windows.FrameworkElement>, not a <xref:System.Windows.FrameworkContentElement>).</span></span> <span data-ttu-id="21112-186">Wenn dieses Element nicht in einem bildlauffähigen Bereich enthalten ist, das Ereignis weiterhin ausgelöst, aber es werden keine Auswirkung.</span><span class="sxs-lookup"><span data-stu-id="21112-186">If this element is not contained in a scrollable area, the event is still raised, but there will be no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ContextMenu ^ ContextMenu { System::Windows::Controls::ContextMenu ^ get(); void set(System::Windows::Controls::ContextMenu ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-187">Ruft das Kontextmenüelement ab, das angezeigt werden soll, wenn das Kontextmenü in diesem Element über die [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] angefordert wird, oder legt das Element fest.</span><span class="sxs-lookup"><span data-stu-id="21112-187">Gets or sets the context menu element that should appear whenever the context menu is requested via [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] from within this element.</span></span></summary>
        <value><span data-ttu-id="21112-188">Das Kontextmenü, das dieses Element verwendet.</span><span class="sxs-lookup"><span data-stu-id="21112-188">The context menu that this element uses.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ContextMenu"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="21112-189">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="21112-189">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-190">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-190">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.ContextMenuProperty>|  
|<span data-ttu-id="21112-191">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="21112-191">Metadata properties set to `true`</span></span>|<span data-ttu-id="21112-192">Keiner</span><span class="sxs-lookup"><span data-stu-id="21112-192">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="21112-193">Im folgenden Beispiel wird eine <xref:System.Windows.Controls.ContextMenu> auf eine <xref:System.Windows.Documents.Paragraph>.</span><span class="sxs-lookup"><span data-stu-id="21112-193">The following example places a <xref:System.Windows.Controls.ContextMenu> on a <xref:System.Windows.Documents.Paragraph>.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#ContextMenu](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#contextmenu)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenu" />
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuClosing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ContextMenuEventHandler ContextMenuClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ContextMenuEventHandler ContextMenuClosing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.ContextMenuClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuClosing As ContextMenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ContextMenuEventHandler ^ ContextMenuClosing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ContextMenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-194">Tritt unmittelbar vor dem Schließen eines Kontextmenüs für ein Element auf.</span><span class="sxs-lookup"><span data-stu-id="21112-194">Occurs just before any context menu on the element is closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-195">Um schließende unterdrücken sollte Kontextmenüs, die Handler des Ereignisses es als behandelt markiert.</span><span class="sxs-lookup"><span data-stu-id="21112-195">To suppress closing context menus, handlers of the event should mark it as handled.</span></span>  
  
 <span data-ttu-id="21112-196">Verwenden Sie dieses Ereignis als ein <xref:System.Windows.EventTrigger> in einem Format müssen Sie auf den zugrunde liegenden Dienst Ereignisbezeichner verweisen:</span><span class="sxs-lookup"><span data-stu-id="21112-196">To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying service event identifier:</span></span>  
  
 [!code-xaml[CorePseudocode#FEContextMenuClosing](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuclosing)]  
  
 <span data-ttu-id="21112-197">(Diese Verwendung ist erforderlich, da die Implementierung von Ereignissen auf <xref:System.Windows.FrameworkContentElement> , macht die zugrunde liegenden Dienstereignis nicht richtig zugeordnet ist die <xref:System.Windows.FrameworkContentElement.ContextMenuClosing> Bezeichner für die Verwendung in Triggern).</span><span class="sxs-lookup"><span data-stu-id="21112-197">(This usage is required because the event implementation on <xref:System.Windows.FrameworkContentElement> that exposes the underlying service event does not correctly map the <xref:System.Windows.FrameworkContentElement.ContextMenuClosing> identifier for use in triggers).</span></span>  
  
<a name="routedEventInfo_ContextMenuClosing"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="21112-198">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="21112-198">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-199">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-199">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.ContextMenuClosingEvent>|  
|<span data-ttu-id="21112-200">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="21112-200">Routing strategy</span></span>|<span data-ttu-id="21112-201">Bubbling</span><span class="sxs-lookup"><span data-stu-id="21112-201">Bubbling</span></span>|  
|<span data-ttu-id="21112-202">delegate</span><span class="sxs-lookup"><span data-stu-id="21112-202">Delegate</span></span>|<xref:System.Windows.Controls.ContextMenuEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="21112-203">Das folgende Beispiel implementiert einen Handler, der den Cursor über ein benannter Bereich ändert `DisplayArea` (nicht dargestellt).</span><span class="sxs-lookup"><span data-stu-id="21112-203">The following example implements a handler that changes the cursor over a named region `DisplayArea` (not shown).</span></span> <span data-ttu-id="21112-204">Der Kommentar verweist auf eine <xref:System.Windows.UIElement> Verwendung "," tatsächlich wäre in diesem Beispiel identisch, aber wenn `DisplayArea` wurden eine <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="21112-204">The comment hints at a <xref:System.Windows.UIElement> usage, but in fact this sample would be identical if `DisplayArea` were a <xref:System.Windows.FrameworkContentElement>.</span></span>  
  
 [!code-csharp[cursors#ChangeCursorsSample](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#changecursorssample)]
 [!code-vb[cursors#ChangeCursorsSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#changecursorssample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuClosingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ContextMenuClosingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ContextMenuClosingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.ContextMenuClosingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextMenuClosingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ContextMenuClosingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-205">Bezeichnet die <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="21112-205">Identifies the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-206">Ereignis-ID-Objekte werden erstellt, wenn Routingereignisse registriert werden (finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) und kann dann verwendet werden, um Klassenhandler hinzuzufügen (finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span><span class="sxs-lookup"><span data-stu-id="21112-206">Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span></span> <span data-ttu-id="21112-207">Bezeichnerobjekte enthalten einen kennzeichnenden Namen, Besitzertyp, Handlertyp, Routingstrategie und eine Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-207">Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuOpening">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ContextMenuEventHandler ContextMenuOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ContextMenuEventHandler ContextMenuOpening" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.ContextMenuOpening" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuOpening As ContextMenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ContextMenuEventHandler ^ ContextMenuOpening;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ContextMenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-208">Tritt ein, wenn ein Kontextmenü des Elements geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="21112-208">Occurs when any context menu on the element is opened.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-209">Zum manuellen Öffnen des Kontextmenüs kennzeichnen Handler für die Ereignisse das betreffende Ereignis als behandelt.</span><span class="sxs-lookup"><span data-stu-id="21112-209">To manually open context menus, handlers of the events should mark the relevant event as handled.</span></span> <span data-ttu-id="21112-210">Andernfalls, den vorhandenen Wert von der <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> Eigenschaft wird verwendet, um automatisch ein Kontextmenü geöffnet.</span><span class="sxs-lookup"><span data-stu-id="21112-210">Otherwise, the existing value of the <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> property will be used to automatically open a context menu.</span></span> <span data-ttu-id="21112-211">Das Ereignis als behandelt markiert wird die Standardaktion tatsächlich abgebrochen, und möglicherweise Gelegenheit, den Wert zurückgesetzt, die <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> Eigenschaft, und öffnen Sie die neue <xref:System.Windows.Controls.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="21112-211">Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> property and then open the new <xref:System.Windows.Controls.ContextMenu>.</span></span> <span data-ttu-id="21112-212">Es ist jedoch ein Problem der zeitlichen Steuerung, die Sie beachten sollten.</span><span class="sxs-lookup"><span data-stu-id="21112-212">However, there is a timing issue you should be aware of.</span></span> <span data-ttu-id="21112-213">Um vollständig ersetzen Sie im Kontextmenü den Befehl über eine <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> Handler auf, die ursprüngliche Kontextmenü darf nicht null / leer sein.</span><span class="sxs-lookup"><span data-stu-id="21112-213">In order to completely replace the context menu through a <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> handler, the initial context menu must not be null / empty.</span></span> <span data-ttu-id="21112-214">Alternativ müssen Sie das Ereignis zu behandeln und dann manuell ein neues Kontextmenü geöffnet.</span><span class="sxs-lookup"><span data-stu-id="21112-214">Alternatively, you might need to handle the event and then manually open a new context menu.</span></span> <span data-ttu-id="21112-215">Weitere Informationen finden Sie unter [wie: Behandeln Sie das ContextMenuOpening-Ereignis](~/docs/framework/wpf/advanced/how-to-handle-the-contextmenuopening-event.md).</span><span class="sxs-lookup"><span data-stu-id="21112-215">For details, see [How to: Handle the ContextMenuOpening Event](~/docs/framework/wpf/advanced/how-to-handle-the-contextmenuopening-event.md).</span></span>  
  
 <span data-ttu-id="21112-216">Verwenden Sie dieses Ereignis als ein <xref:System.Windows.EventTrigger> in einem Format müssen Sie auf den zugrunde liegenden Dienst Ereignisbezeichner verweisen:</span><span class="sxs-lookup"><span data-stu-id="21112-216">To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying service event identifier:</span></span>  
  
 [!code-xaml[CorePseudocode#FEContextMenuOpening](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuopening)]  
  
 <span data-ttu-id="21112-217">(Diese Verwendung ist erforderlich, da die Implementierung von Ereignissen auf <xref:System.Windows.FrameworkContentElement> , macht die zugrunde liegenden Dienstereignis nicht richtig zugeordnet ist die <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> Bezeichner für die Verwendung in Triggern).</span><span class="sxs-lookup"><span data-stu-id="21112-217">(This usage is required because the event implementation on <xref:System.Windows.FrameworkContentElement> that exposes the underlying service event does not correctly map the <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> identifier for use in triggers).</span></span>  
  
<a name="routedEventInfo_ContextMenuOpening"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="21112-218">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="21112-218">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-219">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-219">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.ContextMenuOpeningEvent>|  
|<span data-ttu-id="21112-220">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="21112-220">Routing strategy</span></span>|<span data-ttu-id="21112-221">Bubbling</span><span class="sxs-lookup"><span data-stu-id="21112-221">Bubbling</span></span>|  
|<span data-ttu-id="21112-222">delegate</span><span class="sxs-lookup"><span data-stu-id="21112-222">Delegate</span></span>|<xref:System.Windows.Controls.ContextMenuEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
        <altmember cref="T:System.Windows.Controls.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuOpeningEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ContextMenuOpeningEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ContextMenuOpeningEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.ContextMenuOpeningEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextMenuOpeningEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ContextMenuOpeningEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-223">Bezeichnet die <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="21112-223">Identifies the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-224">Ereignis-ID-Objekte werden erstellt, wenn Routingereignisse registriert werden (finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) und kann dann verwendet werden, um Klassenhandler hinzuzufügen (finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span><span class="sxs-lookup"><span data-stu-id="21112-224">Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span></span> <span data-ttu-id="21112-225">Bezeichnerobjekte enthalten einen kennzeichnenden Namen, Besitzertyp, Handlertyp, Routingstrategie und eine Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-225">Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextMenuProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextMenuProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.ContextMenuProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextMenuProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContextMenuProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-226">Bezeichnet die <see cref="P:System.Windows.FrameworkContentElement.ContextMenu" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-226">Identifies the <see cref="P:System.Windows.FrameworkContentElement.ContextMenu" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Cursor Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Property Cursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Cursor ^ Cursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-227">Ruft den Cursor ab bzw. legt den Cursor fest, der angezeigt wird, wenn sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="21112-227">Gets or sets the cursor that displays when the mouse pointer is over this element.</span></span></summary>
        <value><span data-ttu-id="21112-228">Der anzuzeigende Cursor.</span><span class="sxs-lookup"><span data-stu-id="21112-228">The cursor to display.</span></span> <span data-ttu-id="21112-229">Der Standardwert ist gemäß dieser Abhängigkeitseigenschaft als <see langword="null" /> definiert.</span><span class="sxs-lookup"><span data-stu-id="21112-229">The default value is defined as <see langword="null" /> per this dependency property.</span></span> <span data-ttu-id="21112-230">Der zur Laufzeit angewendete Standardwert resultiert jedoch aus einer Vielzahl von Faktoren.</span><span class="sxs-lookup"><span data-stu-id="21112-230">However, the practical default at run time will come from a variety of factors.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-231">Beim Festlegen dieser Eigenschaft [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Prozessor basiert auf typkonvertierung für die <xref:System.Windows.Input.Cursor> Klasse, um die Zeichenfolge ergeben.</span><span class="sxs-lookup"><span data-stu-id="21112-231">When setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor relies on type conversion for the <xref:System.Windows.Input.Cursor> class to evaluate the string.</span></span> <span data-ttu-id="21112-232">Die bereitgestellte Zeichenfolge ergeben sollten eine <xref:System.Windows.Input.CursorType> Wert.</span><span class="sxs-lookup"><span data-stu-id="21112-232">The provided string should evaluate to a <xref:System.Windows.Input.CursorType> value.</span></span> <span data-ttu-id="21112-233">Ausführliche Informationen finden Sie unter <xref:System.Windows.Input.Cursor>.</span><span class="sxs-lookup"><span data-stu-id="21112-233">See <xref:System.Windows.Input.Cursor> for details.</span></span>  
  
 <span data-ttu-id="21112-234">Ob der von dieser Eigenschaft festgelegte Cursor werden oder wird nicht angezeigt, wenn der Mauszeiger über diesem Element befindet ist auch abhängig von den Wert der <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-234">Whether the cursor as established by this property will or will not display when the mouse pointer is over this element is also dependent on the value of the <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> property.</span></span> <span data-ttu-id="21112-235">Darüber hinaus wirkt ereignisbezogene Faktoren, z. B. ein aktives ziehen, Mauseingaben aufzufangen, Textbearbeitung-Modi im Steuerelemente usw., den Cursor mit einer höheren Priorität als der Wert sich auch, die Sie in dieser Eigenschaft angeben.</span><span class="sxs-lookup"><span data-stu-id="21112-235">Also, event-related considerations such as an active drag, mouse capture, text editing modes within controls, and so on, will also affect the cursor with higher priority than the value you specify in this property.</span></span>  
  
 <span data-ttu-id="21112-236">Wenn Sie das Verhalten der Einstellung dieser Eigenschaft auf den tatsächlichen Standardwert zurücksetzen möchten, legen Sie es auf `null` erneut aus.</span><span class="sxs-lookup"><span data-stu-id="21112-236">To revert the behavior of setting this property to the eventual default, set it to `null` again.</span></span>  
  
 <span data-ttu-id="21112-237">Die `null` Standard wirklich bedeutet, dass Bestimmung des Werts praktische Cursor hier verzögert, und von einer anderen Stelle abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="21112-237">The `null` default really means that determination of the practical cursor value is deferred here and should be obtained from elsewhere.</span></span> <span data-ttu-id="21112-238">Wenn keine programmgesteuerte Werte aus einer Quelle, den Standardcursor angezeigt, über eine [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Anwendung wird ein Pfeil sein.</span><span class="sxs-lookup"><span data-stu-id="21112-238">If presented with no programmatic values from any source, the default cursor over a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] application will be an arrow.</span></span>  
  
 <span data-ttu-id="21112-239">Jeder Bewegung der Maus über ein [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Anwendung löst eine <xref:System.Windows.ContentElement.QueryCursor> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-239">Each movement of the mouse over a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application raises a <xref:System.Windows.ContentElement.QueryCursor> event.</span></span> <span data-ttu-id="21112-240">Die Ereignis-Blasen und jedes Element entlang der Route erhält die Möglichkeit, die für die Ereignisbehandlung und zum Festlegen des Werts, der den Cursor über die Argumente für dieses Ereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-240">The event bubbles, and any element along the route has the opportunity to handle the event and to set the value of the cursor via the arguments of this event.</span></span> <span data-ttu-id="21112-241">Wenn dies der Fall ist, hat die Tatsache, dass das Ereignis behandelt wird und einen geänderten Wert in den Argumenten hat Vorrang vor den Wert des der <xref:System.Windows.FrameworkContentElement.Cursor%2A> Eigenschaft auf jeder Ebene, es sei denn, <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="21112-241">If that happens, the fact that the event is handled and has a changed value in the arguments takes precedence over the value of the <xref:System.Windows.FrameworkContentElement.Cursor%2A> property at any level, unless <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> is set.</span></span>  
  
 <span data-ttu-id="21112-242">Wenn Sie einen benutzerdefinierten Cursor nicht erstellt werden, in der Regel Sie legen Sie diese Eigenschaft auf eine statische Eigenschaft-Wert, der die <xref:System.Windows.Input.Cursors> Klasse.</span><span class="sxs-lookup"><span data-stu-id="21112-242">If not creating a custom cursor, typically you set this property to a static property value of the <xref:System.Windows.Input.Cursors> class.</span></span>  
  
 <span data-ttu-id="21112-243">Festlegen der <xref:System.Windows.Input.Cursor> auf einen benutzerdefinierten Wert ist bei teilweiser Vertrauenswürdigkeit nicht aktiviert.</span><span class="sxs-lookup"><span data-stu-id="21112-243">Setting the <xref:System.Windows.Input.Cursor> to a custom value is not enabled in partial trust.</span></span> <span data-ttu-id="21112-244">Weitere Informationen zu benutzerdefinierten Cursor finden Sie unter [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="21112-244">For more information on custom cursors, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_Cursor"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="21112-245">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="21112-245">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-246">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-246">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.CursorProperty>|  
|<span data-ttu-id="21112-247">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="21112-247">Metadata properties set to `true`</span></span>|<span data-ttu-id="21112-248">Keiner</span><span class="sxs-lookup"><span data-stu-id="21112-248">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="21112-249">Im folgenden Beispiel wird den Cursor auf einen benutzerdefinierten Wert.</span><span class="sxs-lookup"><span data-stu-id="21112-249">The following example sets the cursor to a custom value.</span></span>  
  
 [!code-csharp[cursors#ChangeCursorsSample](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#changecursorssample)]
 [!code-vb[cursors#ChangeCursorsSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#changecursorssample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryCursor" />
        <altmember cref="P:System.Windows.FrameworkContentElement.ForceCursor" />
        <altmember cref="P:System.Windows.Input.Mouse.OverrideCursor" />
      </Docs>
    </Member>
    <Member MemberName="CursorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CursorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CursorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.CursorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CursorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CursorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-250">Bezeichnet die <see cref="P:System.Windows.FrameworkContentElement.Cursor" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-250">Identifies the <see cref="P:System.Windows.FrameworkContentElement.Cursor" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContext">
      <MemberSignature Language="C#" Value="public object DataContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.DataContext" />
      <MemberSignature Language="VB.NET" Value="Public Property DataContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataContext { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-251">Dient zum Abrufen oder Festlegen des Datenkontexts für ein Element fest, wenn das Element an Datenbindungen beteiligt ist.</span><span class="sxs-lookup"><span data-stu-id="21112-251">Gets or sets the data context for an element when it participates in data binding.</span></span></summary>
        <value><span data-ttu-id="21112-252">Das Objekt, das als Datenkontext verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="21112-252">The object to use as data context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-253">*Datenkontext* ist ein Konzept, das kann Elemente Informationen von ihren übergeordneten Elementen Bindungsquelle erben, die für die Bindung als auch andere Merkmale der Bindung wie des Pfads verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21112-253">*Data context* is a concept that allows elements to inherit information from their parent elements about the binding source that is used for binding, as well as other characteristics of the binding such as the path.</span></span>  
  
 <span data-ttu-id="21112-254">Datenkontext kann direkt festgelegt werden, ein [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Objekt, mit den Bindungen, die als Eigenschaften des betreffenden Objekts bewertet.</span><span class="sxs-lookup"><span data-stu-id="21112-254">Data context can be set directly to a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, with the bindings evaluating to properties of that object.</span></span> <span data-ttu-id="21112-255">Alternativ können Sie den Datenkontext festlegen, um eine <xref:System.Windows.Data.DataSourceProvider> Objekt.</span><span class="sxs-lookup"><span data-stu-id="21112-255">Alternatively, you can set the data context to a <xref:System.Windows.Data.DataSourceProvider> object.</span></span>  
  
 <span data-ttu-id="21112-256">Diese Abhängigkeitseigenschaft erbt Eigenschaftswerte.</span><span class="sxs-lookup"><span data-stu-id="21112-256">This dependency property inherits property values.</span></span> <span data-ttu-id="21112-257">Wenn kein anderer Wert für untergeordnete Elemente vorhanden sind <xref:System.Windows.FrameworkContentElement.DataContext%2A> hergestellt, über lokale Werte oder Stile, das Eigenschaftensystem wird legen Sie den Wert, der <xref:System.Windows.FrameworkContentElement.DataContext%2A> Wert des nächsten übergeordneten Elements mit diesem Wert zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="21112-257">If there are child elements with no other value for <xref:System.Windows.FrameworkContentElement.DataContext%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkContentElement.DataContext%2A> value of the nearest parent element with this value assigned.</span></span>  
  
 <span data-ttu-id="21112-258">Alternativ können Sie eine der folgenden Eigenschaften von der <xref:System.Windows.Data.Binding> Klasse, um die Bindungsquelle explizit anzugeben: <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, oder <xref:System.Windows.Data.Binding.RelativeSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="21112-258">Alternatively, you can use one of the following properties of the <xref:System.Windows.Data.Binding> class to specify the binding source explicitly: <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, or <xref:System.Windows.Data.Binding.RelativeSource%2A>.</span></span> <span data-ttu-id="21112-259">Weitere Informationen finden Sie unter [Vorgehensweise: Angeben der Bindungsquelle](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span><span class="sxs-lookup"><span data-stu-id="21112-259">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="21112-260">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], <xref:System.Windows.FrameworkContentElement.DataContext%2A> am häufigsten auf festgelegt ist, als ein <xref:System.Windows.Data.Binding> Deklaration.</span><span class="sxs-lookup"><span data-stu-id="21112-260">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], <xref:System.Windows.FrameworkContentElement.DataContext%2A> is most commonly set to as a <xref:System.Windows.Data.Binding> declaration.</span></span> <span data-ttu-id="21112-261">Sie können Eigenschaftenelementsyntax oder Attributsyntax verwenden.</span><span class="sxs-lookup"><span data-stu-id="21112-261">You can use either property element syntax or attribute syntax.</span></span> <span data-ttu-id="21112-262">Die Attributsyntax wird im Beispiel auf dieser Seite angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21112-262">Attribute syntax is shown in the example on this page.</span></span> <span data-ttu-id="21112-263">Sie können auch festlegen <xref:System.Windows.FrameworkContentElement.DataContext%2A> im Code.</span><span class="sxs-lookup"><span data-stu-id="21112-263">You can also set <xref:System.Windows.FrameworkContentElement.DataContext%2A> in code.</span></span>  
  
<a name="xamlPropertyElementUsage_DataContext"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="21112-264">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="21112-264">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.DataContext>  
    <dataContextObject />  
  </object.DataContext>  
</object>  
```  
  
<a name="xamlAttributeUsage_DataContext"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="21112-265">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="21112-265">XAML Attribute Usage</span></span>  
  
```  
<object DataContext="bindingUsage"/>  
- or -  
<object DataContext="{resourceExtension contextResourceKey}"/>  
```  
  
<a name="xamlValues_DataContext"></a>   
## <a name="xaml-values"></a><span data-ttu-id="21112-266">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="21112-266">XAML Values</span></span>  
 <span data-ttu-id="21112-267">*dataContextObject*</span><span class="sxs-lookup"><span data-stu-id="21112-267">*dataContextObject*</span></span>  
 <span data-ttu-id="21112-268">Eine direkte eingebettetes Objekt, das als Datenkontext für alle Bindungen innerhalb des übergeordneten Elements dient.</span><span class="sxs-lookup"><span data-stu-id="21112-268">A directly embedded object that serves as data context for any bindings within the parent element.</span></span> <span data-ttu-id="21112-269">Dieses Objekt in der Regel ist eine <xref:System.Windows.Data.Binding> oder ein anderes <xref:System.Windows.Data.BindingBase> Unterklasse.</span><span class="sxs-lookup"><span data-stu-id="21112-269">Typically, this object is a <xref:System.Windows.Data.Binding> or another <xref:System.Windows.Data.BindingBase> subclass.</span></span> <span data-ttu-id="21112-270">Alternativ können Sie unformatierten Daten eines beliebigen [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Objekttyp vorgesehen für die Bindung mit den tatsächlichen Bindungen später definiert hier platziert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21112-270">Alternatively, raw data of any [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object type intended for binding may be placed here, with the actual bindings defined later.</span></span>  
  
 <span data-ttu-id="21112-271">*bindingUsage*</span><span class="sxs-lookup"><span data-stu-id="21112-271">*bindingUsage*</span></span>  
 <span data-ttu-id="21112-272">Eine Bindungsverwendung, die einen entsprechenden Datenkontext ergibt.</span><span class="sxs-lookup"><span data-stu-id="21112-272">A binding usage that evaluates to an appropriate data context.</span></span> <span data-ttu-id="21112-273">Weitere Informationen finden Sie unter [Binding als Markuperweiterung](~/docs/framework/wpf/advanced/binding-markup-extension.md).</span><span class="sxs-lookup"><span data-stu-id="21112-273">For details, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md).</span></span>  
  
 <span data-ttu-id="21112-274">*resourceExtension*</span><span class="sxs-lookup"><span data-stu-id="21112-274">*resourceExtension*</span></span>  
 <span data-ttu-id="21112-275">Eines der folgenden: `StaticResource`, oder `DynamicResource`.</span><span class="sxs-lookup"><span data-stu-id="21112-275">One of the following: `StaticResource`, or `DynamicResource`.</span></span> <span data-ttu-id="21112-276">Diese Verwendung wird verwendet, bei Bezugnahme auf unformatierten Daten als ein Objekt in Ressourcen definiert.</span><span class="sxs-lookup"><span data-stu-id="21112-276">This usage is used when referring to raw data defined as an object in resources.</span></span> <span data-ttu-id="21112-277">Finden Sie unter [XAML-Ressourcen](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="21112-277">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="21112-278">*contextResourceKey*</span><span class="sxs-lookup"><span data-stu-id="21112-278">*contextResourceKey*</span></span>  
 <span data-ttu-id="21112-279">Der Schlüsselbezeichner für das Objekt, das angefordert wird, innerhalb einer <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="21112-279">The key identifier for the object being requested from within a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
<a name="dependencyPropertyInfo_DataContext"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="21112-280">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="21112-280">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-281">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-281">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.DataContextProperty>|  
|<span data-ttu-id="21112-282">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="21112-282">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="21112-283">Im folgenden Beispiel wird eine Bindung auf einen <xref:System.Windows.Documents.Paragraph> Element, durch das Erstellen eines neuen benutzerdefinierten Daten-Objekts, das Objekt als herstellen <xref:System.Windows.FrameworkContentElement.DataContext%2A>, und den Bindungspfad auf eine Eigenschaft darin festlegen.</span><span class="sxs-lookup"><span data-stu-id="21112-283">The following example sets a binding on a <xref:System.Windows.Documents.Paragraph> element, by creating a new custom data object, establishing that object as <xref:System.Windows.FrameworkContentElement.DataContext%2A>, and setting the binding path to a property within it.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#DataContext](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#datacontext)]
 [!code-vb[ContentElementsSmorgasbord#DataContext](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#datacontext)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler DataContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler DataContextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.DataContextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataContextChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ DataContextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-284">Tritt ein, wenn sich der Datenkontext dieses Elements ändert.</span><span class="sxs-lookup"><span data-stu-id="21112-284">Occurs when this element's data context changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-285">Eine Erläuterung der Datenkontexten und Datenbindung, finden Sie unter [Übersicht zur Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="21112-285">For an explanation of data contexts and data binding, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="21112-286">Wenn ein Element <xref:System.Windows.FrameworkContentElement.DataContext%2A> ändert sich, alle datengebundenen Eigenschaften für dieses Element sind möglicherweise betroffen.</span><span class="sxs-lookup"><span data-stu-id="21112-286">When an element's <xref:System.Windows.FrameworkContentElement.DataContext%2A> changes, all data-bound properties on this element are potentially affected.</span></span> <span data-ttu-id="21112-287">Dies gilt für alle Elemente, Nachfolgerelemente des aktuellen Elements an, die den Datenkontext zu erben, und auch das aktuelle Element selbst.</span><span class="sxs-lookup"><span data-stu-id="21112-287">This applies to any elements that are descendant elements of the current element, which inherit the data context, and also the current element itself.</span></span> <span data-ttu-id="21112-288">Alle solchen Bindungen interpretieren erneut das neue <xref:System.Windows.FrameworkContentElement.DataContext%2A> entsprechend den neuen Wert im Bindungen.</span><span class="sxs-lookup"><span data-stu-id="21112-288">All such bindings re-interpret the new <xref:System.Windows.FrameworkContentElement.DataContext%2A> to reflect the new value in bindings.</span></span> <span data-ttu-id="21112-289">Es gibt keine Garantie, die hinsichtlich der Reihenfolge dieser Änderungen auf das Auslösen von der <xref:System.Windows.FrameworkContentElement.DataContextChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-289">There is no guarantee made about the order of these changes relative to the raising of the <xref:System.Windows.FrameworkContentElement.DataContextChanged> event.</span></span>  <span data-ttu-id="21112-290">Die Änderungen können vor dem Ereignis nach dem Ereignis oder eine beliebige Mischung auftreten.</span><span class="sxs-lookup"><span data-stu-id="21112-290">The changes can occur before the event, after the event, or in any mixture.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DataContextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DataContextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.DataContextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DataContextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DataContextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-291">Bezeichnet die <see cref="P:System.Windows.FrameworkContentElement.DataContext" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-291">Identifies the <see cref="P:System.Windows.FrameworkContentElement.DataContext" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultStyleKey">
      <MemberSignature Language="C#" Value="protected internal object DefaultStyleKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.DefaultStyleKey" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property DefaultStyleKey As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Object ^ DefaultStyleKey { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-292">Ruft den Schlüssel ab, der bei diesem Steuerelement zum Suchen der Stilvorlage in Designs verwendet wird, oder legt den Schlüssel fest.</span><span class="sxs-lookup"><span data-stu-id="21112-292">Gets or sets the key to use to find the style template for this control in themes.</span></span></summary>
        <value><span data-ttu-id="21112-293">Der Formatvorlagenschlüssel.</span><span class="sxs-lookup"><span data-stu-id="21112-293">The style key.</span></span> <span data-ttu-id="21112-294">Dieser Wert soll vom <see cref="T:System.Type" /> des formatierten Elements sein, damit er bei der Suche des Designstils korrekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21112-294">To work correctly as part of theme style lookup, this value is expected to be the <see cref="T:System.Type" /> of the element being styled.</span></span> <span data-ttu-id="21112-295"><see langword="null" /> ist ein zulässiger Wert für einen bestimmten Fall.</span><span class="sxs-lookup"><span data-stu-id="21112-295"><see langword="null" /> is an accepted value for a certain case.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-296">Diese Eigenschaft wird in der Regel nicht über einen ihrer direkten Eigenschaftensetter festgelegt.</span><span class="sxs-lookup"><span data-stu-id="21112-296">This property is typically not set through any of its direct setters.</span></span> <span data-ttu-id="21112-297">Stattdessen wird der typspezifische Metadaten dieser Abhängigkeitseigenschaft überschreiben, jedes Mal, wenn Sie eine neue Unterklasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="21112-297">Instead, you override the type-specific metadata of this dependency property every time you create a new subclass.</span></span> <span data-ttu-id="21112-298">Wenn haben, rufen Sie eine Unterklasse der <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> Methode für die <xref:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty> Bezeichner im statischen Konstruktor der Steuerelementunterklasse.</span><span class="sxs-lookup"><span data-stu-id="21112-298">When you subclass, call the <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> method against the <xref:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty> identifier, within the static constructor of the control subclass.</span></span>  
  
 <span data-ttu-id="21112-299">Beispielsweise ein Inlineklasse, wie etwa <xref:System.Windows.Documents.Bold> tatsächlich hat kaum Implementierung mehr als eine Überschreibung der <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> Metadaten im statischen Konstruktor und das Verfügbarmachen von mehreren Instanzkonstruktoren.</span><span class="sxs-lookup"><span data-stu-id="21112-299">For instance, an inline class such as <xref:System.Windows.Documents.Bold> actually has very little implementation beyond overriding the <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> metadata in its static constructor, and exposing several instance constructors.</span></span> <span data-ttu-id="21112-300">Die Tatsache, dass die Elemente von umgeben der <xref:System.Windows.Documents.Bold> -Tag ein <xref:System.Windows.Documents.TextElement.FontWeight%2A> Eigenschaft <xref:System.Windows.FontWeights.Bold%2A> wird implementiert, innerhalb der Designstil, auf die verwiesen wurde, durch Festlegen den Wert von <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> auf `typeof(Bold)`.</span><span class="sxs-lookup"><span data-stu-id="21112-300">The fact that elements surrounded by the <xref:System.Windows.Documents.Bold> tag gain a <xref:System.Windows.Documents.TextElement.FontWeight%2A> property of <xref:System.Windows.FontWeights.Bold%2A> is implemented within the theme style that was referenced by setting the default value of <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> to `typeof(Bold)`.</span></span>  
  
 <span data-ttu-id="21112-301">Wenn Sie ein Element oder Steuerelement Designformatvorlagen absichtlich nicht verwenden möchten, legen Sie die <xref:System.Windows.FrameworkContentElement.OverridesDefaultStyle%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="21112-301">If you want your element or control to deliberately not use theme styles, set the <xref:System.Windows.FrameworkContentElement.OverridesDefaultStyle%2A> property to `true`.</span></span>  
  
<a name="dependencyPropertyInfo_DefaultStyleKey"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="21112-302">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="21112-302">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-303">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-303">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty>|  
|<span data-ttu-id="21112-304">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="21112-304">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultStyleKeyProperty">
      <MemberSignature Language="C#" Value="protected internal static readonly System.Windows.DependencyProperty DefaultStyleKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly static initonly class System.Windows.DependencyProperty DefaultStyleKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared ReadOnly DefaultStyleKeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="protected public: static initonly System::Windows::DependencyProperty ^ DefaultStyleKeyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-305">Bezeichnet die <see cref="P:System.Windows.FrameworkContentElement.DefaultStyleKey" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-305">Identifies the <see cref="P:System.Windows.FrameworkContentElement.DefaultStyleKey" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public virtual void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21112-306">Wird unmittelbar nach der Initialisierung eines Elements aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="21112-306">Called immediately after an element is initialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-307">Implementieren Sie diese Methode, um eine besondere Behandlung bereitstellen, die ausgeführt werden soll, wenn das Element während der Prozess des Ladens Element initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="21112-307">Implement this method to provide special handling that should occur when your element is initialized during the element loading process.</span></span>  
  
 <span data-ttu-id="21112-308">Die Implementierung sollte die basisimplementierung aufrufen, da die Implementierung Base (Standard) einige interne Flags Initialisierung des festlegt.</span><span class="sxs-lookup"><span data-stu-id="21112-308">Your implementation should call the base implementation, because the base (default) implementation sets some internal flags to keep track of initialization.</span></span>  
  
 <span data-ttu-id="21112-309">Wenn <xref:System.Windows.FrameworkContentElement.BeginInit%2A> zuvor aufgerufen wurde, die Base Implementierung löst die <xref:System.Windows.FrameworkContentElement.Initialized> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-309">If <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was previously called, the base implementation will raise the <xref:System.Windows.FrameworkContentElement.Initialized> event.</span></span> <span data-ttu-id="21112-310">Andernfalls gilt: Wenn <xref:System.Windows.FrameworkContentElement.BeginInit%2A> nicht aufgerufen wurde, oder es konnte nicht bestimmt, ob <xref:System.Windows.FrameworkContentElement.BeginInit%2A> wurde aufgerufen, wird das Ereignis nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="21112-310">Otherwise, if <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was not called or it could not be determined whether <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was called, the event is not raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="21112-311">Der Name des zu suchenden Elements.</span><span class="sxs-lookup"><span data-stu-id="21112-311">Name of the element to search for.</span></span></param>
        <summary><span data-ttu-id="21112-312">Sucht ein Element mit dem Namen des bereitgestellten Bezeichners.</span><span class="sxs-lookup"><span data-stu-id="21112-312">Finds an element that has the provided identifier name.</span></span></summary>
        <returns><span data-ttu-id="21112-313">Das angeforderte Element.</span><span class="sxs-lookup"><span data-stu-id="21112-313">The requested element.</span></span> <span data-ttu-id="21112-314">Kann <see langword="null" /> sein, wenn kein übereinstimmendes Element gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="21112-314">May be <see langword="null" /> if no matching element was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-315">Wenn dieses Element über untergeordnete Elemente verfügt, werden diese untergeordneten Elemente rekursiv nach dem angeforderten benannten Element durchsucht.</span><span class="sxs-lookup"><span data-stu-id="21112-315">If this element has child elements, these child elements are all searched recursively for the requested named element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21112-316">Im folgenden Beispiel wird eine Eigenschaft für ein Element gefunden wird, namentlich in einem <xref:System.Windows.Documents.FlowDocument> auf einer Seite.</span><span class="sxs-lookup"><span data-stu-id="21112-316">The following example sets a property on an element found by name within a referenced <xref:System.Windows.Documents.FlowDocument> on a page.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#FindName](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#findname)]
 [!code-vb[ContentElementsSmorgasbord#FindName](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#findname)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindResource">
      <MemberSignature Language="C#" Value="public object FindResource (object resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindResource(object resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.FindResource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindResource (resourceKey As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindResource(System::Object ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="resourceKey"><span data-ttu-id="21112-317">Der Schlüsselbezeichner der zu findenden Ressource.</span><span class="sxs-lookup"><span data-stu-id="21112-317">Key identifier of the resource to be found.</span></span></param>
        <summary><span data-ttu-id="21112-318">Sucht nach einer Ressource mit dem angegebenen Schlüssel und löst eine Ausnahme aus, wenn die angeforderte Ressource nicht gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="21112-318">Searches for a resource with the specified key, and will throw an exception if the requested resource is not found.</span></span></summary>
        <returns><span data-ttu-id="21112-319">Die gefundene Ressource, oder <see langword="null" />, wenn keine übereinstimmende Ressource gefunden wurde (zusätzlich wird bei <see langword="null" /> eine Ausnahme ausgelöst).</span><span class="sxs-lookup"><span data-stu-id="21112-319">The found resource, or <see langword="null" /> if no matching resource was found (but will also throw an exception if <see langword="null" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="21112-320">Wenn Sie diese Methode für einen Schlüssel, die nicht gefunden werden kann aufrufen, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="21112-320">If you call this method for a key that cannot be found, an exception is thrown.</span></span> <span data-ttu-id="21112-321">Wenn Sie nicht, um Ausnahmen für diesen Fall zu behandeln möchten, sollten Sie stattdessen Aufrufen <xref:System.Windows.FrameworkContentElement.TryFindResource%2A>.</span><span class="sxs-lookup"><span data-stu-id="21112-321">If you do not want to handle exceptions for this case, you should instead call <xref:System.Windows.FrameworkContentElement.TryFindResource%2A>.</span></span> <span data-ttu-id="21112-322"><xref:System.Windows.FrameworkContentElement.TryFindResource%2A> Gibt `null` Wenn keine Ressource gefunden wird, und löst keine Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="21112-322"><xref:System.Windows.FrameworkContentElement.TryFindResource%2A> returns `null` when no resource is found, and does not throw an exception.</span></span>  
  
 <span data-ttu-id="21112-323">Wenn die Ressource für das aufrufende Element nicht gefunden wird, die übergeordnete Struktur wird mit der logischen Struktur durchsucht, auf die gleiche Weise, die die Struktur wäre gesuchte Wenn eine Ressource mit Schlüssel zur Laufzeit angefordert wurden.</span><span class="sxs-lookup"><span data-stu-id="21112-323">If the resource is not found on the calling element, the parent tree is searched using the logical tree, in the same way that the tree would be searched if a resource were requested by key at run-time.</span></span>  
  
 <span data-ttu-id="21112-324">In der Regel würden Sie sofort den Rückgabewert in den Typ der Eigenschaft umgewandelt, den Sie mit den zurückgegebenen Ressourcenwert festgelegt wurden.</span><span class="sxs-lookup"><span data-stu-id="21112-324">Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21112-325">Das folgende Beispiel sucht nach einer Ressource, wie im Markup definierte und wendet sie auf eine bestimmte Eigenschaft eines Elements in Reaktion auf ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-325">The following example finds a resource as defined in markup and applies it to a certain property of an element in response to a routed event.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#FindResource](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#findresource)]
 [!code-vb[ContentElementsSmorgasbord#FindResource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#findresource)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException"><span data-ttu-id="21112-326">Der angeforderte Ressourcenschlüssel wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="21112-326">The requested resource key was not found.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="21112-327"><paramref name="resourceKey" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21112-327"><paramref name="resourceKey" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FocusVisualStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style FocusVisualStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style FocusVisualStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.FocusVisualStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusVisualStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ FocusVisualStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-328">Dient zum Abrufen oder Festlegen eines Objekts, das die Anpassung von Darstellung, Effekten oder anderen Formateigenschaften ermöglicht, die auf dieses Element angewendet werden, wenn es den Tastaturfokus erhält.</span><span class="sxs-lookup"><span data-stu-id="21112-328">Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.</span></span></summary>
        <value><span data-ttu-id="21112-329">Die gewünschte Formatvorlage, die angewendet wird, wenn das Element den Fokus erhält.</span><span class="sxs-lookup"><span data-stu-id="21112-329">The desired style to apply on focus.</span></span> <span data-ttu-id="21112-330">Der in der Abhängigkeitseigenschaft deklarierte Standardwert ein leerer statischer <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="21112-330">The default value as declared in the dependency property is an empty static <see cref="T:System.Windows.Style" />.</span></span> <span data-ttu-id="21112-331">Der tatsächliche Wert zur Laufzeit ist jedoch häufig (aber nicht immer) eine Formatvorlage, die von der Designunterstützung für Steuerelemente bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="21112-331">However, the effective value at run time is often (but not always) a style as supplied by theme support for controls.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-332">Beim Festlegen dieser Eigenschaft [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]Stile werden fast immer als eine Ressource, statt Inline als Element definiert und, dass die Ressource in der Regel ist auf die verwiesen wird als eine <xref:System.Windows.StaticResourceExtension>.</span><span class="sxs-lookup"><span data-stu-id="21112-332">When setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], styles are almost always defined as a resource, rather than inline as an element, and that resource is usually referenced as a <xref:System.Windows.StaticResourceExtension>.</span></span>  
  
 <span data-ttu-id="21112-333">Beachten Sie, dass diese Eigenschaft wirkt sich auf die visuelle Darstellung, aber keine über dies in den Metadaten Auskunft gibt.</span><span class="sxs-lookup"><span data-stu-id="21112-333">Note that this property affects visual appearance but does not report so in metadata.</span></span> <span data-ttu-id="21112-334">Dies ist, da die visuelle Darstellung ereignisgesteuerte möglicherweise nicht immer gelten, und ist somit nicht in der Regel Visualisierung oder Layout Informationen in den Metadaten gemeldet sollten.</span><span class="sxs-lookup"><span data-stu-id="21112-334">This is because the visual appearance change is event-driven and may not apply at all times, and thus should not generally report any visual or layout information in metadata.</span></span>  
  
 <span data-ttu-id="21112-335">Grundsätzlich sollte das visuelle Verhalten des Fokus auf ein Steuerelement angewendet kohärente von Element zu Element sein.</span><span class="sxs-lookup"><span data-stu-id="21112-335">Conceptually, the visual behavior of focus applied to a control should be coherent from element to element.</span></span> <span data-ttu-id="21112-336">Die sinnvollste zum Erzwingen von Kohärenz besteht darin, den visuellen Stil der Fokus nur ändern, wenn Sie ein vollständiges Design erstellen.</span><span class="sxs-lookup"><span data-stu-id="21112-336">The most sensible way to enforce coherence is to only change the focus visual style if you are composing an entire theme.</span></span> <span data-ttu-id="21112-337">Festlegen dieser Eigenschaft auf einzelne Formatvorlagen und nicht als Teil eines Designs ist nicht die beabsichtigte Verwendung dieser Eigenschaft, da sie zu einer verwirrend Benutzeroberfläche hinsichtlich des Tastaturfokus führen kann.</span><span class="sxs-lookup"><span data-stu-id="21112-337">Setting this property on individual styles and not as part of a theme is not the intended usage of this property, because it may lead to a confusing user experience regarding keyboard focus.</span></span> <span data-ttu-id="21112-338">Wenn Sie Elements prozessinternes spezifisches Verhalten, die absichtlich nicht kohärent ist beabsichtigt, wird ein viel besserer Ansatz im Stile für einzelne Eingabestatus-Eigenschaften, z. B. Verwenden von Triggern <xref:System.Windows.UIElement.IsFocused%2A> oder <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>, und klicken Sie auf eine Weise dazu, die nicht der Fall ist beeinträchtigen Sie mit den visuellen Stil des vorhandenen Fokus visuell.</span><span class="sxs-lookup"><span data-stu-id="21112-338">If you are intending element-specific behavior that is deliberately not coherent across a theme, a much better approach is to use triggers in styles for individual input state properties, such as <xref:System.Windows.UIElement.IsFocused%2A> or <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>, and to do so in a way that does not visually interfere with any existing focus visual style.</span></span> <span data-ttu-id="21112-339">Weitere Informationen über den Entwurf der <xref:System.Windows.FrameworkContentElement.FocusVisualStyle%2A> sowie die alternativen Eigenschaften zu konzentrieren, finden Sie unter [Formatierung für den Fokus in Steuerelementen und FocusVisualStyle](~/docs/framework/wpf/advanced/styling-for-focus-in-controls-and-focusvisualstyle.md).</span><span class="sxs-lookup"><span data-stu-id="21112-339">For more information on the design intention of <xref:System.Windows.FrameworkContentElement.FocusVisualStyle%2A> and alternative focus properties, see [Styling for Focus in Controls, and FocusVisualStyle](~/docs/framework/wpf/advanced/styling-for-focus-in-controls-and-focusvisualstyle.md).</span></span>  
  
<a name="xamlAttributeUsage_FocusVisualStyle"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="21112-340">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="21112-340">XAML Attribute Usage</span></span>  
  
```  
<object FocusVisualStyle="{resourceExtension styleResourceKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_FocusVisualStyle"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="21112-341">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="21112-341">XAML Property Element Usage</span></span>  
  
<a name="xamlValues_FocusVisualStyle"></a>   
## <a name="xaml-values"></a><span data-ttu-id="21112-342">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="21112-342">XAML Values</span></span>  
 <span data-ttu-id="21112-343">*resourceExtension*</span><span class="sxs-lookup"><span data-stu-id="21112-343">*resourceExtension*</span></span>  
 <span data-ttu-id="21112-344">Eines der folgenden:, oder.</span><span class="sxs-lookup"><span data-stu-id="21112-344">One of the following: , or .</span></span> <span data-ttu-id="21112-345">Finden Sie unter [XAML-Ressourcen](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="21112-345">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="21112-346">*styleResourceKey*</span><span class="sxs-lookup"><span data-stu-id="21112-346">*styleResourceKey*</span></span>  
 <span data-ttu-id="21112-347">Der Schlüssel, der den angeforderten Stil identifiziert.</span><span class="sxs-lookup"><span data-stu-id="21112-347">The key that identifies the style being requested.</span></span> <span data-ttu-id="21112-348">Der Schlüssel verweist auf eine vorhandene Ressource in einem <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="21112-348">The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21112-349">Eigenschaftenelementsyntax ist technisch zwar möglich, aber nicht empfehlenswert.</span><span class="sxs-lookup"><span data-stu-id="21112-349">Property element syntax is technically possible, but not recommended.</span></span> <span data-ttu-id="21112-350">Finden Sie unter [Inlinestile und Vorlagen](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="21112-350">See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span></span>  <span data-ttu-id="21112-351">Eine Bindung verwendet oder <xref:System.Windows.Data.Binding> ist auch möglich, aber ungewöhnlich.</span><span class="sxs-lookup"><span data-stu-id="21112-351">A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon.</span></span>  
  
<a name="dependencyPropertyInfo_FocusVisualStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="21112-352">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="21112-352">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-353">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-353">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.FocusVisualStyleProperty>|  
|<span data-ttu-id="21112-354">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="21112-354">Metadata properties set to `true`</span></span>|<span data-ttu-id="21112-355">Keiner</span><span class="sxs-lookup"><span data-stu-id="21112-355">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusVisualStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusVisualStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusVisualStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.FocusVisualStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusVisualStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusVisualStyleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-356">Bezeichnet die <see cref="P:System.Windows.FrameworkContentElement.FocusVisualStyle" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-356">Identifies the <see cref="P:System.Windows.FrameworkContentElement.FocusVisualStyle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceCursor">
      <MemberSignature Language="C#" Value="public bool ForceCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.ForceCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceCursor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceCursor { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-357">Ruft einen Wert ab, mit dem angegeben wird, ob dieses <see cref="T:System.Windows.FrameworkContentElement" /> das Rendern des Cursors in der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] gemäß der Deklaration in dieser Instanz der <see cref="P:System.Windows.FrameworkContentElement.Cursor" />-Eigenschaft erzwingen soll, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="21112-357">Gets or sets a value indicating whether this <see cref="T:System.Windows.FrameworkContentElement" /> should force the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] to render the cursor as declared by this instance's <see cref="P:System.Windows.FrameworkContentElement.Cursor" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="21112-358"><see langword="true" />, wenn für die Darstellung des Cursors bei Positionierung über diesem Element die Cursoreinstellungen dieser Instanz (einschließlich aller untergeordneten Elemente) erzwungen werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21112-358"><see langword="true" /> to force cursor presentation while over this element to use this instance's setting for the cursor (including on all child elements); otherwise <see langword="false" />.</span></span> <span data-ttu-id="21112-359">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21112-359">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-360">Wenn diese Eigenschaft auf `true` überschreibt die Cursor-Voreinstellungen, die durch die untergeordneten Elemente.</span><span class="sxs-lookup"><span data-stu-id="21112-360">Setting this property to `true` will override the cursor preferences established by child elements.</span></span> <span data-ttu-id="21112-361">Dies ist daher im Allgemeinen Anwendung [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] sind möglicherweise für den Benutzer verwirrend, insbesondere, wenn untergeordnete Cursor angeben möchten.</span><span class="sxs-lookup"><span data-stu-id="21112-361">Doing so in general application [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] might be confusing for the user, particularly if child elements are attempting to specify cursors.</span></span> <span data-ttu-id="21112-362">Festlegen von <xref:System.Windows.FrameworkElement.ForceCursor%2A> Unterklassen oder Compositing Szenarios besser geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="21112-362">Setting <xref:System.Windows.FrameworkElement.ForceCursor%2A> is more appropriate in control subclassing or compositing scenarios.</span></span>  
  
<a name="dependencyPropertyInfo_ForceCursor"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="21112-363">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="21112-363">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-364">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-364">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.ForceCursorProperty>|  
|<span data-ttu-id="21112-365">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="21112-365">Metadata properties set to `true`</span></span>|<span data-ttu-id="21112-366">Keiner</span><span class="sxs-lookup"><span data-stu-id="21112-366">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="21112-367">Im folgenden Beispiel wird den Cursor über dem Element.</span><span class="sxs-lookup"><span data-stu-id="21112-367">The following example forces the cursor while over the element.</span></span>  
  
 [!code-xaml[ForceCursor#ForceCursor](~/samples/snippets/csharp/VS_Snippets_Wpf/ForceCursor/CS/default.xaml#forcecursor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceCursorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ForceCursorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ForceCursorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.ForceCursorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ForceCursorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ForceCursorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-368">Bezeichnet die <see cref="P:System.Windows.FrameworkContentElement.ForceCursor" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-368">Identifies the <see cref="P:System.Windows.FrameworkContentElement.ForceCursor" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpression">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Data.BindingExpression GetBindingExpression(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.GetBindingExpression(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBindingExpression (dp As DependencyProperty) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Data::BindingExpression ^ GetBindingExpression(System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="21112-369">Die Ziel-<see cref="T:System.Windows.DependencyProperty" />, aus der die Bindung abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="21112-369">The target <see cref="T:System.Windows.DependencyProperty" /> from which to get the binding.</span></span></param>
        <summary><span data-ttu-id="21112-370">Ruft die <see cref="T:System.Windows.Data.BindingExpression" /> für die Bindung der angegebenen Eigenschaft ab.</span><span class="sxs-lookup"><span data-stu-id="21112-370">Gets the <see cref="T:System.Windows.Data.BindingExpression" /> for the specified property's binding.</span></span></summary>
        <returns><span data-ttu-id="21112-371">Gibt eine <see cref="T:System.Windows.Data.BindingExpression" /> zurück, wenn das Ziel datengebunden ist, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21112-371">Returns a <see cref="T:System.Windows.Data.BindingExpression" /> if the target is data bound; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21112-372">Im folgende Beispiel ruft eine Bindung durch Abfragen einer Eigenschaft ab.</span><span class="sxs-lookup"><span data-stu-id="21112-372">The following example retrieves a binding by querying a property.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#GetBindingExpression](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#getbindingexpression)]
 [!code-vb[ContentElementsSmorgasbord#GetBindingExpression](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#getbindingexpression)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21112-373">Gibt ein alternatives logisches übergeordnetes Element für dieses Element zurück, wenn kein visuelles übergeordnetes Element vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="21112-373">Returns an alternative logical parent for this element if there is no visual parent.</span></span> <span data-ttu-id="21112-374">In diesem Fall ist ein übergeordnetes <see cref="T:System.Windows.FrameworkContentElement" /> immer identisch mit dem Wert der <see cref="P:System.Windows.FrameworkContentElement.Parent" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-374">In this case, a <see cref="T:System.Windows.FrameworkContentElement" /> parent is always the same value as the <see cref="P:System.Windows.FrameworkContentElement.Parent" /> property.</span></span></summary>
        <returns><span data-ttu-id="21112-375">Gibt immer dann einen Wert ungleich <see langword="null" /> zurück, wenn eine auf WPF-Frameworkebene vorgenommene Implementierung dieser Methode eine nicht visuelle übergeordnete Verbindung hat.</span><span class="sxs-lookup"><span data-stu-id="21112-375">Returns something other than <see langword="null" /> whenever a WPF framework-level implementation of this method has a non-visual parent connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-376">Die Standardimplementierung gibt die erwartete einzelne visuelle übergeordnetes Element zurück.</span><span class="sxs-lookup"><span data-stu-id="21112-376">The default implementation returns the expected single visual parent.</span></span> <span data-ttu-id="21112-377">Benutzerdefinierte Implementierungen möglicherweise alternative übergeordnete Beziehungen zurück.</span><span class="sxs-lookup"><span data-stu-id="21112-377">Custom implementations might return alternate parent relationships.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="public event EventHandler Initialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Initialized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.Initialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Initialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Initialized;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-378">Tritt ein, wenn dieses <see cref="T:System.Windows.FrameworkContentElement" /> initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="21112-378">Occurs when this <see cref="T:System.Windows.FrameworkContentElement" /> is initialized.</span></span> <span data-ttu-id="21112-379">Dieses Ereignis geht mit Fällen einher, in denen sich der Wert der <see cref="P:System.Windows.FrameworkContentElement.IsInitialized" />-Eigenschaft von <see langword="false" /> (oder nicht definiert) in <see langword="true" /> ändert.</span><span class="sxs-lookup"><span data-stu-id="21112-379">This coincides with cases where the value of the <see cref="P:System.Windows.FrameworkContentElement.IsInitialized" /> property changes from <see langword="false" /> (or undefined) to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-380">Dieses Ereignis wird ausgelöst, wenn die <xref:System.Windows.FrameworkContentElement.EndInit%2A> oder <xref:System.Windows.FrameworkContentElement.OnInitialized%2A> Methoden aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="21112-380">This event will be raised whenever the <xref:System.Windows.FrameworkContentElement.EndInit%2A> or <xref:System.Windows.FrameworkContentElement.OnInitialized%2A> methods are called.</span></span> <span data-ttu-id="21112-381">Aufrufe dieser Methoden können vorgenommen wurden mit absichtliche Code oder durch die [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] Prozess des Ladens.</span><span class="sxs-lookup"><span data-stu-id="21112-381">Calls to these methods could have been made by deliberate code, or by the [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] loading process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputScope">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputScope InputScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputScope InputScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.InputScope" />
      <MemberSignature Language="VB.NET" Value="Public Property InputScope As InputScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputScope ^ InputScope { System::Windows::Input::InputScope ^ get(); void set(System::Windows::Input::InputScope ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-382">Ruft den Kontext für die von diesem <see cref="T:System.Windows.FrameworkContentElement" /> verwendete Eingabe ab oder legt diesen Kontext fest.</span><span class="sxs-lookup"><span data-stu-id="21112-382">Gets or sets the context for input used by this <see cref="T:System.Windows.FrameworkContentElement" />.</span></span></summary>
        <value><span data-ttu-id="21112-383">Der Eingabebereich, der bestimmt, wie Eingaben von alternativen Eingabemethoden interpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="21112-383">The input scope, which modifies how input from alternative input methods is interpreted.</span></span> <span data-ttu-id="21112-384">Der Standardwert ist <see langword="null" /> (und führt zu einer Standardbehandlung von Befehlen).</span><span class="sxs-lookup"><span data-stu-id="21112-384">The default value is <see langword="null" /> (which results in a default handling of commands).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-385">Diese Abhängigkeitseigenschaft erbt Eigenschaftswerte.</span><span class="sxs-lookup"><span data-stu-id="21112-385">This dependency property inherits property values.</span></span> <span data-ttu-id="21112-386">Wenn kein anderer Wert für untergeordnete Elemente vorhanden sind <xref:System.Windows.FrameworkElement.InputScope%2A> hergestellt, über lokale Werte oder Stile, das Eigenschaftensystem wird legen Sie den Wert, der <xref:System.Windows.FrameworkElement.InputScope%2A> Wert des nächsten übergeordneten Elements mit diesem Wert zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="21112-386">If there are child elements with no other value for <xref:System.Windows.FrameworkElement.InputScope%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.InputScope%2A> value of the nearest parent element with this value assigned.</span></span>  
  
 <span data-ttu-id="21112-387">Obwohl eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Syntax Verwendung aufgelistet ist und syntaktisch zulässig ist, wird durch Festlegen dieser Eigenschaft [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ist nicht üblich.</span><span class="sxs-lookup"><span data-stu-id="21112-387">Although a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax usage is listed and is syntactically allowed, setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is not common.</span></span>  
  
<a name="dependencyPropertyInfo_InputScope"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="21112-388">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="21112-388">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-389">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-389">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.InputScopeProperty>|  
|<span data-ttu-id="21112-390">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="21112-390">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty InputScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty InputScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.InputScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ InputScopeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-391">Bezeichnet die <see cref="P:System.Windows.FrameworkContentElement.InputScope" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-391">Identifies the <see cref="P:System.Windows.FrameworkContentElement.InputScope" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitialized { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-392">Ruft einen Wert ab, mit dem angegeben wird, ob dieses Element durch das Laden als [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] oder durch einen expliziten Aufruf der entsprechenden <see cref="M:System.Windows.FrameworkContentElement.EndInit" />-Methode initialisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="21112-392">Gets a value indicating whether this element has been initialized, either by being loaded as [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], or by explicitly having its <see cref="M:System.Windows.FrameworkContentElement.EndInit" /> method called.</span></span></summary>
        <value>
          <span data-ttu-id="21112-393"><see langword="true" />, wenn das Element wie zuvor beschrieben durch Laden oder durch einen Methodenaufruf initialisiert wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21112-393"><see langword="true" /> if the element is initialized per the aforementioned loading or method calls; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-394">Diese Eigenschaft ist möglicherweise auch `true` , wenn dieses Element in der Elementstruktur verschoben wurde, dass er ein neues übergeordnetes Element aufweist und deshalb neu geladen werden muss.</span><span class="sxs-lookup"><span data-stu-id="21112-394">This property may also be `true` if this element has been moved within the element tree such that it has a new parent element, and therefore becomes reloaded again.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkContentElement.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-395">Ruft einen Wert ab, mit dem angegeben wird, ob dieses Element für die Darstellung geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="21112-395">Gets a value indicating whether this element has been loaded for presentation.</span></span></summary>
        <value>
          <span data-ttu-id="21112-396"><see langword="true" />, wenn das aktuelle Element an eine Elementstruktur angefügt ist und gerendert wurde, <see langword="false" />, wenn das Element noch nie an eine geladene Elementstruktur angefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="21112-396"><see langword="true" /> if the current element is attached to an element tree and has been rendered; <see langword="false" /> if the element has never been attached to a loaded element tree.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-397">Einer neu erstellten Instanz startet diese Eigenschaft deaktiviert `false`, und bleibt `true` sobald er, um festgelegt ist `true`, selbst wenn anschließend durch Code entfernt.</span><span class="sxs-lookup"><span data-stu-id="21112-397">From a newly constructed instance, this property starts off `false`, and remains `true` once it is set to `true`, even if subsequently removed by  code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21112-398">Der folgende Beispielcode verwendet <xref:System.Windows.FrameworkContentElement.IsLoaded%2A> als eine bedingte Überprüfung, um sicherzustellen, dass eine Funktion `displayData` (nicht dargestellt) werden gültige Elemente geladen haben auf der Seite berücksichtigt werden sollen, als Teil eines ereignishandlers bei Bedarf zu funktionieren.</span><span class="sxs-lookup"><span data-stu-id="21112-398">The following example code uses <xref:System.Windows.FrameworkContentElement.IsLoaded%2A> as a conditional check to assure that a function `displayData` (not shown) will have valid elements loaded on the page to work against, as part of an on-demand handler.</span></span> <span data-ttu-id="21112-399">Dass dieselbe Logik, wie ein Ereignishandler für ausgeführt wird <xref:System.Windows.FrameworkContentElement.Loaded>.</span><span class="sxs-lookup"><span data-stu-id="21112-399">That same logic is run as an event handler for <xref:System.Windows.FrameworkContentElement.Loaded>.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsLoaded](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#isloaded)]
 [!code-vb[ContentElementsSmorgasbord#IsLoaded](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#isloaded)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.FrameworkContentElement.Loaded" />
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.XmlLanguage Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.XmlLanguage Language" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As XmlLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::XmlLanguage ^ Language { System::Windows::Markup::XmlLanguage ^ get(); void set(System::Windows::Markup::XmlLanguage ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-400">Ruft die Sprachinformationen für die Lokalisierung/Globalisierung eines einzelnen Elements ab oder legt diese Informationen fest.</span><span class="sxs-lookup"><span data-stu-id="21112-400">Gets or sets localization/globalization language information that applies to an individual element.</span></span></summary>
        <value><span data-ttu-id="21112-401">Die Kulturinformationen für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="21112-401">The culture information for this element.</span></span> <span data-ttu-id="21112-402">Der Standardwert ist eine <see cref="T:System.Windows.Markup.XmlLanguage" />-Instanz, deren <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" />-Wert auf die Zeichenfolge "en-US" festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="21112-402">The default value is an <see cref="T:System.Windows.Markup.XmlLanguage" /> instance with its <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> value set to the string "en-US".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-403">Die Zeichenfolgenformate unterliegen dem RFC 3066-Standard.</span><span class="sxs-lookup"><span data-stu-id="21112-403">The string formats follow the RFC 3066 standard.</span></span> <span data-ttu-id="21112-404">Z. B. USA Englisch ist "En-US".</span><span class="sxs-lookup"><span data-stu-id="21112-404">For example, U.S. English is "en-US".</span></span> <span data-ttu-id="21112-405">Finden Sie unter <xref:System.Windows.Markup.XmlLanguage> Weitere Informationen zu den Werten und Format.</span><span class="sxs-lookup"><span data-stu-id="21112-405">See <xref:System.Windows.Markup.XmlLanguage> for more information on the values and format.</span></span>  
  
 <span data-ttu-id="21112-406">Diese Abhängigkeitseigenschaft erbt Eigenschaftswerte.</span><span class="sxs-lookup"><span data-stu-id="21112-406">This dependency property inherits property values.</span></span> <span data-ttu-id="21112-407">Wenn kein anderer Wert für untergeordnete Elemente vorhanden sind <xref:System.Windows.FrameworkElement.Language%2A> hergestellt, über lokale Werte oder Stile, das Eigenschaftensystem wird legen Sie den Wert, der <xref:System.Windows.FrameworkElement.Language%2A> Wert des nächsten übergeordneten Elements mit diesem Wert zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="21112-407">If there are child elements with no other value for <xref:System.Windows.FrameworkElement.Language%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.Language%2A> value of the nearest parent element with this value assigned.</span></span>  
  
<a name="dependencyPropertyInfo_CultureInfo"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="21112-408">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="21112-408">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-409">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-409">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.LanguageProperty>|  
|<span data-ttu-id="21112-410">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="21112-410">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LanguageProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LanguageProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.LanguageProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LanguageProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LanguageProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-411">Bezeichnet die <see cref="P:System.Windows.FrameworkContentElement.Language" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-411">Identifies the <see cref="P:System.Windows.FrameworkContentElement.Language" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Loaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Loaded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Loaded As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Loaded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-412">Tritt auf, wenn das Element ausgerichtet und gerendert sowie zur Interaktion vorbereitet wurde.</span><span class="sxs-lookup"><span data-stu-id="21112-412">Occurs when the element is laid out, rendered, and ready for interaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-413">Direkte Routingereignisse führen Sie eine Route nicht ausgeführt, sie sind nur innerhalb des gleichen Elements in dem sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="21112-413">Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</span></span> <span data-ttu-id="21112-414">Direkte Routingereignisse unterstützen andere Verhalten Routingereignis: sie unterstützen eine Auflistung zugegriffen werden kann, Handler und dient als ein <xref:System.Windows.EventTrigger> in einem Format.</span><span class="sxs-lookup"><span data-stu-id="21112-414">Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.</span></span>  
  
<a name="routedEventInfo_Loaded"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="21112-415">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="21112-415">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-416">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-416">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.LoadedEvent>|  
|<span data-ttu-id="21112-417">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="21112-417">Routing strategy</span></span>|<span data-ttu-id="21112-418">Direkt</span><span class="sxs-lookup"><span data-stu-id="21112-418">Direct</span></span>|  
|<span data-ttu-id="21112-419">delegate</span><span class="sxs-lookup"><span data-stu-id="21112-419">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LoadedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LoadedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.LoadedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LoadedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LoadedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-420">Bezeichnet die <see cref="E:System.Windows.FrameworkContentElement.Loaded" /> [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="21112-420">Identifies the <see cref="E:System.Windows.FrameworkContentElement.Loaded" /> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-421">Ereignis-ID-Objekte werden erstellt, wenn Routingereignisse registriert werden (finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) und kann dann verwendet werden, um Klassenhandler hinzuzufügen (finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span><span class="sxs-lookup"><span data-stu-id="21112-421">Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span></span> <span data-ttu-id="21112-422">Bezeichnerobjekte enthalten einen kennzeichnenden Namen, Besitzertyp, Handlertyp, Routingstrategie und eine Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-422">Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-423">Ruft einen Enumerator für die logischen untergeordneten Elemente dieses Elements ab.</span><span class="sxs-lookup"><span data-stu-id="21112-423">Gets an enumerator for the logical child elements of this element.</span></span></summary>
        <value><span data-ttu-id="21112-424">Ein Enumerator für die logischen untergeordneten Elemente dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="21112-424">An enumerator for logical child elements of this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-425">Weitere Informationen zur Verwendung von <xref:System.Windows.FrameworkContentElement.LogicalChildren%2A> und <xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A>, finden Sie unter [Strukturen in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="21112-425">For more information on how to use <xref:System.Windows.FrameworkContentElement.LogicalChildren%2A> and <xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A>, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public override sealed bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="21112-426">Die Richtung, in die der Fokus verschoben werden soll, als Wert der Enumeration.</span><span class="sxs-lookup"><span data-stu-id="21112-426">The direction that focus is to be moved, as a value of the enumeration.</span></span></param>
        <summary><span data-ttu-id="21112-427">Verschiebt den Tastaturfokus von diesem Element auf ein anderes Element.</span><span class="sxs-lookup"><span data-stu-id="21112-427">Moves the keyboard focus from this element to another element.</span></span></summary>
        <returns><span data-ttu-id="21112-428">Gibt <see langword="true" /> zurück, wenn der Fokus erfolgreich verschoben wurde. <see langword="false" /> wird zurückgegeben, wenn das Zielelement in der angegebenen Richtung nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="21112-428">Returns <see langword="true" /> if focus is moved successfully; <see langword="false" /> if the target element in direction as specified does not exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IFrameworkInputElement.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-429">Dient zum Abrufen oder Festlegen des Elementnamens.</span><span class="sxs-lookup"><span data-stu-id="21112-429">Gets or sets the identifying name of the element.</span></span> <span data-ttu-id="21112-430">Der Name stellt einen Instanzverweis bereit, sodass CodeBehind, wie z. B. Ereignishandlercode, auf ein Element verweisen kann, sobald es während der Verarbeitung durch [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="21112-430">The name provides an instance reference so that programmatic code-behind, such as event handler code, can refer to an element once it is constructed during parsing of [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span></summary>
        <value><span data-ttu-id="21112-431">Der Name des Elements.</span><span class="sxs-lookup"><span data-stu-id="21112-431">The name of the element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-432">Die häufigste Verwendung dieser Eigenschaft ist beim Angeben einer [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Elementname im Markup.</span><span class="sxs-lookup"><span data-stu-id="21112-432">The most common usage of this property is when specifying a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] element name in markup.</span></span>  
  
 <span data-ttu-id="21112-433">Diese Eigenschaft bietet im Wesentlichen eine WPF-Frameworkebene benutzerfreundliche-Eigenschaft zum Festlegen der [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [X: Name-Direktive](~/docs/framework/xaml-services/x-name-directive.md).</span><span class="sxs-lookup"><span data-stu-id="21112-433">This property essentially provides a WPF framework-level convenience property to set the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md).</span></span>  
  
 <span data-ttu-id="21112-434">Abrufen einer <xref:System.Windows.FrameworkContentElement.Name%2A> aus Code ist nicht üblich, da Sie bereits den entsprechenden Verweis im Code haben, Sie nur Methoden aufrufen können und Eigenschaften für das Element verweisen Elementverweises der <xref:System.Windows.FrameworkContentElement.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="21112-434">Getting a <xref:System.Windows.FrameworkContentElement.Name%2A> from code is not common, because if you have the appropriate reference in code already, you can just call methods and properties on the element reference and do not generally need the <xref:System.Windows.FrameworkContentElement.Name%2A>.</span></span> <span data-ttu-id="21112-435">Eine Ausnahme ist, wenn die Zeichenfolge eine überladene Bedeutung aufweist, z. B. ist es hilfreich, wenn diese Namen in [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="21112-435">An exception is if the string has some overloaded meaning, for instance if it is useful to display that name in [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="21112-436">Festlegen einer <xref:System.Windows.FrameworkContentElement.Name%2A> aus Code Wenn die ursprüngliche <xref:System.Windows.FrameworkContentElement.Name%2A> wurde Markup festgelegt wird ebenfalls nicht empfohlen, und ändern die Eigenschaft ändert sich nicht auf den Objektverweis.</span><span class="sxs-lookup"><span data-stu-id="21112-436">Setting a <xref:System.Windows.FrameworkContentElement.Name%2A> from code if the original <xref:System.Windows.FrameworkContentElement.Name%2A> was set from markup is also not recommended, and changing the property will not change the object reference.</span></span> <span data-ttu-id="21112-437">Solche Objektverweise werden nur erstellt, wenn die zugrunde liegenden Namescopes während explizit erstellt werden [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] laden.</span><span class="sxs-lookup"><span data-stu-id="21112-437">Such object references are created only when the underlying namescopes are explicitly created during [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] loading.</span></span>  
  
 <span data-ttu-id="21112-438">Sie müssen ausdrücklich Aufrufen <xref:System.Windows.FrameworkContentElement.RegisterName%2A> auf eine effektive Änderung vornehmen der <xref:System.Windows.FrameworkContentElement.Name%2A> Eigenschaft eines Elements bereits geladen.</span><span class="sxs-lookup"><span data-stu-id="21112-438">You must specifically call <xref:System.Windows.FrameworkContentElement.RegisterName%2A> to make an effective change on the <xref:System.Windows.FrameworkContentElement.Name%2A> property of an already loaded element.</span></span>  
  
 <span data-ttu-id="21112-439">Eine wichtige Fall, in dem das Festlegen <xref:System.Windows.FrameworkContentElement.Name%2A> aus Code ist wichtig für das Benennen von Elementen, für die storyboards für ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21112-439">One notable case where setting <xref:System.Windows.FrameworkContentElement.Name%2A> from  code is important is for naming elements that storyboards will run against.</span></span> <span data-ttu-id="21112-440">Bevor Sie einen Namen registrieren können, müssen u. u. auch instanziieren und Zuweisen einer <xref:System.Windows.NameScope> Instanz.</span><span class="sxs-lookup"><span data-stu-id="21112-440">Before you can register a name, might also need to instantiate and assign a <xref:System.Windows.NameScope> instance.</span></span> <span data-ttu-id="21112-441">Finden Sie im Beispielabschnitt oder [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span><span class="sxs-lookup"><span data-stu-id="21112-441">See the Example section, or [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="21112-442">Festlegen von <xref:System.Windows.FrameworkContentElement.Name%2A> aus Code verfügt über eingeschränkten Anwendungen jedoch die Suche nach einem Element anhand des Namens ist eher üblich, insbesondere, wenn Sie ein Navigationsmodell für Einzelseiten Dokumentationssatzes, wobei Seiten in der Anwendung zu laden und -Laufzeitcode ist nicht notwendigerweise Code-Behind, Seite "jeweiligen".</span><span class="sxs-lookup"><span data-stu-id="21112-442">Setting <xref:System.Windows.FrameworkContentElement.Name%2A> from code has limited applications, but looking up an element by name is more common, particularly if you are employing a navigation model where pages reload into the application and the run-time code is not necessarily the code-behind of that respective page.</span></span> <span data-ttu-id="21112-443">Die Hilfsprogrammmethode <xref:System.Windows.FrameworkContentElement.FindName%2A>, kann über eine <xref:System.Windows.FrameworkContentElement>, finde beliebiges Element durch <xref:System.Windows.FrameworkContentElement.Name%2A> in die logische Struktur rekursiv des Elements.</span><span class="sxs-lookup"><span data-stu-id="21112-443">The utility method <xref:System.Windows.FrameworkContentElement.FindName%2A>, which is available from any <xref:System.Windows.FrameworkContentElement>, can find any element by <xref:System.Windows.FrameworkContentElement.Name%2A> in that element's logical tree recursively.</span></span> <span data-ttu-id="21112-444">Oder Sie können die <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> statische Methode der <xref:System.Windows.LogicalTreeHelper>, dem nimmt auch die <xref:System.Windows.FrameworkContentElement.Name%2A> Zeichenfolge als Argument.</span><span class="sxs-lookup"><span data-stu-id="21112-444">Or you can use the <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> static method of <xref:System.Windows.LogicalTreeHelper>, which also takes the <xref:System.Windows.FrameworkContentElement.Name%2A> string as an argument.</span></span>  
  
 <span data-ttu-id="21112-445">Häufig verwendete Stammelemente (<xref:System.Windows.Window>, <xref:System.Windows.Controls.Page> z. B.) implementieren die Schnittstelle <xref:System.Windows.Markup.INameScope>.</span><span class="sxs-lookup"><span data-stu-id="21112-445">Commonly used root elements (<xref:System.Windows.Window>, <xref:System.Windows.Controls.Page> for example) implement the interface <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="21112-446">Implementierungen dieser Schnittstelle werden erwartet, um zu erzwingen, dass Namen innerhalb des Bereichs eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="21112-446">Implementations of this interface are expected to enforce that names be unambiguous within their scope.</span></span>  
  
<a name="dependencyPropertyInfo_Name"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="21112-447">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="21112-447">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-448">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-448">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.NameProperty>|  
|<span data-ttu-id="21112-449">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="21112-449">Metadata properties set to `true`</span></span>|<xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-450">Bezeichnet die <see cref="P:System.Windows.FrameworkContentElement.Name" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-450">Identifies the <see cref="P:System.Windows.FrameworkContentElement.Name" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuClosing (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuClosing(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuClosing (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuClosing(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="21112-451">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="21112-451">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="21112-452">Der Aufruf erfolgt immer dann, wenn das <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" />-Routingereignis diese Klasse auf der Route erreicht.</span><span class="sxs-lookup"><span data-stu-id="21112-452">Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="21112-453">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="21112-453">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-454">Diese Methode hat keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="21112-454">This method has no default implementation.</span></span> <span data-ttu-id="21112-455">Für den Fall, dass eine Zwischenklasse in der Vererbung diese Methode implementiert hat, sollten Sie dennoch die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="21112-455">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="21112-456">Der Zweck dieser Methode ist zumindest ähneln [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] -Ereignismuster auf \* Methoden: DSC bietet die Möglichkeit zum Behandeln des übereinstimmenden Ereignis von abgeleiteten Klassen mit einem Klassenhandler statt einem Instanzhandler.</span><span class="sxs-lookup"><span data-stu-id="21112-456">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="21112-457">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-457">In this case the matching event is a routed event.</span></span> <span data-ttu-id="21112-458">Das Implementierungsmuster der On \* Methoden unterscheidet sich für Routingereignisse, da das Routingereignis von einem untergeordneten Element, nicht unbedingt das Element ausgelöst worden sein kann, mit denen Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="21112-458">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="21112-459">Aus diesem Grund Ihrer Implementierung müssen Sie die Argumente berücksichtigen (und sollten nicht versuchen, erneut Auslösen des Ereignisses in den meisten Fällen).</span><span class="sxs-lookup"><span data-stu-id="21112-459">Therefore, your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="21112-460">Unterklassen des <xref:System.Windows.FrameworkContentElement> wählen Sie mit der konnte Ereignishandlermethoden private Klasse aufgerufen werden, wenn das Ereignis entlang der Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="21112-460">Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="21112-461">Eine mögliche Szenario besteht darin die Argumente des Ereignisses und absichtlich markiert das Ereignis als behandelt, um die Route zu verkürzen.</span><span class="sxs-lookup"><span data-stu-id="21112-461">One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="21112-462">Die Ereignisdaten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-462">Event data for the event.</span></span></param>
        <summary><span data-ttu-id="21112-463">Der Aufruf erfolgt immer dann, wenn das <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" />-Routingereignis diese Klasse auf der Route erreicht.</span><span class="sxs-lookup"><span data-stu-id="21112-463">Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="21112-464">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="21112-464">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-465">Diese Methode hat keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="21112-465">This method has no default implementation.</span></span> <span data-ttu-id="21112-466">Für den Fall, dass eine Zwischenklasse in der Vererbung diese Methode implementiert hat, sollten Sie dennoch base() aufrufen.</span><span class="sxs-lookup"><span data-stu-id="21112-466">You should still call base() in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="21112-467">Der Zweck dieser Methode ist zumindest ähneln [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] -Ereignismuster auf \* Methoden: DSC bietet die Möglichkeit zum Behandeln des übereinstimmenden Ereignis von abgeleiteten Klassen mit einem Klassenhandler statt einem Instanzhandler.</span><span class="sxs-lookup"><span data-stu-id="21112-467">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="21112-468">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-468">In this case the matching event is a routed event.</span></span> <span data-ttu-id="21112-469">Das Implementierungsmuster der On \* Methoden unterscheidet sich für Routingereignisse, da das Routingereignis von einem untergeordneten Element, nicht unbedingt das Element ausgelöst worden sein kann, die Handler aufgerufen wird, damit Ihre Implementierung die Quelle für die Ereignisargumente werden muss Eigenschaften berücksichtigt (und sollten nicht versuchen, erneut Auslösen des Ereignisses in den meisten Fällen).</span><span class="sxs-lookup"><span data-stu-id="21112-469">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="21112-470">Unterklassen des <xref:System.Windows.FrameworkContentElement> wählen Sie mit der konnte Ereignishandlermethoden private Klasse aufgerufen werden, wenn das Ereignis entlang der Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="21112-470">Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="21112-471">Eine mögliche Szenario besteht darin die Argumente des Ereignisses und absichtlich markiert das Ereignis als behandelt, um die Route zu verkürzen.</span><span class="sxs-lookup"><span data-stu-id="21112-471">One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="21112-472">Die Ereignisdaten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-472">Event data for the event.</span></span></param>
        <summary><span data-ttu-id="21112-473">Der Klassenhandler für das <see cref="E:System.Windows.ContentElement.GotFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-473">Class handler for the <see cref="E:System.Windows.ContentElement.GotFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-474">Diese Klassenhandler festlegt entsprechenden Fokusverhalten für dieses Element, wenn das Ereignis aus diesem Element ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="21112-474">This class handler sets appropriate focus behavior on this element if the event originated from this element.</span></span> <span data-ttu-id="21112-475">Wenn die Quelle des Ereignisses ein anderes Element in der Struktur wurde, wird der Handler keine Aktion ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="21112-475">If the event's source was another element in the tree, the handler does nothing.</span></span>  
  
 <span data-ttu-id="21112-476">Überschreiben Sie diese Methode, um diese Standardeinstellung Fokussierung Verhalten auf das Element zu ändern.</span><span class="sxs-lookup"><span data-stu-id="21112-476">Override this method in order to change these default focusing behavior on your element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected virtual void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitialized(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="21112-477">Die Ereignisdaten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-477">Event data for the event.</span></span></param>
        <summary><span data-ttu-id="21112-478">Löst das <see cref="E:System.Windows.FrameworkContentElement.Initialized" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="21112-478">Raises the <see cref="E:System.Windows.FrameworkContentElement.Initialized" /> event.</span></span> <span data-ttu-id="21112-479">Diese Methode wird immer dann aufgerufen, wenn <see cref="P:System.Windows.FrameworkContentElement.IsInitialized" /> auf <see langword="true" /> festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="21112-479">This method is invoked whenever <see cref="P:System.Windows.FrameworkContentElement.IsInitialized" /> is set to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-480">Die Standardimplementierung dieser virtuellen Methode löst das Ereignis aus, wie weiter oben in diesem Thema beschrieben.</span><span class="sxs-lookup"><span data-stu-id="21112-480">The default implementation of this virtual method raises the event as described earlier in this topic.</span></span> <span data-ttu-id="21112-481">Bei überschreibungen sollte base(), um dieses Verhalten beizubehalten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="21112-481">Overrides should call base() to preserve this behavior.</span></span>  
  
 <span data-ttu-id="21112-482">Beachten Sie, dass die <xref:System.Windows.FrameworkContentElement.IsInitialized%2A> Eigenschaft ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="21112-482">Note that the <xref:System.Windows.FrameworkContentElement.IsInitialized%2A> property is read-only.</span></span> <span data-ttu-id="21112-483">Aus diesem Grund kann nicht die Initialisierungsverhalten auf diese Weise erzwingen festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="21112-483">Therefore, you cannot set it to force initialization behavior that way.</span></span> <span data-ttu-id="21112-484">Festlegen der Initialisierung sollte nur von erfolgen die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Framework.</span><span class="sxs-lookup"><span data-stu-id="21112-484">Initialization setting is intended to be done only by the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="21112-485">Die Ereignisdaten, die die geänderte Eigenschaft beschreiben, einschließlich der alten und neuen Werte.</span><span class="sxs-lookup"><span data-stu-id="21112-485">The event data that describes the property that changed, including the old and new values.</span></span></param>
        <summary><span data-ttu-id="21112-486">Wird immer dann aufgerufen, wenn der tatsächliche Wert einer Abhängigkeitseigenschaft für diese <see cref="T:System.Windows.FrameworkContentElement" /> aktualisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="21112-486">Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.FrameworkContentElement" /> has been updated.</span></span> <span data-ttu-id="21112-487">Welche spezifische Abhängigkeitseigenschaft geändert wird, wird im Argumentparameter gemeldet.</span><span class="sxs-lookup"><span data-stu-id="21112-487">The specific dependency property that changed is reported in the arguments parameter.</span></span> <span data-ttu-id="21112-488">Überschreibt <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</span><span class="sxs-lookup"><span data-stu-id="21112-488">Overrides <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-489">Diese Methode dient nicht in der Regel eigenschaftenänderungen oder Außerkraftsetzungen aufgewendet erkennen.</span><span class="sxs-lookup"><span data-stu-id="21112-489">This method is not intended to generally detect property changes or invalidations.</span></span> <span data-ttu-id="21112-490">Sie dient stattdessen für Änderungen des als Muster verwendeten allgemeinen invalidierungstypen verfügbar, wenn bestimmte Informationen über wide Klassifizierungen Eigenschaften bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="21112-490">It is instead intended for modifications of the general invalidation pattern if certain information is known about wide classifications of properties.</span></span>  
  
 <span data-ttu-id="21112-491">Diese Methode wird möglicherweise mehrere Male während der Lebensdauer eines Objekts aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="21112-491">This method is potentially invoked many times during the life of an object.</span></span> <span data-ttu-id="21112-492">Aus diesem Grund können Sie eine bessere Leistung erzielen, wenn Sie die Metadaten bestimmter Eigenschaften überschreiben und Sie dann fügen <xref:System.Windows.CoerceValueCallback> oder <xref:System.Windows.PropertyChangedCallback> Funktionen für die einzelnen Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="21112-492">Therefore, you can achieve better performance if you override the metadata of specific properties and then attach <xref:System.Windows.CoerceValueCallback> or <xref:System.Windows.PropertyChangedCallback> functions for individual properties.</span></span> <span data-ttu-id="21112-493">Allerdings würden Sie diese Methode verwenden, wenn eine <xref:System.Windows.FrameworkContentElement> enthält eine signifikante Anzahl Wert verknüpft Abhängigkeitseigenschaften, oder wenn es die Logik enthält, wie z. B. Renderingverhalten, die erneut ausgeführt werden, muss mehrere Fälle der Ungültigkeitserklärungen beziehen.</span><span class="sxs-lookup"><span data-stu-id="21112-493">However, you would use this method if a <xref:System.Windows.FrameworkContentElement> includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.</span></span>  
  
 <span data-ttu-id="21112-494">Beachten Sie, dass ein identisch mit dem Namen `OnPropertyChanged` Methode mit einer anderen Signatur (der Parametertyp ist <xref:System.ComponentModel.PropertyChangedEventArgs>), die auf eine Reihe von Klassen angezeigt werden können.</span><span class="sxs-lookup"><span data-stu-id="21112-494">Note that there is an identically named `OnPropertyChanged` method with a different signature (the parameter type is <xref:System.ComponentModel.PropertyChangedEventArgs>) that can appear on a number of classes.</span></span> <span data-ttu-id="21112-495">Dass `OnPropertyChanged` für Daten Objekt Benachrichtigungen verwendet wird, und ist Teil des Vertrags für <xref:System.ComponentModel.INotifyPropertyChanged>.</span><span class="sxs-lookup"><span data-stu-id="21112-495">That `OnPropertyChanged` is used for data object notifications, and is part of the contract for <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="21112-496">Rufen Sie immer die grundlegende Implementierung als erster Vorgang in Ihrer Implementierung.</span><span class="sxs-lookup"><span data-stu-id="21112-496">Always call the base implementation, as the first operation in your implementation.</span></span> <span data-ttu-id="21112-497">Dies versäumt wird die gesamte erheblich deaktiviert [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Eigenschaftensystem, wodurch falsche Werte gemeldet werden.</span><span class="sxs-lookup"><span data-stu-id="21112-497">Failure to do this will significantly disable the entire [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system, which causes incorrect values to be reported.</span></span></para>
        </block>
        <altmember cref="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <altmember cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStyleChanged (System.Windows.Style oldStyle, System.Windows.Style newStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStyleChanged(class System.Windows.Style oldStyle, class System.Windows.Style newStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStyleChanged (oldStyle As Style, newStyle As Style)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStyleChanged(System::Windows::Style ^ oldStyle, System::Windows::Style ^ newStyle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldStyle" Type="System.Windows.Style" />
        <Parameter Name="newStyle" Type="System.Windows.Style" />
      </Parameters>
      <Docs>
        <param name="oldStyle"><span data-ttu-id="21112-498">Der alte Stil.</span><span class="sxs-lookup"><span data-stu-id="21112-498">The old style.</span></span></param>
        <param name="newStyle"><span data-ttu-id="21112-499">Der neue Stil.</span><span class="sxs-lookup"><span data-stu-id="21112-499">The new style.</span></span></param>
        <summary><span data-ttu-id="21112-500">Wird aufgerufen, wenn sich der aktuell verwendete Stil dieses Elements ändert.</span><span class="sxs-lookup"><span data-stu-id="21112-500">Invoked when the style that is in use on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-501">Diese Methode hat eine Standardimplementierung, die ein internes, beachten Sie die Formatvorlage geändert Bedingung Flag festlegt.</span><span class="sxs-lookup"><span data-stu-id="21112-501">This method has a default implementation that sets an internal flag noting the style changed condition.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="21112-502">Rufen Sie immer die grundlegende Implementierung, die andernfalls Stile können nicht angewendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="21112-502">Always call the base implementation, otherwise styles cannot be applied.</span></span> <span data-ttu-id="21112-503">Szenarien für das Überschreiben dieser Methode können enthalten, wenn die abgeleitete Klasse ist eine spezielle Stilauswahl Stilwerte.</span><span class="sxs-lookup"><span data-stu-id="21112-503">Scenarios for overriding this method might include if your derived class has a specialized style selector, or caches style values.</span></span> <span data-ttu-id="21112-504">Design ändert, werden möglicherweise mit dieser Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="21112-504">Theme changes will potentially invoke this method.</span></span></para>
        </block>
        <altmember cref="P:System.Windows.FrameworkContentElement.Style" />
      </Docs>
    </Member>
    <Member MemberName="OnToolTipClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnToolTipClosing (System.Windows.Controls.ToolTipEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnToolTipClosing(class System.Windows.Controls.ToolTipEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnToolTipClosing (e As ToolTipEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnToolTipClosing(System::Windows::Controls::ToolTipEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ToolTipEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="21112-505">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="21112-505">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="21112-506">Der Aufruf erfolgt immer dann, wenn das <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" />-Routingereignis diese Klasse auf der Route erreicht.</span><span class="sxs-lookup"><span data-stu-id="21112-506">Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="21112-507">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="21112-507">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-508">Diese Methode hat keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="21112-508">This method has no default implementation.</span></span> <span data-ttu-id="21112-509">Für den Fall, dass eine Zwischenklasse in der Vererbung diese Methode implementiert hat, sollten Sie dennoch base() aufrufen.</span><span class="sxs-lookup"><span data-stu-id="21112-509">You should still call base() in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="21112-510">Der Zweck dieser Methode ist zumindest ähneln [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] -Ereignismuster auf \* Methoden: DSC bietet die Möglichkeit zum Behandeln des übereinstimmenden Ereignis von abgeleiteten Klassen mit einem Klassenhandler statt einem Instanzhandler.</span><span class="sxs-lookup"><span data-stu-id="21112-510">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="21112-511">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-511">In this case the matching event is a routed event.</span></span> <span data-ttu-id="21112-512">Das Implementierungsmuster der On \* Methoden unterscheidet sich für Routingereignisse, da das Routingereignis von einem untergeordneten Element, nicht unbedingt das Element ausgelöst worden sein kann, die Handler aufgerufen wird, damit Ihre Implementierung die Quelle für die Ereignisargumente werden muss Eigenschaften berücksichtigt (und sollten nicht versuchen, erneut Auslösen des Ereignisses in den meisten Fällen).</span><span class="sxs-lookup"><span data-stu-id="21112-512">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="21112-513">Unterklassen des <xref:System.Windows.FrameworkContentElement> wählen Sie mit der konnte Ereignishandlermethoden private Klasse aufgerufen werden, wenn das Ereignis entlang der Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="21112-513">Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="21112-514">Eine mögliche Szenario besteht darin die Argumente des Ereignisses und absichtlich markiert das Ereignis als behandelt, um die Route zu verkürzen.</span><span class="sxs-lookup"><span data-stu-id="21112-514">One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnToolTipOpening">
      <MemberSignature Language="C#" Value="protected virtual void OnToolTipOpening (System.Windows.Controls.ToolTipEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnToolTipOpening(class System.Windows.Controls.ToolTipEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnToolTipOpening (e As ToolTipEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnToolTipOpening(System::Windows::Controls::ToolTipEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ToolTipEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="21112-515">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="21112-515">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="21112-516">Der Aufruf erfolgt immer dann, wenn das <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" />-Routingereignis diese Klasse auf der Route erreicht.</span><span class="sxs-lookup"><span data-stu-id="21112-516">Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="21112-517">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="21112-517">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-518">Diese Methode hat keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="21112-518">This method has no default implementation.</span></span> <span data-ttu-id="21112-519">Für den Fall, dass eine Zwischenklasse in der Vererbung diese Methode implementiert hat, sollten Sie dennoch base() aufrufen.</span><span class="sxs-lookup"><span data-stu-id="21112-519">You should still call base() in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="21112-520">Der Zweck dieser Methode ist zumindest ähneln [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] -Ereignismuster auf \* Methoden: DSC bietet die Möglichkeit zum Behandeln des übereinstimmenden Ereignis von abgeleiteten Klassen mit einem Klassenhandler statt einem Instanzhandler.</span><span class="sxs-lookup"><span data-stu-id="21112-520">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="21112-521">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-521">In this case the matching event is a routed event.</span></span> <span data-ttu-id="21112-522">Das Implementierungsmuster der On \* Methoden unterscheidet sich für Routingereignisse, da das Routingereignis von einem untergeordneten Element, nicht unbedingt das Element ausgelöst worden sein kann, die Handler aufgerufen wird, damit die Implementierung die Ereignisargumente Quelle durchführen müssen Eigenschaften berücksichtigt (und sollten nicht versuchen, erneut Auslösen des Ereignisses in den meisten Fällen).</span><span class="sxs-lookup"><span data-stu-id="21112-522">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="21112-523">Unterklassen des <xref:System.Windows.FrameworkContentElement> wählen Sie mit der konnte Ereignishandlermethoden private Klasse aufgerufen werden, wenn das Ereignis entlang der Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="21112-523">Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="21112-524">Eine mögliche Szenario besteht darin die Argumente des Ereignisses und absichtlich markiert das Ereignis als behandelt, um die Route zu verkürzen.</span><span class="sxs-lookup"><span data-stu-id="21112-524">One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverridesDefaultStyle">
      <MemberSignature Language="C#" Value="public bool OverridesDefaultStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OverridesDefaultStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property OverridesDefaultStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OverridesDefaultStyle { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-525">Ruft einen Wert ab, mit dem angegeben wird, ob dieses Element Stileigenschaften aus Designstilen enthält, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="21112-525">Gets or sets a value indicating whether this element incorporates style properties from theme styles.</span></span></summary>
        <value>
          <span data-ttu-id="21112-526"><see langword="true" />, wenn dieses Element keine Designstileigenschaften verwendet, alle auf Stile zurückgehenden Eigenschaften aus den Stilen lokaler Anwendungen stammen und die Designstileigenschaften nicht angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="21112-526"><see langword="true" /> if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply.</span></span> <span data-ttu-id="21112-527"><see langword="false" />, wenn Anwendungsstile vor Designstilen auf Eigenschaften angewendet werden, die in Anwendungsstilen nicht explizit festgelegt wurden.</span><span class="sxs-lookup"><span data-stu-id="21112-527"><see langword="false" /> if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-528">Die häufigste Verwendung dieser Eigenschaft ist eine indirekte Verwendung innerhalb der Setter eines Formats, der einen Designstil bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21112-528">The most common usage of this property is an indirect usage within the setter of a style that is supplying a themed style.</span></span>  
  
<a name="dependencyPropertyInfo_OverridesDefaultStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="21112-529">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="21112-529">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-530">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-530">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty>|  
|<span data-ttu-id="21112-531">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="21112-531">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkContentElement.DefaultStyleKey" />
      </Docs>
    </Member>
    <Member MemberName="OverridesDefaultStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OverridesDefaultStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OverridesDefaultStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OverridesDefaultStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OverridesDefaultStyleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-532">Bezeichnet die <see cref="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-532">Identifies the <see cref="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-533">Ruft das übergeordnete Element in der logischen Struktur dieses Elements ab.</span><span class="sxs-lookup"><span data-stu-id="21112-533">Gets the parent in the logical tree for this element.</span></span></summary>
        <value><span data-ttu-id="21112-534">Das logische übergeordnete Element dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="21112-534">The logical parent for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-535">Beachten Sie, dass sich das logische übergeordnete Element eines Elements möglicherweise je nach den Funktionen der Anwendung geändert und den Wert dieser Eigenschaft diese Änderung nicht widerspiegelt.</span><span class="sxs-lookup"><span data-stu-id="21112-535">Note that the logical parent of an element can potentially change depending on your application functionality, and keeping the value of this property will not reflect that change.</span></span> <span data-ttu-id="21112-536">In der Regel sollten Sie den Wert abrufen, unmittelbar bevor Sie ihn benötigen.</span><span class="sxs-lookup"><span data-stu-id="21112-536">You typically should get the value immediately before you need it.</span></span>  
  
 <span data-ttu-id="21112-537">Finden Sie unter [Strukturen in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md) für Weitere Informationen zu durchlaufen, logischen Strukturen und die Szenarien, in denen dieser Ansatz für Element-Ermittlung geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="21112-537">See [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md) for more information about traversing logical trees, and the scenarios where taking this approach towards element discovery is appropriate.</span></span>  
  
 <span data-ttu-id="21112-538">Im Eigenschaftensystem wird möglicherweise neu berechnen alle Eigenschaftswerte eines Elements, wenn er erneut übergeordnet ist, da einige Eigenschaften Werte in der logischen Struktur erben.</span><span class="sxs-lookup"><span data-stu-id="21112-538">The property system will potentially recalculate all property values of an element when it is reparented, because some properties inherit values through the logical tree.</span></span> <span data-ttu-id="21112-539">Die <xref:System.Windows.FrameworkContentElement.DataContext%2A> , die gilt für Bindungen können auch ändern, wenn Elemente erneut übergeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="21112-539">The <xref:System.Windows.FrameworkContentElement.DataContext%2A> that applies for bindings can also change when elements are reparented.</span></span>  
  
 <span data-ttu-id="21112-540">Ändern eines Elements in der Regel nur erfolgt durch die Bearbeitung von Auflistungen, mithilfe von dedizierten hinzufügen oder entfernen-Methoden, oder durch Festlegen von Inhaltseigenschaften von Elementen.</span><span class="sxs-lookup"><span data-stu-id="21112-540">Changing an element's parent is typically only done through manipulation of collections, by using dedicated add or remove methods, or through setting content properties of elements.</span></span>  
  
 <span data-ttu-id="21112-541">Das häufigste Szenario für die Verwendung der <xref:System.Windows.FrameworkContentElement.Parent%2A> Eigenschaft wird zum Abrufen eines Verweises und rufen Sie anschließend auf verschiedenen <xref:System.Windows.FrameworkContentElement> Eigenschaftswerte aus dem übergeordneten Element.</span><span class="sxs-lookup"><span data-stu-id="21112-541">The most typical scenario for using the <xref:System.Windows.FrameworkContentElement.Parent%2A> property is to obtain a reference and then get various <xref:System.Windows.FrameworkContentElement> property values from the parent.</span></span> <span data-ttu-id="21112-542">Bei Vorlagen der <xref:System.Windows.FrameworkContentElement.Parent%2A> der Vorlage schließlich werden `null`.</span><span class="sxs-lookup"><span data-stu-id="21112-542">For templates, the <xref:System.Windows.FrameworkContentElement.Parent%2A> of the template eventually will be `null`.</span></span> <span data-ttu-id="21112-543">Über diesen Punkt hinaus, und erweitern in der logischen Struktur, in dem die Vorlage tatsächlich angewendet wird, verwenden Sie <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A>.</span><span class="sxs-lookup"><span data-stu-id="21112-543">To get past this point and extend into the logical tree where the template is actually applied, use <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21112-544">Das folgende Beispiel überprüft, um festzustellen, ob die <xref:System.Windows.FrameworkContentElement.Parent%2A> von einem <xref:System.Windows.Documents.TextPointer> verfügt über einen bestimmten Typ.</span><span class="sxs-lookup"><span data-stu-id="21112-544">The following example checks to see whether the <xref:System.Windows.FrameworkContentElement.Parent%2A> of a <xref:System.Windows.Documents.TextPointer> is of a particular type.</span></span>  
  
 [!code-csharp[TextPointer_snippets#FCEParent](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#fceparent)]
 [!code-vb[TextPointer_snippets#FCEParent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#fceparent)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkContentElement.TemplatedParent" />
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="21112-545">Die Richtung, für die eine mögliche Fokusänderung bestimmt werden soll.</span><span class="sxs-lookup"><span data-stu-id="21112-545">The direction for which a prospective focus change should be determined.</span></span></param>
        <summary><span data-ttu-id="21112-546">Bestimmt das nächste Element, das relativ zu diesem Element den Fokus in einer angegebenen Fokusverschiebungsrichtung erhalten würde, verschiebt den Fokus jedoch nicht.</span><span class="sxs-lookup"><span data-stu-id="21112-546">Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus.</span></span> <span data-ttu-id="21112-547">Diese Methode ist versiegelt und kann nicht überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="21112-547">This method is sealed and cannot be overridden.</span></span></summary>
        <returns><span data-ttu-id="21112-548">Das nächste Element, auf das der Fokus verschoben würde, wenn der Fokus tatsächlich durchlaufen würde.</span><span class="sxs-lookup"><span data-stu-id="21112-548">The next element that focus would move to if focus were actually traversed.</span></span> <span data-ttu-id="21112-549">Kann <see langword="null" /> zurückgeben, wenn der Fokus für die bereitgestellte Richtung nicht relativ zu diesem Element verschoben werden kann.</span><span class="sxs-lookup"><span data-stu-id="21112-549">May return <see langword="null" /> if focus cannot be moved relative to this element for the provided direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-550"><xref:System.Windows.FrameworkContentElement.MoveFocus%2A> ist die entsprechende Methode, die tatsächlich Fokus.</span><span class="sxs-lookup"><span data-stu-id="21112-550"><xref:System.Windows.FrameworkContentElement.MoveFocus%2A> is the related method that actually does move focus.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="21112-551">Gibt eine der folgenden Richtungen im <see cref="T:System.Windows.Input.TraversalRequest" /> an: <see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.First" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Last" />.</span><span class="sxs-lookup"><span data-stu-id="21112-551">Specified one of the following directions in the <see cref="T:System.Windows.Input.TraversalRequest" />: <see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.First" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Last" />.</span></span> <span data-ttu-id="21112-552">Diese Richtungen sind für <see cref="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> unzulässig (aber für <see cref="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> zulässig).</span><span class="sxs-lookup"><span data-stu-id="21112-552">These directions are not legal for <see cref="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> (but they are legal for <see cref="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="21112-553">Name für die angegebene Namensobjektzuordnung.</span><span class="sxs-lookup"><span data-stu-id="21112-553">Name to use for the specified name-object mapping.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="21112-554">Objekt für die Zuordnung.</span><span class="sxs-lookup"><span data-stu-id="21112-554">Object for the mapping.</span></span></param>
        <summary><span data-ttu-id="21112-555">Stellt einen Accessor bereit, der Zugriff auf die <see cref="T:System.Windows.NameScope" />-Registrierungsmethode vereinfacht.</span><span class="sxs-lookup"><span data-stu-id="21112-555">Provides an accessor that simplifies access to the <see cref="T:System.Windows.NameScope" /> registration method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-556">Diese Methode ist eine bequeme Methode zum Aufrufen <xref:System.Windows.NameScope.RegisterName%2A>.</span><span class="sxs-lookup"><span data-stu-id="21112-556">This method is a convenience method for calling <xref:System.Windows.NameScope.RegisterName%2A>.</span></span> <span data-ttu-id="21112-557">Die Implementierung überprüft aufeinander folgenden übergeordneten Elemente, bis die entsprechende <xref:System.Windows.NameScope> -Implementierung, die gefunden wird, mit einer Suche nach einem Element, das implementiert <xref:System.Windows.Markup.INameScope>.</span><span class="sxs-lookup"><span data-stu-id="21112-557">The implementation will check successive parent elements until it finds the applicable <xref:System.Windows.NameScope> implementation, which is found by finding an element that implements <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="21112-558">Weitere Informationen zu Namescopes finden Sie unter [WPF-XAML-Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="21112-558">For more information about namescopes, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 <span data-ttu-id="21112-559">Aufrufen von <xref:System.Windows.FrameworkContentElement.RegisterName%2A> ist erforderlich, um die Animationsstoryboards für Anwendungen, wenn im Code erstellt, ordnungsgemäß zu verknüpfen.</span><span class="sxs-lookup"><span data-stu-id="21112-559">Calling <xref:System.Windows.FrameworkContentElement.RegisterName%2A> is necessary in order to correctly hook up animation storyboards for applications when created in code.</span></span> <span data-ttu-id="21112-560">Dies ist, da einer der Schlüsselwerte storyboard-Eigenschaften, <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>, eine Namenssuche zur Laufzeit verwendet, statt einen Verweis auf ein Target-Element erstellen.</span><span class="sxs-lookup"><span data-stu-id="21112-560">This is because one of the key storyboard properties, <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>, uses a run-time name lookup instead of being able to take a reference to a target element.</span></span> <span data-ttu-id="21112-561">Dies gilt auch, wenn dieses Element als Verweis aus dem Code zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="21112-561">This is true even if that element is accessible by reference from the code.</span></span> <span data-ttu-id="21112-562">Weitere Informationen darüber, warum die Namen für die Storyboardziele registriert werden müssen, finden Sie unter [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span><span class="sxs-lookup"><span data-stu-id="21112-562">For more information on why you need to register names for storyboard targets, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span> <span data-ttu-id="21112-563">Animationen für Inhaltselemente sind weniger gebräuchlich als Animationen für Steuerelemente, die [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md) konzentriert sich auf Szenarien für das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="21112-563">Animations for content elements are less common than animations on controls, the [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md) concentrates on control scenarios.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkContentElement.UnregisterName(System.String)" />
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLogicalChild">
      <MemberSignature Language="C#" Value="protected internal void RemoveLogicalChild (object child);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RemoveLogicalChild(object child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.RemoveLogicalChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RemoveLogicalChild (child As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RemoveLogicalChild(System::Object ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="21112-564">Das zu entfernende Element.</span><span class="sxs-lookup"><span data-stu-id="21112-564">The element to remove.</span></span></param>
        <summary><span data-ttu-id="21112-565">Entfernt das angegebene Element aus der logischen Struktur dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="21112-565">Removes the specified element from the logical tree for this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-566">Dies [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] ist hauptsächlich für die abgeleitete Klasse Szenarien beim Hinzufügen von Unterstützung für untergeordnete Sammlungen relevant.</span><span class="sxs-lookup"><span data-stu-id="21112-566">This [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is mainly relevant for class deriving scenarios, when adding support for child collections.</span></span>  
  
 <span data-ttu-id="21112-567">Die meisten <xref:System.Windows.FrameworkContentElement> abgeleitete Klassen verfügbar zu machen, dedizierte Auflistungen, die für die Kapselung verantwortlich sind (z. B. <xref:System.Windows.Documents.Span.Inlines%2A> auf die <xref:System.Windows.Documents.Span> Klasse. <xref:System.Windows.Documents.Section.Blocks%2A> auf die <xref:System.Windows.Documents.Section> Klasse).</span><span class="sxs-lookup"><span data-stu-id="21112-567">Most <xref:System.Windows.FrameworkContentElement> derived classes expose dedicated collections that are responsible for containment (for example, <xref:System.Windows.Documents.Span.Inlines%2A> on the <xref:System.Windows.Documents.Span> class; <xref:System.Windows.Documents.Section.Blocks%2A> on the <xref:System.Windows.Documents.Section> class).</span></span> <span data-ttu-id="21112-568">Ableiten von dieser Klassen in der Regel kann die Notwendigkeit zur logische Struktur direkt bearbeiten vermeiden.</span><span class="sxs-lookup"><span data-stu-id="21112-568">Deriving from such classes typically can avoid any need to manipulate the logical tree directly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.LogicalTreeHelper" />
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public System.Windows.ResourceDictionary Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ResourceDictionary Resources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As ResourceDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResourceDictionary ^ Resources { System::Windows::ResourceDictionary ^ get(); void set(System::Windows::ResourceDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-569">Ruft das aktuelle lokal definierte Ressourcenwörterbuch ab oder legt es fest.</span><span class="sxs-lookup"><span data-stu-id="21112-569">Gets or sets the current locally-defined resource dictionary.</span></span></summary>
        <value><span data-ttu-id="21112-570">Die aktuellen lokal definierten Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="21112-570">The current locally-defined resources.</span></span> <span data-ttu-id="21112-571">Dies ist ein Wörterbuch von Ressourcen, wobei auf Ressourcen innerhalb des Wörterbuchs über Schlüssel zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="21112-571">This is a dictionary of resources, where resources within the dictionary are accessed by key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-572">Ressourcenwörterbücher, die vollständig oder teilweise in definierbaren [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] werden in der Regel als ein Eigenschaftenelement erstellt und sind in der Regel für das Stammelement für die einzelnen Seiten oder für die Anwendung.</span><span class="sxs-lookup"><span data-stu-id="21112-572">Resource dictionaries that can be defined completely or partially in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] are typically created as a property element, and are typically on the root element for any individual page or for the application.</span></span> <span data-ttu-id="21112-573">Platzieren das Ressourcenwörterbuch auf dieser Ebene erleichtert es, aus der einzelnen untergeordneten Elemente auf der Seite (oder eine andere Seite, in die Anwendung Groß-/Kleinschreibung) zu suchen.</span><span class="sxs-lookup"><span data-stu-id="21112-573">Placing the resource dictionary at this level makes it easier to find from individual child elements in the page (or from any page, in the application case).</span></span> <span data-ttu-id="21112-574">In den meisten Anwendungsszenarios wird empfohlen, Stile als Objektelemente in einem Ressourcenwörterbuch definiert werden oder als externe Ressourcen definiert werden, damit die gesamte Stilressource eigenständig sein kann (dieser Ansatz hilft separate-Designer Zuständigkeiten von Entwickleraufgaben durch die Trennung von physischen Dateien, die bearbeitet werden müssen).</span><span class="sxs-lookup"><span data-stu-id="21112-574">In most application scenarios, we recommend that styles be defined as object elements within a resource dictionary, or be defined as external resources so that the entire style resource can be self-contained (this approach helps separate designer responsibilities from developer responsibilities by separating the physical files that need to be edited).</span></span>  
  
 <span data-ttu-id="21112-575">Beachten Sie, dass diese Eigenschaft gibt nur das Ressourcenwörterbuch direkt in dieses Element deklariert.</span><span class="sxs-lookup"><span data-stu-id="21112-575">Note that this property returns only the resource dictionary declared directly within that element.</span></span> <span data-ttu-id="21112-576">Dies ist anders als die eigentliche Ressource Lookup-Prozess, in dem ein untergeordnetes Element in jedem übergeordneten Element, die Suche rekursiv nach oben definierten Ressourcen zugreifen können.</span><span class="sxs-lookup"><span data-stu-id="21112-576">This is different than the actual resource lookup process, where a child element can access any of the resources defined in each parent element, searching recursively upwards.</span></span>  
  
 <span data-ttu-id="21112-577">Ressourcen können auch aus Code innerhalb der Auflistung verwiesen werden, aber beachten Sie, dass Ressourcen in erstellt [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] kann definitiv nicht zugegriffen werden erst nach dem <xref:System.Windows.FrameworkContentElement.Loaded> wird ausgelöst, indem Sie das Element, das das Wörterbuch deklariert.</span><span class="sxs-lookup"><span data-stu-id="21112-577">Resources can also be referenced by code from within the collection, but be aware that resources created in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will definitely not be accessible until after <xref:System.Windows.FrameworkContentElement.Loaded> is raised by the element that declares the dictionary.</span></span> <span data-ttu-id="21112-578">In der Tat Ressourcen werden asynchron analysiert, und auch nicht die <xref:System.Windows.FrameworkContentElement.Loaded> Ereignis ist eine Zusicherung, die Sie referenzieren können eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Ressource definiert.</span><span class="sxs-lookup"><span data-stu-id="21112-578">In fact, resources are parsed asynchronously, and not even the <xref:System.Windows.FrameworkContentElement.Loaded> event is an assurance that you can reference a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resource.</span></span> <span data-ttu-id="21112-579">Aus diesem Grund sollten Sie in der Regel nur auf zugreifen [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] definierten Ressourcen als Teil des Codes zur Laufzeit oder über andere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Techniken z. B. Stile oder ressourcenerweiterungsparameter für Attributwerte.</span><span class="sxs-lookup"><span data-stu-id="21112-579">For this reason you should generally only access [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resources as part of run-time code, or through other [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] techniques such as styles or resource extension references for attribute values.</span></span> <span data-ttu-id="21112-580">Zugriff auf Ressourcen über Code entspricht im Wesentlichen um einen Verweis, die von [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="21112-580">When you access resources through code, it is essentially equivalent to a  reference made from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 <span data-ttu-id="21112-581">Die zugrunde liegende <xref:System.Windows.ResourceDictionary> unterstützt die Methoden zum Hinzufügen, entfernen oder Abfragen von Ressourcen in der Auflistung mithilfe von Code erforderlich.</span><span class="sxs-lookup"><span data-stu-id="21112-581">The underlying <xref:System.Windows.ResourceDictionary> supports the methods required to add, remove, or query resources from within the collection by using code.</span></span> <span data-ttu-id="21112-582">Die <xref:System.Windows.FrameworkContentElement.Resources%2A> Eigenschaft kann festgelegt werden, unterstützt das Szenario für die Ressourcen-Auflistung, der ein Element kann ein neues oder anderes werden vollständig zu ersetzen <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="21112-582">The <xref:System.Windows.FrameworkContentElement.Resources%2A> property is settable to support the scenario of completely replacing the resources collection of an element to be a new or different <xref:System.Windows.ResourceDictionary>.</span></span>  
  
 <span data-ttu-id="21112-583">Beachten Sie, dass die [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] gezeigte Syntax enthält kein Element für die <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="21112-583">Notice that the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax shown does not include an element for the <xref:System.Windows.ResourceDictionary>.</span></span> <span data-ttu-id="21112-584">Dies ist ein Beispiel für implizite Auflistungssyntax; Ein Tag, das das Auflistungselement darstellt, kann ausgelassen werden.</span><span class="sxs-lookup"><span data-stu-id="21112-584">This is an example of implicit collection syntax; a tag representing the collection element can be omitted.</span></span> <span data-ttu-id="21112-585">Die Elemente, die als Elemente der Auflistung hinzugefügt werden, werden stattdessen angegeben.</span><span class="sxs-lookup"><span data-stu-id="21112-585">The elements that are added as items to the collection are specified instead.</span></span> <span data-ttu-id="21112-586">Weitere Informationen zu impliziten Sammlungen und [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], finden Sie unter [XAML-Syntax im Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="21112-586">For more information about implicit collections and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span> <span data-ttu-id="21112-587">Einen Fall, in dem ein <xref:System.Windows.ResourceDictionary> wird immer noch explizit angegeben, wie ein Element ist, wenn Sie ein zusammengeführtes Wörterbuch einführen, in diesem Fall stehen in der Regel keine untergeordneten Elemente für diesen <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="21112-587">One case where a <xref:System.Windows.ResourceDictionary> is still specified explicitly as an element is if you are introducing a merged dictionary, in which case there are typically no child elements for that <xref:System.Windows.ResourceDictionary>.</span></span> <span data-ttu-id="21112-588">Weitere Informationen finden Sie unter [Ressourcenverzeichnis zusammengeführt](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).</span><span class="sxs-lookup"><span data-stu-id="21112-588">For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).</span></span>  
  
<a name="xamlPropertyElementUsage_Resources"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="21112-589">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="21112-589">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Resources>  
    oneOrMoreResourceElements  
  </object.Resources>  
</object>  
```  
  
<a name="xamlValues_Resources"></a>   
## <a name="xaml-values"></a><span data-ttu-id="21112-590">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="21112-590">XAML Values</span></span>  
 <span data-ttu-id="21112-591">*oneOrMoreResourceElements*</span><span class="sxs-lookup"><span data-stu-id="21112-591">*oneOrMoreResourceElements*</span></span>  
 <span data-ttu-id="21112-592">Ein oder mehrere Objektelemente, von die jede eine Ressource definiert werden.</span><span class="sxs-lookup"><span data-stu-id="21112-592">One or more object elements, each of which defines a resource.</span></span> <span data-ttu-id="21112-593">Jede Ressource Property-Element innerhalb der einzelnen <xref:System.Windows.ResourceDictionary> benötigen Sie einen eindeutigen Wert für die [X: Key-Anweisung](~/docs/framework/xaml-services/x-key-directive.md), die als eindeutiger Schlüssel fungiert, beim Abrufen der Werte aus den <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="21112-593">Each resource property element within each <xref:System.Windows.ResourceDictionary> must have a unique value for the [x:Key Directive](~/docs/framework/xaml-services/x-key-directive.md), which serves as the unique key when values are retrieved from the <xref:System.Windows.ResourceDictionary>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21112-594">Das folgende Beispiel erstellt eine <xref:System.Windows.FrameworkContentElement.Resources%2A> Auflistung auf eine <xref:System.Windows.Documents.FlowDocument> Root-Element.</span><span class="sxs-lookup"><span data-stu-id="21112-594">The following example establishes a <xref:System.Windows.FrameworkContentElement.Resources%2A> collection on a <xref:System.Windows.Documents.FlowDocument> root element.</span></span> <span data-ttu-id="21112-595"><xref:System.Windows.Documents.FlowDocument> eine normale Auswahl ist, da sie eine der wenigen ist <xref:System.Windows.FrameworkContentElement> Klassen, die sinnvoll als Stammelement und Ressourcen werden im Allgemeinen gespeichert, auf der Stammebene Seite oder sogar ein noch höheres Ebenen z. B. in der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="21112-595"><xref:System.Windows.Documents.FlowDocument> is a typical choice because it is one of the few <xref:System.Windows.FrameworkContentElement> classes that make sense as a root element, and resources are generally stored at the page root or at even higher levels such as in the application.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#FCEResources](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page2.xaml#fceresources)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Application.Resources" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBinding">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21112-596">Ordnet eine Bindung zu diesem Element für die angegebene Abhängigkeitseigenschaft zu.</span><span class="sxs-lookup"><span data-stu-id="21112-596">Attaches a binding to this element for the specified dependency property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingExpression SetBinding (System.Windows.DependencyProperty dp, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Data.BindingExpression SetBinding(class System.Windows.DependencyProperty dp, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBinding (dp As DependencyProperty, path As String) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Data::BindingExpression ^ SetBinding(System::Windows::DependencyProperty ^ dp, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="21112-597">Bezeichnet die gebundene Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-597">Identifies the bound property.</span></span></param>
        <param name="path"><span data-ttu-id="21112-598">Der Name der Quelleigenschaft oder der Pfad zu der für die Bindung verwendeten Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-598">The source property name or the path to the property used for the binding.</span></span></param>
        <summary><span data-ttu-id="21112-599">Fügt auf der Grundlage des bereitgestellten Namens der Quelleigenschaft als Pfadangabe zur Datenquelle eine Bindung an dieses Element an.</span><span class="sxs-lookup"><span data-stu-id="21112-599">Attaches a binding to this element, based on the provided source property name as a path qualification to the data source.</span></span></summary>
        <returns><span data-ttu-id="21112-600">Zeichnet die Bedingungen der Bindung auf.</span><span class="sxs-lookup"><span data-stu-id="21112-600">Records the conditions of the binding.</span></span> <span data-ttu-id="21112-601">Dieser Rückgabewert kann bei der Fehlerüberprüfung nützlich sein.</span><span class="sxs-lookup"><span data-stu-id="21112-601">This return value can be useful for error checking.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-602">Diese Methode ist eine bequeme Methode zum Aufrufen <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>, wiederum übergibt die aktuelle Instanz als der <xref:System.Windows.DependencyObject>, und erstellt einen neuen <xref:System.Windows.Data.Binding> auf Grundlage der bereitgestellten `path` Parameter.</span><span class="sxs-lookup"><span data-stu-id="21112-602">This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>, which passes the current instance as the <xref:System.Windows.DependencyObject>, and creates a new <xref:System.Windows.Data.Binding> based on the provided `path` parameter.</span></span> <span data-ttu-id="21112-603">Diese Signatur ist einfacher, wenn Sie eine einfache standardbindung herstellen.</span><span class="sxs-lookup"><span data-stu-id="21112-603">This signature is more convenient if you are establishing a simple default binding.</span></span> <span data-ttu-id="21112-604">Wenn Sie müssen Bindungseigenschaften nicht standardmäßige Bedingungen angeben, oder verwenden möchten eine <xref:System.Windows.Data.MultiBinding> oder <xref:System.Windows.Data.PriorityBinding>, verwenden Sie die <xref:System.Windows.FrameworkContentElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29> Signatur.</span><span class="sxs-lookup"><span data-stu-id="21112-604">If you need to specify any binding properties to non-default conditions, or want to use a <xref:System.Windows.Data.MultiBinding> or <xref:System.Windows.Data.PriorityBinding>,you should use the <xref:System.Windows.FrameworkContentElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29> signature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21112-605">Im folgenden Beispiel wird eine Bindung auf einen <xref:System.Windows.Documents.Paragraph> Element, durch das Erstellen eines neuen benutzerdefinierten Daten-Objekts, das Objekt als herstellen <xref:System.Windows.FrameworkContentElement.DataContext%2A>, und den Bindungspfad auf eine Eigenschaft darin festlegen.</span><span class="sxs-lookup"><span data-stu-id="21112-605">The following example sets a binding on a <xref:System.Windows.Documents.Paragraph> element, by creating a new custom data object, establishing that object as <xref:System.Windows.FrameworkContentElement.DataContext%2A>, and setting the binding path to a property within it.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#DataContext](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#datacontext)]
 [!code-vb[ContentElementsSmorgasbord#DataContext](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#datacontext)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Data.BindingExpressionBase SetBinding(class System.Windows.DependencyProperty dp, class System.Windows.Data.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBinding (dp As DependencyProperty, binding As BindingBase) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Data::BindingExpressionBase ^ SetBinding(System::Windows::DependencyProperty ^ dp, System::Windows::Data::BindingBase ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="21112-606">Bezeichnet die gebundene Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-606">Identifies the bound property.</span></span></param>
        <param name="binding"><span data-ttu-id="21112-607">Stellt eine Datenbindung dar.</span><span class="sxs-lookup"><span data-stu-id="21112-607">Represents a data binding.</span></span></param>
        <summary><span data-ttu-id="21112-608">Fügt auf der Grundlage des bereitgestellten Bindungsobjekts eine Bindung an dieses Element an.</span><span class="sxs-lookup"><span data-stu-id="21112-608">Attaches a binding to this element, based on the provided binding object.</span></span></summary>
        <returns><span data-ttu-id="21112-609">Zeichnet die Bedingungen der Bindung auf.</span><span class="sxs-lookup"><span data-stu-id="21112-609">Records the conditions of the binding.</span></span> <span data-ttu-id="21112-610">Dieser Rückgabewert kann bei der Fehlerüberprüfung nützlich sein.</span><span class="sxs-lookup"><span data-stu-id="21112-610">This return value can be useful for error checking.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-611">Diese Methode ist eine bequeme Methode zum Aufrufen <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>, die die aktuelle Instanz als übergibt die <xref:System.Windows.DependencyObject>.</span><span class="sxs-lookup"><span data-stu-id="21112-611">This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>, which passes the current instance as the <xref:System.Windows.DependencyObject>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21112-612">Im folgenden Beispiel wird eine Bindung auf einen <xref:System.Windows.Documents.Paragraph> Element, durch Erstellen eines neuen <xref:System.Windows.Data.Binding> und indem Sie die Quelle ein neu erstelltes `DateTime` Objekt.</span><span class="sxs-lookup"><span data-stu-id="21112-612">The following example sets a binding on a <xref:System.Windows.Documents.Paragraph> element, by creating a new <xref:System.Windows.Data.Binding> and setting the source to a newly built `DateTime` object.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#SetBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#setbinding)]
 [!code-vb[ContentElementsSmorgasbord#SetBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#setbinding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResourceReference">
      <MemberSignature Language="C#" Value="public void SetResourceReference (System.Windows.DependencyProperty dp, object name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResourceReference(class System.Windows.DependencyProperty dp, object name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceReference (dp As DependencyProperty, name As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResourceReference(System::Windows::DependencyProperty ^ dp, System::Object ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="21112-613">Die Eigenschaft, an die die Ressource gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="21112-613">The property to which the resource is bound.</span></span></param>
        <param name="name"><span data-ttu-id="21112-614">Der Name der Ressource.</span><span class="sxs-lookup"><span data-stu-id="21112-614">The name of the resource.</span></span></param>
        <summary><span data-ttu-id="21112-615">Sucht eine Ressource mit dem angegebenen Namen und richtet einen entsprechenden Ressourcenverweis für die angegebene Eigenschaft ein.</span><span class="sxs-lookup"><span data-stu-id="21112-615">Searches for a resource with the specified name and sets up a resource reference to it for the specified property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-616">Ein Ressourcenverweis ist vergleichbar mit der Verwendung von einem [DynamicResource Markuperweiterung](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) im Markup.</span><span class="sxs-lookup"><span data-stu-id="21112-616">A resource reference is similar to the use of a [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) in markup.</span></span> <span data-ttu-id="21112-617">Der Ressourcenverweis erstellt einen internen Ausdruck, der den Wert der angegebenen Eigenschaft für zurückgestellten zur Laufzeit bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21112-617">The resource reference creates an internal expression that supplies the value of the specified property on a run-time deferred basis.</span></span> <span data-ttu-id="21112-618">Der Ausdruck wird erneut ausgewertet werden, immer das Ressourcenwörterbuch geänderte Wert über interne Ereignisse gibt an, oder, wenn das aktuelle Element erneut übergeordnet ist (eine Änderung des übergeordneten würde das Wörterbuch Suche Pfad ändern).</span><span class="sxs-lookup"><span data-stu-id="21112-618">The expression will be re-evaluated whenever the resource dictionary indicates a changed value through internal events, or whenever the current element is reparented (a parent change would change the dictionary lookup path).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkContentElement.FindResource(System.Object)" />
        <altmember cref="P:System.Windows.Application.Resources" />
        <altmember cref="P:System.Windows.FrameworkElement.Resources" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeResources">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.ShouldSerializeResources" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeResources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeResources();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21112-619">Gibt zurück, ob in Serialisierungsprozessen der Inhalt der <see cref="P:System.Windows.FrameworkContentElement.Resources" />-Eigenschaft für Instanzen dieser Klasse serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21112-619">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkContentElement.Resources" /> property on instances of this class.</span></span></summary>
        <returns>
          <span data-ttu-id="21112-620"><see langword="true" />, wenn der <see cref="P:System.Windows.FrameworkContentElement.Resources" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21112-620"><see langword="true" /> if the <see cref="P:System.Windows.FrameworkContentElement.Resources" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-621">Dieser Befehl zurück `true` solange es mindestens eine Ressource in der lokalen ist <xref:System.Windows.FrameworkContentElement.Resources%2A>.</span><span class="sxs-lookup"><span data-stu-id="21112-621">This will return `true` so long as there is at least one keyed resource in the local <xref:System.Windows.FrameworkContentElement.Resources%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeStyle">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.ShouldSerializeStyle" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeStyle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21112-622">Gibt zurück, ob in Serialisierungsprozessen der Inhalt der <see cref="P:System.Windows.FrameworkContentElement.Style" />-Eigenschaft für Instanzen dieser Klasse serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21112-622">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkContentElement.Style" /> property on instances of this class.</span></span></summary>
        <returns>
          <span data-ttu-id="21112-623"><see langword="true" />, wenn der <see cref="P:System.Windows.FrameworkContentElement.Style" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21112-623"><see langword="true" /> if the <see cref="P:System.Windows.FrameworkContentElement.Style" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-624">Dieser Befehl zurück `true` Wenn die <xref:System.Windows.Style> lokal festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="21112-624">This will return `true` if the <xref:System.Windows.Style> is locally set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; SourceUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; SourceUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.SourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SourceUpdated As EventHandler(Of DataTransferEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ SourceUpdated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-625">Tritt ein, wenn sich eine zugeordnete Datenquelle, die an einer Bindung dieses Elements teilnimmt, ändert.</span><span class="sxs-lookup"><span data-stu-id="21112-625">Occurs when any associated data source participating in a binding on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-626">Dieses Ereignis begleitet die <xref:System.Windows.Data.Binding.SourceUpdated> Ereignis, das ausgelöst wird, von einer <xref:System.Windows.Data.Binding> mit diesem Element verknüpft sind.</span><span class="sxs-lookup"><span data-stu-id="21112-626">This event surfaces the <xref:System.Windows.Data.Binding.SourceUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element.</span></span>  
  
<a name="xamlAttributeUsage_SourceUpdated"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="21112-627">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="21112-627">XAML Attribute Usage</span></span>  
  
```  
<object SourceUpdated="EventHandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Style Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ Style { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-628">Ruft den Stil ab, der von diesem Element verwendet werden soll, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="21112-628">Gets or sets the style to be used by this element.</span></span></summary>
        <value><span data-ttu-id="21112-629">Der übernommene und nicht dem Standardstil entsprechende Stil für das Element, wenn ein Stil vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="21112-629">The applied, nondefault style for the element, if present.</span></span> <span data-ttu-id="21112-630">Andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21112-630">Otherwise, <see langword="null" />.</span></span> <span data-ttu-id="21112-631">Der Standardwert für ein mit den Standardwerten konstruiertes <see cref="T:System.Windows.FrameworkContentElement" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21112-631">The default for a default-constructed <see cref="T:System.Windows.FrameworkContentElement" /> is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-632">Das aktuelle Format wird häufig von einem Standardformat aus Designumgebung oder Formatvorlagen, die in der Regel auf Objekte dieses Typs angewendet, indem Ressourcen auf Seiten- oder Anwendungsebene (ein impliziter Stil) bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="21112-632">The current style is often provided by a default style from theming, or from styles generally applied to objects of that type by resources at page or application level (an implicit style).</span></span> <span data-ttu-id="21112-633">Diese Eigenschaft ist nicht festgelegt oder return-Standard (Designformatvorlagen), aber es gibt zurück, die implizite oder explizite Stil.</span><span class="sxs-lookup"><span data-stu-id="21112-633">This property does not set or return default (theme) styles, but it does return the implicit style or an explicit style.</span></span> <span data-ttu-id="21112-634">Bei impliziten oder expliziten Stilen spielt es keine, ob das Format als Ressource zugegriffen oder lokal definiert ist.</span><span class="sxs-lookup"><span data-stu-id="21112-634">In the case of implicit or explicit styles, it does not matter whether the style is accessed as a resource or defined locally.</span></span>  
  
 <span data-ttu-id="21112-635">Das Festlegen von den Formaten bestehen einige Einschränkungen.</span><span class="sxs-lookup"><span data-stu-id="21112-635">Setting the styles has some restrictions.</span></span> <span data-ttu-id="21112-636">Sie können die gesamte zurücksetzen <xref:System.Windows.FrameworkContentElement.Style%2A> Eigenschaft, um ein neues <xref:System.Windows.Style> erzwingt die zu irgendeinem Zeitpunkt ein Layout zurücksetzen.</span><span class="sxs-lookup"><span data-stu-id="21112-636">You can reset the entire <xref:System.Windows.FrameworkContentElement.Style%2A> property to a new <xref:System.Windows.Style> at any time, which will force a layout recomposition.</span></span> <span data-ttu-id="21112-637">Jedoch so bald wie diesem Format verwendet von einem geladenen Element platziert wird die <xref:System.Windows.Style> angesehen wird, versiegelt.</span><span class="sxs-lookup"><span data-stu-id="21112-637">However, as soon as that style is placed in use by a loaded element, the <xref:System.Windows.Style> should be considered sealed.</span></span> <span data-ttu-id="21112-638">Bei dem Versuch, eine einzelne Eigenschaft eines Stils in Gebrauch ändern (z. B. alle Elemente in der Auflistung der <xref:System.Windows.Style.Setters%2A>) bewirkt, dass eine Ausnahme ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="21112-638">Attempting to make a change to any individual property of an in-use style (such as anything within the collection of <xref:System.Windows.Style.Setters%2A>) causes an exception to be thrown.</span></span> <span data-ttu-id="21112-639">Ein Format, das im Markup definierte gilt verwendet werden, sobald dies aus einem Ressourcenwörterbuch (für Ressourcen erfolgt) oder die Seite enthalten ist (für Inlineformatvorlagen) geladen ist.</span><span class="sxs-lookup"><span data-stu-id="21112-639">A style that is defined in markup is considered to be in use as soon as it is loaded from a resource dictionary (for resources), or the page it is contained within is loaded (for inline styles).</span></span>  
  
 <span data-ttu-id="21112-640"><xref:System.Windows.FrameworkContentElement.Style%2A> ist eine Abhängigkeitseigenschaft mit besonderer Rangfolge.</span><span class="sxs-lookup"><span data-stu-id="21112-640"><xref:System.Windows.FrameworkContentElement.Style%2A> is a dependency property with special precedence.</span></span> <span data-ttu-id="21112-641">Der lokal festgelegten Stil mit der höchsten Priorität in der Regel im Eigenschaftensystem arbeitet.</span><span class="sxs-lookup"><span data-stu-id="21112-641">The locally set style generally operates at the highest precedence in the property system.</span></span> <span data-ttu-id="21112-642">Wenn die <xref:System.Windows.FrameworkContentElement.Style%2A> null festgelegt ist, wird beim Laden der Eigenschaft wird überprüft, ob impliziten Stilen als definierten Ressourcen, die diesen Typ angeben.</span><span class="sxs-lookup"><span data-stu-id="21112-642">If the <xref:System.Windows.FrameworkContentElement.Style%2A> is null at this point, during loading the property system checks for implicit styles as defined resources that specify that type.</span></span> <span data-ttu-id="21112-643">Wenn das Format immer noch null nach diesem Schritt ist wird der Stil ergibt sich aus den Standardstil (Design), jedoch das Standardformat nicht, in zurückgegeben wird der <xref:System.Windows.FrameworkContentElement.Style%2A> Eigenschaftswert.</span><span class="sxs-lookup"><span data-stu-id="21112-643">If the style is still null after this step, then the style comes from the default (theme) style, but the default style is not returned in the <xref:System.Windows.FrameworkContentElement.Style%2A> property value.</span></span> <span data-ttu-id="21112-644">Finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="21112-644">See [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
<a name="xamlAttributeUsage_Style"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="21112-645">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="21112-645">XAML Attribute Usage</span></span>  
  
```  
<object Style="{resourceExtension StyleResourceKey}"/>  
```  
  
<a name="xamlValues_Style"></a>   
## <a name="xaml-values"></a><span data-ttu-id="21112-646">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="21112-646">XAML Values</span></span>  
 <span data-ttu-id="21112-647">*resourceExtension*</span><span class="sxs-lookup"><span data-stu-id="21112-647">*resourceExtension*</span></span>  
 <span data-ttu-id="21112-648">Eines der folgenden:, oder.</span><span class="sxs-lookup"><span data-stu-id="21112-648">One of the following: , or .</span></span> <span data-ttu-id="21112-649">Finden Sie unter [XAML-Ressourcen](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="21112-649">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="21112-650">*styleResourceKey*</span><span class="sxs-lookup"><span data-stu-id="21112-650">*styleResourceKey*</span></span>  
 <span data-ttu-id="21112-651">Der Schlüssel, der den angeforderten Stil identifiziert.</span><span class="sxs-lookup"><span data-stu-id="21112-651">The key that identifies the style being requested.</span></span> <span data-ttu-id="21112-652">Der Schlüssel verweist auf eine vorhandene Ressource in einem <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="21112-652">The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21112-653">Eigenschaftenelementsyntax ist technisch zwar möglich, aber nicht empfehlenswert.</span><span class="sxs-lookup"><span data-stu-id="21112-653">Property element syntax is technically possible, but not recommended.</span></span> <span data-ttu-id="21112-654">Finden Sie unter [Inlinestile und Vorlagen](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="21112-654">See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span></span>  <span data-ttu-id="21112-655">Eine Bindung verwendet oder <xref:System.Windows.Data.Binding> ist auch möglich, aber ungewöhnlich.</span><span class="sxs-lookup"><span data-stu-id="21112-655">A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon.</span></span>  
  
<a name="dependencyPropertyInfo_Style"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="21112-656">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="21112-656">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-657">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-657">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.StyleProperty>|  
|<span data-ttu-id="21112-658">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="21112-658">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="21112-659">Das folgende Beispiel erstellt eine <xref:System.Windows.FrameworkContentElement.Resources%2A> Auflistung auf eine <xref:System.Windows.Documents.FlowDocument> "Root"-Element und anschließend darauf verweist, als Ressource für ein bestimmtes Format für einen <xref:System.Windows.Documents.Paragraph>.</span><span class="sxs-lookup"><span data-stu-id="21112-659">The following example establishes a <xref:System.Windows.FrameworkContentElement.Resources%2A> collection on a <xref:System.Windows.Documents.FlowDocument> root element and then references it as a resource as a specific style for a <xref:System.Windows.Documents.Paragraph>.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#FCEResources](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page2.xaml#fceresources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.StyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StyleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-660">Bezeichnet die <see cref="P:System.Windows.FrameworkContentElement.Style" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-660">Identifies the <see cref="P:System.Windows.FrameworkContentElement.Style" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsAmbientPropertyAvailable (propertyName As String) As Boolean Implements IQueryAmbient.IsAmbientPropertyAvailable" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System::String ^ propertyName) = System::Windows::Markup::IQueryAmbient::IsAmbientPropertyAvailable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="21112-661">Der Name der angeforderten Ambient-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-661">The name of the requested ambient property.</span></span></param>
        <summary><span data-ttu-id="21112-662">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="21112-662">For a description of this member, see the <see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="21112-663"><see langword="true" />, wenn <paramref name="propertyName" /> verfügbar ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21112-663"><see langword="true" /> if <paramref name="propertyName" /> is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-664">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="21112-664">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="21112-665">Er kann nur verwendet werden, wenn die <xref:System.Windows.FrameworkContentElement>-Instanz in eine <xref:System.Windows.Markup.IQueryAmbient>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="21112-665">It can be used only when the <xref:System.Windows.FrameworkContentElement> instance is cast to an <xref:System.Windows.Markup.IQueryAmbient> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-666">Ruft einen beliebigen Objektwert ab, der zum Speichern von benutzerdefinierten Informationen zu diesem Element verwendet werden kann, bzw. legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="21112-666">Gets or sets an arbitrary object value that can be used to store custom information about this element.</span></span></summary>
        <value><span data-ttu-id="21112-667">Der vorgesehene Wert.</span><span class="sxs-lookup"><span data-stu-id="21112-667">The intended value.</span></span> <span data-ttu-id="21112-668">Diese Eigenschaft hat keinen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="21112-668">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-669">Diese Eigenschaft ist analog zu Eigenschaften von Tags in anderen Microsoft-Programmiermodelle, z. B. Visual Basic for Applications oder Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="21112-669">This property is analogous to Tag properties in other Microsoft programming models, such as Visual Basic for Applications or Windows Forms.</span></span> <span data-ttu-id="21112-670">Es soll einen bereits vorhandenen Ort zum Speichern von einige grundlegende benutzerdefinierte Informationen über jedes Element, ohne dass Anwendungsentwickler Unterklasse verfügbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="21112-670">It is intended to provide a pre-existing place to store some basic custom information about any element without forcing application developers to subclass.</span></span>  
  
<a name="xamlValues_Tag"></a>   
## <a name="xaml-values"></a><span data-ttu-id="21112-671">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="21112-671">XAML Values</span></span>  
 <span data-ttu-id="21112-672">Da diese Eigenschaft ein Objekt akzeptiert, müssen Sie die Verwendung des Elements verwenden, um festzulegen der <xref:System.Windows.FrameworkContentElement.Tag%2A> Eigenschaft in XAML zu etwas anderes als ein Objekt mit einem bekannten und integrierten Typkonverter, z. B. eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="21112-672">Because this property takes an object, you need to use the property element usage in order to set the <xref:System.Windows.FrameworkContentElement.Tag%2A> property in XAML to anything other than an object with a known and built-in type converter, such as a string.</span></span> <span data-ttu-id="21112-673">Objekte, die auf diese Weise verwendet sind nicht in der Regel innerhalb der standard-WPF-Namespaces und erfordern daher möglicherweise Namespacezuordnung für den externen Namespace um als XAML-Elementen eingeführt werden.</span><span class="sxs-lookup"><span data-stu-id="21112-673">Objects used in this way are typically not within the standard WPF namespaces and therefore may require namespace mapping to the external namespace in order to be introduced as XAML elements.</span></span>  
  
<a name="dependencyPropertyInfo_Tag"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="21112-674">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="21112-674">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-675">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-675">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.TagProperty>|  
|<span data-ttu-id="21112-676">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="21112-676">Metadata properties set to `true`</span></span>|<span data-ttu-id="21112-677">Keiner</span><span class="sxs-lookup"><span data-stu-id="21112-677">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkContentElement.Name" />
      </Docs>
    </Member>
    <Member MemberName="TagProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TagProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TagProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.TagProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TagProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TagProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-678">Bezeichnet die <see cref="P:System.Windows.FrameworkContentElement.Tag" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-678">Identifies the <see cref="P:System.Windows.FrameworkContentElement.Tag" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; TargetUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; TargetUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.TargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TargetUpdated As EventHandler(Of DataTransferEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ TargetUpdated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-679">Tritt auf, wenn eine zugeordnete Zieleigenschaft, die Teil einer Bindung dieses Elements ist, geändert wird.</span><span class="sxs-lookup"><span data-stu-id="21112-679">Occurs when any associated target property participating in a binding on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-680">Dieses Ereignis begleitet die <xref:System.Windows.Data.Binding.TargetUpdated> Ereignis, das ausgelöst wird, von einer <xref:System.Windows.Data.Binding> mit diesem Element verknüpft sind.</span><span class="sxs-lookup"><span data-stu-id="21112-680">This event surfaces the <xref:System.Windows.Data.Binding.TargetUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element.</span></span> <span data-ttu-id="21112-681">Dies bedeutet normalerweise, dass die betreffende Bindung eine bidirektionale Bindung ist und dass die gebundene Abhängigkeitseigenschaft bestätigt eine Ungültigkeit des Werts der vorherigen pro eine Überprüfung oder dem Schema, das die Eigenschaft unterstützt.</span><span class="sxs-lookup"><span data-stu-id="21112-681">This usually means that the binding in question is a two-way binding, and that the bound  dependency property affirms an invalidation of the previous property value per any validation or caching scheme that the property supports.</span></span>  
  
 <span data-ttu-id="21112-682">Die Ereignisargumente dieses Ereignisses informiert, dass Sie die gebundene Eigenschaft geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="21112-682">The event arguments of this event will inform you which bound property was changed.</span></span>  
  
<a name="xamlAttributeUsage_TargetUpdated"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="21112-683">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="21112-683">XAML Attribute Usage</span></span>  
  
```  
<object TargetUpdated="EventHandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatedParent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject TemplatedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject TemplatedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.TemplatedParent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatedParent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ TemplatedParent { System::Windows::DependencyObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-684">Ruft einen Verweis auf die übergeordnete Vorlage dieses Elements ab.</span><span class="sxs-lookup"><span data-stu-id="21112-684">Gets a reference to the template parent of this element.</span></span> <span data-ttu-id="21112-685">Diese Eigenschaft ist nicht relevant, wenn das Element nicht durch eine Vorlage erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="21112-685">This property is not relevant if the element was not created through a template.</span></span></summary>
        <value><span data-ttu-id="21112-686">Das Element, dessen <see cref="T:System.Windows.FrameworkTemplate" /> <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> verursacht dieses Element erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="21112-686">The element whose <see cref="T:System.Windows.FrameworkTemplate" /><see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> caused this element to be created.</span></span> <span data-ttu-id="21112-687">Dieser Wert ist häufig <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21112-687">This value is frequently <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-688">Vorlagen sind eigentlich freigegebene Objekte, in dem der Inhalt der Vorlage nur einmal erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="21112-688">Templates are actually shared objects, where the contents of the template are created only once.</span></span> <span data-ttu-id="21112-689">Aus diesem Grund, wenn Sie einen Objektverweis auf ein Element, die aus einer Vorlage abrufen, können Sie feststellen, dass die offensichtliche logische Struktur nicht in das Stammverzeichnis Seite erreicht.</span><span class="sxs-lookup"><span data-stu-id="21112-689">Therefore, if you obtain an object reference to an element that came from a template, you may find that the apparent logical tree does not reach to the page root.</span></span> <span data-ttu-id="21112-690">Um einen solchen Vorlage Verweis auf die Seite logische Struktur eine Verbindung herzustellen, erhalten Sie die <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> -Wert und den Vorgang fortzusetzen, um die Navigation durch die Elementstruktur nach Bedarf.</span><span class="sxs-lookup"><span data-stu-id="21112-690">In order to connect such a template reference to the page's logical tree, you should get the <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> value and continue to navigate that element tree as desired.</span></span>  
  
 <span data-ttu-id="21112-691"><xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> Häufig werden `null` für gemeinsame Objekte, da Sie einen Objektverweis aus einer Seite in der Anwendung erhalten haben, dieses Element möglicherweise nicht aus einer Vorlage erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="21112-691"><xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> will frequently be `null` for common objects, because if you have obtained an object reference from out of a page in your application through typical means, that element probably was not created from a template.</span></span> <span data-ttu-id="21112-692">Fälle, in denen <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> möglicherweise nicht `null` zählen Vorgänge wie das Ereignis Treffertests, für bestimmte Eingabeereignisse Behandlung von oder Arbeiten mit Enumeratoren, die möglicherweise von Vorlagen stammt Elemente zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="21112-692">Cases where <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> might not be `null` would include operations such as hit-testing, event handling for certain low-level input events, or working with enumerators, which may have returned elements that came from templates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public object ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkContentElement.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ToolTip { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-693">Ruft das QuickInfo-Objekt ab, das für dieses Element in der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] angezeigt wird, oder legt dieses Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="21112-693">Gets or sets the tool-tip object that is displayed for this element in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span></summary>
        <value><span data-ttu-id="21112-694">Das QuickInfo-Objekt.</span><span class="sxs-lookup"><span data-stu-id="21112-694">The tooltip object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-695">Wenn der Wert dieser Eigenschaft vom Typ <xref:System.Windows.Controls.ToolTip>, klicken Sie dann die QuickInfo, die in verwendet werden, also die [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="21112-695">If the value of this property is of type <xref:System.Windows.Controls.ToolTip>, then that is the tool-tip that will be used in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  <span data-ttu-id="21112-696">Wenn der Wert eines anderen Typs ist, wird dieser Wert verwendet werden die *Inhalt* für eine <xref:System.Windows.Controls.ToolTip> bereitgestellt (erstellt), vom System.</span><span class="sxs-lookup"><span data-stu-id="21112-696">If the value is of any other type, then that value will be used as the *content* for a <xref:System.Windows.Controls.ToolTip> provided (constructed) by the system.</span></span> <span data-ttu-id="21112-697">Weitere Informationen finden Sie unter <xref:System.Windows.Controls.ToolTipService>.</span><span class="sxs-lookup"><span data-stu-id="21112-697">For more information see <xref:System.Windows.Controls.ToolTipService>.</span></span> <span data-ttu-id="21112-698">Die Dienstklasse enthält angefügte Eigenschaften, die verwendet werden können, um eine QuickInfo weiter anpassen.</span><span class="sxs-lookup"><span data-stu-id="21112-698">The service class provides attached properties that can be used to further customize a tool-tip.</span></span>  
  
<a name="xamlAttributeUsage_ToolTip"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="21112-699">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="21112-699">XAML Attribute Usage</span></span>  
  
```  
<object ToolTip="toolTipContent"/>  
```  
  
<a name="xamlPropertyElementUsage_ToolTip"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="21112-700">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="21112-700">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.ToolTip>  
    <ToolTip .../>  
  </object.ToolTip>  
</object>  
- or -  
<object>  
  <object.ToolTip>  
    toolTipObjectContent  
  </object.ToolTip>  
</object>  
```  
  
<a name="xamlValues_ToolTip"></a>   
## <a name="xaml-values"></a><span data-ttu-id="21112-701">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="21112-701">XAML Values</span></span>  
 <span data-ttu-id="21112-702">*toolTipContent*</span><span class="sxs-lookup"><span data-stu-id="21112-702">*toolTipContent*</span></span>  
 <span data-ttu-id="21112-703">Eine Zeichenfolge, die den Anzeigetext für wird die <xref:System.Windows.FrameworkContentElement.ToolTip%2A>.</span><span class="sxs-lookup"><span data-stu-id="21112-703">A string that becomes the display text for the <xref:System.Windows.FrameworkContentElement.ToolTip%2A>.</span></span>  
  
 <span data-ttu-id="21112-704">*toolTipObjectContent*</span><span class="sxs-lookup"><span data-stu-id="21112-704">*toolTipObjectContent*</span></span>  
 <span data-ttu-id="21112-705">Ein Objekt, das in Objektelementform, das als Inhalt für die zu verwendende bereitgestellten der <xref:System.Windows.FrameworkContentElement> .</span><span class="sxs-lookup"><span data-stu-id="21112-705">Some object, provided in object element form, that should be used as the content for the <xref:System.Windows.FrameworkContentElement> .</span></span> <span data-ttu-id="21112-706">In der Regel wäre dies eine <xref:System.Windows.FrameworkElement> oder ein anderes Element, das Layout für die Zusammensetzung der <xref:System.Windows.FrameworkContentElement.ToolTip%2A>, letztendlich mit Textinhalt in der Zusammensetzung.</span><span class="sxs-lookup"><span data-stu-id="21112-706">Typically this would be a <xref:System.Windows.FrameworkElement> or some other element that creates layout compositing for the <xref:System.Windows.FrameworkContentElement.ToolTip%2A>, eventually containing text content within the compositing.</span></span> <span data-ttu-id="21112-707">Bei dieser Verwendung der <xref:System.Windows.Controls.ToolTip> Element erstellt implizit aus dem analysierten [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], und die *ToolTipObjectContent* Inhalt festgelegt ist, als die <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-707">In this usage, the <xref:System.Windows.Controls.ToolTip> element is created implicitly from the parsed [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], and the *toolTipObjectContent* content is set as its <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="21112-708"><`ToolTip` … / ></span><span class="sxs-lookup"><span data-stu-id="21112-708"><`ToolTip` .../></span></span>  
 <span data-ttu-id="21112-709">Siehe <xref:System.Windows.Controls.ToolTip>.</span><span class="sxs-lookup"><span data-stu-id="21112-709">See <xref:System.Windows.Controls.ToolTip>.</span></span>  
  
<a name="dependencyPropertyInfo_ToolTip"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="21112-710">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="21112-710">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-711">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-711">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.ToolTipProperty>|  
|<span data-ttu-id="21112-712">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="21112-712">Metadata properties set to `true`</span></span>|<span data-ttu-id="21112-713">Keiner</span><span class="sxs-lookup"><span data-stu-id="21112-713">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="21112-714">Im folgenden Beispiel wird den Wert, der die <xref:System.Windows.FrameworkElement.ToolTip%2A> Eigenschaft direkt in eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="21112-714">The following example sets the value of the <xref:System.Windows.FrameworkElement.ToolTip%2A> property directly to a string.</span></span>  
  
 [!code-csharp[TableSnippets2#_Table_RowGroups_ManipRows](~/samples/snippets/csharp/VS_Snippets_Wpf/TableSnippets2/CSharp/Window1.xaml.cs#_table_rowgroups_maniprows)]
 [!code-vb[TableSnippets2#_Table_RowGroups_ManipRows](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TableSnippets2/visualbasic/window1.xaml.vb#_table_rowgroups_maniprows)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipClosing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ToolTipEventHandler ToolTipClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ToolTipEventHandler ToolTipClosing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.ToolTipClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ToolTipClosing As ToolTipEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ToolTipEventHandler ^ ToolTipClosing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ToolTipEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-715">Tritt unmittelbar vor dem Schließen einer QuickInfo über dem Element ein.</span><span class="sxs-lookup"><span data-stu-id="21112-715">Occurs just before any tooltip on the element is closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-716">Zum Schließen der QuickInfo zu unterdrücken, sollte der Handler des Ereignisses es als behandelt markiert.</span><span class="sxs-lookup"><span data-stu-id="21112-716">To suppress closing the tooltip, handlers of the event should mark it as handled.</span></span>  
  
 <span data-ttu-id="21112-717">Dieses Ereignis nicht mit einem <xref:System.Windows.EventTrigger> in einem Format.</span><span class="sxs-lookup"><span data-stu-id="21112-717">This event cannot be an <xref:System.Windows.EventTrigger> in a style.</span></span> <span data-ttu-id="21112-718">Dies ist, da die Bezeichnerfeld dieses Ereignisses eine Implementierung von einem Dienst erneut verwendet, die keine hinzufügen/entfernen-Methoden für das Ereignis verfügbar macht.</span><span class="sxs-lookup"><span data-stu-id="21112-718">This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove methods on the event.</span></span>  
  
<a name="routedEventInfo_ToolTipClosing"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="21112-719">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="21112-719">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-720">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-720">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.ToolTipClosingEvent>|  
|<span data-ttu-id="21112-721">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="21112-721">Routing strategy</span></span>|<span data-ttu-id="21112-722">Direkt</span><span class="sxs-lookup"><span data-stu-id="21112-722">Direct</span></span>|  
|<span data-ttu-id="21112-723">delegate</span><span class="sxs-lookup"><span data-stu-id="21112-723">Delegate</span></span>|<xref:System.Windows.Controls.ToolTipEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipClosingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ToolTipClosingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ToolTipClosingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.ToolTipClosingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipClosingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ToolTipClosingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-724">Bezeichnet die <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="21112-724">Identifies the <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-725">Ereignis-ID-Objekte werden erstellt, wenn Routingereignisse registriert werden (finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) und kann dann verwendet werden, um Klassenhandler hinzuzufügen (finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span><span class="sxs-lookup"><span data-stu-id="21112-725">Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span></span> <span data-ttu-id="21112-726">Bezeichnerobjekte enthalten einen kennzeichnenden Namen, Besitzertyp, Handlertyp, Routingstrategie und eine Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-726">Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipOpening">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ToolTipEventHandler ToolTipOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ToolTipEventHandler ToolTipOpening" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.ToolTipOpening" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ToolTipOpening As ToolTipEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ToolTipEventHandler ^ ToolTipOpening;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ToolTipEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-727">Tritt beim Öffnen einer QuickInfo im Element auf.</span><span class="sxs-lookup"><span data-stu-id="21112-727">Occurs when any tooltip on the element is opened.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-728">Zum manuellen Öffnen des QuickInfos kennzeichnen Handler für die Ereignisse das betreffende Ereignis als behandelt.</span><span class="sxs-lookup"><span data-stu-id="21112-728">To manually open tooltips, handlers of the events should mark the relevant event as handled.</span></span> <span data-ttu-id="21112-729">Andernfalls den Wert der <xref:System.Windows.FrameworkContentElement.ToolTip%2A> Eigenschaft wird verwendet, um automatisch ein Kontextmenü geöffnet.</span><span class="sxs-lookup"><span data-stu-id="21112-729">Otherwise, the value of the <xref:System.Windows.FrameworkContentElement.ToolTip%2A> property will be used to automatically open a context menu.</span></span> <span data-ttu-id="21112-730">Das Ereignis als behandelt markiert wird die Standardaktion tatsächlich abgebrochen, und möglicherweise Gelegenheit, den Wert zurückgesetzt, die <xref:System.Windows.FrameworkContentElement.ToolTip%2A> Eigenschaft, und öffnen Sie die neue <xref:System.Windows.Controls.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="21112-730">Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <xref:System.Windows.FrameworkContentElement.ToolTip%2A> property and then open the new <xref:System.Windows.Controls.ContextMenu>.</span></span> <span data-ttu-id="21112-731">Beachten Sie, dass dieses Ereignis nicht ausgelöst, wird Wenn <xref:System.Windows.FrameworkContentElement.ToolTip%2A> ist ein null-Verweis oder auf andere Weise nicht festgelegt.</span><span class="sxs-lookup"><span data-stu-id="21112-731">Note that this event will not be raised if <xref:System.Windows.FrameworkContentElement.ToolTip%2A> is a null reference or otherwise unset.</span></span>  
  
 <span data-ttu-id="21112-732">Dieses Ereignis nicht mit einem <xref:System.Windows.EventTrigger> in einem Format.</span><span class="sxs-lookup"><span data-stu-id="21112-732">This event cannot be an <xref:System.Windows.EventTrigger> in a style.</span></span> <span data-ttu-id="21112-733">Dies ist, da die Bezeichnerfeld dieses Ereignisses eine Implementierung von einem Dienst erneut verwendet, die keine hinzufügen/entfernen-Methoden für das Ereignis verfügbar macht.</span><span class="sxs-lookup"><span data-stu-id="21112-733">This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove methods on the event.</span></span>  
  
<a name="routedEventInfo_ToolTipOpening"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="21112-734">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="21112-734">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-735">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-735">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.ToolTipOpeningEvent>|  
|<span data-ttu-id="21112-736">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="21112-736">Routing strategy</span></span>|<span data-ttu-id="21112-737">Direkt</span><span class="sxs-lookup"><span data-stu-id="21112-737">Direct</span></span>|  
|<span data-ttu-id="21112-738">delegate</span><span class="sxs-lookup"><span data-stu-id="21112-738">Delegate</span></span>|<xref:System.Windows.Controls.ToolTipEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipOpeningEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ToolTipOpeningEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ToolTipOpeningEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.ToolTipOpeningEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipOpeningEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ToolTipOpeningEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-739">Bezeichnet die <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="21112-739">Identifies the <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-740">Ereignis-ID-Objekte werden erstellt, wenn Routingereignisse registriert werden (finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) und kann dann verwendet werden, um Klassenhandler hinzuzufügen (finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span><span class="sxs-lookup"><span data-stu-id="21112-740">Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span></span> <span data-ttu-id="21112-741">Bezeichnerobjekte enthalten einen kennzeichnenden Namen, Besitzertyp, Handlertyp, Routingstrategie und eine Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-741">Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ToolTipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ToolTipProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.ToolTipProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ToolTipProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-742">Bezeichnet die <see cref="P:System.Windows.FrameworkContentElement.ToolTip" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="21112-742">Identifies the <see cref="P:System.Windows.FrameworkContentElement.ToolTip" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFindResource">
      <MemberSignature Language="C#" Value="public object TryFindResource (object resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object TryFindResource(object resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.TryFindResource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFindResource (resourceKey As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ TryFindResource(System::Object ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="resourceKey"><span data-ttu-id="21112-743">Der Schlüsselbezeichner der zu findenden Ressource.</span><span class="sxs-lookup"><span data-stu-id="21112-743">Key identifier of the resource to be found.</span></span></param>
        <summary><span data-ttu-id="21112-744">Sucht nach einer Ressource mit dem angegebenen Schlüssel und gibt diese Ressource zurück, sofern sie gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="21112-744">Searches for a resource with the specified key, and returns that resource if found.</span></span></summary>
        <returns><span data-ttu-id="21112-745">Die gefundene Ressource.</span><span class="sxs-lookup"><span data-stu-id="21112-745">The found resource.</span></span> <span data-ttu-id="21112-746">Wenn keine Ressource gefunden wurde, wird <see langword="null" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="21112-746">If no resource was found, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-747">Wenn die Ressource für das aufrufende Element nicht gefunden wird, ist die übergeordnete Struktur die gleiche Weise, die die Struktur die logische Struktur durchsucht durchsucht, wenn der Schlüssel zur Laufzeit ein dynamischen Ressourcenverweis angefordert wurden.</span><span class="sxs-lookup"><span data-stu-id="21112-747">If the resource is not found on the calling element, the parent tree is searched using the logical tree, in the same way that the tree would be searched if a dynamic resource reference were requested by key at run-time.</span></span>  
  
 <span data-ttu-id="21112-748">In der Regel würden Sie sofort den Rückgabewert in den Typ der Eigenschaft umgewandelt, den Sie mit den zurückgegebenen Ressourcenwert festgelegt wurden.</span><span class="sxs-lookup"><span data-stu-id="21112-748">Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.</span></span>  
  
 <span data-ttu-id="21112-749">Die <xref:System.Windows.FrameworkContentElement.FindResource%2A> Methode verhält sich ähnlich, außer dass Sie zu einer Ausnahme im Fall von keine Ressource mit dem angegebenen Schlüssel gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="21112-749">The <xref:System.Windows.FrameworkContentElement.FindResource%2A> method has similar behavior, except that it will throw an exception in the case of not finding a resource with the provided key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21112-750">Das folgende Beispiel sucht nach einer Ressource, wie im Markup definierte und wendet sie auf eine bestimmte Eigenschaft eines Elements in Reaktion auf ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-750">The following example finds a resource as defined in markup and applies it to a certain property of an element in response to a routed event.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#TryFindResource](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#tryfindresource)]
 [!code-vb[ContentElementsSmorgasbord#TryFindResource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#tryfindresource)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkContentElement.FindResource(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Unloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Unloaded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkContentElement.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unloaded As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Unloaded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-751">Tritt ein, wenn das Element aus einer Elementstruktur geladener Elemente entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="21112-751">Occurs when the element is removed from an element tree of loaded elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-752">Direkte Routingereignisse führen Sie eine Route nicht ausgeführt, sie sind nur innerhalb des gleichen Elements in dem sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="21112-752">Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</span></span> <span data-ttu-id="21112-753">Direkte Routingereignisse unterstützen andere Verhalten Routingereignis: sie unterstützen eine Auflistung zugegriffen werden kann, Handler und dient als ein <xref:System.Windows.EventTrigger> in einem Format.</span><span class="sxs-lookup"><span data-stu-id="21112-753">Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.</span></span>  
  
<a name="routedEventInfo_Unloaded"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="21112-754">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="21112-754">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21112-755">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="21112-755">Identifier field</span></span>|<xref:System.Windows.FrameworkContentElement.UnloadedEvent>|  
|<span data-ttu-id="21112-756">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="21112-756">Routing strategy</span></span>|<span data-ttu-id="21112-757">Direkt</span><span class="sxs-lookup"><span data-stu-id="21112-757">Direct</span></span>|  
|<span data-ttu-id="21112-758">delegate</span><span class="sxs-lookup"><span data-stu-id="21112-758">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent UnloadedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent UnloadedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkContentElement.UnloadedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnloadedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ UnloadedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21112-759">Bezeichnet die <see cref="E:System.Windows.FrameworkContentElement.Unloaded" /> [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="21112-759">Identifies the <see cref="E:System.Windows.FrameworkContentElement.Unloaded" /> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-760">Ereignis-ID-Objekte werden erstellt, wenn Routingereignisse registriert werden (finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) und kann dann verwendet werden, um Klassenhandler hinzuzufügen (finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span><span class="sxs-lookup"><span data-stu-id="21112-760">Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>).</span></span> <span data-ttu-id="21112-761">Bezeichnerobjekte enthalten einen kennzeichnenden Namen, Besitzertyp, Handlertyp, Routingstrategie und eine Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="21112-761">Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="21112-762">Der Name des Name/Objekt-Paars, der aus dem aktuellen Bereich entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="21112-762">Name of the name-object pair to remove from the current scope.</span></span></param>
        <summary><span data-ttu-id="21112-763">Vereinfacht den Zugriff auf die <see cref="T:System.Windows.NameScope" />-Methode zum Aufheben der Registrierung.</span><span class="sxs-lookup"><span data-stu-id="21112-763">Simplifies access to the <see cref="T:System.Windows.NameScope" /> de-registration method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21112-764">Sie müssen nur zum Aufheben der Registrierung Namen, wenn Sie beabsichtigen, ein anderes Element mit demselben Namen erneut zu registrieren.</span><span class="sxs-lookup"><span data-stu-id="21112-764">You only need to un-register names if you intend to re-register another element with that same name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)" />
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
    <Member MemberName="UpdateDefaultStyle">
      <MemberSignature Language="C#" Value="public void UpdateDefaultStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateDefaultStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkContentElement.UpdateDefaultStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateDefaultStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateDefaultStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21112-765">Wendet erneut den Standardstil auf den aktuellen <see cref="T:System.Windows.FrameworkContentElement" /> an.</span><span class="sxs-lookup"><span data-stu-id="21112-765">Reapplies the default style to the current <see cref="T:System.Windows.FrameworkContentElement" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>