<Type Name="CoerceValueCallback" FullName="System.Windows.CoerceValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bc1a383fe21e6b9b549e0ccda7aa8c21c6f92d9f" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37493662" /></Metadata><TypeSignature Language="C#" Value="public delegate object CoerceValueCallback(DependencyObject d, object baseValue);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CoerceValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.CoerceValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function CoerceValueCallback(d As DependencyObject, baseValue As Object) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ CoerceValueCallback(DependencyObject ^ d, System::Object ^ baseValue);" />
  <TypeSignature Language="F#" Value="type CoerceValueCallback = delegate of DependencyObject * obj -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="d" Type="System.Windows.DependencyObject" />
    <Parameter Name="baseValue" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="d"><span data-ttu-id="ba086-101">Das Objekt, für das die Eigenschaft vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="ba086-101">The object that the property exists on.</span></span> <span data-ttu-id="ba086-102">Wenn der Rückruf aufgerufen wird, übergibt das Eigenschaftensystem diesen Wert.</span><span class="sxs-lookup"><span data-stu-id="ba086-102">When the callback is invoked, the property system will pass this value.</span></span></param>
    <param name="baseValue"><span data-ttu-id="ba086-103">Der neue Wert der Eigenschaft vor einem Umwandlungsversuch.</span><span class="sxs-lookup"><span data-stu-id="ba086-103">The new value of the property, prior to any coercion attempt.</span></span></param>
    <summary><span data-ttu-id="ba086-104">Stellt eine Vorlage für eine Methode bereit, die aufgerufen wird, wenn der Wert einer Abhängigkeitseigenschaft erneut ausgewertet wird oder wenn ausdrücklich eine Umwandlung angefordert wird.</span><span class="sxs-lookup"><span data-stu-id="ba086-104">Provides a template for a method that is called whenever a dependency property value is being re-evaluated, or coercion is specifically requested.</span></span></summary>
    <returns><span data-ttu-id="ba086-105">Der umgewandelte Wert (mit dem entsprechenden Typ).</span><span class="sxs-lookup"><span data-stu-id="ba086-105">The coerced value (with appropriate type).</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba086-106">Rückrufe basierend auf <xref:System.Windows.CoerceValueCallback> kann auf eine Abhängigkeitseigenschaft über mehrere verschiedene Verfahren zugewiesen werden.</span><span class="sxs-lookup"><span data-stu-id="ba086-106">Callbacks based on <xref:System.Windows.CoerceValueCallback> can be assigned to a dependency property through several different techniques.</span></span> <span data-ttu-id="ba086-107">Jede dieser Techniken, müssen Sie zunächst ein neues Objekt für Eigenschaftenmetadaten erstellen (<xref:System.Windows.PropertyMetadata>, oder eine abgeleitete Klasse wie z. B. <xref:System.Windows.FrameworkPropertyMetadata>).</span><span class="sxs-lookup"><span data-stu-id="ba086-107">Each of these techniques requires that you first create a new property metadata object (<xref:System.Windows.PropertyMetadata>, or a derived class such as <xref:System.Windows.FrameworkPropertyMetadata>).</span></span> <span data-ttu-id="ba086-108">Erstellen Sie das Metadatenobjekt, das mit einem Konstruktorsignatur, akzeptiert die `coerceValueCallback` Parameter, und weisen Sie diesen Parameter an den Rückrufhandler.</span><span class="sxs-lookup"><span data-stu-id="ba086-108">Create the metadata object using a constructor signature that takes the `coerceValueCallback` parameter, and assign that parameter to your callback handler.</span></span> <span data-ttu-id="ba086-109">Oder erstellen Sie die Metadaten jeder Signatur sowie die Gruppe der <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> Eigenschaft vor dem Einfügen der Metadaten verwendet.</span><span class="sxs-lookup"><span data-stu-id="ba086-109">Or construct the metadata by any signature and set the <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> property prior to putting the metadata in use.</span></span>  
  
 <span data-ttu-id="ba086-110">Wenn Sie diese Metadaten haben, können Sie folgende Schritte ausführen:</span><span class="sxs-lookup"><span data-stu-id="ba086-110">When you have this metadata, you can:</span></span>  
  
-   <span data-ttu-id="ba086-111">Definieren Sie eine neue Abhängigkeitseigenschaft auf eine neue Klasse mit einer Signatur von <xref:System.Windows.DependencyProperty.Register%2A>, wobei die Metadaten als die `typeMetadata` Wert.</span><span class="sxs-lookup"><span data-stu-id="ba086-111">Define a new dependency property on a new class, using either signature of  <xref:System.Windows.DependencyProperty.Register%2A>, giving the metadata as the `typeMetadata` value.</span></span>  
  
-   <span data-ttu-id="ba086-112">Überschreiben Sie die Metadaten (Aufrufen <xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29>) für eine vorhandene Abhängigkeitseigenschaft, wenn Sie von der Klasse ableiten, die die Abhängigkeitseigenschaft besitzt.</span><span class="sxs-lookup"><span data-stu-id="ba086-112">Override the metadata (call <xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29>) for an existing dependency property, when you derive from the class that owns the dependency property.</span></span>  
  
-   <span data-ttu-id="ba086-113">Fügen Sie eine vorhandene Abhängigkeitseigenschaft auf einen neuen <xref:System.Windows.DependencyObject> -Klasse unter Verwendung der neuen Metadaten, durch den Aufruf <xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29>.</span><span class="sxs-lookup"><span data-stu-id="ba086-113">Add an existing dependency property to a new <xref:System.Windows.DependencyObject> class, using new metadata, by calling <xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29>.</span></span>  
  
 <span data-ttu-id="ba086-114">Implementierungen von diesem Rückruf überprüfen Sie den Wert `baseValue` und bestimmen Sie basierend auf den Wert oder der Typ, ob es sich um einen Wert handelt, die weitere umgewandelt werden muss.</span><span class="sxs-lookup"><span data-stu-id="ba086-114">Implementations of this callback should check the value in `baseValue` and determine based on either the value or the type whether this is a value that needs to be further coerced.</span></span>  
  
 <span data-ttu-id="ba086-115">Die <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> für eine Abhängigkeit Eigenschaft wird immer dann aufgerufen, die das Eigenschaftensystem oder ein anderer Aufrufer ruft <xref:System.Windows.DependencyObject.CoerceValue%2A> auf eine <xref:System.Windows.DependencyObject> Instanz, die den Bezeichner dieser Eigenschaft als angeben der `dp`.</span><span class="sxs-lookup"><span data-stu-id="ba086-115">The <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> for a dependency property is invoked any time that the property system or any other caller calls <xref:System.Windows.DependencyObject.CoerceValue%2A> on a <xref:System.Windows.DependencyObject> instance, specifying that property's identifier as the `dp`.</span></span>  
  
 <span data-ttu-id="ba086-116">Änderungen an den Wert der Eigenschaft können von jedem möglichen Teilnehmer im Eigenschaftensystem stammen.</span><span class="sxs-lookup"><span data-stu-id="ba086-116">Changes to the property value may have come from any possible participant in the property system.</span></span> <span data-ttu-id="ba086-117">Dies schließt die Stile, generische invalidierung, Trigger, die Vererbung von Eigenschaftswerten und lokalen Wert festlegen.</span><span class="sxs-lookup"><span data-stu-id="ba086-117">This includes styles, generic invalidation, triggers, property value inheritance, and local value setting.</span></span>  
  
 <span data-ttu-id="ba086-118">Im Allgemeinen sollten Sie mehrere angegeben <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> für einen angegebenen Abhängigkeitseigenschaft (überschreiben oder neue Metadaten für eine Abhängigkeitseigenschaft, die bereits Hinzufügen einer <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>).</span><span class="sxs-lookup"><span data-stu-id="ba086-118">Generally you should avoid specifying more than one <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> for any given dependency property (overriding or adding with new metadata for a dependency property that already had a <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>).</span></span> <span data-ttu-id="ba086-119">Nur eine der Rückrufe werden bearbeiten können. Rückruf verkürzt werden kann, die auf die am stärksten abgeleitete Klasse in der Vererbung im Vergleich zu angewendet wurde die <xref:System.Windows.DependencyObject> Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="ba086-119">Only one of the callbacks will be able to act. The acting callback will be the one that was applied to the most derived class in the inheritance as compared to the <xref:System.Windows.DependencyObject> caller.</span></span> <span data-ttu-id="ba086-120">Anderen Rückrufe, die Metadaten für die Abhängigkeitseigenschaft zugewiesen werden soll, wie sie höher vorhanden, in der Besitzerhierarchie Waren werden ersetzt, wenn die Metadaten überschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ba086-120">Other callbacks as assigned to metadata for the dependency property as it existed higher in the owner hierarchy are replaced when the metadata is overridden.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba086-121">Das folgende Beispiel schließt eine Implementierung dieses Rückrufs aus, um den gespeicherten Wert einer Abhängigkeitseigenschaft, die basierend auf anderen Eingaben, z. B. eine andere Eigenschaft-Wert umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="ba086-121">The following example includes an implementation of this callback to coerce the stored value of a dependency property based on other inputs, such as another property's value.</span></span> <span data-ttu-id="ba086-122">In diesem Fall überprüft der Rückruf finden Sie unter, ob die `ShirtType` Eigenschaft, die für einen Typ von "Shirt", die Schaltflächen entspricht; Wenn dies der Fall wird eine ab Standardfarbe für die `ButtonColor`, weist der Typ "Shirt" keine Schaltflächen, wandelt die `ButtonColor` Wert an einen Startwert, der bewirkt, dass die [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] (nicht abgebildet) dieser Dropdownliste aus den Optionen wirksamen zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="ba086-122">In this case, the callback checks to see whether the `ShirtType` property corresponds to a type of shirt that has buttons; if so it establishes a starting default color for the `ButtonColor`, if the shirt type has no buttons, it coerces the `ButtonColor` value back to a starting value, which causes the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] (not shown) to remove that dropdown from the effective choices.</span></span>  
  
 [!code-csharp[DPCustom#CoerceValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#coercevaluecallback)]
 [!code-vb[DPCustom#CoerceValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#coercevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>