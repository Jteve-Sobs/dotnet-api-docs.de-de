<Type Name="CoerceValueCallback" FullName="System.Windows.CoerceValueCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc1a383fe21e6b9b549e0ccda7aa8c21c6f92d9f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37493662" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate object CoerceValueCallback(DependencyObject d, object baseValue);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CoerceValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.CoerceValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function CoerceValueCallback(d As DependencyObject, baseValue As Object) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ CoerceValueCallback(DependencyObject ^ d, System::Object ^ baseValue);" />
  <TypeSignature Language="F#" Value="type CoerceValueCallback = delegate of DependencyObject * obj -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="d" Type="System.Windows.DependencyObject" />
    <Parameter Name="baseValue" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="d">Das Objekt, für das die Eigenschaft vorhanden ist. Wenn der Rückruf aufgerufen wird, übergibt das Eigenschaftensystem diesen Wert.</param>
    <param name="baseValue">Der neue Wert der Eigenschaft vor einem Umwandlungsversuch.</param>
    <summary>Stellt eine Vorlage für eine Methode bereit, die aufgerufen wird, wenn der Wert einer Abhängigkeitseigenschaft erneut ausgewertet wird oder wenn ausdrücklich eine Umwandlung angefordert wird.</summary>
    <returns>Der umgewandelte Wert (mit dem entsprechenden Typ).</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rückrufe basierend auf <xref:System.Windows.CoerceValueCallback> kann auf eine Abhängigkeitseigenschaft über mehrere verschiedene Verfahren zugewiesen werden. Jede dieser Techniken, müssen Sie zunächst ein neues Objekt für Eigenschaftenmetadaten erstellen (<xref:System.Windows.PropertyMetadata>, oder eine abgeleitete Klasse wie z. B. <xref:System.Windows.FrameworkPropertyMetadata>). Erstellen Sie das Metadatenobjekt, das mit einem Konstruktorsignatur, akzeptiert die `coerceValueCallback` Parameter, und weisen Sie diesen Parameter an den Rückrufhandler. Oder erstellen Sie die Metadaten jeder Signatur sowie die Gruppe der <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> Eigenschaft vor dem Einfügen der Metadaten verwendet.  
  
 Wenn Sie diese Metadaten haben, können Sie folgende Schritte ausführen:  
  
-   Definieren Sie eine neue Abhängigkeitseigenschaft auf eine neue Klasse mit einer Signatur von <xref:System.Windows.DependencyProperty.Register%2A>, wobei die Metadaten als die `typeMetadata` Wert.  
  
-   Überschreiben Sie die Metadaten (Aufrufen <xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29>) für eine vorhandene Abhängigkeitseigenschaft, wenn Sie von der Klasse ableiten, die die Abhängigkeitseigenschaft besitzt.  
  
-   Fügen Sie eine vorhandene Abhängigkeitseigenschaft auf einen neuen <xref:System.Windows.DependencyObject> -Klasse unter Verwendung der neuen Metadaten, durch den Aufruf <xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29>.  
  
 Implementierungen von diesem Rückruf überprüfen Sie den Wert `baseValue` und bestimmen Sie basierend auf den Wert oder der Typ, ob es sich um einen Wert handelt, die weitere umgewandelt werden muss.  
  
 Die <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> für eine Abhängigkeit Eigenschaft wird immer dann aufgerufen, die das Eigenschaftensystem oder ein anderer Aufrufer ruft <xref:System.Windows.DependencyObject.CoerceValue%2A> auf eine <xref:System.Windows.DependencyObject> Instanz, die den Bezeichner dieser Eigenschaft als angeben der `dp`.  
  
 Änderungen an den Wert der Eigenschaft können von jedem möglichen Teilnehmer im Eigenschaftensystem stammen. Dies schließt die Stile, generische invalidierung, Trigger, die Vererbung von Eigenschaftswerten und lokalen Wert festlegen.  
  
 Im Allgemeinen sollten Sie mehrere angegeben <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> für einen angegebenen Abhängigkeitseigenschaft (überschreiben oder neue Metadaten für eine Abhängigkeitseigenschaft, die bereits Hinzufügen einer <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>). Nur eine der Rückrufe werden bearbeiten können. Rückruf verkürzt werden kann, die auf die am stärksten abgeleitete Klasse in der Vererbung im Vergleich zu angewendet wurde die <xref:System.Windows.DependencyObject> Aufrufer. Anderen Rückrufe, die Metadaten für die Abhängigkeitseigenschaft zugewiesen werden soll, wie sie höher vorhanden, in der Besitzerhierarchie Waren werden ersetzt, wenn die Metadaten überschrieben wird.  
  
   
  
## Examples  
 Das folgende Beispiel schließt eine Implementierung dieses Rückrufs aus, um den gespeicherten Wert einer Abhängigkeitseigenschaft, die basierend auf anderen Eingaben, z. B. eine andere Eigenschaft-Wert umgewandelt werden soll. In diesem Fall überprüft der Rückruf finden Sie unter, ob die `ShirtType` Eigenschaft, die für einen Typ von "Shirt", die Schaltflächen entspricht; Wenn dies der Fall wird eine ab Standardfarbe für die `ButtonColor`, weist der Typ "Shirt" keine Schaltflächen, wandelt die `ButtonColor` Wert an einen Startwert, der bewirkt, dass die [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] (nicht abgebildet) dieser Dropdownliste aus den Optionen wirksamen zu entfernen.  
  
 [!code-csharp[DPCustom#CoerceValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#coercevaluecallback)]
 [!code-vb[DPCustom#CoerceValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#coercevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>