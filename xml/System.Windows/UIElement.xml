<Type Name="UIElement" FullName="System.Windows.UIElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="20a11ab085e8a1ab24b95f6d88fdec53153a5358" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39778329" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UIElement : System.Windows.Media.Visual, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UIElement extends System.Windows.Media.Visual implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.UIElement" />
  <TypeSignature Language="VB.NET" Value="Public Class UIElement&#xA;Inherits Visual&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class UIElement : System::Windows::Media::Visual, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <TypeSignature Language="F#" Value="type UIElement = class&#xA;    inherit Visual&#xA;    interface IAnimatable&#xA;    interface IInputElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Visual</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.UidProperty("Uid")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a8f26-101">
        <see cref="T:System.Windows.UIElement" /> ist eine Basisklasse für Implementierungen auf WPF-Kernebene, die auf WPF-Elementen (Windows Presentation Foundation) und grundlegenden Darstellungsmerkmalen aufbauen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a8f26-101">
          <see cref="T:System.Windows.UIElement" /> is a base class for WPF core level implementations building on Windows Presentation Foundation (WPF) elements and basic presentation characteristics.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-102"><xref:System.Windows.UIElement> bietet einen Ausgangspunkt für die Layouteigenschaften und verfügbar macht, die virtuelle Methoden, die abgeleitete Klassen überschreiben können, die das Verhalten des Elements und seiner untergeordneten Elemente gerendert Layout beeinflussen können.</span><span class="sxs-lookup"><span data-stu-id="a8f26-102"><xref:System.Windows.UIElement> provides a starting point for element layout characteristics, and also exposes virtual methods that derived classes can override, which can influence the layout rendering behavior of the element and its child elements.</span></span>  
  
 <span data-ttu-id="a8f26-103">Ein Großteil der Eingabe- und Fokusverhaltens für Elemente in der Regel wird auch in definiert die <xref:System.Windows.UIElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-103">Much of the input and focusing behavior for elements in general is also defined in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="a8f26-104">Dies schließt die Ereignisse für die Tastatur, Maus und Stifteingabe und Eigenschaften der entsprechenden Status.</span><span class="sxs-lookup"><span data-stu-id="a8f26-104">This includes the events for keyboard, mouse and stylus input, and related status properties.</span></span> <span data-ttu-id="a8f26-105">Viele dieser Ereignisse sind Routingereignisse und viele der Eingabe-bezogene Ereignisse haben beide eine bubbling-routing-Version als auch eine Tunneling-Version des Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="a8f26-105">Many of these events are routed events, and many of the input-related events have both a bubbling routing version as well as a tunneling version of the event.</span></span> <span data-ttu-id="a8f26-106">Diese gepaarte Ereignisse können Sie in der Regel von größter für Autoren von Steuerelementen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-106">These paired events are typically the events of greatest interest to control authors.</span></span>  
  
 <span data-ttu-id="a8f26-107"><xref:System.Windows.UIElement> enthält auch [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] im Zusammenhang mit der [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Ereignismodell, einschließlich der Methoden, die ausgelöst werden können, die angegebenen Routingereignisse, die von einer Elementinstanz als Quelle haben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-107"><xref:System.Windows.UIElement> also includes [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that relate to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] event model, including methods that can raise specified routed events that are sourced from an element instance.</span></span>  
  
 <span data-ttu-id="a8f26-108">Im Hinblick auf die Architektur <xref:System.Windows.UIElement> kann weitgehend Fensterhandle betrachtet werden [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] Programmierung oder ein Element in [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] programmieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-108">In terms of architecture, <xref:System.Windows.UIElement> can be considered roughly equivalent to a window handle in [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] programming, or an Element in [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] programming.</span></span> <span data-ttu-id="a8f26-109"><xref:System.Windows.UIElement> ist ein Basis-Element auf der WPF-Kernebene.</span><span class="sxs-lookup"><span data-stu-id="a8f26-109"><xref:System.Windows.UIElement> is a base element at the WPF core level.</span></span>  
  
 <span data-ttu-id="a8f26-110">Ein <xref:System.Windows.UIElement> umfasst die folgenden Funktionen, die speziell von definiert sind die <xref:System.Windows.UIElement> Klasse:</span><span class="sxs-lookup"><span data-stu-id="a8f26-110">A <xref:System.Windows.UIElement> has the following capabilities that are specifically defined by the <xref:System.Windows.UIElement> class:</span></span>  
  
-   <span data-ttu-id="a8f26-111">Kann als untergeordnetes Element rendern (<xref:System.Windows.UIElement> leitet sich von <xref:System.Windows.Media.Visual>, einer high-Level-Grafik-Klasse)</span><span class="sxs-lookup"><span data-stu-id="a8f26-111">Can render as a child element (<xref:System.Windows.UIElement> derives from <xref:System.Windows.Media.Visual>, a high level graphics class)</span></span>  
  
-   <span data-ttu-id="a8f26-112">Enthält die Logik, mit der Größe und position von untergeordneten Elementen von, einem <xref:System.Windows.UIElement> (wenn von einem Layoutsystem interpretiert)</span><span class="sxs-lookup"><span data-stu-id="a8f26-112">Contains logic that is used to size and position possible child elements of a <xref:System.Windows.UIElement> (when interpreted by a layout system)</span></span>  
  
-   <span data-ttu-id="a8f26-113">Kann Antworten auf eine Benutzereingabe (einschließlich steuern, in denen Eingabe, durch Behandeln des Ereignisses routing oder routing von Befehlen, gesendet wird)</span><span class="sxs-lookup"><span data-stu-id="a8f26-113">Can respond to user input (including control of where input is getting sent to via their handling of event routing, or routing of commands)</span></span>  
  
-   <span data-ttu-id="a8f26-114">Routingereignisse, die eine Route mit der logischen Struktur zu durchlaufen, können ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-114">Can raise routed events that travel a route through the logical element tree</span></span>  
  
-   <span data-ttu-id="a8f26-115">Unterstützt einige Aspekte des Animationssystems</span><span class="sxs-lookup"><span data-stu-id="a8f26-115">Supports some aspects of the animation system</span></span>  
  
 <span data-ttu-id="a8f26-116"><xref:System.Windows.FrameworkElement> ist der WPF-Frameworkebene Implementierung-Klasse, die baut auf <xref:System.Windows.UIElement>, und fügt die jeweiligen Interaktionen mit der WPF-Frameworkebene.</span><span class="sxs-lookup"><span data-stu-id="a8f26-116"><xref:System.Windows.FrameworkElement> is the WPF framework-level implementation class that builds on <xref:System.Windows.UIElement>, and adds specific interactions with the WPF framework level.</span></span> <span data-ttu-id="a8f26-117"><xref:System.Windows.FrameworkElement> hinzugefügt und definiert die folgenden Funktionen:</span><span class="sxs-lookup"><span data-stu-id="a8f26-117"><xref:System.Windows.FrameworkElement> adds and defines the following capabilities:</span></span>  
  
-   <span data-ttu-id="a8f26-118">Zusätzliche frameworkspezifische Layoutmerkmale</span><span class="sxs-lookup"><span data-stu-id="a8f26-118">Additional framework-specific layout characteristics</span></span>  
  
-   <span data-ttu-id="a8f26-119">Unterstützung für umfangreichere Metadaten, die Berichte zu Eigenschaften</span><span class="sxs-lookup"><span data-stu-id="a8f26-119">Support for richer metadata reporting on properties</span></span>  
  
-   <span data-ttu-id="a8f26-120">Klasse-spezifische Implementierung der bestimmte Eingabe Basisklassen und ihre angefügten Eigenschaften oder angefügte Ereignisse</span><span class="sxs-lookup"><span data-stu-id="a8f26-120">Class-specific implementation of certain input base classes and their attached properties or attached events</span></span>  
  
-   <span data-ttu-id="a8f26-121">Unterstützung von Stilen</span><span class="sxs-lookup"><span data-stu-id="a8f26-121">Style support</span></span>  
  
-   <span data-ttu-id="a8f26-122">Weitere Unterstützung für Animationen</span><span class="sxs-lookup"><span data-stu-id="a8f26-122">Further animation support</span></span>  
  
 <span data-ttu-id="a8f26-123">Eine weitere verwandte Klasse <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-123">Another related class is <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="a8f26-124">Die <xref:System.Windows.ContentElement> -Klasse implementiert viele der gleichen Elemente wie <xref:System.Windows.UIElement>; der Unterschied zwischen diesen beiden Klassen im allgemeinen Inhaltsmodell ihrer beabsichtigten platziert werden muss.</span><span class="sxs-lookup"><span data-stu-id="a8f26-124">The <xref:System.Windows.ContentElement> class implements many of the same members as does <xref:System.Windows.UIElement>; the difference between these two classes has to do with their intended place in the overall content model.</span></span> <span data-ttu-id="a8f26-125">Ein <xref:System.Windows.UIElement> abgeleitete Klasse definiert ein relativ strengen Inhaltsmodell, was bedeutet, dass es gibt Einschränkungen für welche Elemente mit untergeordneten Elementen im Markup sein können.</span><span class="sxs-lookup"><span data-stu-id="a8f26-125">A <xref:System.Windows.UIElement> derived class typically defines a relatively rigid content model, meaning that there are restrictions on what elements may be child elements in markup.</span></span> <span data-ttu-id="a8f26-126">Kapazität für die weniger restriktive untergeordneter Inhalt dauert möglicherweise eine <xref:System.Windows.UIElement>, aber dieser Kapazität in den angegebenen Content-Eigenschaften in der Regel zentralisiert wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-126">There might be capacity for taking less restrictive child content in a <xref:System.Windows.UIElement>, but that capacity is typically centralized in designated content properties.</span></span> <span data-ttu-id="a8f26-127">Ein <xref:System.Windows.ContentElement> abgeleitete Klasse ist in der Regel nicht so restriktiv zu Inhalt, um Szenarien wie z. B. Dokumente mit fortlaufendem zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-127">A <xref:System.Windows.ContentElement> derived class is typically not as restrictive about content, to support scenarios such as flow-format documents.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a8f26-128"><xref:System.Windows.UIElement.Visibility%2A> Status wirkt sich auf alle Eingaben, die durch dieses Element behandeln.</span><span class="sxs-lookup"><span data-stu-id="a8f26-128"><xref:System.Windows.UIElement.Visibility%2A> state affects all input handling by that element.</span></span> <span data-ttu-id="a8f26-129">Elemente, die nicht sichtbar sind keine Teilnahme am Treffertests und empfangen, selbst wenn der Mauszeiger die Grenzen befindet, in dem das Element wäre keine Eingabeereignisse, wenn sichtbar waren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-129">Elements that are not visible do not participate in hit testing and do not receive input events, even if the mouse is over the bounds where the element would be if were visible.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-130">Initialisiert eine neue Instanz der <see cref="T:System.Windows.UIElement" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-130">Initializes a new instance of the <see cref="T:System.Windows.UIElement" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-131">Erstellen einer neuen Instanz, der Typ ist jedoch <xref:System.Windows.UIElement> ist ungewöhnlich, dass im Anwendungscode, da <xref:System.Windows.UIElement> wird von einem Basiselement.</span><span class="sxs-lookup"><span data-stu-id="a8f26-131">Creating a new instance that is actually of type <xref:System.Windows.UIElement> is uncommon in application code, because <xref:System.Windows.UIElement> is a base element.</span></span> <span data-ttu-id="a8f26-132">Finden Sie unter [Basis-Übersicht über](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-132">See [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-133">Fügt einen Routingereignishandler für ein bestimmtes Routingereignis hinzu, wobei der Handler der Handlerauflistung für das aktuelle Element hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-133">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="a8f26-134">Ein Bezeichner für das zu behandelnde Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-134">An identifier for the routed event to be handled.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="a8f26-135">Ein Verweis auf die Handlerimplementierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-135">A reference to the handler implementation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-136">Fügt einen Routingereignishandler für ein bestimmtes Routingereignis hinzu, wobei der Handler der Handlerauflistung für das aktuelle Element hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-136">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-137">Sie können den gleichen Handler für das gleiche Ereignis mehrere Male hinzufügen, ohne eine Ausnahme auszulösen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-137">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="a8f26-138">Der Handler wird jedoch tatsächlich mehrere Male aufgerufen, wenn das Ereignis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-138">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="a8f26-139">Aus diesem Grund sollten Sie, wie dieses Verhalten Nebeneffekte haben kann, die in der Handlerimplementierung berücksichtigt werden sollten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-139">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="a8f26-140">In der Regel verwenden Sie diese Methode die Implementierung der "add"-Accessor für die [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] Event-Zugriffsmuster der eines benutzerdefinierten Routingereignisses.</span><span class="sxs-lookup"><span data-stu-id="a8f26-140">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="uIElement.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="a8f26-141">Ein Bezeichner für das zu behandelnde Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-141">An identifier for the routed event to be handled.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="a8f26-142">Ein Verweis auf die Handlerimplementierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-142">A reference to the handler implementation.</span>
          </span>
        </param>
        <param name="handledEventsToo">
          <span data-ttu-id="a8f26-143">
            <see langword="true" />, wenn der Handler registriert werden soll, sodass er selbst dann aufgerufen wird, wenn das Routingereignis in den zugehörigen Ereignisdaten als behandelt markiert ist, <see langword="false" />, wenn der Handler mit der Standardbedingung registriert werden soll, dass er nicht aufgerufen wird, wenn das Routingereignis bereits als behandelt markiert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-143">
              <see langword="true" /> to register the handler such that it is invoked even when  the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span>
          </span>
          <span data-ttu-id="a8f26-144">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-144">The default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-145">Legen Sie die Anforderung zum erneuten Behandeln eines Routingereignisses nicht gewohnheitsmäßig fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-145">Do not routinely ask to rehandle a routed event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-146">Fügt einen Routingereignishandler für ein bestimmtes Routingereignis hinzu, wobei der Handler der Handlerauflistung für das aktuelle Element hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-146">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
          <span data-ttu-id="a8f26-147">Legen Sie <paramref name="handledEventsToo" /> auf <see langword="true" /> fest, damit der bereitgestellte Handler für ein Routingereignis aufgerufen wird, das bereits von einem anderen Element auf der Ereignisroute als behandelt markiert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-147">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-148">Die Verarbeitung von Low-Level-Eingabeereignisse in eine praktische Möglichkeit ist eine komplexe Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="a8f26-148">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="a8f26-149">Viele Steuerelemente implementieren Verhalten, in denen ein bestimmtes Ereignis als behandelt markiert ist, und durch ein anderes intuitiver Ereignis ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-149">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="a8f26-150">Im Allgemeinen wird ein Steuerelement nur ein Eingabeereignis Plattform als behandelt markieren Wenn einige Zweck dafür vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-150">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="a8f26-151">In bestimmten Szenarien ist möglicherweise die Absichten Entwurf nicht was erfordert, dass Ihre bestimmten Behandlung des Eingabeereignisses.</span><span class="sxs-lookup"><span data-stu-id="a8f26-151">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="a8f26-152">Es ist für diese Szenarien, dass die Registrierung Handler mit `handledEventsToo` als `true` eignet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-152">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="a8f26-153">Aber Sie sollten dies nicht regelmäßig.</span><span class="sxs-lookup"><span data-stu-id="a8f26-153">But you should not do this routinely.</span></span> <span data-ttu-id="a8f26-154">Handler als Reaktion auf alle Ereignisse aufrufen, auch wenn verarbeitet, wird Ihre eigene Verarbeitungslogik Anwendungsereignis erschweren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-154">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="a8f26-155">Eine Abnahme der Leistung möglicherweise angezeigt werden, wenn die Handlerlogik sehr umfangreich ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-155">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="a8f26-156">Reservieren Sie die Verwendung von Anhängen von Handlern für bereits behandelten Ereignisse für Situationen, in denen Sie bereits während des Entwicklungsprozesses ermittelt haben, die bestimmte Steuerelemente Ereignisse verarbeiten, die Sie weiterhin mit der Anwendungslogik behandeln möchten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-156">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="a8f26-157">Ein weiteres Verfahren zum Vermeiden von Klassenbehandlungsverhalten von bestimmten Ebenenkombinationen Event-Steuerelement ist die Verwendung des Ereignisses die Vorschau Alternative.</span><span class="sxs-lookup"><span data-stu-id="a8f26-157">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="a8f26-158">Z. B. wenn <xref:System.Windows.UIElement.MouseLeftButtonDown> als behandelt markiert wird von der Klassenbehandlung, Sie möglicherweise zum Hinzufügen von Handlern für <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> stattdessen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-158">For example, if <xref:System.Windows.UIElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="a8f26-159">Sie können den gleichen Handler für das gleiche Ereignis mehrere Male hinzufügen, ohne eine Ausnahme auszulösen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-159">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="a8f26-160">Der Handler wird jedoch tatsächlich mehrere Male aufgerufen, wenn das Ereignis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-160">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="a8f26-161">Aus diesem Grund sollten Sie, wie dieses Verhalten Nebeneffekte haben kann, die in der Handlerimplementierung berücksichtigt werden sollten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-161">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="a8f26-162">In der Regel verwenden Sie diese Methode die Implementierung der "add"-Accessor für die [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] Event-Zugriffsmuster der eines benutzerdefinierten Routingereignisses.</span><span class="sxs-lookup"><span data-stu-id="a8f26-162">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-163">Das folgende Beispiel implementiert einen Handler aufgerufen wird, auf die <xref:System.Windows.FrameworkElement.Initialized> Ereignis auf einer Seite, die einen definierten Handler an eine der benannten Elemente auf der Seite mit anfügt `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-163">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="a8f26-164">Dieser Handler wird aufgerufen werden, auch wenn ein anderes Element entlang der Route, die gemeinsam genutzte Ereignisdaten als behandelt, bevor das behandelnde Element in der Route erreicht gekennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-164">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AddToEventRoute : System.Windows.EventRoute * System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.AddToEventRoute (route, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route">
          <span data-ttu-id="a8f26-165">Die Ereignisroute, der Handler hinzugefügt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-165">The event route that handlers are added to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="a8f26-166">Die Ereignisdaten, mit denen die Handler hinzugefügt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-166">The event data that is used to add the handlers.</span>
          </span>
          <span data-ttu-id="a8f26-167">Diese Methode verwendet die <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />-Eigenschaft der Ereignisdaten, um die Handler zu erstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-167">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the event data to create the handlers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-168">Fügt der angegebenen <see cref="T:System.Windows.EventRoute" /> Handler für die aktuelle Auflistung von <see cref="T:System.Windows.UIElement" />-Ereignishandlern hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-168">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.UIElement" /> event handler collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-169">Diese Methode kann verwendet werden, durch den Inhaltshost-Elemente (implementieren <xref:System.Windows.IContentHost> oder solche, die nicht) Handler für untergeordnete Elemente zum Hinzufügen der <xref:System.Windows.EventRoute>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-169">This method can be used by content host elements (either those that implement <xref:System.Windows.IContentHost> or those that don't) to add handlers for child elements to the <xref:System.Windows.EventRoute>.</span></span> <span data-ttu-id="a8f26-170">Dies ist normalerweise nicht erforderlich, damit <xref:System.Windows.UIElement>, da der Handler für alle Elemente in einer abgeschlossenen logischen Struktur automatisch hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-170">Ordinarily, this is not required for <xref:System.Windows.UIElement>, because handlers are automatically added for all elements found in a completed logical tree.</span></span> <span data-ttu-id="a8f26-171">In einigen Fällen, in denen <xref:System.Windows.ContentElement> und <xref:System.Windows.UIElement> kombiniert werden, in auf Vorlagen basierenden Strukturen, die dazwischen liegenden Elemente aus der Vorlage muss eine Route hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-171">However, in some cases where <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are mixed in templated trees, intervening elements that came from the template need to be added to a route.</span></span> <span data-ttu-id="a8f26-172">Beide <xref:System.Windows.ContentElement> und <xref:System.Windows.UIElement> unterstützen eine Version dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="a8f26-172">Both <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> support a version of this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.UIElement.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-173">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob dieses Element als Ziel eines Drag &amp; Drop-Vorgangs verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-173">Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.</span>
          </span>
          <span data-ttu-id="a8f26-174">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-174">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-175">
            <see langword="true" />, wenn dieses Element als Ziel eines Drag &amp; Drop-Vorgangs verwendet werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-175">
              <see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-176">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-176">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-177">Drag & Drop-Vorgänge sind nicht standardmäßig aktiviert und muss durch Festlegen von absichtlich aktiviert sein <xref:System.Windows.UIElement.AllowDrop%2A> zu `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-177">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.UIElement.AllowDrop%2A> to `true`.</span></span> <span data-ttu-id="a8f26-178">Über diese Einstellung "Grundlegend" Drag & Drop-Verhalten ist vollständig implementierungsspezifisch und ist nicht definiert, indem <xref:System.Windows.UIElement> oder eine beliebige andere Basiselement-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-178">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.UIElement> or any other base element class.</span></span> <span data-ttu-id="a8f26-179">Einige Steuerelemente, z. B. <xref:System.Windows.Controls.RichTextBox>, verfügen über ein Standardverhalten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-179">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior.</span></span> <span data-ttu-id="a8f26-180">Weitere Informationen zu Drag & Drop, finden Sie unter [Drag- and -Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-180">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="a8f26-181"><xref:System.Windows.FrameworkElement> überschreibt die Metadaten für diese Abhängigkeitseigenschaft in seiner Implementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-181"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="a8f26-182">Insbesondere <xref:System.Windows.FrameworkElement> bestimmt diese Eigenschaft, um die Vererbung von Eigenschaftswerten zu ermöglichen (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> ist `true` in den Metadaten).</span><span class="sxs-lookup"><span data-stu-id="a8f26-182">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="a8f26-183">Die Vererbung von Eigenschaftswerten in diesem Kontext bedeutet, dass, wenn es untergeordnete Elemente kein anderer Wert für <xref:System.Windows.UIElement.AllowDrop%2A> über lokale Werte oder Stile, den Wert des nächsten übergeordneten Element mit diesem Wert zugewiesen (in diesem Fall entweder in Stilen, in der Standardeinstellung zugewiesen Werte, oder ein lokaler Wert), und klicken Sie dann den Wert aus dem übergeordneten Element für alle zuvor nicht zugewiesene untergeordneten Elemente vom Eigenschaftensystem zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-183">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from the parent element will be assigned to all previously unassigned child elements by the property system.</span></span> <span data-ttu-id="a8f26-184">In der Praxis bedeutet dies, dass Sie können angeben, ob Drop-Vorgänge im Stammelement zulässig, und die Wert für alle untergeordneten Elemente propagiert werden, die nicht explizit als zugewiesen `false`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-184">In practice this means that you can specify whether to allow drop operations at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-185">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-185">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-186">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-186">Identifier field</span></span>|<xref:System.Windows.UIElement.AllowDropProperty>|  
|<span data-ttu-id="a8f26-187">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-187">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-188">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-188">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-189">Im folgenden Markup-Beispiel wird die <xref:System.Windows.UIElement.AllowDrop%2A> Eigenschaft `true` mit einem Attribut auf eine <xref:System.Windows.Controls.TextBox>sowie einige andere Einstellung verwandter Eigenschaften, die im Aggregat, mit denen <xref:System.Windows.Controls.TextBox> das Ziel eines Datenobjekts mehrzeiligen Textfeld sein soll beim Es wird im gezogen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-189">The following markup example sets the <xref:System.Windows.UIElement.AllowDrop%2A> property `true` using an attribute on a <xref:System.Windows.Controls.TextBox>, as well as setting some other related properties that in aggregate enable that <xref:System.Windows.Controls.TextBox> to be the target of a multiline text data object when it is dragged in.</span></span> <span data-ttu-id="a8f26-190">Das vollständige Beispiel finden Sie unter [laden eine Beispieldatei gelöscht](http://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7).</span><span class="sxs-lookup"><span data-stu-id="a8f26-190">For the complete sample, see [Load a Dropped File Sample](http://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7).</span></span>  
  
 [!code-xaml[DragDrop_DropOpenTextFile#UIElementAllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DropOpenTextFile/CS/window1.xaml#uielementallowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowDropProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AllowDropProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-191">Bezeichnet die <see cref="P:System.Windows.UIElement.AllowDrop" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-191">Identifies the <see cref="P:System.Windows.UIElement.AllowDrop" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-192">Wendet eine Animation auf eine angegebene Abhängigkeitseigenschaft für dieses Element an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-192">Applies an animation to a specified dependency property on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-193">Diese Methode ist versiegelt und kann nicht überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-193">This method is sealed and cannot be overridden.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="uIElement.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="a8f26-194">Der Bezeichner für die zu animierende Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-194">The identifier for the property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="a8f26-195">Die Animationsuhr, die die Animation steuert und deklariert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-195">The animation clock that controls and declares the animation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-196">Wendet eine Animation auf eine angegebene Abhängigkeitseigenschaft für dieses Element an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-196">Applies an animation to a specified dependency property on this element.</span>
          </span>
          <span data-ttu-id="a8f26-197">Alle vorhandenen Animationen werden beendet und durch die neue Animation ersetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-197">Any existing animations are stopped and replaced with the new animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-198">Um eine Animation aus einer Eigenschaft zu entfernen, geben Sie den Bezeichner für diese Eigenschaft als `dp` , und geben Sie `clock` als `null`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-198">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="a8f26-199">Dadurch wird die Animation entfernt und auf den Basiswert die animierte Eigenschaft festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-199">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="a8f26-200">Die ursprünglich zugeordneten Animationsuhr wird jedoch nicht beendet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-200">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="a8f26-201">Alle anderen Animationen, die dieser Uhr zugewiesenen werden weiterhin ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-201">Any other animations assigned to that clock will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-202">Im folgenden Beispiel eine <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` verfügt über eine bestimmte zeitgesteuerte Animation angewendet, indem Aufrufen <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span><span class="sxs-lookup"><span data-stu-id="a8f26-202">In the following example, a <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` has a particular timing animation applied to it by calling <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/ClockControllerSpeedRatioExample.cs#uielementapplyanimationclock)]
 [!code-vb[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/clockcontrollerspeedratioexample.vb#uielementapplyanimationclock)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="uIElement.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="a8f26-203">Die zu animierende Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-203">The property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="a8f26-204">Die Animationsuhr, die die Animation steuert und deklariert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-204">The animation clock that controls and declares the animation.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="a8f26-205">Ein Wert aus der Enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-205">A value of the enumeration.</span>
          </span>
          <span data-ttu-id="a8f26-206">Der Standardwert ist <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, womit jede vorhandene Animation beendet und durch die neue Animation ersetzt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-206">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-207">Wendet eine Animation auf eine angegebene Abhängigkeitseigenschaft für dieses Element an, wobei angegeben werden kann, was geschieht, wenn die Eigenschaft bereits eine laufende Animation aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-207">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-208">Um eine Animation aus einer Eigenschaft zu entfernen, geben Sie den Bezeichner für diese Eigenschaft als `dp` , und geben Sie `clock` als `null`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-208">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="a8f26-209">Dadurch wird die Animation entfernt und auf den Basiswert die animierte Eigenschaft festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-209">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="a8f26-210">Die ursprünglich zugeordneten Animationsuhr wird jedoch nicht beendet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-210">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="a8f26-211">Alle anderen Animationen, die dieser Uhr zugewiesenen werden weiterhin ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-211">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCaptured : bool" Usage="System.Windows.UIElement.AreAnyTouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-212">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät für dieses Element erfasst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-212">Gets a value that indicates whether at least one touch is captured to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-213">
            <see langword="true" />, wenn mindestens eine Fingereingabe für dieses Element erfasst wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-213">
              <see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-214">Bezeichnet die <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-214">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCapturedWithin : bool" Usage="System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-215">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-215">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-216">
            <see langword="true" />, wenn mindestens eine Fingereingabe für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-216">
              <see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-217">Bezeichnet die <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-217">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesDirectlyOver : bool" Usage="System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-218">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät über diesem Element gedrückt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-218">Gets a value that indicates whether at least one touch is pressed over this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-219">
            <see langword="true" />, wenn mindestens eine Fingereingabe auf diesem Element registriert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-219">
              <see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-220">Bezeichnet die <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-220">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesOver : bool" Usage="System.Windows.UIElement.AreAnyTouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-221">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät auf diesem Element oder seinen untergeordneten Elementen in der visuellen Struktur gedrückt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-221">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-222">
            <see langword="true" />, wenn mindestens eine Fingereingabe auf diesem Element oder den untergeordneten Elementen in der visuellen Struktur erfasst wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-222">
              <see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-223">Bezeichnet die <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-223">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arrange">
      <MemberSignature Language="C#" Value="public void Arrange (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Arrange(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Arrange (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Arrange(System::Windows::Rect finalRect);" />
      <MemberSignature Language="F#" Value="member this.Arrange : System.Windows.Rect -&gt; unit" Usage="uIElement.Arrange finalRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect">
          <span data-ttu-id="a8f26-224">Die endgültige Größe, die das übergeordnete Element für das untergeordnete Element berechnet, als eine <see cref="T:System.Windows.Rect" />-Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-224">The final size that the parent computes for the child element, provided as a <see cref="T:System.Windows.Rect" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-225">Positioniert untergeordnete Elemente und bestimmt die Größe für ein <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-225">Positions child elements and determines a size for a <see cref="T:System.Windows.UIElement" />.</span>
          </span>
          <span data-ttu-id="a8f26-226">Übergeordnete Elemente rufen diese Methode aus ihrer <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" />-Implementierung (oder einer Entsprechung auf WPF-Frameworkebene) auf, um eine rekursive Layoutaktualisierung auszuführen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-226">Parent elements call this method from their <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> implementation (or a WPF framework-level equivalent) to form a recursive layout update.</span>
          </span>
          <span data-ttu-id="a8f26-227">Diese Methode stellt die zweite Übergabe einer Layoutaktualisierung dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-227">This method constitutes the second pass of a layout update.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-228">Für WPF-Frameworkebene-Element ableiten Szenarien Verhalten für <xref:System.Windows.UIElement.Arrange%2A> sollte nicht (und nicht möglich ist, es sei denn, Sie Schattenkopien) geändert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-228">For WPF framework-level element deriving scenarios, behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="a8f26-229">Sie sollten stattdessen überschreiben die <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> Implementierung in Ihrer Klasse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-229">Instead, you should override the <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation in your class.</span></span> <span data-ttu-id="a8f26-230">Ihre <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> -Implementierung aufgerufen wird intern von <xref:System.Windows.UIElement.Arrange%2A> als Teil des standardmäßigen WPF-Frameworkebene Layoutvorgänge.</span><span class="sxs-lookup"><span data-stu-id="a8f26-230">Your <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="a8f26-231">Ihre <xref:System.Windows.UIElement.ArrangeCore%2A> Implementierung sollten auch aufrufen <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> für jedes untergeordnete Element, wenn es untergeordnete Elemente verfügt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-231">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> on each child element, if it has child elements.</span></span>  
  
 <span data-ttu-id="a8f26-232">Für WPF-Kernebenen-Element Ableiten von Szenarien, die das Verhalten für <xref:System.Windows.UIElement.Arrange%2A> sollte nicht (und nicht möglich ist, es sei denn, Sie Schattenkopien) geändert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-232">For WPF core-level element deriving scenarios, the behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="a8f26-233">Sie sollten stattdessen überschreiben <xref:System.Windows.UIElement.ArrangeCore%2A> in Ihrer Klasse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-233">Instead, you should override <xref:System.Windows.UIElement.ArrangeCore%2A> in your class.</span></span> <span data-ttu-id="a8f26-234">Ihre <xref:System.Windows.UIElement.ArrangeCore%2A> -Implementierung aufgerufen wird intern von <xref:System.Windows.UIElement.Arrange%2A> als Teil des standardmäßigen WPF-Frameworkebene Layoutvorgänge.</span><span class="sxs-lookup"><span data-stu-id="a8f26-234">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="a8f26-235">Aber dies wird vorausgesetzt, dass Sie WPF-Frameworkebene-Layout und die Layoutsystem, die häufig nicht der Fall ist, wenn Sie Elemente auf WPF-Kernebenen von speziell ableiten, werden die <xref:System.Windows.UIElement> Element-Basisklasse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-235">However, this assumes you are using WPF framework-level layout and its layout system, which is often not the case if you are specifically deriving elements at the WPF core-level from the <xref:System.Windows.UIElement> base element class.</span></span> <span data-ttu-id="a8f26-236">Ihre <xref:System.Windows.UIElement.ArrangeCore%2A> Implementierung sollten auch aufrufen <xref:System.Windows.UIElement.Arrange%2A> für jedes untergeordnete Element, wenn es untergeordnete Elemente verfügt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-236">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.UIElement.Arrange%2A> on each child element, if it has child elements.</span></span> <span data-ttu-id="a8f26-237">Beachten Sie, dass das WPF-Kernebenen-Szenario bedeutet, dass Sie nicht verwenden eine <xref:System.Windows.FrameworkElement> -Klasse abgeleitet, da <xref:System.Windows.FrameworkElement> Siegel <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-237">Note that the WPF core-level scenario implies that you are not using a <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span>  
  
 <span data-ttu-id="a8f26-238">Berechnung der WPF-Frameworkebene layoutpositionierung [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] besteht aus einem <xref:System.Windows.UIElement.Measure%2A> aufrufen und ein <xref:System.Windows.UIElement.Arrange%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-238">Computation of WPF framework-level layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] consists of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="a8f26-239">Während der <xref:System.Windows.UIElement.Measure%2A> Aufruf des Layoutsystems bestimmt eines Elements größenanforderungen mithilfe eines bereitgestellten <xref:System.Windows.Size> (`availableSize`) Argument.</span><span class="sxs-lookup"><span data-stu-id="a8f26-239">During the <xref:System.Windows.UIElement.Measure%2A> call, the layout system determines an element's size requirements using a provided <xref:System.Windows.Size> (`availableSize`) argument.</span></span> <span data-ttu-id="a8f26-240">Während der <xref:System.Windows.UIElement.Arrange%2A> Aufruf des Layoutsystems schließt ab, die Größe und Position eines Elements des umgebenden Felds.</span><span class="sxs-lookup"><span data-stu-id="a8f26-240">During the <xref:System.Windows.UIElement.Arrange%2A> call, the layout system finalizes the size and position of an element's bounding box.</span></span>  <span data-ttu-id="a8f26-241">Weitere Informationen finden Sie unter [Layout](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-241">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 <span data-ttu-id="a8f26-242">`availableSize` eine beliebige Zahl von 0 (null), unendlich kann sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-242">`availableSize` can be any number from zero to infinity.</span></span> <span data-ttu-id="a8f26-243">Elemente angeordnet werden, gibt das Minimum zurück <xref:System.Windows.Size> sie erfordern, über die `availableSize` Parameter.</span><span class="sxs-lookup"><span data-stu-id="a8f26-243">Elements to be laid out return the minimum <xref:System.Windows.Size> they require through the `availableSize` parameter.</span></span>  
  
 <span data-ttu-id="a8f26-244">Wenn ein Layout zuerst instanziiert wird, erhält es immer eine <xref:System.Windows.UIElement.Measure%2A> aufrufen, bevor <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-244">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="a8f26-245">Jedoch nach der ersten Layoutübergabe, erhält sie möglicherweise eine <xref:System.Windows.UIElement.Arrange%2A> aufrufen, ohne eine <xref:System.Windows.UIElement.Measure%2A>; Dies kann auftreten, wenn eine Eigenschaft, die wirkt sich nur auf <xref:System.Windows.UIElement.Arrange%2A> (z. B. Ausrichtung) geändert wird oder wenn das übergeordnete Element empfängt eine <xref:System.Windows.UIElement.Arrange%2A> ohne eine <xref:System.Windows.UIElement.Measure%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-245">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="a8f26-246">Ein <xref:System.Windows.UIElement.Measure%2A> aufrufen wird automatisch für ungültig erklärt ein <xref:System.Windows.UIElement.Arrange%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-246">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="a8f26-247">Layoutupdates erfolgen in der Regel asynchron (zu einem Zeitpunkt, der durch das Layoutsystem bestimmt wird).</span><span class="sxs-lookup"><span data-stu-id="a8f26-247">Layout updates generally occur asynchronously (at a time determined by the layout system).</span></span> <span data-ttu-id="a8f26-248">Ein Element möglicherweise nicht sofort Änderungen an Eigenschaften, die Elementgröße betreffen widerspiegeln (z. B. <xref:System.Windows.FrameworkElement.Width%2A>).</span><span class="sxs-lookup"><span data-stu-id="a8f26-248">An element might not immediately reflect changes to properties that affect element sizing (such as <xref:System.Windows.FrameworkElement.Width%2A>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8f26-249">Layout-Updates können erzwungen werden, mithilfe der <xref:System.Windows.UIElement.UpdateLayout%2A> Methode, das Aufrufen dieser Funktion wird jedoch nicht empfohlen, ist normalerweise nicht erforderlich und kann zu Leistungseinbußen führen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-249">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method; however, calling this function is not recommended, as it is usually unnecessary and can cause poor performance.</span></span> <span data-ttu-id="a8f26-250">In vielen Situationen bei Aufrufen <xref:System.Windows.UIElement.UpdateLayout%2A> kann sinnvoll sein, wird das Layoutsystem wahrscheinlich bereits Updates verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-250">In many situations where calling <xref:System.Windows.UIElement.UpdateLayout%2A> might be appropriate, the layout system will probably already be processing updates.</span></span> <span data-ttu-id="a8f26-251">Das Layoutsystem kann es sich um layoutänderungen in einer Weise verarbeiten, die alle erforderlichen Updates als Teil eines Pakets optimieren können.</span><span class="sxs-lookup"><span data-stu-id="a8f26-251">The layout system can process layout changes in a manner that can optimize all necessary updates as part of a package.</span></span>  
  
 <span data-ttu-id="a8f26-252">Das Layoutsystem verfolgt zwei separate Warteschlangen mit ungültigen Layouts, eine für <xref:System.Windows.UIElement.Measure%2A> und eine für <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-252">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="a8f26-253">Die Layoutwarteschlange wird basierend auf die Reihenfolge der Elemente in der visuellen Struktur sortiert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-253">The layout queue is sorted based upon the order of elements in the visual tree.</span></span> <span data-ttu-id="a8f26-254">Elemente weiter oben in der Struktur sind am Anfang der Warteschlange, um redundante Layouts verursacht durch wiederholte Änderungen an übergeordneten Elementen zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-254">Elements higher in the tree are at the top of the queue, in order to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="a8f26-255">Doppelte Einträge werden automatisch aus der Warteschlange entfernt, und Elemente werden automatisch aus der Warteschlange entfernt, wenn sie bereits gültig sind.</span><span class="sxs-lookup"><span data-stu-id="a8f26-255">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already valid.</span></span>  
  
 <span data-ttu-id="a8f26-256">Beim Aktualisieren eines Layouts, das <xref:System.Windows.UIElement.Measure%2A> Warteschlange wird geleert zuerst, gefolgt von der <xref:System.Windows.UIElement.Arrange%2A> Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="a8f26-256">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="a8f26-257">Ein Element in der <xref:System.Windows.UIElement.Arrange%2A> Warteschlange wird nie angeordnet werden, wenn ein in Element der <xref:System.Windows.UIElement.Measure%2A> Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="a8f26-257">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeCore">
      <MemberSignature Language="C#" Value="protected virtual void ArrangeCore (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ArrangeCore(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ArrangeCore (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ArrangeCore(System::Windows::Rect finalRect);" />
      <MemberSignature Language="F#" Value="abstract member ArrangeCore : System.Windows.Rect -&gt; unit&#xA;override this.ArrangeCore : System.Windows.Rect -&gt; unit" Usage="uIElement.ArrangeCore finalRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect">
          <span data-ttu-id="a8f26-258">Der letzte Bereich im übergeordneten Element, den das Element verwenden soll, um sich selbst und seine untergeordneten Elemente anzuordnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-258">The final area within the parent that element should use to arrange itself and its child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-259">Definiert die Vorlage für die Definition zum Anordnen des Layouts auf der WPF-Kernebene.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-259">Defines the template for WPF core-level arrange layout definition.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a8f26-260">Überschreiben diese Methode ist nur geeignet, wenn Sie auf der WPF-Kernebenen ableiten, und Sie nicht das Layoutsystem von WPF-Frameworkebene verwenden und <xref:System.Windows.FrameworkElement> -Klasse abgeleitet, da <xref:System.Windows.FrameworkElement> Siegel <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-260">Overriding this method is only appropriate if you are deriving at the WPF core-level, and you are not using the WPF framework-level layout system and <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span> <span data-ttu-id="a8f26-261">Wenn Sie die WPF-Frameworkebene-Layoutsystem verwenden, die geeignete Methode zur Überschreibung für mandantenklassen geltenden schemaanpassungen Layout anordnen Verhalten <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-261">If you are using the WPF framework-level layout system, the appropriate method to override for class-specific layout arrange behavior is <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-262"><xref:System.Windows.UIElement.ArrangeCore%2A> Implementierungen sollten die basisimplementierung zum Zurückgeben einer Größe aufrufen, rufen Sie dann die <xref:System.Windows.UIElement.Arrange%2A> Methode für jedes Element sichtbaren untergeordneten Elements und Abstimmen die Größen, die von diesen zurückgegeben <xref:System.Windows.UIElement.Arrange%2A> Aufrufe mit der Größe der basisimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-262"><xref:System.Windows.UIElement.ArrangeCore%2A> implementations should call the base implementation to return a size, then call the <xref:System.Windows.UIElement.Arrange%2A> method of each visible child element, and reconcile the sizes returned by these <xref:System.Windows.UIElement.Arrange%2A> calls with the size of the base implementation.</span></span> <span data-ttu-id="a8f26-263">Die Logik für die Abstimmung Aspekt einer <xref:System.Windows.UIElement.ArrangeCore%2A> Implementierung kann variieren, je nach die Layoutmerkmale Ihres Elements.</span><span class="sxs-lookup"><span data-stu-id="a8f26-263">The logic for the reconciliation aspect of a <xref:System.Windows.UIElement.ArrangeCore%2A> implementation might vary, depending on the layout characteristics of your element.</span></span> <span data-ttu-id="a8f26-264">In der folgenden Beispielvorlage `VisualChildren` ist eine hypothetische-Eigenschaft, die möglicherweise das-Element definiert, um seinen Inhalt zu enumerieren <xref:System.Windows.UIElement> definiert keine inhaltssammlungen auf dieser Ebene die Architektur des WPF-Frameworkebene inhaltsverhalten für abgeleitete Elemente wie z. B. bestimmte Steuerelemente oder Steuerelement-Basisklassen verzögert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-264">In the following example template, `VisualChildren` is a hypothetical property that your element might define to help enumerate its content; <xref:System.Windows.UIElement> does not define content collections at this level, the WPF framework-level architecture defers content behavior to derived elements such as specific controls or control base classes.</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementarrangeoverride)]
 [!code-vb[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementarrangeoverride)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a8f26-265">
            <para>Wenn Sie Elemente auf WPF-Kernebene entwickeln, sollten Sie überschreiben diese Methode, um Ihre WPF-Kernebenen-Element ein einzigartiges anordnen Layoutverhalten oder korrekten Layouts zu Entscheidungen über die untergeordneten Elemente der Elemente. Eine Außerkraftsetzung ist möglicherweise erforderlich, wenn dieser untergeordneten Elemente wie z. B. nicht in einem definierten Muster erkennbar sind ein <see cref="T:System.Windows.Controls.ItemCollection" />.  Ein übergeordnetes Element muss die mandantenklassen geltenden schemaanpassungen Aufrufen <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> für jedes untergeordnete Element ist, andernfalls diese untergeordneten Elemente werden nicht gerendert.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-265">
              <para>If you are developing elements at the WPF core level,you should override this method to give your WPF core-level element a unique arrange layout behavior, or to make proper layout decisions about the child elements of your elements. An override might be necessary if those child elements are not recognizable from a defined pattern such as an <see cref="T:System.Windows.Controls.ItemCollection" />.  A parent element must call the class-specific <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> on each child element, otherwise those child elements are not rendered.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-266">Startet eine Animation für eine angegebene animierte Eigenschaft dieses Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-266">Starts an animation for a specified animated property on this element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="uIElement.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="a8f26-267">Die zu animierende Eigenschaft, die als Bezeichner einer Abhängigkeitseigenschaft angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-267">The property to animate, which is specified as a dependency property identifier.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="a8f26-268">Die Zeitachse der zu startenden Animation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-268">The timeline of the animation to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-269">Startet eine Animation für eine angegebene animierte Eigenschaft dieses Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-269">Starts an animation for a specified animated property on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-270">Wenn Sie überprüfen, ob eine Eigenschaft animiert wird, beachten Sie, dass die Animation beginnt, und betrachtet animiert, wenn der erste Frame hinter den nicht animierten Ausgangspunkt gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-270">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="a8f26-271">Wenn die <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> für `animation` ist `null`werden aktuellen Animationen entfernt und anschließend der aktuelle Wert der Eigenschaft gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-271">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="a8f26-272">Wenn die gesamte `animation` Wert `null`, werden alle Animationen aus der Eigenschaft entfernt, und der Eigenschaftswert wird auf den Basiswert zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-272">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="a8f26-273">Die ursprünglich zugeordnete Animationszeitachse wird jedoch nicht beendet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-273">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="a8f26-274">Alle anderen Animationen, die diese Zeitachse zugewiesen werden weiterhin ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-274">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-275">Das folgende Beispiel erstellt eine Animation, weist sie und ruft dann <xref:System.Windows.UIElement.BeginAnimation%2A> zu starten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-275">The following example creates an animation, assigns it, and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> to start it.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#beginanimation)]
 [!code-vb[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#beginanimation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="uIElement.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="a8f26-276">Die zu animierende Eigenschaft, die als Bezeichner einer Abhängigkeitseigenschaft angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-276">The property to animate, which is specified as the dependency property identifier.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="a8f26-277">Die Zeitachse der anzuwendenden Animation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-277">The timeline of the animation to be applied.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="a8f26-278">Ein Wert der Enumeration, der angibt, wie die neue Animation mit aktuellen (ausgeführten) Animationen interagieren soll, die sich bereits auf den Eigenschaftswert auswirken.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-278">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-279">Startet eine spezifische Animation für eine bestimmte animierte Eigenschaft dieses Elements, wobei angegeben werden kann, welches Verhalten gelten soll, wenn die Eigenschaft bereits über eine ausgeführte Animation verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-279">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-280">Wenn Sie überprüfen, ob eine Eigenschaft animiert wird, beachten Sie, dass die Animation beginnt, und betrachtet animiert, wenn der erste Frame hinter den nicht animierten Ausgangspunkt gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-280">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="a8f26-281">Wenn die <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> für `animation` ist `null`werden aktuellen Animationen entfernt und anschließend der aktuelle Wert der Eigenschaft gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-281">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="a8f26-282">Wenn die gesamte `animation` Wert `null`, werden alle Animationen aus der Eigenschaft entfernt, und der Eigenschaftswert wird auf den Basiswert zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-282">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="a8f26-283">Die ursprünglich zugeordnete Animationszeitachse wird jedoch nicht beendet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-283">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="a8f26-284">Alle anderen Animationen, die diese Zeitachse zugewiesen werden weiterhin ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-284">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-285">Das folgende Beispiel implementiert einen Handler, der eine vorhandene Animation aus einer Ressource und ruft dann erhält <xref:System.Windows.UIElement.BeginAnimation%2A> mit einem angegebenen Übergabeverhalten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-285">The following example implements a handler that obtains an existing animation from a resource and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> with a specified handoff behavior.</span></span>  
  
 [!code-csharp[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesIntroduction/CSharp/SampleViewer.xaml.cs#beginanimationhandoff)]
 [!code-vb[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesIntroduction/visualbasic/sampleviewer.xaml.vb#beginanimationhandoff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect BitmapEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffect BitmapEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffect As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffect ^ BitmapEffect { System::Windows::Media::Effects::BitmapEffect ^ get(); void set(System::Windows::Media::Effects::BitmapEffect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BitmapEffect : System.Windows.Media.Effects.BitmapEffect with get, set" Usage="System.Windows.UIElement.BitmapEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-286">Ruft den Bitmapeffekt ab, der direkt auf den gerenderten Inhalt dieses Elements angewendet wird, bzw. legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-286">Gets or sets a bitmap effect that applies directly to the rendered content for this element.</span>
          </span>
          <span data-ttu-id="a8f26-287">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-287">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-288">Der anzuwendende Bitmapeffekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-288">The bitmap effect to apply.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-289"><xref:System.Windows.Media.Effects.BitmapEffect> Daher ist ein abstrakter Typ, der [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Verwendung erfordert eine implementierte abgeleitete Klasse von <xref:System.Windows.Media.Effects.BitmapEffect>, z. B. <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-289"><xref:System.Windows.Media.Effects.BitmapEffect> is an abstract type, therefore the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage requires an implemented derived class of <xref:System.Windows.Media.Effects.BitmapEffect>, such as <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</span></span> <span data-ttu-id="a8f26-290">Beachten Sie, dass eine implementierte Klasse abgeleitet ist, die an mehr als eine sequenzielle ermöglicht Auflistungstyp <xref:System.Windows.Media.Effects.BitmapEffect>, mit einer verschachtelten-Tag-Syntax.</span><span class="sxs-lookup"><span data-stu-id="a8f26-290">Note that one implemented derived class is a collection type that allows you to specify more than one sequential <xref:System.Windows.Media.Effects.BitmapEffect>, using a nested tag syntax.</span></span>  
  
 <span data-ttu-id="a8f26-291">Keine vorhandenen abgeleitete Klasse von <xref:System.Windows.Media.Effects.BitmapEffect> unterstützt einen Typkonverter, sodass die [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Syntax, mit denen Sie für diese Eigenschaft ist im Allgemeinen Eigenschaftenelement-Syntax.</span><span class="sxs-lookup"><span data-stu-id="a8f26-291">No existing derived class of <xref:System.Windows.Media.Effects.BitmapEffect> supports a type converter, so the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax that you use for this property is generally property element syntax.</span></span>  
  
<a name="dependencyPropertyInfo_BitmapEffect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-292">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-292">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-293">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-293">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectProperty>|  
|<span data-ttu-id="a8f26-294">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-294">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-295">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-295">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-296">Im folgenden Beispiel wird eine Bitmap mithilfe <xref:System.Windows.Media.Effects.BlurBitmapEffect>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-296">The following example sets a bitmap effect, using <xref:System.Windows.Media.Effects.BlurBitmapEffect>.</span></span>  
  
 [!code-csharp[EffectsGallery_snip#CodeBehindBlurCodeBehindExampleInline](~/samples/snippets/csharp/VS_Snippets_Wpf/EffectsGallery_snip/CSharp/blurcodebehindexample.xaml.cs#codebehindblurcodebehindexampleinline)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInput">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffectInput" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffectInput As BitmapEffectInput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffectInput ^ BitmapEffectInput { System::Windows::Media::Effects::BitmapEffectInput ^ get(); void set(System::Windows::Media::Effects::BitmapEffectInput ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BitmapEffectInput : System.Windows.Media.Effects.BitmapEffectInput with get, set" Usage="System.Windows.UIElement.BitmapEffectInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffectInput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-297">Ruft die Eingabequelle des Bitmapeffekts ab, der direkt auf den gerenderten Inhalt dieses Elements angewendet wird, bzw. legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-297">Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.</span>
          </span>
          <span data-ttu-id="a8f26-298">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-298">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-299">Die Quelle für Bitmapeffekte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-299">The source for bitmap effects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BitmapEffectInput"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-300">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-300">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-301">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-301">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectInputProperty>|  
|<span data-ttu-id="a8f26-302">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-302">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-303">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-303">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInputProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectInputProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectInputProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectInputProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectInputProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectInputProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BitmapEffectInputProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.BitmapEffectInputProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-304">Bezeichnet die <see cref="P:System.Windows.UIElement.BitmapEffectInput" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-304">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffectInput" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BitmapEffectProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.BitmapEffectProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-305">Bezeichnet die <see cref="P:System.Windows.UIElement.BitmapEffect" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-305">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffect" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CacheMode CacheMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CacheMode CacheMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CacheMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheMode As CacheMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CacheMode ^ CacheMode { System::Windows::Media::CacheMode ^ get(); void set(System::Windows::Media::CacheMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheMode : System.Windows.Media.CacheMode with get, set" Usage="System.Windows.UIElement.CacheMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CacheMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-306">Ruft eine zwischengespeicherte Darstellung des <see cref="T:System.Windows.UIElement" /> ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-306">Gets or sets a cached representation of the <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-307">Ein <see cref="T:System.Windows.Media.CacheMode" />, der eine zwischengespeicherte Darstellung von <see cref="T:System.Windows.UIElement" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-307">A <see cref="T:System.Windows.Media.CacheMode" /> that holds a cached representation of the <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-308">Legen Sie die <xref:System.Windows.UIElement.CacheMode%2A> Eigenschaft, wenn Sie müssen zum Erhöhen der Leistung für Inhalte, die zum Rendern sehr zeitaufwendig ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-308">Set the <xref:System.Windows.UIElement.CacheMode%2A> property when you need to increase performance for content that is time consuming to render.</span></span> <span data-ttu-id="a8f26-309">Weitere Informationen finden Sie unter <xref:System.Windows.Media.BitmapCache>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-309">For more information, see <xref:System.Windows.Media.BitmapCache>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.CacheMode" />
        <altmember cref="T:System.Windows.Media.BitmapCache" />
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="CacheModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CacheModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CacheModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.CacheModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CacheModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CacheModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CacheModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.CacheModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-310">Bezeichnet die <see cref="P:System.Windows.UIElement.CacheMode" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-310">Identifies the <see cref="P:System.Windows.UIElement.CacheMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberSignature Language="F#" Value="abstract member CaptureMouse : unit -&gt; bool&#xA;override this.CaptureMouse : unit -&gt; bool" Usage="uIElement.CaptureMouse " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-311">Versucht, die Mausaufzeichnung für dieses Element zu erzwingen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-311">Attempts to force capture of the mouse to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-312">
            <see langword="true" />, wenn die Maus erfolgreich aufgezeichnet wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-312">
              <see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-313">Um die erfasst werden, muss ein Element aktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-313">To be captured, an element must be enabled.</span></span> <span data-ttu-id="a8f26-314">Überprüfen Sie, ob <xref:System.Windows.UIElement.IsEnabled%2A> ist `true` vor dem Aufruf <xref:System.Windows.UIElement.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-314">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.UIElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="a8f26-315">Wenn der Aufruf <xref:System.Windows.UIElement.CaptureMouse%2A> gibt `true`, klicken Sie dann <xref:System.Windows.UIElement.IsMouseCaptured%2A> auch `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-315">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.UIElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="a8f26-316">Wenn der Aufruf <xref:System.Windows.UIElement.CaptureMouse%2A> gibt `true`, die <xref:System.Windows.UIElement.GotMouseCapture> und <xref:System.Windows.UIElement.IsMouseCapturedChanged> Ereignisse ausgelöst werden, mit <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> Daten in den Ereignisdaten gemeldet, als das Element, in denen die <xref:System.Windows.UIElement.CaptureMouse%2A> Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-316">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.UIElement.GotMouseCapture> and <xref:System.Windows.UIElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.UIElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="a8f26-317">Wenn Sie erzwingen, können Sie mit vorhandenen Erfassungen beeinträchtigen, vor allem bei Erfassungen, die im Zusammenhang mit Drag & Drop mit der Maus.</span><span class="sxs-lookup"><span data-stu-id="a8f26-317">If you force capture, you might interfere with existing captures—especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="a8f26-318">Rufen Sie zum Löschen von allen Elementen die Erfassung von Mauseingaben <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> mit der `element` -Parameter als `null`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-318">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-319">Im folgende Beispiel implementiert ein Paar von Handlern für Maus und Eingabe-Tastenkombination, die die Maus erfassen (und Hostschlüssel), und aktivieren eine spezielle mausmodus zum Anzeigen von 3D-Modellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-319">The following example implements a pair of handlers for mouse and key input combination that capture (and uncapture) the mouse and enable a special mouse mode for viewing a 3D model.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberSignature Language="F#" Value="abstract member CaptureStylus : unit -&gt; bool&#xA;override this.CaptureStylus : unit -&gt; bool" Usage="uIElement.CaptureStylus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-320">Versucht, die Tablettstiftaufzeichnung für dieses Element zu erzwingen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-320">Attempts to force capture of the stylus to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-321">
            <see langword="true" />, wenn der Tablettstift erfolgreich aufgezeichnet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-321">
              <see langword="true" /> if the stylus was successfully captured; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-322">Gibt die standardmäßige Implementierung, die basierend auf dem zugrunde liegenden Stift-Standardgerät immer `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-322">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="a8f26-323">Wenn Sie die Eingabegeräte, die für das Eingabesystem aber die geräteimplementierung bereitstellen erweitern, ist es jedoch möglich, ein System mit einer Implementierung des alternativen Tablettstiftgeräts zu erstellen, die möglicherweise andere Ergebnisse zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-323">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="a8f26-324">Wenn ein Element die Stiftauswahl erhält, empfängt es nastala chyba vstupu, auch wenn der Tablettstift außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-324">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="a8f26-325">Der Stift wird in der Regel nur bei Drag & Drop-Vorgängen erfasst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-325">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="a8f26-326">Durch das Aufrufen dieser Methode wird eine zugrunde liegende statische <xref:System.Windows.Input.Stylus> Methode <xref:System.Windows.Input.Stylus.Capture%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-326">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="a8f26-327">Die tatsächlich verwendeten-Verhalten wird durch die Implementierung der aktiven Tablettstift Gerät implementiert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-327">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="a8f26-328">Um die erfasst werden, muss ein Element aktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-328">To be captured, an element must be enabled.</span></span> <span data-ttu-id="a8f26-329">Überprüfen Sie, ob <xref:System.Windows.UIElement.IsEnabled%2A> ist `true` zurückgegeben wird, vor dem Aufruf <xref:System.Windows.UIElement.CaptureStylus%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-329">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.UIElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="a8f26-330">Wenn der Aufruf <xref:System.Windows.UIElement.CaptureStylus%2A> gibt `true`, <xref:System.Windows.UIElement.IsStylusCaptured%2A> auch `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-330">If calling <xref:System.Windows.UIElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.UIElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.CaptureTouch : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement.CaptureTouch touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">
          <span data-ttu-id="a8f26-331">Das zu erfassende Gerät.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-331">The device to capture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-332">Versucht, die Fingereingabe für dieses Element zu erzwingen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-332">Attempts to force capture of a touch to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-333">
            <see langword="true" />, wenn die angegebene Fingereingabe für dieses Element erfasst wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-333">
              <see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-334"><xref:System.Windows.UIElement.CaptureTouch%2A> Gibt `false` Wenn die <xref:System.Windows.Input.TouchDevice> aktuell auf ein anderes Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-334"><xref:System.Windows.UIElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="a8f26-335">Wenn <xref:System.Windows.UIElement.CaptureTouch%2A> gibt `true`, und klicken Sie dann die <xref:System.Windows.UIElement.GotTouchCapture> Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-335">If <xref:System.Windows.UIElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.UIElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="a8f26-336">Um einzelne Fingereingabe aus diesem Element freizugeben, verwenden Sie die <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> Methode, und geben Sie das Fingereingabegerät freigegeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-336">To release capture of a single touch from this element, use the <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="a8f26-337">Um alle Workflows aus diesem Element freizugeben, verwenden die <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a8f26-337">To release all touches from this element, use the <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8f26-338">
            <paramref name="touchDevice" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-338">
              <paramref name="touchDevice" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry Clip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry Clip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Clip" />
      <MemberSignature Language="VB.NET" Value="Public Property Clip As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Geometry ^ Clip { System::Windows::Media::Geometry ^ get(); void set(System::Windows::Media::Geometry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Clip : System.Windows.Media.Geometry with get, set" Usage="System.Windows.UIElement.Clip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-339">Ruft die Geometrie ab, die zum Definieren der Gliederung des Inhalts eines Elements verwendet wird, oder legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-339">Gets or sets the geometry used to define the outline of the contents of an element.</span>
          </span>
          <span data-ttu-id="a8f26-340">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-340">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-341">Die Geometrie, die zur Größenanpassung des Clippingbereichs verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-341">The geometry to be used for clipping area sizing.</span>
          </span>
          <span data-ttu-id="a8f26-342">Der Standardwert ist eine <see cref="T:System.Windows.Media.Geometry" /> von 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-342">The default is a null <see cref="T:System.Windows.Media.Geometry" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-343">Elementen außerhalb der Geometrie werden im gerenderten Layout visuell abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-343">Elements outside the geometry will be visually clipped in the rendered layout.</span></span> <span data-ttu-id="a8f26-344">Die Geometrie muss nicht rechteckig sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-344">The geometry does not have to be rectangular.</span></span>  
  
<a name="dependencyPropertyInfo_Clip"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-345">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-345">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-346">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-346">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipProperty>|  
|<span data-ttu-id="a8f26-347">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-347">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-348">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-348">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-349">In diesem Beispiel wird gezeigt, wie ein FrameworkElement definiert <xref:System.Windows.UIElement.Clip%2A> Region.</span><span class="sxs-lookup"><span data-stu-id="a8f26-349">This example shows how to define a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="a8f26-350">Um einen Clip zu definieren, verwenden eine <xref:System.Windows.Media.Geometry> (z. B. eine <xref:System.Windows.Media.EllipseGeometry> des Elements festlegen <xref:System.Windows.UIElement.Clip%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a8f26-350">To define a clip, use a <xref:System.Windows.Media.Geometry> (for example, an <xref:System.Windows.Media.EllipseGeometry> to set the element's <xref:System.Windows.UIElement.Clip%2A> property.</span></span> <span data-ttu-id="a8f26-351">Nur der Bereich, der innerhalb der Region der Geometry-Instanz ist, werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-351">Only the area that is within the region of the geometry will be visible.</span></span>  
  
 <span data-ttu-id="a8f26-352">Das folgende Beispiel zeigt eine <xref:System.Windows.Controls.Image> -Element ohne einem definierten Clip-Bereich.</span><span class="sxs-lookup"><span data-stu-id="a8f26-352">The following example shows an <xref:System.Windows.Controls.Image> element without a defined clip region.</span></span> <span data-ttu-id="a8f26-353">Da keine Clip-Bereich definiert ist, wird das gesamte Bild angezeigt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-353">Because no clip region is defined, the entire image is displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#2)]  
  
 <span data-ttu-id="a8f26-354">![Ein Objekt vor dem Anwenden eines Clippingbereichs](~/add/media/mil-task-clip-region-noclip.png "ein Objekt vor dem Anwenden eines Clippingbereichs")</span><span class="sxs-lookup"><span data-stu-id="a8f26-354">![An object before applying a clip region](~/add/media/mil-task-clip-region-noclip.png "An object before applying a clip region")</span></span>  
<span data-ttu-id="a8f26-355">Bild mit keine Clip-Bereich</span><span class="sxs-lookup"><span data-stu-id="a8f26-355">Image with No Clip Region</span></span>  
  
 <span data-ttu-id="a8f26-356">Im nächsten Beispiel wird eine identische Abbild erstellt, außer dass er einen definierten Clip-Bereich befindet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-356">In the next example, an identical Image is created, except that it has a defined clip region.</span></span> <span data-ttu-id="a8f26-357">Nur den Teil des Bilds, das innerhalb des Bereichs, wird die <xref:System.Windows.Media.EllipseGeometry> wird angezeigt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-357">Only the part of the image that is within the area the <xref:System.Windows.Media.EllipseGeometry> will be displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#4)]  
  
 <span data-ttu-id="a8f26-358">![Ein abgeschnittenes Objekt](~/add/media/mil-task-clip-region-ellispe.PNG "ein abgeschnittenes Objekt")</span><span class="sxs-lookup"><span data-stu-id="a8f26-358">![A clipped object](~/add/media/mil-task-clip-region-ellispe.PNG "A clipped object")</span></span>  
<span data-ttu-id="a8f26-359">Bild mit einem elliptischen Clip-Bereich</span><span class="sxs-lookup"><span data-stu-id="a8f26-359">Image with an Elliptical Clip Region</span></span>  
  
 <span data-ttu-id="a8f26-360">Das folgende Beispiel zeigt, wie Animieren eines Frameworkelements <xref:System.Windows.UIElement.Clip%2A> Region.</span><span class="sxs-lookup"><span data-stu-id="a8f26-360">The following example shows how animate a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="a8f26-361">In diesem Beispiel ein <xref:System.Windows.Media.EllipseGeometry> dient zum Definieren eines elliptischen Clip-Bereichs für eine <xref:System.Windows.Controls.Image> Element.</span><span class="sxs-lookup"><span data-stu-id="a8f26-361">In this example, an <xref:System.Windows.Media.EllipseGeometry> is used to define an elliptical clip region for an <xref:System.Windows.Controls.Image> element.</span></span> <span data-ttu-id="a8f26-362">Ein <xref:System.Windows.Media.Animation.PointAnimation> des EllipseGeometry-Objekts animiert <xref:System.Windows.Media.EllipseGeometry.Center%2A> Eigenschaft von (0, 0), (200, 150).</span><span class="sxs-lookup"><span data-stu-id="a8f26-362">A <xref:System.Windows.Media.Animation.PointAnimation> animates the ellipse geometry's <xref:System.Windows.Media.EllipseGeometry.Center%2A> property from (0, 0) to (200, 150).</span></span> <span data-ttu-id="a8f26-363">Start der Animation wiedergeben, nachdem das Abbild geladen wird und auf unbestimmte Zeit wiederholt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-363">The animation starts playing after the image is loaded and repeats indefinitely.</span></span>  
  
 [!code-xaml[ClipPathExample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#5)]  
  
 <span data-ttu-id="a8f26-364">Das vollständige Beispiel finden Sie unter den [Clip-Bereich-Beispiel](http://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span><span class="sxs-lookup"><span data-stu-id="a8f26-364">For the full sample, see the [Clip Region Sample](http://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
      </Docs>
    </Member>
    <Member MemberName="ClipProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClipProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.ClipProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-365">Bezeichnet die <see cref="P:System.Windows.UIElement.Clip" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-365">Identifies the <see cref="P:System.Windows.UIElement.Clip" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipToBounds">
      <MemberSignature Language="C#" Value="public bool ClipToBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ClipToBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.ClipToBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property ClipToBounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ClipToBounds { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ClipToBounds : bool with get, set" Usage="System.Windows.UIElement.ClipToBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-366">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob der Inhalt dieses Elements (oder Inhalt aus seinen untergeordneten Elementen) abgeschnitten wird, sodass er in das enthaltende Element passt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-366">Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.</span>
          </span>
          <span data-ttu-id="a8f26-367">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-367">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-368">
            <see langword="true" />, wenn der Inhalt abgeschnitten werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-368">
              <see langword="true" /> if the content should be clipped; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-369">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-369">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-370">Für untergeordnete Elemente <xref:System.Windows.UIElement.ClipToBounds%2A> hat verschiedene Auswirkungen auf die Layoutverhalten, je nachdem, ob die Höhe und Breite des übergeordneten Elements hängen vom wird <xref:System.Windows.FrameworkElement.Height%2A>  /  <xref:System.Windows.FrameworkElement.Width%2A> oder <xref:System.Windows.FrameworkElement.MaxHeight%2A>  /  <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-370">For child elements, <xref:System.Windows.UIElement.ClipToBounds%2A> has different effects on layout behaviors depending on whether the height and width of the parent element are being determined by <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> or <xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span></span> <span data-ttu-id="a8f26-371"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A> des übergeordneten Elements werden immer berücksichtigt, unabhängig vom Wert der <xref:System.Windows.UIElement.ClipToBounds%2A> und die effektive wird immer den Inhalt basierend auf diese Maximalwerte.</span><span class="sxs-lookup"><span data-stu-id="a8f26-371"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A> of the parent element are always respected regardless of the value of <xref:System.Windows.UIElement.ClipToBounds%2A> and the effective clipping will always clip the content based on these maximums.</span></span> <span data-ttu-id="a8f26-372">Des übergeordneten Elements <xref:System.Windows.FrameworkElement.Height%2A>  /  <xref:System.Windows.FrameworkElement.Width%2A> Einstellungen werden den Inhalt nicht beschnitten beim <xref:System.Windows.UIElement.ClipToBounds%2A> ist `false`, jedoch werden die Inhalte bei beschneiden <xref:System.Windows.UIElement.ClipToBounds%2A> ist `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-372">The parent's <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> settings will not clip the content when <xref:System.Windows.UIElement.ClipToBounds%2A> is `false`, but will clip the content if <xref:System.Windows.UIElement.ClipToBounds%2A> is `true`.</span></span>  
  
 <span data-ttu-id="a8f26-373">Beachten Sie, dass der Standardwert `false` ist das allgemeine Verhalten, da es sich bei Implementierung in der <xref:System.Windows.UIElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-373">Note that defaulting to `false` is the general behavior as implemented in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="a8f26-374">Es ist möglich, dass alle angegebenen Elemente, die abgeleitet <xref:System.Windows.UIElement> auf die Metadaten von Abhängigkeitseigenschaften für diese Eigenschaft in dieser Instanz aus, um den Standardwert zu überschreiben `true` stattdessen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-374">It is possible for any given element that derives from <xref:System.Windows.UIElement> to override the dependency property metadata for this property in that instance to default to `true` instead.</span></span> <span data-ttu-id="a8f26-375">Mehrere vorhandene abgeleitete Klassen überschreiben diese Metadaten bzw. Anpassen der Standardwert der Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a8f26-375">Several existing derived classes override this metadata and/or adjust the dependency property default value.</span></span>  
  
 <span data-ttu-id="a8f26-376"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, und <xref:System.Windows.Controls.Primitives.Popup> jeweils den Standardwert zurück, werden außer Kraft setzen `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-376"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.Popup> each override the default value to be `true`.</span></span>  
  
 <span data-ttu-id="a8f26-377"><xref:System.Windows.FrameworkElement> überschreibt die Metadaten für diese Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a8f26-377"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property.</span></span> <span data-ttu-id="a8f26-378">Insbesondere <xref:System.Windows.FrameworkElement> bestimmt diese Eigenschaft, um die Vererbung von Eigenschaftswerten zu ermöglichen (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> ist `true` in den Metadaten).</span><span class="sxs-lookup"><span data-stu-id="a8f26-378">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="a8f26-379">Die Vererbung von Eigenschaftswerten in diesem Kontext bedeutet, dass, wenn es untergeordnete Elemente kein anderer Wert für <xref:System.Windows.UIElement.ClipToBounds%2A> über lokale Werte oder Stile, den Wert des nächsten übergeordneten Element mit diesem Wert zugewiesen (in diesem Fall entweder in Stilen, in der Standardeinstellung zugewiesen Werte, oder einen lokalen Wert), und klicken Sie dann der Wert aus dem übergeordneten Element für alle nicht zugewiesenen untergeordneten Elemente vom Eigenschaftensystem zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a8f26-379">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.ClipToBounds%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a locally value), then the value from the parent element will be assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="a8f26-380">In der Praxis bedeutet dies, dass Sie können angeben, ob der Clip Grenzen im Stammelement darf, und die Wert für alle untergeordneten Elemente propagiert werden, die nicht explizit als zugewiesen `false`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-380">In practice this means that you can specify whether to allow clip to bounds at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_ClipToBounds"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-381">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-381">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-382">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-382">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipToBoundsProperty>|  
|<span data-ttu-id="a8f26-383">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-383">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-384">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-384">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Clip" />
      </Docs>
    </Member>
    <Member MemberName="ClipToBoundsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipToBoundsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipToBoundsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipToBoundsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipToBoundsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipToBoundsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClipToBoundsProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.ClipToBoundsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-385">Bezeichnet die <see cref="P:System.Windows.UIElement.ClipToBounds" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-385">Identifies the <see cref="P:System.Windows.UIElement.ClipToBounds" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBindings : System.Windows.Input.CommandBindingCollection" Usage="System.Windows.UIElement.CommandBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-386">Ruft eine Auflistung von <see cref="T:System.Windows.Input.CommandBinding" />-Objekten ab, die diesem Element zugeordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-386">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects associated with this element.</span>
          </span>
          <span data-ttu-id="a8f26-387">Ein <see cref="T:System.Windows.Input.CommandBinding" /> ermöglicht die Behandlung eines Befehls für dieses Element und deklariert die Bindung zwischen einem Befehl, seinen Ereignissen und den von diesem Element angefügten Handlern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-387">A <see cref="T:System.Windows.Input.CommandBinding" /> enables command handling for this element, and declares the linkage between a command, its events, and the handlers attached by this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-388">Die Auflistung aller <see cref="T:System.Windows.Input.CommandBinding" />-Objekte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-388">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-389">Eine weitere Möglichkeit zum Füllen der <xref:System.Windows.UIElement.CommandBindings%2A> Auflistung ist die Verwendung <xref:System.Windows.Input.CommandManager> Methoden programmgesteuert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-389">Another typical way to populate the <xref:System.Windows.UIElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="a8f26-390">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="a8f26-390">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  
  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a8f26-391">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="a8f26-391">XAML Values</span></span>  
 <span data-ttu-id="a8f26-392">*oneOrMoreCommandBindings*</span><span class="sxs-lookup"><span data-stu-id="a8f26-392">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="a8f26-393">Eine oder mehrere <xref:System.Windows.Input.CommandBinding> Elemente.</span><span class="sxs-lookup"><span data-stu-id="a8f26-393">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="a8f26-394">Jedem dieser Computer sollte eine <xref:System.Windows.Input.CommandBinding.Command%2A> -Attributsatz auf einen bekannten Befehl, und legen Sie Attribute für die <xref:System.Windows.Input.CommandBinding.CanExecute> und <xref:System.Windows.Input.CommandBinding.Executed> Handlerimplementierungen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-394">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="a8f26-395">Weitere Informationen finden Sie unter <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-395">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-396">Im folgenden Beispiel wird eine <xref:System.Windows.Input.CommandBinding> für ein Fenster mit dem Markup.</span><span class="sxs-lookup"><span data-stu-id="a8f26-396">The following example adds a <xref:System.Windows.Input.CommandBinding> to a window using markup.</span></span> <span data-ttu-id="a8f26-397">Beachten Sie, dass [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], <xref:System.Windows.Input.CommandBindingCollection> ist nicht im Markup als ein Element deklariert das-Objekt wird durch den Typ, der die Eigenschaft akzeptiert abgeleitet, und Sie füllen die Property-Element mit einem oder mehreren <xref:System.Windows.Input.CommandBinding> Elemente:</span><span class="sxs-lookup"><span data-stu-id="a8f26-397">Note that in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the <xref:System.Windows.Input.CommandBindingCollection> is not declared in the markup as an element; the collection object is inferred by the type that the property takes, and you populate the property element with one or more <xref:System.Windows.Input.CommandBinding> elements:</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 <span data-ttu-id="a8f26-398">Weitere Informationen zu den [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Syntax für Auflistungen, finden Sie unter [XAML-Syntax im Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-398">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span>  
  
 <span data-ttu-id="a8f26-399">Im folgende Beispiel ist im Prinzip das gleiche im Code:</span><span class="sxs-lookup"><span data-stu-id="a8f26-399">The following example does essentially the same thing in code:</span></span>  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="DesiredSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size DesiredSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size DesiredSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.DesiredSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size DesiredSize { System::Windows::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredSize : System.Windows.Size" Usage="System.Windows.UIElement.DesiredSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-400">Ruft die Größe ab, die dieses Element während des Messdurchgangs im Layoutprozess berechnet hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-400">Gets the size that this element computed during the measure pass of the layout process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-401">Die berechnete Größe, die die gewünschte Größe für den Anordnungsdurchgang wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-401">The computed size, which becomes the desired size for the arrange pass.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-402">Der von dieser Eigenschaft zurückgegebene Wert ist ein gültiges Maß nur, wenn der Wert des der <xref:System.Windows.UIElement.IsMeasureValid%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-402">The value returned by this property will only be a valid measurement if the value of the <xref:System.Windows.UIElement.IsMeasureValid%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="a8f26-403"><xref:System.Windows.UIElement.DesiredSize%2A> wird in der Regel überprüft, wie z. B. von einer der Messung Faktoren beim Implementieren von Layoutverhalten überschreibt <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>, oder <xref:System.Windows.UIElement.OnRender%2A> (in der <xref:System.Windows.UIElement.OnRender%2A> Fall, können Sie überprüfen, <xref:System.Windows.UIElement.RenderSize%2A> stattdessen Dies hängt jedoch von Ihrem -Implementierung).</span><span class="sxs-lookup"><span data-stu-id="a8f26-403"><xref:System.Windows.UIElement.DesiredSize%2A> is typically checked as one of the measurement factors when you implement layout behavior overrides such as <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>, or <xref:System.Windows.UIElement.OnRender%2A> (in the <xref:System.Windows.UIElement.OnRender%2A> case, you might check <xref:System.Windows.UIElement.RenderSize%2A> instead, but this depends on your implementation).</span></span> <span data-ttu-id="a8f26-404">Je nach Szenario <xref:System.Windows.UIElement.DesiredSize%2A> möglicherweise vollständig eingehalten wird, von Ihrer Implementierungslogik Einschränkungen auf <xref:System.Windows.UIElement.DesiredSize%2A> angewendet werden kann, und solche Einschränkungen können auch andere Merkmale von übergeordneten Element oder untergeordnete Element geändert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-404">Depending on the scenario, <xref:System.Windows.UIElement.DesiredSize%2A> might be fully respected by your implementation logic, constraints on <xref:System.Windows.UIElement.DesiredSize%2A> might be applied, and such constraints might also change other characteristics of either the parent element or child element.</span></span> <span data-ttu-id="a8f26-405">Beispielsweise kann ein Steuerelement, das der bildlauffähigen Bereiche unterstützt (aber nicht von WPF-Frameworkebene-Steuerelemente abgeleitet werden, die bereits der bildlauffähigen Bereiche zu ermöglichen) verfügbaren Größe, vergleichen <xref:System.Windows.UIElement.DesiredSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-405">For example, a control that supports scrollable regions (but chooses not to derive from the WPF framework-level controls that already enable scrollable regions) could compare available size to <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="a8f26-406">Das Steuerelement konnte einen internen Zustand, der Bildlaufleisten in aktiviert legen die [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] für dieses Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="a8f26-406">The control could then set an internal state that enabled scrollbars in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] for that control.</span></span> <span data-ttu-id="a8f26-407">Oder, <xref:System.Windows.UIElement.DesiredSize%2A> möglicherweise auch in bestimmten Szenarien ignoriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-407">Or, <xref:System.Windows.UIElement.DesiredSize%2A> could potentially also be ignored in certain scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-408">Das folgende Beispiel zeigt <xref:System.Windows.UIElement.DesiredSize%2A> als Teil einer <xref:System.Windows.FrameworkElement.MeasureOverride%2A> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-408">The following example shows <xref:System.Windows.UIElement.DesiredSize%2A> as part of a <xref:System.Windows.FrameworkElement.MeasureOverride%2A> implementation.</span></span> <span data-ttu-id="a8f26-409">Beachten Sie, dass wie <xref:System.Windows.UIElement.Measure%2A> wird aufgerufen, unmittelbar vor dem Abrufen von <xref:System.Windows.UIElement.DesiredSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-409">Notice how <xref:System.Windows.UIElement.Measure%2A> is called immediately prior to obtaining <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="a8f26-410">Dies stellt sicher, dass <xref:System.Windows.UIElement.DesiredSize%2A> legitimen Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="a8f26-410">This assures that <xref:System.Windows.UIElement.DesiredSize%2A> holds a legitimate value.</span></span>  
  
 [!code-cpp[PlotPanel#2](~/samples/snippets/cpp/VS_Snippets_Wpf/PlotPanel/CPP/PlotPanel.cpp#2)]
 [!code-csharp[PlotPanel#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PlotPanel/CSharp/PlotPanel.cs#2)]
 [!code-vb[PlotPanel#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PlotPanel/VisualBasic/PlotPanel.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.DragEventHandler " Usage="member this.DragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-411">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Ziel meldet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-411">Occurs when the input system reports an underlying drag event with this element as the drag target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-412">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-412">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-413">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.DragEnter> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-413">Event handlers that are attached to the <xref:System.Windows.UIElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-414">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-414">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-415">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-415">Identifier field</span></span>|<xref:System.Windows.UIElement.DragEnterEvent>|  
|<span data-ttu-id="a8f26-416">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-416">Routing strategy</span></span>|<span data-ttu-id="a8f26-417">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-417">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-418">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-418">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8f26-419">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-419">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="a8f26-420">Außer Kraft setzen <xref:System.Windows.UIElement.OnDragEnter%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-420">Override <xref:System.Windows.UIElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-421">Identifiziert das <see cref="E:System.Windows.UIElement.DragEnter" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-421">Identifies the <see cref="E:System.Windows.UIElement.DragEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-422">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-422">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-423">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-423">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-424">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-424">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-425">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-425">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-426">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-426">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.DragEventHandler " Usage="member this.DragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-427">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Quelle meldet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-427">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-428">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-428">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-429">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.DragLeave> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-429">Event handlers that are attached to the <xref:System.Windows.UIElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-430">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-430">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-431">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-431">Identifier field</span></span>|<xref:System.Windows.UIElement.DragLeaveEvent>|  
|<span data-ttu-id="a8f26-432">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-432">Routing strategy</span></span>|<span data-ttu-id="a8f26-433">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-433">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-434">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-434">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8f26-435">Das entsprechende tunnelingereignis ist <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-435">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="a8f26-436">Außer Kraft setzen <xref:System.Windows.UIElement.OnDragLeave%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-436">Override <xref:System.Windows.UIElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-437">Identifiziert das <see cref="E:System.Windows.UIElement.DragLeave" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-437">Identifies the <see cref="E:System.Windows.UIElement.DragLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-438">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-438">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-439">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-439">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-440">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-440">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-441">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-441">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-442">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-442">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.DragEventHandler " Usage="member this.DragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-443">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als potenzielles Drop-Ziel meldet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-443">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-444">Dieses Ereignis tritt auf, auch wenn das Ziehen der Elementgrenzen stammen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-444">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="a8f26-445">Wenn für der Ziehvorgang außerhalb des gültigen Bereichs beginnt und bewegt sich dann, dieses Ereignis wird auch ausgelöst, als auch <xref:System.Windows.UIElement.DragEnter> und Vorschauereignisse im Zusammenhang.</span><span class="sxs-lookup"><span data-stu-id="a8f26-445">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.UIElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="a8f26-446">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-446">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-447">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.DragOver> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-447">Event handlers that are attached to the <xref:System.Windows.UIElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-448">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-448">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-449">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-449">Identifier field</span></span>|<xref:System.Windows.UIElement.DragOverEvent>|  
|<span data-ttu-id="a8f26-450">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-450">Routing strategy</span></span>|<span data-ttu-id="a8f26-451">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-451">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-452">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-452">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8f26-453">Das entsprechende tunnelingereignis ist <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-453">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="a8f26-454">Außer Kraft setzen <xref:System.Windows.UIElement.OnDragOver%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-454">Override <xref:System.Windows.UIElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-455">Identifiziert das <see cref="E:System.Windows.UIElement.DragOver" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-455">Identifies the <see cref="E:System.Windows.UIElement.DragOver" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-456">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-456">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-457">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-457">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-458">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-458">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-459">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-459">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-460">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-460">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberSignature Language="F#" Value="member this.Drop : System.Windows.DragEventHandler " Usage="member this.Drop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-461">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drop-Ereignis meldet, das dieses Element als Drop-Ziel aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-461">Occurs when the input system reports an underlying drop event with this element as the drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-462">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-462">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-463">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.Drop> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-463">Event handlers that are attached to the <xref:System.Windows.UIElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-464">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-464">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-465">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-465">Identifier field</span></span>|<xref:System.Windows.UIElement.DropEvent>|  
|<span data-ttu-id="a8f26-466">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-466">Routing strategy</span></span>|<span data-ttu-id="a8f26-467">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-467">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-468">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-468">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8f26-469">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-469">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="a8f26-470">Außer Kraft setzen <xref:System.Windows.UIElement.OnDrop%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-470">Override <xref:System.Windows.UIElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-471">Identifiziert das <see cref="E:System.Windows.UIElement.Drop" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-471">Identifies the <see cref="E:System.Windows.UIElement.Drop" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-472">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-472">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-473">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-473">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-474">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-474">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-475">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-475">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-476">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-476">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.Effect Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::Effect ^ Effect { System::Windows::Media::Effects::Effect ^ get(); void set(System::Windows::Media::Effects::Effect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Media.Effects.Effect with get, set" Usage="System.Windows.UIElement.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-477">Ruft den Bitmapeffekt ab, der auf das <see cref="T:System.Windows.UIElement" />-Objekt angewendet werden soll, oder legt ihn fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-477">Gets or sets the bitmap effect to apply to the <see cref="T:System.Windows.UIElement" />.</span>
          </span>
          <span data-ttu-id="a8f26-478">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-478">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-479">Ein <see cref="T:System.Windows.Media.Effects.Effect" />, der den Bitmapeffekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-479">An <see cref="T:System.Windows.Media.Effects.Effect" /> that represents the bitmap effect.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-480">Verwenden der <xref:System.Windows.UIElement.Effect%2A> Eigenschaft, um ein Bitmapeffekt zum Anwenden einer <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-480">Use the <xref:System.Windows.UIElement.Effect%2A> property to apply a bitmap effect to a <xref:System.Windows.UIElement>.</span></span>  
  
<a name="dependencyPropertyInfo_Effect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-481">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-481">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-482">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-482">Identifier field</span></span>|<xref:System.Windows.UIElement.EffectProperty>|  
|<span data-ttu-id="a8f26-483">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-483">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-484">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-484">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-485">Der folgende XAML zeigt, wie das Zuweisen ein benutzerdefinierten <xref:System.Windows.Media.Effects.ShaderEffect> auf die <xref:System.Windows.UIElement.Effect%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a8f26-485">The following XAML shows how to assign a custom <xref:System.Windows.Media.Effects.ShaderEffect> to the <xref:System.Windows.UIElement.Effect%2A> property.</span></span>  
  
 [!code-xaml[System.Windows.Media.Effects.ShaderEffect#1000](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/Window1.xaml#1000)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="EffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.EffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EffectProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EffectProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.EffectProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-486">Bezeichnet die <see cref="P:System.Windows.UIElement.Effect" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-486">Identifies the <see cref="P:System.Windows.UIElement.Effect" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="uIElement.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-487">Versucht, den Fokus auf dieses Element festzulegen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-487">Attempts to set focus to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-488">
            <see langword="true" />, wenn der logische und der Tastaturfokus auf dieses Element festgelegt wurden, <see langword="false" />, wenn nur der logische Fokus auf dieses Element festgelegt wurde oder wenn durch den Aufruf dieser Methode keine Fokusänderung erzwungen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-488">
              <see langword="true" /> if keyboard focus and logical focus were set to this element; <see langword="false" /> if only logical focus was set to this element, or if the call to this method did not force the focus to change.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-489">Um den Fokus erhalten kann, werden <xref:System.Windows.UIElement.Focusable%2A> und <xref:System.Windows.UIElement.IsEnabled%2A> müssen `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-489">To be focusable, <xref:System.Windows.UIElement.Focusable%2A> and <xref:System.Windows.UIElement.IsEnabled%2A> must both be `true`.</span></span>  
  
 <span data-ttu-id="a8f26-490">Auch wenn ein Element den Fokus erhalten kann und aktiviert ist, Ereignisbehandlung in einer bestimmten Struktur ist, (z.B. für ein zusammengesetztes Steuerelement) mit nicht zugelassen, Fokus auf die Vorschau Fokusereignisse Antworten daher diese Methode würde zurückgeben `false`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-490">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="a8f26-491">Fokus wird im Allgemeinen durch zwei getrennte Konzepte gesteuert: Tastaturfokus und logischer Fokus, die nicht immer identisch sind.</span><span class="sxs-lookup"><span data-stu-id="a8f26-491">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span>  <span data-ttu-id="a8f26-492">Weitere Informationen finden Sie unter [Fokus – Übersicht](~/docs/framework/wpf/advanced/focus-overview.md) oder [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-492">For more information, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) or [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8f26-493">Wenn der Aufruf <xref:System.Windows.UIElement.Focus%2A> gibt `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A> und <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> sind auch `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-493">If calling <xref:System.Windows.UIElement.Focus%2A> returns `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="a8f26-494">Wenn die zugehörigen Eigenschaften nicht bereits sind `true`, beim Aufrufen <xref:System.Windows.UIElement.Focus%2A>, eine oder mehrere der folgenden Ereignisse werden in der folgenden Reihenfolge ausgelöst: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (Quelle ist die neue Ziel mit Fokus), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus>, <xref:System.Windows.UIElement.GotKeyboardFocus> (Quelle ist das neue Fokusziel).</span><span class="sxs-lookup"><span data-stu-id="a8f26-494">If the related properties are not already `true`, when you call  <xref:System.Windows.UIElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus>, <xref:System.Windows.UIElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
 <span data-ttu-id="a8f26-495">In der Reihenfolge, damit dieser Aufruf erfolgreich ist, muss ein anderes Element in der Anwendung erforderlich, um den Fokus bereits besitzen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-495">In order for this call to be successful, some other element in the application needed to have focus previously.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-496">Im folgende Beispiel legt den Fokus auf eine <xref:System.Windows.Controls.TextBox> verwiesen wird, indem <xref:System.Windows.FrameworkElement.Name%2A>, und klicken Sie dann passt die Position des Cursors innerhalb der <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-496">The following example sets focus to a <xref:System.Windows.Controls.TextBox> referenced by <xref:System.Windows.FrameworkElement.Name%2A>, and then adjusts the position of the cursor within the <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-csharp[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBox_CursorToEnd/CSharp/Window1.xaml.cs#uielementfocus)]
 [!code-vb[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBox_CursorToEnd/VisualBasic/Window1.xaml.vb#uielementfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="System.Windows.UIElement.Focusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-497">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob das Element den Fokus erhalten kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-497">Gets or sets a value that indicates whether the element can receive focus.</span>
          </span>
          <span data-ttu-id="a8f26-498">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-498">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-499">
            <see langword="true" />, wenn das Element den Fokus erhalten kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-499">
              <see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-500">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-500">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-501">Nur das fokussierte Element empfängt Tastatureingaben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-501">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="a8f26-502"><xref:System.Windows.UIElement.Focusable%2A> ist die [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] Eigenschaftenaccessor für das was in Wirklichkeit eine Abhängigkeitseigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-502"><xref:System.Windows.UIElement.Focusable%2A> is the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property.</span></span> <span data-ttu-id="a8f26-503">Diese bestimmte Abhängigkeitseigenschaft hat oft einen offensichtlichen "Default"-Wert, der in das abgeleitete Element-Klassen, insbesondere in Steuerelementen festgelegt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-503">This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes, particularly in controls.</span></span> <span data-ttu-id="a8f26-504">Dieser Fehler tritt häufig in zwei Arten:</span><span class="sxs-lookup"><span data-stu-id="a8f26-504">This commonly occurs in one of two ways:</span></span>  
  
-   <span data-ttu-id="a8f26-505">Die Abhängigkeitseigenschaft wird von einer bestimmten abgeleiteten Klasse geerbt, jedoch, die abgeleitete Klasse überschreibt der Metadaten der Abhängigkeitseigenschaft und ändert den Standard-Eigenschaftswert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-505">The dependency property is inherited by a particular derived class, but that derived class overrides the metadata of the dependency property and changes the property default value.</span></span>  
  
-   <span data-ttu-id="a8f26-506">Stilen oder Vorlagen ist auf ein Element angewendet, der Wert dieser Abhängigkeitseigenschaft unterschiedlich festlegt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-506">A style or template is applied to an element, which sets that dependency property value differently.</span></span>  
  
 <span data-ttu-id="a8f26-507">Z. B. die scheinbare "Default" der <xref:System.Windows.UIElement.Focusable%2A> für eine <xref:System.Windows.Controls.Button> -Steuerelement ist, `true`, auch wenn <xref:System.Windows.Controls.Button> erbt <xref:System.Windows.UIElement.Focusable%2A> als eine [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] -Eigenschaft direkt von <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-507">For example, the apparent "default" of <xref:System.Windows.UIElement.Focusable%2A> for a <xref:System.Windows.Controls.Button> control will be `true`, even though <xref:System.Windows.Controls.Button> inherits <xref:System.Windows.UIElement.Focusable%2A> as a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property directly from <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="a8f26-508">Dies ist, da der angewendeten Metadatenwert für den <xref:System.Windows.UIElement.Focusable%2A> Abhängigkeitseigenschaft im statischen Konstruktor der überschrieben wurde die <xref:System.Windows.Controls.Control> Basis-Klasse, die zwischen liegt <xref:System.Windows.Controls.Button> und <xref:System.Windows.UIElement> in der Klassenhierarchie.</span><span class="sxs-lookup"><span data-stu-id="a8f26-508">This is because the applied metadata value for the <xref:System.Windows.UIElement.Focusable%2A> dependency property was overridden within the static constructor of the <xref:System.Windows.Controls.Control> base class, which is situated between <xref:System.Windows.Controls.Button> and <xref:System.Windows.UIElement> in the class hierarchy.</span></span>  
  
 <span data-ttu-id="a8f26-509">Wenn von geerbt <xref:System.Windows.Controls.Control> oder die abgeleiteten Klassen <xref:System.Windows.Controls.Control> ändert den Standardwert dieser Eigenschaft sein `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-509">When inherited by <xref:System.Windows.Controls.Control> or its derived classes, <xref:System.Windows.Controls.Control> redefines the default value of this property to be `true`.</span></span>  
  
 <span data-ttu-id="a8f26-510">Wenn geerbt von <xref:System.Windows.Controls.Label> (d.h. eine <xref:System.Windows.Controls.Control> abgeleitete Klasse), der Standardwert wird erneut neu definiert werden `false`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-510">When inherited by <xref:System.Windows.Controls.Label> (which is a <xref:System.Windows.Controls.Control> derived class), the default value is again redefined to be `false`.</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-511">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-511">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-512">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-512">Identifier field</span></span>|<xref:System.Windows.UIElement.FocusableProperty>|  
|<span data-ttu-id="a8f26-513">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-513">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-514">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-514">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-515">Der folgende Beispielcode veranschaulicht eine Steuerelementvorlage für ein bestimmtes benutzerdefiniertes Steuerelement, das festlegt <xref:System.Windows.UIElement.Focusable%2A> `false` auf eines der Elemente in der Vorlage.</span><span class="sxs-lookup"><span data-stu-id="a8f26-515">The following example code illustrates a control template for a particular custom control, which sets <xref:System.Windows.UIElement.Focusable%2A> `false` on one of the elements within the template.</span></span>  
  
 [!code-xaml[RichTextBox_NoScrollViewer#_ControlTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBox_NoScrollViewer/CS/window1.xaml#_controltemplate)]
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a8f26-516">
            <para>Bei der Ableitung von <see cref="T:System.Windows.UIElement" /> direkt (im Gegensatz zu von <see cref="T:System.Windows.Controls.Control" />), überlegen Sie, ob das Element den Fokus erhalten kann, sein, da standardmäßig das Element nicht den Fokus erhalten soll. Wenn Sie das Element den Fokus erhalten kann sein möchten, überschreiben Sie die Metadaten für diese Eigenschaft im statischen Konstruktor des Typs wie folgt: [! Code-Csharp[CorePseudocode #UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [! Code – Vb[ CorePseudocode #UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)], in denen <paramref name="myElement" /> muss der Klassenname des Typs, die Sie auf den Metadatenwert überschreiben.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-516">
              <para>When deriving from <see cref="T:System.Windows.UIElement" /> directly (as opposed to from <see cref="T:System.Windows.Controls.Control" />), consider whether you wish your element to be focusable, because by default the element will not be focusable. If you wish your element to be focusable, override the metadata for this property within your type's static constructor as follows:  [!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]  where <paramref name="myElement" /> should be the class name of the type that you are overriding the metadata value on.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberSignature Language="F#" Value="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-517">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.UIElement.Focusable" />-Eigenschaft ändert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-517">Occurs when the value of the <see cref="P:System.Windows.UIElement.Focusable" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-518">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-518">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusableProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.FocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-519">Bezeichnet die <see cref="P:System.Windows.UIElement.Focusable" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-519">Identifies the <see cref="P:System.Windows.UIElement.Focusable" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj&#xA;override this.GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="uIElement.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="a8f26-520">Die zu überprüfende Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-520">The dependency property to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-521">Gibt den Wert der Basiseigenschaft für die angegebene Eigenschaft dieses Elements zurück, wobei alle möglichen animierten Werte aus einer ausgeführten oder beendeten Animation nicht berücksichtigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-521">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-522">Der Eigenschaftswert, bei dem keine Animationen an die angegebene Abhängigkeitseigenschaft angefügt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-522">The property value as if no animations are attached to the specified dependency property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-523">Wenn keine Animationen an die Eigenschaft angefügt werden und dann die <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> Rückgabewert ist immer identisch mit der <xref:System.Windows.DependencyObject.GetValue%2A> Wert zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-523">If no animations are attached to the property, then the <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="a8f26-524">Wenn Animationen angefügt sind, dann alle möglichen Animationen einschließlich Anfangs-abgeleitet und Stop-Werte werden ignoriert, und den Wert der Eigenschaft wird basierend auf alle anderen möglichen Eingaben bestimmt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-524">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="a8f26-525">Weitere Informationen finden Sie unter [Priorität von Abhängigkeitseigenschaftswerten](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-525">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-526">Das folgende Beispiel implementiert einen Handler, der den Basiswert einer animierten meldet <xref:System.Windows.FrameworkElement.Width%2A> Eigenschaft für eine <xref:System.Windows.Controls.Button>, sowie der Basiswert einer Transformation.</span><span class="sxs-lookup"><span data-stu-id="a8f26-526">The following example implements a handler that reports the base value of an animated <xref:System.Windows.FrameworkElement.Width%2A> property on a <xref:System.Windows.Controls.Button>, as well as the base value of a transform.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#getanimationbasevalue)]
 [!code-vb[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#getanimationbasevalue)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetLayoutClip">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.Geometry GetLayoutClip (System.Windows.Size layoutSlotSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.Geometry GetLayoutClip(valuetype System.Windows.Size layoutSlotSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetLayoutClip (layoutSlotSize As Size) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::Geometry ^ GetLayoutClip(System::Windows::Size layoutSlotSize);" />
      <MemberSignature Language="F#" Value="abstract member GetLayoutClip : System.Windows.Size -&gt; System.Windows.Media.Geometry&#xA;override this.GetLayoutClip : System.Windows.Size -&gt; System.Windows.Media.Geometry" Usage="uIElement.GetLayoutClip layoutSlotSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutSlotSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="layoutSlotSize">
          <span data-ttu-id="a8f26-527">Die vom Element bereitgestellte verfügbare Größe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-527">The available size provided by the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-528">Gibt eine alternative Clippinggeometrie zurück, die den Bereich darstellt, der abgeschnitten wird, wenn <see cref="P:System.Windows.UIElement.ClipToBounds" /> auf <see langword="true" /> festgelegt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-528">Returns an alternative clipping geometry that represents the region that would be clipped if <see cref="P:System.Windows.UIElement.ClipToBounds" /> were set to <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-529">Die mögliche Clippinggeometrie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-529">The potential clipping geometry.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-530">Die standardmäßige Implementierung der legitimen Wert zurück, aber nicht verwendet die `layoutSlotSize` Parameter bei seinen Berechnungen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-530">The default implementation will return a legitimate value, but does not use the `layoutSlotSize` parameter in its calculations.</span></span> <span data-ttu-id="a8f26-531">Stattdessen verwendet es den Wert der <xref:System.Windows.UIElement.RenderSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-531">Instead it uses the value of <xref:System.Windows.UIElement.RenderSize%2A>.</span></span>  
  
 <span data-ttu-id="a8f26-532">Diese Methode wird im Wesentlichen überschrieben von der unmittelbar abgeleiteten <xref:System.Windows.FrameworkElement> -Klasse, und die <xref:System.Windows.FrameworkElement> außer Kraft setzen, erzeugt ein komplexeres Verhalten für allgemeine Elemente der WPF-Frameworkebene.</span><span class="sxs-lookup"><span data-stu-id="a8f26-532">This method is substantially overridden by the immediately derived <xref:System.Windows.FrameworkElement> class, and the <xref:System.Windows.FrameworkElement> override produces a more sophisticated behavior for general WPF framework-level elements.</span></span> <span data-ttu-id="a8f26-533">Ausführliche Informationen finden Sie unter <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-533">For details, see <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="abstract member GetUIParentCore : unit -&gt; System.Windows.DependencyObject&#xA;override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="uIElement.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-534">Gibt beim Überschreiben in einer abgeleiteten Klasse ein alternatives übergeordnetes [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]-Element für dieses Element zurück, wenn kein visuelles übergeordnetes Element vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-534">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-535">Ein Objekt, wenn die Implementierung einer abgeleiteten Klasse eine alternative übergeordnete Verbindung melden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-535">An object, if implementation of a derived class has an alternate parent connection to report.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-536">Gibt die standardmäßige virtuelle Implementierung dieser Methode `null`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-536">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="a8f26-537"><xref:System.Windows.FrameworkElement> bietet eine praktische Implementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-537"><xref:System.Windows.FrameworkElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="a8f26-538">Alternative Übergeordnet sind, verwendet wird, für das Ereignisrouting in Fällen, in dem ein Element eine alternative übergeordnete Struktur erstellt, damit die Ereignisse weitergeleitet werden in einer Weise, die über das Standardmuster, von denen die visuelle Struktur des übergeordneten standard routing abweicht, oder nach unten in der routing-Strategie eine Vorschau anzeigen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-538">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-539">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag &amp; Drop-Ereignis meldet, das dieses Element betrifft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-539">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-540">Die <xref:System.Windows.UIElement.GiveFeedback> -Ereignisses kann die Quelle eines Ereignisses ziehen Sie die Darstellung des Mauszeigers zu ändern, um dem Benutzer während eines Drag & Drop-Vorgangs ein visuelles Feedback.</span><span class="sxs-lookup"><span data-stu-id="a8f26-540">The <xref:System.Windows.UIElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="a8f26-541">Das visuelle Feedback bestärkt, dass es sich bei ein Drag & Drop-Vorgang aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-541">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="a8f26-542">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement.GiveFeedback> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-542">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-543">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.GiveFeedback> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-543">Event handlers that are attached to the <xref:System.Windows.UIElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-544">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-544">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-545">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-545">Identifier field</span></span>|<xref:System.Windows.UIElement.GiveFeedbackEvent>|  
|<span data-ttu-id="a8f26-546">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-546">Routing strategy</span></span>|<span data-ttu-id="a8f26-547">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-547">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-548">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-548">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="a8f26-549">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-549">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="a8f26-550">Außer Kraft setzen <xref:System.Windows.UIElement.OnGiveFeedback%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-550">Override <xref:System.Windows.UIElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-551">Identifiziert das <see cref="E:System.Windows.UIElement.GiveFeedback" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-551">Identifies the <see cref="E:System.Windows.UIElement.GiveFeedback" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-552">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-552">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-553">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-553">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-554">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-554">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-555">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-555">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-556">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-556">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.RoutedEventHandler " Usage="member this.GotFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-557">Tritt auf, wenn dieses Element den logischen Fokus erhält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-557">Occurs when this element gets logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-558">Der logische Fokus unterscheidet sich vom Tastaturfokus, wenn Fokus absichtlich durch einen Methodenaufruf erzwungen, aber der vorherige Tastaturfokus, die in einem anderen Bereich vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-558">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="a8f26-559">In diesem Fall bleibt über den Tastaturfokus ist und das Element, in denen eine <xref:System.Windows.UIElement.Focus%2A> Methode wird aufgerufen, immer noch ruft logischen Fokus.</span><span class="sxs-lookup"><span data-stu-id="a8f26-559">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="a8f26-560">Eine genauere Interpretation dieses Ereignisses ist, dass die It wird ausgelöst, wenn der Wert des der <xref:System.Windows.UIElement.IsFocused%2A> Eigenschaft eines Elements in der Route geändert wird `false` zu `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-560">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="a8f26-561">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das Fokus erhält möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-561">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8f26-562">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, die Fokus erhalten hat.</span><span class="sxs-lookup"><span data-stu-id="a8f26-562">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-563">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-563">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-564">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-564">Identifier field</span></span>|<xref:System.Windows.UIElement.GotFocusEvent>|  
|<span data-ttu-id="a8f26-565">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-565">Routing strategy</span></span>|<span data-ttu-id="a8f26-566">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-566">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-567">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-567">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="a8f26-568">Es gibt kein entsprechendes Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-568">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a8f26-569">Außer Kraft setzen <xref:System.Windows.UIElement.OnGotFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-569">Override <xref:System.Windows.UIElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-570">Identifiziert das <see cref="E:System.Windows.UIElement.GotFocus" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-570">Identifies the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-571">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-571">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-572">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-572">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-573">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-573">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-574">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-574">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-575">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-575">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-576">Tritt auf, wenn sich der Fokus der Tastatur auf diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-576">Occurs when the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-577"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> ist ein ähnliches Ereignis, das statusänderungen in einer Eigenschaft nachverfolgt, die den Fokuszustand für ein Element verwaltet. die <xref:System.Windows.UIElement.GotKeyboardFocus> Ereignis wird ausgelöst, in vielen unter denselben Umständen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-577"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.UIElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="a8f26-578">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das Fokus besitzt möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-578">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8f26-579">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-579">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="a8f26-580">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement.GotKeyboardFocus> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-580">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-581">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.GotKeyboardFocus> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-581">Event handlers that are attached to the <xref:System.Windows.UIElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-582">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-582">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-583">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-583">Identifier field</span></span>|<xref:System.Windows.UIElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="a8f26-584">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-584">Routing strategy</span></span>|<span data-ttu-id="a8f26-585">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-585">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-586">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-586">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="a8f26-587">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-587">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="a8f26-588">Außer Kraft setzen <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-588">Override <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-589">Identifiziert das <see cref="E:System.Windows.UIElement.GotKeyboardFocus" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-589">Identifies the <see cref="E:System.Windows.UIElement.GotKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-590">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-590">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-591">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-591">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-592">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-592">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-593">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-593">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-594">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-594">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-595">Tritt auf, wenn dieses Element die Mausauswahl erhält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-595">Occurs when this element captures the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-596">Wenn ein Element die Mausauswahl erhält, empfängt es die Mauseingabe, auch wenn der Mauszeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-596">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="a8f26-597">Die Maus ist in der Regel nur bei Drag & Drop-Vorgängen erfasst und erfassten bleibt, bis die Drop-Aktion des Drag & Drop-Vorgangs ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-597">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="a8f26-598">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das erfasst wird möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-598">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8f26-599">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten Erfassen von Daten in das tatsächliche Element zu bestimmen, das die Mauseingaben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-599">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="a8f26-600">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement.GotMouseCapture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-600">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.UIElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-601">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.GotMouseCapture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-601">Event handlers that are attached to the <xref:System.Windows.UIElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-602">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-602">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-603">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-603">Identifier field</span></span>|<xref:System.Windows.UIElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="a8f26-604">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-604">Routing strategy</span></span>|<span data-ttu-id="a8f26-605">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-605">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-606">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-606">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a8f26-607">Es ist keine definiertes entsprechende Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-607">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a8f26-608">Außer Kraft setzen <xref:System.Windows.UIElement.OnGotMouseCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-608">Override <xref:System.Windows.UIElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-609">Identifiziert das <see cref="E:System.Windows.UIElement.GotMouseCapture" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-609">Identifies the <see cref="E:System.Windows.UIElement.GotMouseCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-610">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-610">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-611">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-611">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-612">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-612">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-613">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-613">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-614">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-614">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-615">Tritt auf, wenn dieses Element die Stiftauswahl erhält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-615">Occurs when this element captures the stylus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-616">Wenn ein Element die Stiftauswahl erhält, empfängt es nastala chyba vstupu, auch wenn der Mauszeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-616">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="a8f26-617">Der Tablettstift in der Regel nur während der Drag & Drop-Vorgänge aufgezeichnet wird und behält die Aufzeichnung, bis die Drop-Aktion des Drag & Drop-Vorgangs ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-617">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="a8f26-618">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das erfasst wird möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-618">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8f26-619">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, das erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-619">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="a8f26-620">Dieses Ereignis wird ein Alias für das angefügte Ereignis für diese Klasse erstellt, damit <xref:System.Windows.UIElement.GotStylusCapture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-620">This event creates an alias for the attached event for this class so that <xref:System.Windows.UIElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-621">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.GotStylusCapture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-621">Event handlers that are attached to the <xref:System.Windows.UIElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-622">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-622">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-623">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-623">Identifier field</span></span>|<xref:System.Windows.UIElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="a8f26-624">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-624">Routing strategy</span></span>|<span data-ttu-id="a8f26-625">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-625">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-626">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-626">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8f26-627">Es ist keine definiertes entsprechende Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-627">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a8f26-628">Außer Kraft setzen <xref:System.Windows.UIElement.OnGotStylusCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-628">Override <xref:System.Windows.UIElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-629">Identifiziert das <see cref="E:System.Windows.UIElement.GotStylusCapture" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-629">Identifies the <see cref="E:System.Windows.UIElement.GotStylusCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-630">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-630">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-631">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-631">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-632">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-632">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-633">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-633">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-634">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-634">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.GotTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.GotTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-635">Tritt ein, wenn eine Fingereingabe für dieses Element erfasst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-635">Occurs when a touch is captured to this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-636">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-636">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-637">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-637">Identifier field</span></span>|<xref:System.Windows.UIElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="a8f26-638">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-638">Routing strategy</span></span>|<span data-ttu-id="a8f26-639">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-639">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-640">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-640">Delegate</span></span>|<span data-ttu-id="a8f26-641">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-641"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8f26-642">Außer Kraft setzen <xref:System.Windows.UIElement.OnGotTouchCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-642">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-643">Identifiziert das <see cref="E:System.Windows.UIElement.GotTouchCapture" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-643">Identifies the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.UIElement.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-644">Ruft einen Wert ab, der angibt, ob dieses Element über animierte Eigenschaften verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-644">Gets a value indicating whether this element has any animated properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-645">
            <see langword="true" />, wenn Animationen an eine der Eigenschaften dieses Elements angefügt sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-645">
              <see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-646">Diese Eigenschaft gibt `true` für permanente (nicht getaktete, ständig ausgeführten) Animationen oder Animationen, die ein genauer Zeitplan steht.</span><span class="sxs-lookup"><span data-stu-id="a8f26-646">This property returns `true` either for persistent (unclocked, always-running) animations, or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasEffectiveKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HasEffectiveKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasEffectiveKeyboardFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEffectiveKeyboardFocus : bool" Usage="System.Windows.UIElement.HasEffectiveKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-647">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Windows.UIElement" /> den Fokus besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-647">Gets a value that indicates whether the <see cref="T:System.Windows.UIElement" /> has focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-648">
            <see langword="true" />, wenn das <see cref="T:System.Windows.UIElement" /> den Fokus besitzt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-648">
              <see langword="true" /> if the <see cref="T:System.Windows.UIElement" /> has focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-649">Unterklassen überschreiben können, diese Eigenschaft angeben, wenn das Element den Tastaturfokus verfügt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-649">Subclasses can override this property to specify when the element has keyboard focus.</span></span>  <span data-ttu-id="a8f26-650">Dies ist nützlich, wenn Ihre <xref:System.Windows.UIElement> enthält Elemente, über den Tastaturfokus verfügen können, und Sie möchten, dass das Element zum Bericht, dass es den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-650">This is useful when your <xref:System.Windows.UIElement> contains elements that can have keyboard focus and you want your element to report that it has focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-651">Implementiert <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />, um das Treffertestverhalten für Basiselemente bereitzustellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-651">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="override this.HitTestCore : System.Windows.Media.GeometryHitTestParameters -&gt; System.Windows.Media.GeometryHitTestResult" Usage="uIElement.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters">
          <span data-ttu-id="a8f26-652">Beschreibt den durchzuführenden Treffertest, einschließlich des anfänglichen Trefferpunkts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-652">Describes the hit test to perform, including the initial hit point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-653">Implementiert <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />, um das Treffertestverhalten für Basiselemente bereitzustellen (<see cref="T:System.Windows.Media.GeometryHitTestResult" /> wird zurückgegeben).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-653">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.GeometryHitTestResult" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-654">Ergebnisse des Tests, einschließlich der ausgewerteten Geometrie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-654">Results of the test, including the evaluated geometry.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-655">Finden Sie in der ursprünglichen virtuellen Methode <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> für Informationen zu weiteren Überschreiben dieser Methode in Klassen abgeleiteten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-655">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="a8f26-656">Beachten Sie, dass mehrere bestimmter Steuerelemente (<xref:System.Windows.Controls.TextBlock>, z. B.) haben unterschiedliche Implementierungen, die dieser Grenze außer Kraft setzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-656">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override this one.</span></span>  
  
 <span data-ttu-id="a8f26-657">Diese Methode ist nicht vorgesehen, die vom Anwendungscode aus aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-657">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="a8f26-658">Diese Methode unterstützt interne Treffertestverhalten, die durch verschiedene Aspekte des Eingabesystems verfügbar gemacht werden (sowohl der Mauszeiger auf ein Element, z. B.).</span><span class="sxs-lookup"><span data-stu-id="a8f26-658">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="override this.HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult" Usage="uIElement.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters">
          <span data-ttu-id="a8f26-659">Beschreibt den durchzuführenden Treffertest, einschließlich des anfänglichen Trefferpunkts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-659">Describes the hit test to perform, including the initial hit point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-660">Implementiert <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" />, um das Treffertestverhalten für Basiselemente bereitzustellen (<see cref="T:System.Windows.Media.HitTestResult" /> wird zurückgegeben).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-660">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.HitTestResult" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-661">Die Ergebnisse des Tests, einschließlich des ausgewerteten Punkts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-661">Results of the test, including the evaluated point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-662">Finden Sie in der ursprünglichen virtuellen Methode <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> für Informationen zu weiteren Überschreiben dieser Methode in Klassen abgeleiteten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-662">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="a8f26-663">Beachten Sie, dass mehrere bestimmter Steuerelemente (<xref:System.Windows.Controls.TextBlock>, z. B.) haben unterschiedliche Implementierungen, die außer Kraft setzen <xref:System.Windows.UIElement.HitTestCore%2A> gemäß <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-663">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override <xref:System.Windows.UIElement.HitTestCore%2A> as defined by <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="a8f26-664">Diese Methode ist nicht vorgesehen, die vom Anwendungscode aus aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-664">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="a8f26-665">Diese Methode unterstützt interne Treffertestverhalten, die durch verschiedene Aspekte des Eingabesystems verfügbar gemacht werden (sowohl der Mauszeiger auf ein Element, z. B.).</span><span class="sxs-lookup"><span data-stu-id="a8f26-665">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBindings : System.Windows.Input.InputBindingCollection" Usage="System.Windows.UIElement.InputBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-666">Ruft die Auflistung der mit diesem Element verbundenen Eingabebindungen ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-666">Gets the collection of input bindings associated with this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-667">Die Auflistung der Eingabebindungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-667">The collection of input bindings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-668">Eingabebindungen unterstützen die Bindung der Befehle aus, um Eingabegeräte.</span><span class="sxs-lookup"><span data-stu-id="a8f26-668">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="a8f26-669">Z. B. <xref:System.Windows.Input.MouseBinding> implementiert eingabebindungen auf, die Eigenschaften enthalten, die speziell für Mausgeräte sind.</span><span class="sxs-lookup"><span data-stu-id="a8f26-669">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are particular to mouse devices.</span></span>  
  
 <span data-ttu-id="a8f26-670">Die Auflistung der eingabebindungen umfasst sowohl eingabebindungen, die in den Typ zu beziehen, sowie eingabebindungen, die für die Instanz deklariert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-670">The collection of input bindings will include both input bindings that pertain to the type as well as input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="a8f26-671">Eine verwandte Eigenschaft <xref:System.Windows.UIElement.CommandBindings%2A>, verwaltet eine Auflistung von befehlsbindungen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-671">A related property, <xref:System.Windows.UIElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="a8f26-672">Diese unterscheiden sich von eingabebindungen bei, dass sie die nächste Ebene nach unten der befehlsverarbeitung - Aktionen darstellen, die auf bekannten Befehle gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="a8f26-672">These differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="a8f26-673">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="a8f26-673">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  
  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a8f26-674">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="a8f26-674">XAML Values</span></span>  
 <span data-ttu-id="a8f26-675">*oneOrMoreInputBindings*</span><span class="sxs-lookup"><span data-stu-id="a8f26-675">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="a8f26-676">Eine oder mehrere <xref:System.Windows.Input.InputBinding> Elemente (in der Regel die <xref:System.Windows.Input.KeyBinding> oder <xref:System.Windows.Input.MouseBinding> abgeleiteten Klassen).</span><span class="sxs-lookup"><span data-stu-id="a8f26-676">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="a8f26-677">Jedes davon wird erwartet, damit eine <xref:System.Windows.Input.InputBinding.Command%2A> und <xref:System.Windows.Input.InputBinding.Gesture%2A> -Attribut festgelegt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-677">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-678">Das folgende Beispiel füllt diese Eigenschaft auf einen <xref:System.Windows.Window>, mit einem einzelnen <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-678">The following example populates this property on a <xref:System.Windows.Window>, with a single <xref:System.Windows.Input.KeyBinding>.</span></span>  
  
 [!code-xaml[CommandingOverviewSnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 <span data-ttu-id="a8f26-679">Weitere Informationen zu den [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Syntax für Auflistungen, finden Sie unter [XAML-Syntax im Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-679">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="InputHitTest">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement InputHitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.IInputElement InputHitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::IInputElement ^ InputHitTest(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.InputHitTest : System.Windows.Point -&gt; System.Windows.IInputElement" Usage="uIElement.InputHitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="a8f26-680">Die Offsetkoordinaten innerhalb dieses Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-680">The offset coordinates within this element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-681">Gibt das Eingabeelement innerhalb des aktuellen Elements zurück, das sich an den angegebenen Koordinaten befindet, relativ zum Ursprung des aktuellen Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-681">Returns the input element within the current element that is at the specified coordinates, relative to the current element's origin.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-682">Das untergeordnete Element, das sich an der angegebenen Position befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-682">The element child that is located at the given position.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-683"><xref:System.Windows.IInputElement> als Rückgabetyp, zurückgegeben, da dieses Typs eine allgemeine Schnittstelle für beide ist <xref:System.Windows.UIElement> und <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-683"><xref:System.Windows.IInputElement> is returned as the return type, because that type is a common interface for both <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="a8f26-684">Sie können dann entsprechend umwandeln den Rückgabetyp oder die Schnittstelleninstanz für bestimmte Elemente, die von definiert sind die <xref:System.Windows.IInputElement> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="a8f26-684">You can then cast the return type appropriately, or use the interface instance for certain members that are defined by the <xref:System.Windows.IInputElement> interface.</span></span>  
  
 <span data-ttu-id="a8f26-685">Diese Methode wird in der Regel nicht vom Anwendungscode aus aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-685">This method typically is not called from your application code.</span></span> <span data-ttu-id="a8f26-686">Das Aufrufen dieser Methode ist nur geeignet, wenn Sie beabsichtigen, eine beträchtliche Menge an die low-Level input Funktionen erneut zu implementieren, die bereits vorhanden ist, z. B. mauslogik-Gerät neu zu erstellen sind.</span><span class="sxs-lookup"><span data-stu-id="a8f26-686">Calling this method is only appropriate if you intend to re-implement a substantial amount of the low level input features that are already present, such as recreating mouse device logic.</span></span>  
  
 <span data-ttu-id="a8f26-687"><xref:System.Windows.IContentHost> Verträge einer <xref:System.Windows.IContentHost.InputHitTest%2A> Methode mit der gleichen Signatur, die einige Elemente explizit implementiert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-687"><xref:System.Windows.IContentHost> contracts an <xref:System.Windows.IContentHost.InputHitTest%2A> method with the same signature, which some elements choose to implement explicitly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateArrange">
      <MemberSignature Language="C#" Value="public void InvalidateArrange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateArrange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateArrange" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateArrange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateArrange();" />
      <MemberSignature Language="F#" Value="member this.InvalidateArrange : unit -&gt; unit" Usage="uIElement.InvalidateArrange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-688">Erklärt den Anordnungszustand (das Layout) des Elements für ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-688">Invalidates the arrange state (layout) for the element.</span>
          </span>
          <span data-ttu-id="a8f26-689">Nach der Ungültigkeitserklärung wird das Layout für das Element aktualisiert. Dies ist ein asynchroner Vorgang, es sei denn, er wird nachfolgend durch <see cref="M:System.Windows.UIElement.UpdateLayout" /> erzwungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-689">After the invalidation, the element will have its layout updated, which will occur asynchronously unless subsequently forced by <see cref="M:System.Windows.UIElement.UpdateLayout" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-690">Häufig Aufrufe an <xref:System.Windows.UIElement.InvalidateArrange%2A> oder für bestimmten <xref:System.Windows.UIElement.UpdateLayout%2A> haben Sie die Leistung erheblich beeinträchtigen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-690">Frequent calls to <xref:System.Windows.UIElement.InvalidateArrange%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="a8f26-691">Vermeiden Sie daher, diese Methode aufrufen, es sei denn, Sie absolut genauen Layoutzustand für nachfolgende Aufrufe von anderen benötigen [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in Ihrem Code.</span><span class="sxs-lookup"><span data-stu-id="a8f26-691">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in your code.</span></span> <span data-ttu-id="a8f26-692">Ein erweitertes Szenario, in denen möglicherweise Sie rufen <xref:System.Windows.UIElement.InvalidateArrange%2A> wird bei der Erstellung einer <xref:System.Windows.PropertyChangedCallback> für eine Abhängigkeitseigenschaft, die nicht auf eine <xref:System.Windows.Freezable> oder <xref:System.Windows.FrameworkElement> abgeleitete Klasse, die jedoch immer noch die Anordnungsübergabe des Layouts beeinflusst, wenn sich diese ändern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-692">An advanced scenario where you might call <xref:System.Windows.UIElement.InvalidateArrange%2A> is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the arrange pass of layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateMeasure">
      <MemberSignature Language="C#" Value="public void InvalidateMeasure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateMeasure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateMeasure" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateMeasure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateMeasure();" />
      <MemberSignature Language="F#" Value="member this.InvalidateMeasure : unit -&gt; unit" Usage="uIElement.InvalidateMeasure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-693">Erklärt den Maßzustand (Layout) des Elements für ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-693">Invalidates the measurement state (layout) for the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-694">Das Aufrufen dieser Methode auch Aufrufe <xref:System.Windows.UIElement.InvalidateArrange%2A> intern, besteht keine Notwendigkeit zum Aufrufen <xref:System.Windows.UIElement.InvalidateMeasure%2A> und <xref:System.Windows.UIElement.InvalidateArrange%2A> nacheinander.</span><span class="sxs-lookup"><span data-stu-id="a8f26-694">Calling this method also calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally, there is no need to call <xref:System.Windows.UIElement.InvalidateMeasure%2A> and <xref:System.Windows.UIElement.InvalidateArrange%2A> in succession.</span></span> <span data-ttu-id="a8f26-695">Nach der Ungültigkeitserklärung wird das-Element das Layout aktualisiert, was asynchron, es sei denn, erfolgt, haben <xref:System.Windows.UIElement.UpdateLayout%2A> wird aufgerufen, um eine synchrone layoutänderung zu erzwingen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-695">After the invalidation, the element will have its layout updated, which will occur asynchronously, unless <xref:System.Windows.UIElement.UpdateLayout%2A> is called to force a synchronous layout change.</span></span>  
  
 <span data-ttu-id="a8f26-696">Das WPF-Frameworkebene Layoutsystem führt seine eigene Behandlung der Änderungen in der visuellen Struktur eines Elements und in der am häufigsten vorkommenden Fälle der Layout-invalidierung des Layoutsystems ist die Entsprechung dieser Methode bei Bedarf aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-696">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and in most common layout invalidation cases the layout system is calling the equivalent of this method when necessary.</span></span> <span data-ttu-id="a8f26-697">Sie sollten diese Methode nur aufrufen, wenn Sie eine vollständiges Layout-Implementierung, die Bearbeitung der Elementstruktur oder ähnliche ein erweitertes Szenario anweisen, erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-697">You should only call this method if you are producing a complete layout implementation, which does direct manipulation of the element tree, or similar advanced scenarios.</span></span> <span data-ttu-id="a8f26-698">Ein solches erweiterte Szenario ist bei der Erstellung einer <xref:System.Windows.PropertyChangedCallback> für eine Abhängigkeitseigenschaft, die nicht auf eine <xref:System.Windows.Freezable> oder <xref:System.Windows.FrameworkElement> abgeleitete Klasse, die jedoch immer noch die Maßübergabe des Layouts beeinflusst, wenn sich diese ändern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-698">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the measure pass of layout when it changes.</span></span>  
  
 <span data-ttu-id="a8f26-699">Häufig Aufrufe an <xref:System.Windows.UIElement.InvalidateMeasure%2A> oder für bestimmten <xref:System.Windows.UIElement.UpdateLayout%2A> haben Sie die Leistung erheblich beeinträchtigen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-699">Frequent calls to <xref:System.Windows.UIElement.InvalidateMeasure%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="a8f26-700">Vermeiden Sie daher, diese Methode aufrufen, es sei denn, Sie absolut genauen Layoutzustand für nachfolgende Aufrufe von anderen benötigen [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in Ihrem Code.</span><span class="sxs-lookup"><span data-stu-id="a8f26-700">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateVisual">
      <MemberSignature Language="C#" Value="public void InvalidateVisual ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateVisual() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateVisual" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateVisual ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateVisual();" />
      <MemberSignature Language="F#" Value="member this.InvalidateVisual : unit -&gt; unit" Usage="uIElement.InvalidateVisual " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-701">Macht das Rendern des Elements ungültig und erzwingt einen vollständig neuen Layoutdurchlauf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-701">Invalidates the rendering of the element, and forces a complete new layout pass.</span>
          </span>
          <span data-ttu-id="a8f26-702">
            <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> wird nach Abschluss des Layoutzyklus aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-702">
              <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> is called after the layout cycle is completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-703">Diese Methode ruft <xref:System.Windows.UIElement.InvalidateArrange%2A> intern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-703">This method calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally.</span></span>  
  
 <span data-ttu-id="a8f26-704">Diese Methode wird nicht in der Regel von Ihrem Anwendungscode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-704">This method is not generally called from your application code.</span></span> <span data-ttu-id="a8f26-705">Das Layoutsystem von WPF-Frameworkebene ist eine eigene Behandlung von Änderungen in der visuellen Struktur eines Elements und würde die Entsprechung dieser Methode bei Bedarf aufrufen bereits.</span><span class="sxs-lookup"><span data-stu-id="a8f26-705">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and would be calling the equivalent of this method when necessary already.</span></span> <span data-ttu-id="a8f26-706">Das Aufrufen dieser Methode ist nur für erweiterte Szenarien notwendig.</span><span class="sxs-lookup"><span data-stu-id="a8f26-706">Calling this method is necessary only for advanced scenarios.</span></span> <span data-ttu-id="a8f26-707">Ein solches erweiterte Szenario ist bei der Erstellung einer <xref:System.Windows.PropertyChangedCallback> für eine Abhängigkeitseigenschaft, die nicht auf eine <xref:System.Windows.Freezable> oder <xref:System.Windows.FrameworkElement> abgeleitete Klasse, die das Layout jedoch immer noch beeinflusst, wenn sich diese ändern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-707">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
      </Docs>
    </Member>
    <Member MemberName="IsArrangeValid">
      <MemberSignature Language="C#" Value="public bool IsArrangeValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArrangeValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsArrangeValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArrangeValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArrangeValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArrangeValid : bool" Usage="System.Windows.UIElement.IsArrangeValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-708">Ruft einen Wert ab, der angibt, ob die berechnete Größe und die berechnete Position von untergeordneten Elementen im Layout dieses Elements gültig sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-708">Gets a value indicating whether the computed size and position of child elements in this element's layout are valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-709">
            <see langword="true" />, wenn die Größe und die Position im Layout gültig sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-709">
              <see langword="true" /> if the size and position of layout are valid; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-710">Sie können erzwingen, dass die Gestaltung, die für ungültig erklärt werden, durch den Aufruf <xref:System.Windows.UIElement.InvalidateArrange%2A> für dieses Element (oder seiner übergeordneten Elemente).</span><span class="sxs-lookup"><span data-stu-id="a8f26-710">You can force arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateArrange%2A> on this element (or its parents).</span></span> <span data-ttu-id="a8f26-711">Dies kennzeichnet das Layout zur Neuerstellung zu Mal wie das Layoutsystem bestimmt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-711">This flags the layout for recomposition at such time as the layout system determines.</span></span> <span data-ttu-id="a8f26-712">Alternativ direkt aufrufen <xref:System.Windows.UIElement.UpdateLayout%2A> hergestellt werden konnte, aber dies sollte nur vorgenommen werden, wenn sicher ist, dass keine weiteren invalidierungen ausstehen (eine große Anzahl von unnötigerweise erzwungene Updates hat Leistung folgen).</span><span class="sxs-lookup"><span data-stu-id="a8f26-712">Alternatively, an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A> could be made, but this should only be done if it is certain that no further invalidations are pending (a large number of unnecessarily forced updates has performance consequences).</span></span>  
  
 <span data-ttu-id="a8f26-713"><xref:System.Windows.UIElement.IsArrangeValid%2A> nicht möglich, `true` , wenn <xref:System.Windows.UIElement.IsMeasureValid%2A> auch `true` (im Layoutprozess Anordnung nicht als gültige Layoutprozesses ungültig).</span><span class="sxs-lookup"><span data-stu-id="a8f26-713"><xref:System.Windows.UIElement.IsArrangeValid%2A> cannot be `true` unless <xref:System.Windows.UIElement.IsMeasureValid%2A> is also `true` (in the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
        <altmember cref="P:System.Windows.UIElement.IsMeasureValid" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.UIElement.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-714">Ruft einen Wert ab, der angibt, ob dieses Element in der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] aktiviert ist, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-714">Gets or sets a value indicating whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          </span>
          <span data-ttu-id="a8f26-715">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-715">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-716">
            <see langword="true" />, wenn das Element aktiviert ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-716">
              <see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-717">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-717">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-718">Beachten Sie, dass diese Eigenschaft, von Klasse-spezifische Implementierungen von beeinflusst wird <xref:System.Windows.UIElement.IsEnabledCore%2A> auf bestimmte Elemente, die häufig zur Laufzeit.</span><span class="sxs-lookup"><span data-stu-id="a8f26-718">Note that this property is influenced by class-specific implementations of <xref:System.Windows.UIElement.IsEnabledCore%2A> on particular elements, often at runtime.</span></span> <span data-ttu-id="a8f26-719">Aus diesem Grund ist der Standardwert, der hier aufgeführten manchmal nicht wirksam.</span><span class="sxs-lookup"><span data-stu-id="a8f26-719">Therefore, the default value listed here is sometimes not effective.</span></span> <span data-ttu-id="a8f26-720">Z. B. eine <xref:System.Windows.Controls.Primitives.ScrollBar> werden <xref:System.Windows.UIElement.IsEnabled%2A> `false` Wenn bestimmt wird, keine Notwendigkeit zur Unterstützung einer Bildlaufleiste besteht.</span><span class="sxs-lookup"><span data-stu-id="a8f26-720">For instance, a <xref:System.Windows.Controls.Primitives.ScrollBar> will be <xref:System.Windows.UIElement.IsEnabled%2A> `false` whenever it is determined that there is no need to support a scrollbar.</span></span> <span data-ttu-id="a8f26-721">Es wird versucht, zum Festlegen dieses Werts wird möglicherweise auch von den Rückgabewert von überschrieben <xref:System.Windows.UIElement.IsEnabledCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-721">Attempting to set this value will also potentially be overridden by the value returned by <xref:System.Windows.UIElement.IsEnabledCore%2A>.</span></span>  
  
 <span data-ttu-id="a8f26-722">Elemente, die nicht aktiviert sind keine Teilnahme am Treffertests oder den Fokus und daher nicht Quellen von Eingabeereignissen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-722">Elements that are not enabled do not participate in hit testing or focus and therefore will not be sources of input events.</span></span>  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-723">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-723">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-724">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-724">Identifier field</span></span>|<xref:System.Windows.UIElement.IsEnabledProperty>|  
|<span data-ttu-id="a8f26-725">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-725">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-726">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-726">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-727">Das folgende Beispiel zeigt einem Handler auf eine Schaltfläche, die bei der Ausführung <xref:System.Windows.UIElement.IsEnabled%2A> `false` auf einem anderen benannten Schaltfläche `b1`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-727">The following example shows a handler on one button that when executed will set <xref:System.Windows.UIElement.IsEnabled%2A> `false` on another named button `b1`.</span></span>  
  
 [!code-csharp[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/CSharp/default.xaml.cs#handler)]
 [!code-vb[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/VisualBasic/default.xaml.vb#handler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-728">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsEnabled" />-Eigenschaft für dieses Element geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-728">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsEnabled" /> property on this element changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-729">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-729">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.UIElement.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-730">Ruft einen Wert ab, der in abgeleiteten Klassen zum Rückgabewert von <see cref="P:System.Windows.UIElement.IsEnabled" /> wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-730">Gets a value that becomes the return value of <see cref="P:System.Windows.UIElement.IsEnabled" /> in derived classes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-731">
            <see langword="true" />, wenn das Element aktiviert ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-731">
              <see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a8f26-732">
            <para>Die Standardimplementierung dieser Eigenschaft den Wert speichert und auch berechnet, ob das übergeordnete Element dieses Elements aktiviert ist. (Wenn das übergeordnete Element nicht aktiviert ist, das untergeordnete Element kann nicht aktiviert werden in einer praktischen [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) Wenn Sie diese Implementierung überschreiben möchten, stellen Sie sicher, dass Sie die grundlegende Implementierung, um dieses Verhalten beizubehalten aufrufen.  Die <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> Klasse enthält eine vorhandene Implementierung von außer Kraft setzen dieser Eigenschaft. Diese Außerkraftsetzung wird bestimmt, ob der Inhalt innerhalb des Bereichs für die Inhalte den verfügbaren Bereich überschreitet. Der Inhalt den Bereich übersteigt, dass der Bildlaufleistenteil aktiviert ist. Andernfalls ist die Bildlaufleiste nicht aktiviert.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-732">
              <para>The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled. (If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.  The <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> class provides an existing override implementation of this property. This override determines whether the content inside the content presentation area exceeds the available area. If the content does exceed the area, the scrollbar portion is enabled. Otherwise, the scrollbar is not enabled.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
        <altmember cref="P:System.Windows.UIElement.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-733">Bezeichnet die <see cref="P:System.Windows.UIElement.IsEnabled" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-733">Identifies the <see cref="P:System.Windows.UIElement.IsEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="System.Windows.UIElement.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-734">Ruft einen Wert ab, der bestimmt, ob dieses Element den logischen Fokus hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-734">Gets a value that determines whether this element has logical focus.</span>
          </span>
          <span data-ttu-id="a8f26-735">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-735">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-736">
            <see langword="true" />, wenn dieses Element über den logischen Fokus verfügt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-736">
              <see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-737">Der logische Fokus kann von den Tastaturfokus abweichen, wenn eine Anwendung mehrere Bereiche konzentrieren, wie z. B. zwischen dem Inhalt des Menüs und den Rest der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-737">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="a8f26-738">In diesem Szenario wird kann über den Tastaturfokus nur auf ein Element der Benutzeroberfläche der Anwendung, bestimmte Elemente in anderen Abteilungen Fokus können jedoch behalten logischen Fokus.</span><span class="sxs-lookup"><span data-stu-id="a8f26-738">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="a8f26-739">Weitere Informationen über den logischen Fokus finden Sie unter [Fokus – Übersicht](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-739">For more information on logical focus, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="a8f26-740">Sie legen Sie nicht den Fokus durch Festlegen dieser Eigenschaft (es ist schreibgeschützt).</span><span class="sxs-lookup"><span data-stu-id="a8f26-740">You do not set focus by setting this property (it is read-only).</span></span> <span data-ttu-id="a8f26-741">Die typische Verwendung für diese Eigenschaft ist für die Verwendung als eine Abhängigkeitseigenschaft für eine <xref:System.Windows.Setter> oder <xref:System.Windows.EventTrigger>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-741">The typical use for this property is to use it as a dependency property for a <xref:System.Windows.Setter> or <xref:System.Windows.EventTrigger>.</span></span> <span data-ttu-id="a8f26-742">Um den Fokus programmgesteuert festzulegen, rufen <xref:System.Windows.UIElement.Focus%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-742">To set focus programmatically, call <xref:System.Windows.UIElement.Focus%2A>.</span></span> <span data-ttu-id="a8f26-743">Fokus kann auch festgelegt werden, durch eine Benutzeraktion oder durch Implementierungen von Sicherheitskontrollen, die Maus Erfassungsverhalten möglicherweise enthalten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-743">Focus can also be set by user action or by control implementations, which possibly include mouse capture behavior.</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-744">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-744">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-745">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-745">Identifier field</span></span>|<xref:System.Windows.UIElement.IsFocusedProperty>|  
|<span data-ttu-id="a8f26-746">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-746">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-747">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-747">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-748">Im folgende Beispiel wird einem Codehandler, der den Hintergrund eines Steuerelements ändert, wenn sie fokussiert ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-748">The following example is a code handler that changes the background of a control when it is focused.</span></span>  
  
 [!code-csharp[PopupSimple#IsFocused](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSimple/CSharp/Window1.xaml.cs#isfocused)]  
  
 <span data-ttu-id="a8f26-749">Eine weitere Möglichkeit, diesen Effekt zu erreichen ist, platziert eine <xref:System.Windows.Trigger> in die <xref:System.Windows.Style> eines Steuerelements; dieser Ansatz erfordert keine bestimmten Ereignisbehandlung mit Code-Behind und ermöglicht Designern umfassenderen Zugriff auf die interaktiven und grafische ist die [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="a8f26-749">Another common way to achieve this same effect is to place a <xref:System.Windows.Trigger> in the <xref:System.Windows.Style> of a control; this approach does not require handling specific events with code-behind and allows designers greater access to the interactive and graphical nature of the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="a8f26-750">Ein Beispiel finden Sie unter [Vorgehensweise: Erstellen einer äußeren Leuchteffekts](http://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1).</span><span class="sxs-lookup"><span data-stu-id="a8f26-750">For an example, see [How to: Create an Outer Glow Effect](http://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-751">Bezeichnet die <see cref="P:System.Windows.UIElement.IsFocused" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-751">Identifies the <see cref="P:System.Windows.UIElement.IsFocused" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisible">
      <MemberSignature Language="C#" Value="public bool IsHitTestVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsHitTestVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHitTestVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisible : bool with get, set" Usage="System.Windows.UIElement.IsHitTestVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-752">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob dieses Element möglicherweise als Treffertestergebnis von einem Teil des gerenderten Inhalts zurückgegeben werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-752">Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content.</span>
          </span>
          <span data-ttu-id="a8f26-753">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-753">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-754">
            <see langword="true" />, wenn dieses Element als Ergebnis eines Treffertests von mindestens einem Punkt zurückgegeben werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-754">
              <see langword="true" /> if this element could be returned as a hit test result from at least one point; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-755">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-755">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-756">Der effektive Wert dieser Eigenschaft wird durch die relativen Positionen der Treffer getestet werden Elemente in der logischen Struktur beeinflusst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-756">The effective value of this property is influenced by the relative positions of hit testable elements in the logical tree.</span></span> <span data-ttu-id="a8f26-757">Z. B. wenn ein Element ein untergeordnetes Element des Elements, das ist kein Treffertest angezeigt wurde, der effektive Wert der Eigenschaft für das untergeordnete Element bleibt `false`, auch wenn Sie versuchen, dieser Wert lokal festgelegt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-757">For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain `false`, even if attempting to set that value locally.</span></span> <span data-ttu-id="a8f26-758">Aus diesem Grund ist es wichtig, dass Sie nicht festlegen <xref:System.Windows.UIElement.IsHitTestVisible%2A> zu `false` für ein zusammengesetztes Steuerelement es sei denn, Sie möchten eine Eingabe bzw. keine Treffertests auf dieses Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="a8f26-758">For this reason, it is important that you do not set <xref:System.Windows.UIElement.IsHitTestVisible%2A> to `false` on a composited control unless you do not want any input or hit testing on that control.</span></span> <span data-ttu-id="a8f26-759">Weitere Informationen zu Treffertests finden Sie unter [Treffertests in der visuellen Ebene](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-759">For more information on hit testing, see [Hit Testing in the Visual Layer](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHitTestVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-760">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-760">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-761">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-761">Identifier field</span></span>|<xref:System.Windows.UIElement.IsHitTestVisibleProperty>|  
|<span data-ttu-id="a8f26-762">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-762">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-763">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-763">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsHitTestVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsHitTestVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-764">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsHitTestVisible" />-Abhängigkeitseigenschaft für dieses Element geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-764">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-765">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-765">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHitTestVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsHitTestVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHitTestVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHitTestVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHitTestVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsHitTestVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-766">Bezeichnet die <see cref="P:System.Windows.UIElement.IsHitTestVisible" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-766">Identifies the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodEnabled : bool" Usage="System.Windows.UIElement.IsInputMethodEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-767">Ruft einen Wert ab, der angibt, ob ein Eingabemethodensystem (beispielsweise [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)]) für die Verarbeitung von Eingaben für dieses Element aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-767">Gets a value indicating whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)],  is enabled for processing the input to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-768">
            <see langword="true" />, wenn eine Eingabemethode aktiv ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-768">
              <see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-769">Der Standardwert der zugrunde liegenden angefügten Eigenschaft ist <see langword="true;" /> jedoch wird dies durch den tatsächlichen Zustand der Eingabemethoden zur Laufzeit beeinflusst werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-769">The default value of the underlying attached property is <see langword="true;" /> however, this will be influenced by the actual state of input methods at runtime.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-770">Diese Eigenschaft gibt den Wert, der durch die angefügte Eigenschaft zurückgegeben wird <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> für den derzeit aktivierten Eingabemethoden (Tastatur, Sprache und andere Eingabegeräte).</span><span class="sxs-lookup"><span data-stu-id="a8f26-770">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocused : bool" Usage="System.Windows.UIElement.IsKeyboardFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-771">Ruft einen Wert ab, der angibt, ob dieses Element über den Tastaturfokus verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-771">Gets a value indicating whether this element has keyboard focus.</span>
          </span>
          <span data-ttu-id="a8f26-772">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-772">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-773">
            <see langword="true" />, wenn dieses Element über den Tastaturfokus verfügt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-773">
              <see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-774">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-774">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-775">Änderungen an den festgelegten Wert dieser Eigenschaft können von Ereignisse in Zusammenhang mit Fokus begleitet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-775">Changes to the determined value of this property may be accompanied by focus-related events.</span></span>  
  
 <span data-ttu-id="a8f26-776"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> und <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> dienen meist innerhalb von Ereignishandlern für die Klasse für andere Eingabe-bezogene Ereignisse, z. B. um zu bestimmen, ob das Element bereits über den Tastaturfokus verfügt, oder zu Ermittlung, wenn mit der Maus und Tastaturereignisse im Zusammenhang treten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-776"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-777">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-777">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-778">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-778">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="a8f26-779">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-779">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-780">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-780">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
        <altmember cref="E:System.Windows.UIElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-781">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsKeyboardFocused" />-Eigenschaft für dieses Element geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-781">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-782">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-782">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsKeyboardFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-783">Bezeichnet die <see cref="P:System.Windows.UIElement.IsKeyboardFocused" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-783">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithin : bool" Usage="System.Windows.UIElement.IsKeyboardFocusWithin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-784">Ruft einen Wert ab, der angibt, ob sich der Tastaturfokus innerhalb des Elements oder in seinen untergeordneten Elementen in der visuellen Struktur befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-784">Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.</span>
          </span>
          <span data-ttu-id="a8f26-785">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-785">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-786">
            <see langword="true" />, wenn sich der Tastaturfokus auf dem Element oder seinen untergeordneten Elementen befindet, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-786">
              <see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-787">Änderungen des Werts dieser Eigenschaft in der Regel Auslösen der <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> -Ereignis, es sei denn, eine abgeleitete Klasse außer Kraft gesetzt hat <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> unterdrückt werden, das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-787">Changes to the value of this property typically raise the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="a8f26-788">Diese Eigenschaft wird nicht direkt festgelegt, aber Sie können den Fokus auf ein Element festlegen, durch den Aufruf <xref:System.Windows.UIElement.Focus%2A>, oder durch die Erstellung einer <xref:System.Windows.UIElement.MoveFocus%2A> Anforderung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-788">You do not set this property directly, but you can set the focus to an element by calling <xref:System.Windows.UIElement.Focus%2A>, or by making a <xref:System.Windows.UIElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="a8f26-789">Beide Methoden rufen möglicherweise Wert dieser Eigenschaft geändert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-789">Either of these method calls might change this property value.</span></span>  
  
 <span data-ttu-id="a8f26-790"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> und <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> werden in der Regel zum im Ereignishandler für die Klasse anderen Eingabe-bezogene Ereignisse, z. B. um zu bestimmen, ob das Element bereits über den Tastaturfokus verfügt, oder zu Ermittlung, wenn mit der Maus und Tastaturereignisse im Zusammenhang treten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-790"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-791">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-791">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-792">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-792">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="a8f26-793">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-793">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-794">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-794">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-795">Tritt ein, wenn der Wert der <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />-Eigenschaft für dieses Element geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-795">Occurs when the value of the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-796">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-796">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsKeyboardFocusWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-797">Bezeichnet die <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-797">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabled">
      <MemberSignature Language="C#" Value="public bool IsManipulationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManipulationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsManipulationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsManipulationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManipulationEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsManipulationEnabled : bool with get, set" Usage="System.Windows.UIElement.IsManipulationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-798">Ruft einen Wert ab, der angibt, ob Manipulationsereignisse in dieser <see cref="T:System.Windows.UIElement" />-Klasse aktiviert werden, oder legt ihn fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-798">Gets or sets a value that indicates whether manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-799">
            <see langword="true" />, wenn Manipulationsereignisse in dieser <see cref="T:System.Windows.UIElement" />-Klasse aktiviert werden, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-799">
              <see langword="true" /> if manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-800">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-800">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-801">Legen Sie diese Eigenschaft auf "true", wenn Sie möchten die <xref:System.Windows.UIElement> zum Empfangen der <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationStarted>, <xref:System.Windows.UIElement.ManipulationDelta>, <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>, und <xref:System.Windows.UIElement.ManipulationCompleted> Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-801">Set this property to true if you want the <xref:System.Windows.UIElement> to receive the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationStarted>, <xref:System.Windows.UIElement.ManipulationDelta>, <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>, and <xref:System.Windows.UIElement.ManipulationCompleted> events.</span></span> <span data-ttu-id="a8f26-802">Weitere Informationen zu Manipulationen, finden Sie unter den [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-802">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="a8f26-803">Ein Beispiel für eine Anwendung, die auf Manipulationen reagiert, finden Sie unter [Exemplarische Vorgehensweise: der ersten Fingereingabeanwendung erstellen](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-803">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-804">Das folgende Beispiel erstellt eine Anwendung mit einem roten Rechteck.</span><span class="sxs-lookup"><span data-stu-id="a8f26-804">The following example creates an application that has a red Rectangle.</span></span>  <span data-ttu-id="a8f26-805">Die <xref:System.Windows.UIElement.IsManipulationEnabled%2A> -Eigenschaft des Rechtecks ist auf True festgelegt und der Anwendung abonniert die <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, und <xref:System.Windows.UIElement.ManipulationInertiaStarting> Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-805">The <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property of the Rectangle is set to true and the application's window subscribes to the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, and <xref:System.Windows.UIElement.ManipulationInertiaStarting> events.</span></span> <span data-ttu-id="a8f26-806">In diesem Beispiel ist Teil eines umfangreicheren Beispiels unter [Exemplarische Vorgehensweise: der ersten Fingereingabeanwendung erstellen](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-806">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-xaml[BasicManipulation#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml#ui)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsManipulationEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsManipulationEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsManipulationEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsManipulationEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsManipulationEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsManipulationEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsManipulationEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-807">Bezeichnet die <see cref="P:System.Windows.UIElement.IsManipulationEnabled" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-807">Identifies the <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMeasureValid">
      <MemberSignature Language="C#" Value="public bool IsMeasureValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMeasureValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMeasureValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMeasureValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMeasureValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMeasureValid : bool" Usage="System.Windows.UIElement.IsMeasureValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-808">Ruft einen Wert ab, der angibt, ob die aktuelle, vom Layoutmaß zurückgegebene Größe gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-808">Gets a value indicating whether the current size returned by layout measure is valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-809">
            <see langword="true" />, wenn von der Maßübergabe des Layouts ein gültiger und aktueller Wert zurückgegeben wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-809">
              <see langword="true" /> if the measure pass of layout returned a valid and current value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-810">Sie können erzwingen, Messung und Gestaltung, die für ungültig erklärt werden, durch den Aufruf <xref:System.Windows.UIElement.InvalidateMeasure%2A> für dieses Element (oder von übergeordneten Elementen die visuelle Struktur).</span><span class="sxs-lookup"><span data-stu-id="a8f26-810">You can force measurement and arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateMeasure%2A> on this element (or any parent element up the visual tree).</span></span> <span data-ttu-id="a8f26-811">Dies kennzeichnet das Layout für die Neuerstellung asynchron zu einem Zeitpunkt bestimmt durch das Layoutsystem auftreten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-811">This designates the layout for recomposition asynchronously, occurring at a time determined by the layout system.</span></span> <span data-ttu-id="a8f26-812">Alternativ können Sie direkt aufrufen machen <xref:System.Windows.UIElement.UpdateLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-812">Alternatively, you could make an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A>.</span></span> <span data-ttu-id="a8f26-813">Sie sollten jedoch nur aufrufen, <xref:System.Windows.UIElement.UpdateLayout%2A> ist es wahrscheinlich, dass keine weiteren invalidierungen ausstehen (eine große Anzahl von unnötigerweise erzwungene Updates wird können die Leistung beeinträchtigen).</span><span class="sxs-lookup"><span data-stu-id="a8f26-813">However, you should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if it is likely that no further invalidations are pending (a large number of unnecessarily forced updates will have performance consequences).</span></span>  
  
 <span data-ttu-id="a8f26-814">Wenn <xref:System.Windows.UIElement.IsMeasureValid%2A> ist `false`, <xref:System.Windows.UIElement.IsArrangeValid%2A> zudem muss `false` (gemäß der erzwungenen Logik im Layoutprozess, Anordnung nicht als gültige Layoutprozesses gültig).</span><span class="sxs-lookup"><span data-stu-id="a8f26-814">If <xref:System.Windows.UIElement.IsMeasureValid%2A> is `false`, <xref:System.Windows.UIElement.IsArrangeValid%2A> must also be `false` (by the enforced logic of the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptured : bool" Usage="System.Windows.UIElement.IsMouseCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-815">Ruft einen Wert ab, der angibt, ob die Maus für dieses Element erfasst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-815">Gets a value indicating whether the mouse is captured to this element.</span>
          </span>
          <span data-ttu-id="a8f26-816">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-816">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-817">
            <see langword="true" />, wenn das Element Mauseingaben erfasst, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-817">
              <see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-818">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-818">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-819">Status der Mausaufzeichnung bezieht sich auf prozessinternen Drag & Drop-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="a8f26-819">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-820">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-820">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-821">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-821">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="a8f26-822">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-822">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-823">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-823">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-824">Im folgende Beispiel wird die den Status der mausaufzeichnung ein- oder ausschalten, je nachdem, ob die Maus für das Element bereits erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-824">The following example turns the mouse capture state on or off based on whether the mouse is already captured for the element.</span></span>  
  
 <span data-ttu-id="a8f26-825">Wenn die Maus erfasst werden an anderer Stelle das Erfassen von Mauseingaben für dieses Element festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-825">If mouse capture is elsewhere, the mouse capture is set to that element.</span></span> <span data-ttu-id="a8f26-826">Wenn das Element die Erfassung von Mauseingaben hatten, wird es durch Aufrufen von gelöscht <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> mit einer null-Eingabe.</span><span class="sxs-lookup"><span data-stu-id="a8f26-826">If the element had mouse capture, it is cleared by calling <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with a null input.</span></span>  
  
 [!code-csharp[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#ismousecaptured)]
 [!code-vb[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-827">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsMouseCaptured" />-Eigenschaft für dieses Element geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-827">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-828">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-828">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-829">Bezeichnet die <see cref="P:System.Windows.UIElement.IsMouseCaptured" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-829">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithin : bool" Usage="System.Windows.UIElement.IsMouseCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-830">Ruft einen Wert ab, der bestimmt, ob die Mausaufzeichnung in diesem Element oder in untergeordneten Elementen in seiner visuellen Struktur enthalten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-830">Gets a value that determines whether mouse capture is held by this element or by child elements in its visual tree.</span>
          </span>
          <span data-ttu-id="a8f26-831">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-831">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-832">
            <see langword="true" />, wenn für dieses Element oder ein enthaltenes Element die Erfassung von Mauseingaben festgelegt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-832">
              <see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-833">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-833">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-834">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-834">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="a8f26-835">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-835">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-836">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-836">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-837">Tritt ein, wenn der Wert der <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> für dieses Element geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-837">Occurs when the value of the <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-838">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-838">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-839">Bezeichnet die <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-839">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOver : bool" Usage="System.Windows.UIElement.IsMouseDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-840">Ruft einen Wert ab, der angibt, ob die Position des Mauszeigers den Treffertestergebnissen entspricht, für die die Elementzusammensetzung berücksichtigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-840">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span>
          </span>
          <span data-ttu-id="a8f26-841">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-841">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-842">
            <see langword="true" /> Wenn der Mauszeiger über demselben Elementergebnis wie ein Treffertest befindet; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-842">
              <see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-843">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-843">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-844">Im Gegensatz zu <xref:System.Windows.UIElement.IsMouseOver%2A>, diese Eigenschaft ist nur `true` , wenn der Mauszeiger über dem literal-Element befindet, als auch für einen Treffertest.</span><span class="sxs-lookup"><span data-stu-id="a8f26-844">Unlike <xref:System.Windows.UIElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element—as it is for a hit test.</span></span> <span data-ttu-id="a8f26-845">Wenn der Mauszeiger stattdessen über ein untergeordnetes Element enthalten ist, insbesondere über Elemente, die Teil eines Elements umfangreichere Vorlage und Zusammensetzung zu dieser Eigenschaft werden `false`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-845">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="a8f26-846">Es sei denn, Sie wissen, wie ein Steuerelement so zusammengesetzt ist (z. B. Sie verwenden diese Eigenschaft in einer benutzerdefinierten Steuerelementvorlage für ein Steuerelement, das Sie definieren), diese Eigenschaft möglicherweise unerwartete Ergebnisse zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-846">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="a8f26-847">Verwenden Sie für die meisten Szenarien, in dem Sie keine Steuerelemente erstellt werden, <xref:System.Windows.UIElement.IsMouseOver%2A> stattdessen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-847">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="a8f26-848">Wenn die Maus von diesem Element erfasst wird, und diese Eigenschaft ist `true` zum Zeitpunkt der Erfassung, diese Eigenschaft wird weiterhin zurück `true` bis Mausauswahl verloren, und der Zeiger nicht über die Grenzen ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-848">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-849">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-849">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-850">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-850">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="a8f26-851">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-851">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-852">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-852">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-853">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />-Eigenschaft für dieses Element geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-853">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-854">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-854">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-855">Bezeichnet die <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-855">Identifies the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseOver : bool" Usage="System.Windows.UIElement.IsMouseOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-856">Ruft einen Wert ab, der angibt, ob sich der Mauszeiger über diesem Element (einschließlich der untergeordneten Elemente in der visuellen Struktur) befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-856">Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).</span>
          </span>
          <span data-ttu-id="a8f26-857">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-857">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-858">
            <see langword="true" />, wenn sich der Mauszeiger über dem Element oder seinen untergeordneten Elementen befindet, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-858">
              <see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-859">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-859">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-860">In der Regel sind Steuerelemente so zusammengesetzt, dass die verschiedenen Elemente innerhalb des Steuerelements (der visuellen Struktur) werden den Zustand von Mauseingaben für das enthaltende Steuerelement melden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-860">Typically, controls are composited such that the various elements inside the control (the visual tree) will all report the mouse state for the containing control.</span></span> <span data-ttu-id="a8f26-861">Z. B. eine <xref:System.Windows.Controls.ListBox> Steuerelement Stil meldet <xref:System.Windows.UIElement.IsMouseOver%2A> als `true` , wenn der Mauszeiger an einer beliebigen Stelle Geometrie befindet, einschließlich aller <xref:System.Windows.Controls.ListBoxItem>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-861">For example, a <xref:System.Windows.Controls.ListBox> style control will report <xref:System.Windows.UIElement.IsMouseOver%2A> as `true` if the mouse is anywhere over its geometry, including any <xref:System.Windows.Controls.ListBoxItem>.</span></span>  
  
 <span data-ttu-id="a8f26-862">Obwohl ein Analog "IsMouseOverChanged"-Ereignis nicht vorhanden ist, sind mehrere ähnliche Ereignisse auf.</span><span class="sxs-lookup"><span data-stu-id="a8f26-862">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="a8f26-863">Sie können z. B. behandeln <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>, und <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-863">For example, you can handle <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>, and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="a8f26-864">Wenn dieses Element die Mausauswahl erhält, wird diese Eigenschaft bleibt `true` bis Mausauswahl verloren, und der Mauszeiger der Grenzen des Elements verlässt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-864">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
 <span data-ttu-id="a8f26-865">Einige Steuerelemente erfasst absichtlich die Maus auf bestimmte Aktionen, die nicht angezeigt werden, auf die Maus direkt betreffen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-865">Some controls deliberately capture the mouse on certain actions that do not appear to directly involve the mouse.</span></span> <span data-ttu-id="a8f26-866">Dies kann dazu führen <xref:System.Windows.UIElement.IsMouseOver%2A> wird `true` , obwohl das anscheinend nicht die Maus bewegt wurde.</span><span class="sxs-lookup"><span data-stu-id="a8f26-866">This can lead to <xref:System.Windows.UIElement.IsMouseOver%2A> being `true` even though the mouse has not apparently moved.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-867">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-867">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-868">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-868">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseOverProperty>|  
|<span data-ttu-id="a8f26-869">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-869">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-870">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-870">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-871">Im folgende Beispiel verweist diese Eigenschaft auf, weil der Eigenschaftentyp des eine <xref:System.Windows.Trigger>, der Teil einer \<Style.Triggers > Block.</span><span class="sxs-lookup"><span data-stu-id="a8f26-871">The following example references this property as the property type of a <xref:System.Windows.Trigger>, part of a \<Style.Triggers> block.</span></span> <span data-ttu-id="a8f26-872">Wenn der Mauszeiger über dem Steuerelement befindet, der Steuerelementtext Blau, und der Mauszeiger als Hand.</span><span class="sxs-lookup"><span data-stu-id="a8f26-872">If the mouse is over the control, the control text turns blue and the cursor becomes a hand.</span></span>  
  
 [!code-xaml[ListViewChkBox#Trigger](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewChkBox/CS/window1.xaml#trigger)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-873">Bezeichnet die <see cref="P:System.Windows.UIElement.IsMouseOver" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-873">Identifies the <see cref="P:System.Windows.UIElement.IsMouseOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptured : bool" Usage="System.Windows.UIElement.IsStylusCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-874">Ruft einen Wert ab, der angibt, ob der Tablettstift für dieses Element erfasst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-874">Gets a value indicating whether the stylus is captured by this element.</span>
          </span>
          <span data-ttu-id="a8f26-875">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-875">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-876">
            <see langword="true" />, wenn das Element Tablettstifteingaben erfasst, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-876">
              <see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-877">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-877">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-878">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-878">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-879">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-879">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-880">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-880">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-881">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-881">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="a8f26-882">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-882">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-883">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-883">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-884">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsStylusCaptured" />-Eigenschaft für dieses Element geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-884">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-885">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-885">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-886">Bezeichnet die <see cref="P:System.Windows.UIElement.IsStylusCaptured" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-886">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithin : bool" Usage="System.Windows.UIElement.IsStylusCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-887">Ruft einen Wert ab, der bestimmt, ob die Tablettstifterfassung von diesem Element oder von einem Element innerhalb der Elementgrenzen und dessen visueller Struktur aufgenommen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-887">Gets a value that determines whether stylus capture is held by this element, or an element within the element bounds and its visual tree.</span>
          </span>
          <span data-ttu-id="a8f26-888">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-888">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-889">
            <see langword="true" />, wenn für dieses Element oder ein enthaltenes Element die Erfassung von Tablettstifteingaben festgelegt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-889">
              <see langword="true" /> if this element or a contained element has stylus capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-890">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-890">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-891">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-891">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-892">Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-892">For more information, see [Touch Input Support in Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-893">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-893">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-894">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-894">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="a8f26-895">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-895">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-896">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-896">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="P:System.Windows.UIElement.IsStylusCaptured" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-897">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" />-Eigenschaft für dieses Element geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-897">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-898">Dies ist eine [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-898">This is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-899">Bezeichnet die <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-899">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOver : bool" Usage="System.Windows.UIElement.IsStylusDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-900">Ruft einen Wert ab, der angibt, ob die Position des Tablettstifts den Treffertestergebnissen entspricht, für die die Elementzusammensetzung berücksichtigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-900">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span>
          </span>
          <span data-ttu-id="a8f26-901">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-901">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-902">
            <see langword="true" />, wenn sich der Tablettstiftzeiger über demselben Elementergebnis wie ein Treffertest befindet, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-902">
              <see langword="true" /> if the stylus pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-903">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-903">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-904">Im Gegensatz zu <xref:System.Windows.UIElement.IsStylusOver%2A>, diese Eigenschaft ist nur `true` , wenn der Tablettstift über dem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-904">Unlike <xref:System.Windows.UIElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="a8f26-905">Wenn der Tablettstift stattdessen über ein untergeordnetes Element oder Elemente, die Teil eines Elements tiefer zusammensetzen (der visuellen Struktur) sind, gibt diese Eigenschaft werden `false`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-905">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be `false`.</span></span>  
  
 <span data-ttu-id="a8f26-906">Es sei denn, Sie wissen, wie ein Steuerelement so zusammengesetzt ist (z. B. Sie verwenden diese Eigenschaft in einer benutzerdefinierten Steuerelementvorlage für ein Steuerelement, das Sie definieren), diese Eigenschaft möglicherweise unerwartete Ergebnisse zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-906">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="a8f26-907">Verwenden Sie für die meisten Szenarien, in dem Sie keine Steuerelemente erstellt werden, <xref:System.Windows.UIElement.IsStylusOver%2A> stattdessen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-907">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="a8f26-908">Wenn dieses Element Tablettstifteingaben erfasst und diese Eigenschaft ist `true` zum Zeitpunkt der Erfassung, diese Eigenschaft bleibt `true` bis Stiftauswahl verloren, und er sich befindet sich nicht über die Grenzen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-908">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="a8f26-909">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-909">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-910">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-910">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-911">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-911">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-912">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-912">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="a8f26-913">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-913">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-914">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-914">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-915">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" />-Eigenschaft für dieses Element geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-915">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-916">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-916">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-917">Bezeichnet die <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-917">Identifies the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusOver : bool" Usage="System.Windows.UIElement.IsStylusOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-918">Ruft einen Wert ab, der anzeigt, ob sich der Stiftcursor über diesem Element (einschließlich der untergeordneten visuellen Elemente) befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-918">Gets a value indicating whether the stylus cursor is located over this element (including visual child elements).</span>
          </span>
          <span data-ttu-id="a8f26-919">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-919">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-920">
            <see langword="true" />, wenn sich der Tablettstiftcursor über dem Element oder seinen untergeordneten Elementen befindet, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-920">
              <see langword="true" /> if stylus cursor is over the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-921">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-921">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-922">Wenn dieses Element die Stiftauswahl verfügt, wird diese Eigenschaft zurückzugebenden weiterhin `true` bis Stiftauswahl verloren, und der Zeiger, aus der Begrenzungen ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-922">If this element has stylus capture, this property will continue to return `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="a8f26-923">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-923">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-924">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-924">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-925">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-925">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-926">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-926">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusOverProperty>|  
|<span data-ttu-id="a8f26-927">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-927">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-928">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-928">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-929">Bezeichnet die <see cref="P:System.Windows.UIElement.IsStylusOver" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-929">Identifies the <see cref="P:System.Windows.UIElement.IsStylusOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Windows.UIElement.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-930">Ruft einen Wert ab, der angibt, ob dieses Element in der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] sichtbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-930">Gets a value indicating whether this element is visible in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          </span>
          <span data-ttu-id="a8f26-931">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-931">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-932">
            <see langword="true" />, wenn das Element sichtbar ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-932">
              <see langword="true" /> if the element is visible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-933">Ermittlung der <xref:System.Windows.UIElement.IsVisible%2A> Wert berücksichtigt alle Faktoren des Layouts.</span><span class="sxs-lookup"><span data-stu-id="a8f26-933">Determination of the <xref:System.Windows.UIElement.IsVisible%2A> value takes all factors of layout into account.</span></span> <span data-ttu-id="a8f26-934">Im Gegensatz dazu <xref:System.Windows.UIElement.Visibility%2A>, d.h. eine Eigenschaft festgelegt werden kann, nur gibt an, dass programmgesteuert ein Element sichtbar oder unsichtbar machen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-934">In contrast, <xref:System.Windows.UIElement.Visibility%2A>, which is a settable property, only indicates the intention to programmatically make an element visible or invisible.</span></span>  
  
 <span data-ttu-id="a8f26-935">Elemente, in denen <xref:System.Windows.UIElement.IsVisible%2A> ist `false` keine Eingabeereignisse (oder Befehlen) teilnehmen, werden nicht beeinflussen Sie entweder das Measure oder Anordnungsübergabe des Layouts, sind nicht den Fokus erhalten kann, sind nicht in einer Sequenz Registerkarte und Treffertests nicht gemeldet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-935">Elements where <xref:System.Windows.UIElement.IsVisible%2A> is `false` do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing.</span></span> <span data-ttu-id="a8f26-936">Im Gegensatz dazu sind Elemente, in denen <xref:System.Windows.UIElement.IsEnabled%2A> ist `false` , Ereignisse und Befehle und Treffertests Teil, aber auch nicht den Fokus erhalten kann.</span><span class="sxs-lookup"><span data-stu-id="a8f26-936">In contrast, elements where <xref:System.Windows.UIElement.IsEnabled%2A> is `false` will still participate in events and commands, and hit testing, but are also not focusable.</span></span>  
  
<a name="dependencyPropertyInfo_IsVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-937">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-937">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-938">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-938">Identifier field</span></span>|<xref:System.Windows.UIElement.IsVisibleProperty>|  
|<span data-ttu-id="a8f26-939">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-939">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-940">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-940">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-941">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsVisible" />-Eigenschaft für dieses Element geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-941">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsVisible" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-942">Dieses Ereignis wird nicht ausgelöst, wenn das Element nicht durch das Layoutsystem, Gründen als dem der Wert des gerendert wird, wird die <xref:System.Windows.UIElement.IsVisible%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a8f26-942">This event is not raised if the element is not being rendered by the layout system, for reasons other than the value of the <xref:System.Windows.UIElement.IsVisible%2A> property.</span></span> <span data-ttu-id="a8f26-943">Beispielsweise kann das Element nicht zugeordneten ein visuelles Element aufweisen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-943">For example, the element might not have an associated visual.</span></span>  
  
 <span data-ttu-id="a8f26-944">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-944">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-945">Bezeichnet die <see cref="P:System.Windows.UIElement.IsVisible" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-945">Identifies the <see cref="P:System.Windows.UIElement.IsVisible" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-946">Tritt auf, wenn eine Taste gedrückt wird, während sich der Fokus auf diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-946">Occurs when a key is pressed while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-947">Schlüsselverarbeitung interagiert mit anderen Features der Plattform wie z. B. die Befehle "und" Text-Komposition.</span><span class="sxs-lookup"><span data-stu-id="a8f26-947">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="a8f26-948">Die <xref:System.Windows.UIElement.KeyDown> Ereignis ist eine Low-Level-Text für ein Eingabeereignis, das nicht auf bestimmte Steuerelemente wie erwartet Verhalten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-948">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="a8f26-949">Dies ist, da einige Steuerelemente verfügen über Steuerelement zusammensetzt oder Klassenbehandlung, die eine höhere Version von Text bietet Eingabeverarbeitung und verknüpfte Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-949">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="a8f26-950">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement.KeyDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-950">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.KeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-951">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.KeyDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-951">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-952">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-952">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-953">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-953">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyDownEvent>|  
|<span data-ttu-id="a8f26-954">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-954">Routing strategy</span></span>|<span data-ttu-id="a8f26-955">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-955">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-956">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-956">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="a8f26-957">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-957">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="a8f26-958">Außer Kraft setzen <xref:System.Windows.UIElement.OnKeyDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-958">Override <xref:System.Windows.UIElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-959">Identifiziert das <see cref="E:System.Windows.UIElement.KeyDown" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-959">Identifies the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-960">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-960">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-961">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-961">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-962">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-962">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-963">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-963">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-964">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-964">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-965">Tritt auf, wenn eine Taste losgelassen wird, während sich der Fokus auf diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-965">Occurs when a key is released while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-966">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement.KeyUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-966">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.UIElement.KeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-967">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.KeyUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-967">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-968">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-968">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-969">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-969">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyUpEvent>|  
|<span data-ttu-id="a8f26-970">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-970">Routing strategy</span></span>|<span data-ttu-id="a8f26-971">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-971">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-972">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-972">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="a8f26-973">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-973">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="a8f26-974">Außer Kraft setzen <xref:System.Windows.UIElement.OnKeyUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-974">Override <xref:System.Windows.UIElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-975">Identifiziert das <see cref="E:System.Windows.UIElement.KeyUp" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-975">Identifies the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-976">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-976">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-977">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-977">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-978">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-978">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-979">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-979">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-980">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-980">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler LayoutUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LayoutUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LayoutUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LayoutUpdated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LayoutUpdated;" />
      <MemberSignature Language="F#" Value="member this.LayoutUpdated : EventHandler " Usage="member this.LayoutUpdated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-981">Tritt ein, wenn das Layout der verschiedenen visuellen Elemente, die dem aktuellen <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet sind, geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-981">Occurs when the layout of the various visual elements associated with the current <see cref="T:System.Windows.Threading.Dispatcher" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-982">Eine Aktualisierung des Layouts kann aufgrund einer Änderung der Eigenschaft, die Größenänderung eines Fensters oder eine explizite benutzeranforderung auftreten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-982">A layout update can occur as a result of a property change, a window resize, or an explicit user request.</span></span>  
  
 <span data-ttu-id="a8f26-983">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-983">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.RoutedEventHandler " Usage="member this.LostFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-984">Tritt auf, wenn dieses Element den logischen Fokus verliert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-984">Occurs when this element loses logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-985">Der logische Fokus unterscheidet sich vom Tastaturfokus, wenn der Fokus absichtlich durch einen Methodenaufruf verloren wird, der vorherige Tastaturfokus jedoch in einem anderen Gültigkeitsbereich vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-985">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="a8f26-986">In diesem Szenario und Tastatur Fokus bleibt also das Element, in denen eine <xref:System.Windows.UIElement.Focus%2A> Methode wird aufgerufen, immer noch ruft logischen Fokus.</span><span class="sxs-lookup"><span data-stu-id="a8f26-986">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="a8f26-987">Eine genauere Interpretation dieses Ereignisses ist, dass die It wird ausgelöst, wenn der Wert des der <xref:System.Windows.UIElement.IsFocused%2A> Eigenschaft eines Elements in der Route ändert sich von `true` zu `false`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-987">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="a8f26-988">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das Fokus verloren hat möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-988">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8f26-989">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, die Fokus erhalten hat.</span><span class="sxs-lookup"><span data-stu-id="a8f26-989">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-990">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-990">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-991">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-991">Identifier field</span></span>|<xref:System.Windows.UIElement.LostFocusEvent>|  
|<span data-ttu-id="a8f26-992">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-992">Routing strategy</span></span>|<span data-ttu-id="a8f26-993">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-993">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-994">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-994">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="a8f26-995">Es gibt kein entsprechendes Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-995">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a8f26-996">Außer Kraft setzen <xref:System.Windows.UIElement.OnLostFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-996">Override <xref:System.Windows.UIElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-997">Identifiziert das <see cref="E:System.Windows.UIElement.LostFocus" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-997">Identifies the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-998">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-998">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-999">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-999">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-1000">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1000">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-1001">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1001">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-1002">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1002">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1003">Tritt auf, wenn sich der Fokus der Tastatur nicht mehr auf diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1003">Occurs when the keyboard is no longer focused on this element,.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1004">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das Fokus verloren hat möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1004">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8f26-1005">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, die Fokus verloren hat.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1005">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="a8f26-1006">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.LostKeyboardFocus> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1006">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-1007">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.LostKeyboardFocus> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1007">Event handlers that are attached to the <xref:System.Windows.UIElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1008">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1008">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1009">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1009">Identifier field</span></span>|<xref:System.Windows.UIElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="a8f26-1010">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1010">Routing strategy</span></span>|<span data-ttu-id="a8f26-1011">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-1011">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-1012">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1012">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="a8f26-1013">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1013">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="a8f26-1014">Außer Kraft setzen <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1014">Override <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1015">Identifiziert das <see cref="E:System.Windows.UIElement.LostKeyboardFocus" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1015">Identifies the <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1016">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1016">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-1017">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1017">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-1018">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1018">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-1019">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1019">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-1020">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1020">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1021">Tritt auf, wenn dieses Element die Mausauswahl verliert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1021">Occurs when this element loses mouse capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1022">Wenn ein Element die Mausauswahl erhält, empfängt es die Mauseingabe, auch wenn der Mauszeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1022">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="a8f26-1023">Der Mauszeiger wird in der Regel nur bei Drag & Drop-Vorgängen erfasst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1023">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="a8f26-1024">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das mehr erfasst möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1024">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8f26-1025">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, die Mausereignisse mehr erfasst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1025">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="a8f26-1026">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.LostMouseCapture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1026">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-1027">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.LostMouseCapture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1027">Event handlers that are attached to the <xref:System.Windows.UIElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1028">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1028">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1029">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1029">Identifier field</span></span>|<xref:System.Windows.UIElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="a8f26-1030">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1030">Routing strategy</span></span>|<span data-ttu-id="a8f26-1031">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-1031">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-1032">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1032">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a8f26-1033">Es ist keine definiertes entsprechende Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1033">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a8f26-1034">Außer Kraft setzen <xref:System.Windows.UIElement.OnLostMouseCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1034">Override <xref:System.Windows.UIElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1035">Identifiziert das <see cref="E:System.Windows.UIElement.LostMouseCapture" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1035">Identifies the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1036">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1036">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-1037">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1037">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-1038">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1038">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-1039">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1039">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-1040">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1040">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1041">Tritt auf, wenn dieses Element die Stiftauswahl verliert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1041">Occurs when this element loses stylus capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1042">Wenn ein Element die Stiftauswahl erhält, empfängt es nastala chyba vstupu, auch wenn der Mauszeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1042">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="a8f26-1043">Der Stift wird in der Regel nur bei Drag & Drop-Vorgängen erfasst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1043">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="a8f26-1044">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das Fokus verloren hat möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1044">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8f26-1045">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, die Fokus verloren hat.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1045">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="a8f26-1046">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.LostStylusCapture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1046">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-1047">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.LostStylusCapture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1047">Event handlers that are attached to the <xref:System.Windows.UIElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1048">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1048">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1049">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1049">Identifier field</span></span>|<xref:System.Windows.UIElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="a8f26-1050">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1050">Routing strategy</span></span>|<span data-ttu-id="a8f26-1051">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-1051">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-1052">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1052">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8f26-1053">Es ist keine definiertes entsprechende Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1053">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a8f26-1054">Außer Kraft setzen <xref:System.Windows.UIElement.OnLostStylusCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1054">Override <xref:System.Windows.UIElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1055">Identifiziert das <see cref="E:System.Windows.UIElement.LostStylusCapture" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1055">Identifies the <see cref="E:System.Windows.UIElement.LostStylusCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1056">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1056">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-1057">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1057">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-1058">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1058">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-1059">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1059">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-1060">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1060">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.LostTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.LostTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1061">Tritt ein, wenn dieses Element keine Fingereingaben mehr erfasst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1061">Occurs when this element loses a touch capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1062">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1062">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1063">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1063">Identifier field</span></span>|<xref:System.Windows.UIElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="a8f26-1064">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1064">Routing strategy</span></span>|<span data-ttu-id="a8f26-1065">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-1065">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-1066">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1066">Delegate</span></span>|<span data-ttu-id="a8f26-1067">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1067"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8f26-1068">Außer Kraft setzen <xref:System.Windows.UIElement.OnLostTouchCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1068">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1069">Identifiziert das <see cref="E:System.Windows.UIElement.LostTouchCapture" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1069">Identifies the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationBoundaryFeedback As EventHandler(Of ManipulationBoundaryFeedbackEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^&gt; ^ ManipulationBoundaryFeedback;" />
      <MemberSignature Language="F#" Value="member this.ManipulationBoundaryFeedback : EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; " Usage="member this.ManipulationBoundaryFeedback : System.EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1070">Tritt ein, wenn die Bearbeitung an eine Grenze stößt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1070">Occurs when the manipulation encounters a boundary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_ManipulationBoundaryFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1071">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1071">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1072">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1072">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent>|  
|<span data-ttu-id="a8f26-1073">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1073">Routing strategy</span></span>|<span data-ttu-id="a8f26-1074">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-1074">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-1075">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1075">Delegate</span></span>|<span data-ttu-id="a8f26-1076">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1076"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationBoundaryFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationBoundaryFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationBoundaryFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationBoundaryFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1077">Bezeichnet das <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />-Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1077">Identifies the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationCompleted As EventHandler(Of ManipulationCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationCompletedEventArgs ^&gt; ^ ManipulationCompleted;" />
      <MemberSignature Language="F#" Value="member this.ManipulationCompleted : EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; " Usage="member this.ManipulationCompleted : System.EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1078">Tritt ein, wenn Bearbeitung und Trägheitsmoment für das <see cref="T:System.Windows.UIElement" />-Objekt abgeschlossen sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1078">Occurs when a manipulation and inertia on the <see cref="T:System.Windows.UIElement" /> object is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1079">Sie können dieses Ereignis verwenden, zum Abrufen von Informationen über die Bearbeitung, nachdem es abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1079">You can use this event to get information about the manipulation when it completes.</span></span>  <span data-ttu-id="a8f26-1080">Beispielsweise können Sie die <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> Eigenschaft, um zu bestimmen, die Gesamtmenge der Position der Änderung geändert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1080">For example, you can use the <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> property to determine the total amount the position of the manipulation changed.</span></span>  
  
 <span data-ttu-id="a8f26-1081">Weitere Informationen zu Manipulationen, finden Sie unter den [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1081">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="a8f26-1082">Ein Beispiel für eine Anwendung, die auf Manipulationen reagiert, finden Sie unter [Exemplarische Vorgehensweise: der ersten Fingereingabeanwendung erstellen](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1082">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationCompleted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1083">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1083">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1084">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1084">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationCompletedEvent>|  
|<span data-ttu-id="a8f26-1085">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1085">Routing strategy</span></span>|<span data-ttu-id="a8f26-1086">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-1086">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-1087">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1087">Delegate</span></span>|<span data-ttu-id="a8f26-1088">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1088"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompletedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationCompletedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationCompletedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationCompletedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationCompletedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationCompletedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationCompletedEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationCompletedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1089">Identifiziert das <see cref="E:System.Windows.UIElement.ManipulationCompleted" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1089">Identifies the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDelta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationDelta" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationDelta As EventHandler(Of ManipulationDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationDeltaEventArgs ^&gt; ^ ManipulationDelta;" />
      <MemberSignature Language="F#" Value="member this.ManipulationDelta : EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; " Usage="member this.ManipulationDelta : System.EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1090">Tritt ein, wenn sich die Position des Eingabegeräts während einer Bearbeitung ändert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1090">Occurs when the input device changes position during a manipulation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1091">Die <xref:System.Windows.UIElement.ManipulationDelta> -Ereignis tritt mehrmals auf, wenn der Benutzer während eines Bearbeitungsvorgangs Finger über den Bildschirm zieht, und noch Mal, wenn Trägheit auftritt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1091">The <xref:System.Windows.UIElement.ManipulationDelta> event occurs multiple times when the user drags fingers over the screen during a manipulation and again when inertia occurs.</span></span>  <span data-ttu-id="a8f26-1092">Sie können die <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> Eigenschaft zu überprüfen, ob das Ereignis während der Trägheit auftritt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1092">You can use the <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> property to check whether the event is occurring during inertia.</span></span>  
  
 <span data-ttu-id="a8f26-1093">Das Element mit <xref:System.Windows.UIElement.ManipulationDelta> Ereignis tritt auf, wird nicht in keiner Weise beeinflusst, wenn das Ereignis eintritt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1093">The element on with <xref:System.Windows.UIElement.ManipulationDelta> event occurs is not affected in any way when the event occurs.</span></span>  <span data-ttu-id="a8f26-1094">Sie müssen die Logik für das Element angeben, die bearbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1094">You must provide the logic to the element that is to be manipulated.</span></span>  <span data-ttu-id="a8f26-1095">Die <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> und <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> Eigenschaften, die vom Typ <xref:System.Windows.Input.ManipulationDelta>, enthalten Daten wie die Position der Bearbeitungen ändern und als verschieben, Ändern der Größe oder Drehen eines Objekts interpretiert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1095">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> properties, which are of type <xref:System.Windows.Input.ManipulationDelta>, contain data about how the position of the manipulations change and interpreted as moving, resizing, or rotating an object.</span></span>  <span data-ttu-id="a8f26-1096">Wenden Sie diese Informationen, auf das Element, das bearbeitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1096">You apply that information to the element that is to be manipulated.</span></span>  
  
 <span data-ttu-id="a8f26-1097">Weitere Informationen zu Manipulationen, finden Sie unter den [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1097">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="a8f26-1098">Ein Beispiel für eine Anwendung, die auf Manipulationen reagiert, finden Sie unter [Exemplarische Vorgehensweise: der ersten Fingereingabeanwendung erstellen](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1098">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationDelta"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1099">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1099">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1100">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1100">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationDeltaEvent>|  
|<span data-ttu-id="a8f26-1101">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1101">Routing strategy</span></span>|<span data-ttu-id="a8f26-1102">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-1102">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-1103">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1103">Delegate</span></span>|<span data-ttu-id="a8f26-1104">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1104"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-1105">Das folgende Beispiel zeigt einen Ereignishandler für die <xref:System.Windows.UIElement.ManipulationDelta> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1105">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="a8f26-1106">Im Beispiel wird die <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> Eigenschaft zu verschieben, drehen und Ändern der Größe einer <xref:System.Windows.Shapes.Rectangle>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1106">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span>  <span data-ttu-id="a8f26-1107">Im Beispiel wird auch überprüft, ob die <xref:System.Windows.UIElement.ManipulationDelta> Ereignis aufgetreten ist, während der Trägheit und gibt an, ob das Rechteck den Rand eines Fensters berührt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1107">The example also checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span>  <span data-ttu-id="a8f26-1108">Wenn die Fälle zutreffen, reagiert die Anwendung die Bearbeitung, um zu verhindern, dass das Rechteck verlässt den sichtbaren Bereich der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1108">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="a8f26-1109">In diesem Beispiel ist Teil eines umfangreicheren Beispiels unter [Exemplarische Vorgehensweise: der ersten Fingereingabeanwendung erstellen](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1109">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDeltaEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationDeltaEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationDeltaEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationDeltaEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationDeltaEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationDeltaEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationDeltaEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationDeltaEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1110">Identifiziert das <see cref="E:System.Windows.UIElement.ManipulationDelta" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1110">Identifies the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationInertiaStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationInertiaStarting As EventHandler(Of ManipulationInertiaStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationInertiaStartingEventArgs ^&gt; ^ ManipulationInertiaStarting;" />
      <MemberSignature Language="F#" Value="member this.ManipulationInertiaStarting : EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; " Usage="member this.ManipulationInertiaStarting : System.EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1111">Tritt ein, wenn das Eingabegerät während der Bearbeitung den Kontakt zum <see cref="T:System.Windows.UIElement" />-Objekt verliert und ein Trägheitsmoment einsetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1111">Occurs when the input device loses contact with the <see cref="T:System.Windows.UIElement" /> object during a manipulation and inertia begins.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1112">Die <xref:System.Windows.UIElement.ManipulationInertiaStarting> Ereignis tritt auf, wenn der Benutzer alle Finger vom Bildschirm während eines Bearbeitungsvorgangs abhebt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1112">The <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs when the user lifts all of the fingers from the screen during a manipulation.</span></span> <span data-ttu-id="a8f26-1113">Wenn ein Benutzer "wirft" z. B. eine <xref:System.Windows.UIElement> über eine Oberfläche berührt der Benutzer die <xref:System.Windows.UIElement> um die Aktion zu beginnen, verschieben Sie den Finger über den Bildschirm für eine kurze Entfernung aus, und veröffentlichen die <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1113">For example, if a user "throws" a <xref:System.Windows.UIElement> across a surface, the user will touch the <xref:System.Windows.UIElement> to begin the action, move the finger across the screen for a short distance, and then release the <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="a8f26-1114">Wenn der Benutzer das Element, um Trägheit gestartet und die <xref:System.Windows.UIElement.ManipulationInertiaStarting> Ereignis auftritt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1114">When the user releases the element, inertia begins and the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs.</span></span>  <span data-ttu-id="a8f26-1115">Die <xref:System.Windows.UIElement> empfängt weiterhin <xref:System.Windows.UIElement.ManipulationDelta> Ereignisse, um anzugeben, dass für das Element Trägheit auftritt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1115">The <xref:System.Windows.UIElement> continues to receive <xref:System.Windows.UIElement.ManipulationDelta> events to indicate that inertia is occurring on the element.</span></span>  
  
 <span data-ttu-id="a8f26-1116">Sie können dieses Ereignis verwenden, um das Verhalten der Trägheit anzugeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1116">You can use this event to specify the behavior of the inertia.</span></span>  <span data-ttu-id="a8f26-1117">Beispielsweise können Sie die ursprüngliche Geschwindigkeit festlegen, die verwendet wird, wenn ein Trägheitsmoment einsetzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1117">For example, you can set the initial velocity that is used when inertia begins.</span></span>  <span data-ttu-id="a8f26-1118">Sie können auch den Betrag an Trägheit angeben, durch die gewünschte Verlangsamung festlegen oder indem Sie die gewünschte Position.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1118">You can also specify the amount of inertia by setting the desired deceleration or by setting the desired placement.</span></span>  <span data-ttu-id="a8f26-1119">Sie können diese Werte für jeden Typ der Manipulation (Übersetzung, Erweiterung und Drehung) unabhängig voneinander festlegen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1119">You can set these values for each type of manipulation (translation, expansion, or rotation) independently.</span></span>  <span data-ttu-id="a8f26-1120">Weitere Informationen finden Sie unter <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1120">For more information, see <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>  
  
 <span data-ttu-id="a8f26-1121">Weitere Informationen zu Manipulationen, finden Sie unter den [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1121">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="a8f26-1122">Ein Beispiel für eine Anwendung, die auf Manipulationen reagiert, finden Sie unter [Exemplarische Vorgehensweise: der ersten Fingereingabeanwendung erstellen](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1122">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationInertiaStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1123">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1123">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1124">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1124">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationInertiaStartingEvent>|  
|<span data-ttu-id="a8f26-1125">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1125">Routing strategy</span></span>|<span data-ttu-id="a8f26-1126">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-1126">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-1127">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1127">Delegate</span></span>|<span data-ttu-id="a8f26-1128">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1128"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-1129">Das folgende Beispiel zeigt die <xref:System.Windows.UIElement.ManipulationInertiaStarting> -Ereignishandler und legt die gewünschte Verlangsamung für die Übersetzung, Erweiterung und Drehung, die während der Trägheit verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1129">The following example shows the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event handler and sets the desired deceleration for translation, expansion, and rotation that is used during inertia.</span></span> <span data-ttu-id="a8f26-1130">In diesem Beispiel ist Teil eines umfangreicheren Beispiels unter [Exemplarische Vorgehensweise: der ersten Fingereingabeanwendung erstellen](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1130">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationinertiastarting)]
 [!code-vb[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationinertiastarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationInertiaStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationInertiaStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationInertiaStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationInertiaStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationInertiaStartingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationInertiaStartingEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationInertiaStartingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1131">Identifiziert das <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1131">Identifies the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarted As EventHandler(Of ManipulationStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartedEventArgs ^&gt; ^ ManipulationStarted;" />
      <MemberSignature Language="F#" Value="member this.ManipulationStarted : EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; " Usage="member this.ManipulationStarted : System.EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1132">Tritt ein, wenn ein Eingabegerät mit der Bearbeitung des <see cref="T:System.Windows.UIElement" />-Objekts beginnt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1132">Occurs when an input device begins a manipulation on the <see cref="T:System.Windows.UIElement" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1133">Die <xref:System.Windows.UIElement.ManipulationStarted> Ereignis tritt auf, nachdem die <xref:System.Windows.UIElement.ManipulationStarting> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1133">The <xref:System.Windows.UIElement.ManipulationStarted> event occurs after the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span>  <span data-ttu-id="a8f26-1134">Sie können Folgendes mit der <xref:System.Windows.Input.ManipulationStartedEventArgs>:</span><span class="sxs-lookup"><span data-stu-id="a8f26-1134">You can do the following with the <xref:System.Windows.Input.ManipulationStartedEventArgs>:</span></span>  
  
-   <span data-ttu-id="a8f26-1135">Abrufen des Elements, das die Position der Bearbeitung relativ zum mit dem <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1135">Get the element that the manipulation's position is relative to by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> property.</span></span>  
  
-   <span data-ttu-id="a8f26-1136">Rufen Sie mit der Ursprung der Manipulation der <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1136">Get the origin of the manipulation by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> property.</span></span>  
  
-   <span data-ttu-id="a8f26-1137">Brechen Sie die Bearbeitung durch Aufrufen der <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1137">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> method.</span></span>  
  
 <span data-ttu-id="a8f26-1138">Weitere Informationen zu Manipulationen, finden Sie unter den [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1138">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="a8f26-1139">Ein Beispiel für eine Anwendung, die auf Manipulationen reagiert, finden Sie unter [Exemplarische Vorgehensweise: der ersten Fingereingabeanwendung erstellen](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1139">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationStarted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1140">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1140">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1141">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1141">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartedEvent>|  
|<span data-ttu-id="a8f26-1142">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1142">Routing strategy</span></span>|<span data-ttu-id="a8f26-1143">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-1143">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-1144">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1144">Delegate</span></span>|<span data-ttu-id="a8f26-1145">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1145"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationStartedEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationStartedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1146">Identifiziert das <see cref="E:System.Windows.UIElement.ManipulationStarted" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1146">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarting As EventHandler(Of ManipulationStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartingEventArgs ^&gt; ^ ManipulationStarting;" />
      <MemberSignature Language="F#" Value="member this.ManipulationStarting : EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; " Usage="member this.ManipulationStarting : System.EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1147">Tritt bei der ersten Erstellung des Manipulationsprozessors auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1147">Occurs when the manipulation processor is first created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1148">Die <xref:System.Windows.UIElement.ManipulationStarting> Ereignis tritt auf, auf ein Element mit dem <xref:System.Windows.UIElement.IsManipulationEnabled%2A> -Eigenschaftensatz auf `true` Wenn der Benutzer legt einen Finger auf.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1148">The <xref:System.Windows.UIElement.ManipulationStarting> event occurs on an element that has the <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property set to `true` when the user puts a finger on it.</span></span> <span data-ttu-id="a8f26-1149">Standardmäßig melden nachfolgende Manipulationsereignisse die Position der Manipulation relativ zu dem Element mit <xref:System.Windows.UIElement.IsManipulationEnabled%2A> festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1149">By default, subsequent manipulation events report the position of the manipulation relative to the element that has <xref:System.Windows.UIElement.IsManipulationEnabled%2A> set to `true`.</span></span>  <span data-ttu-id="a8f26-1150">Sie können angeben, dass die Position relativ zu einem anderen Element, durch Festlegen sein soll der <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1150">You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.</span></span> <span data-ttu-id="a8f26-1151">Beispielsweise können Sie die Manipulation relativ zum übergeordneten des Elements vornehmen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1151">For example, you can make the manipulation relative to the parent of the element.</span></span>  
  
 <span data-ttu-id="a8f26-1152">Sie können auch Folgendes in einem Ereignishandler für <xref:System.Windows.UIElement.ManipulationStarting>:</span><span class="sxs-lookup"><span data-stu-id="a8f26-1152">You can also do the following in an event handler for <xref:System.Windows.UIElement.ManipulationStarting>:</span></span>  
  
-   <span data-ttu-id="a8f26-1153">Gibt an, ob der Benutzer mehr als ein Finger zum Ausführen von Manipulationen benötigt durch Festlegen der <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1153">Specify whether the user needs more than one finger to perform the manipulations by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="a8f26-1154">Angeben, welche Typen von Bearbeitung aktiviert sind, durch Festlegen der <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> Eigenschaft, um eine <xref:System.Windows.Input.ManipulationModes> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1154">Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> property to a <xref:System.Windows.Input.ManipulationModes> enumeration.</span></span>  
  
-   <span data-ttu-id="a8f26-1155">Geben Sie den Mittelpunkt einer Rotation einem Finger durch Festlegen der <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1155">Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="a8f26-1156">Brechen Sie die Bearbeitung durch Aufrufen der <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1156">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a8f26-1157">Weitere Informationen zu Manipulationen, finden Sie unter den [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1157">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="a8f26-1158">Ein Beispiel für eine Anwendung, die auf Manipulationen reagiert, finden Sie unter [Exemplarische Vorgehensweise: der ersten Fingereingabeanwendung erstellen](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1158">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1159">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1159">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1160">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1160">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartingEvent>|  
|<span data-ttu-id="a8f26-1161">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1161">Routing strategy</span></span>|<span data-ttu-id="a8f26-1162">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-1162">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-1163">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1163">Delegate</span></span>|<span data-ttu-id="a8f26-1164">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1164"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-1165">Das folgende Beispiel zeigt den Ereignishandler für die <xref:System.Windows.UIElement.ManipulationStarting> Ereignis- und legt die <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> an das übergeordnete Element, das die Manipulation-Ereignisse empfängt, sodass die Koordinaten der Manipulation relativ zum übergeordneten Element sind.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1165">The following example shows the event handler for the <xref:System.Windows.UIElement.ManipulationStarting> event and sets the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> to the parent element that receives the manipulation events so that the coordinates of the manipulation are relative to the parent element.</span></span>  <span data-ttu-id="a8f26-1166">In diesem Beispiel ist Teil eines umfangreicheren Beispiels unter [Exemplarische Vorgehensweise: der ersten Fingereingabeanwendung erstellen](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1166">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationstarting)]
 [!code-vb[BasicManipulation#ManipulationStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationstarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationStartingEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationStartingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1167">Identifiziert das <see cref="E:System.Windows.UIElement.ManipulationStarting" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1167">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Measure">
      <MemberSignature Language="C#" Value="public void Measure (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Measure(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Measure (availableSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Measure(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="member this.Measure : System.Windows.Size -&gt; unit" Usage="uIElement.Measure availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="a8f26-1168">Der verfügbare Speicherplatz, den ein übergeordnetes Element für ein untergeordnetes Element reservieren kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1168">The available space that a parent element can allocate a child element.</span>
          </span>
          <span data-ttu-id="a8f26-1169">Ein untergeordnetes Element kann mehr Speicherplatz erfordern, als verfügbar ist. Die angegebene Größe kann zugewiesen werden, wenn für das aktuelle Element im Inhaltsmodell Bildlaufvorgänge möglich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1169">A child element can request a larger space than what is available; the provided size might be accommodated if scrolling is possible in the content model for the current element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1170">Aktualisiert die <see cref="P:System.Windows.UIElement.DesiredSize" /> eines <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1170">Updates the <see cref="P:System.Windows.UIElement.DesiredSize" /> of a <see cref="T:System.Windows.UIElement" />.</span>
          </span>
          <span data-ttu-id="a8f26-1171">Übergeordnete Elemente rufen diese Methode aus ihren eigenen <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" />-Implementierungen auf, um eine rekursive Layoutaktualisierung auszuführen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1171">Parent elements call this method from their own <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" /> implementations to form a recursive layout update.</span>
          </span>
          <span data-ttu-id="a8f26-1172">Das Aufrufen dieser Methode stellt die erste Übergabe (die "Maßübergabe") einer Layoutaktualisierung dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1172">Calling this method constitutes the first pass (the "Measure" pass) of a layout update.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1173">Berechnung der layoutpositionierung [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] besteht aus einem <xref:System.Windows.UIElement.Measure%2A> aufrufen und ein <xref:System.Windows.UIElement.Arrange%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1173">Computation of layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] is comprised of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="a8f26-1174">Während der <xref:System.Windows.UIElement.Measure%2A> Aufruf eines Elements bestimmt die größenanforderungen mithilfe einer `availableSize` Eingabe.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1174">During the <xref:System.Windows.UIElement.Measure%2A> call, an element determines its size requirements by using an `availableSize` input.</span></span> <span data-ttu-id="a8f26-1175">Während der <xref:System.Windows.UIElement.Arrange%2A> Aufruf, der Elementgröße fertig gestellt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1175">During the <xref:System.Windows.UIElement.Arrange%2A> call, the element size is finalized.</span></span>  
  
 <span data-ttu-id="a8f26-1176">`availableSize` eine beliebige Zahl von 0 (null), unendlich kann sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1176">`availableSize` can be any number from zero to infinite.</span></span> <span data-ttu-id="a8f26-1177">Elemente eines Layouts sollte mindestens zurückgeben <xref:System.Windows.Size> benötigten für einen bestimmten `availableSize`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1177">Elements participating in layout should return the minimum <xref:System.Windows.Size> they require for a given `availableSize`.</span></span>  
  
 <span data-ttu-id="a8f26-1178">Wenn ein Layout zuerst instanziiert wird, erhält es immer eine <xref:System.Windows.UIElement.Measure%2A> aufrufen, bevor <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1178">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="a8f26-1179">Jedoch nach der ersten Layoutübergabe, erhält sie möglicherweise eine <xref:System.Windows.UIElement.Arrange%2A> aufrufen, ohne eine <xref:System.Windows.UIElement.Measure%2A>; Dies kann auftreten, wenn eine Eigenschaft, die wirkt sich nur auf <xref:System.Windows.UIElement.Arrange%2A> (z. B. Ausrichtung) geändert wird oder wenn das übergeordnete Element empfängt eine <xref:System.Windows.UIElement.Arrange%2A> ohne eine <xref:System.Windows.UIElement.Measure%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1179">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="a8f26-1180">Ein <xref:System.Windows.UIElement.Measure%2A> aufrufen wird automatisch für ungültig erklärt ein <xref:System.Windows.UIElement.Arrange%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1180">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="a8f26-1181">Layout-Updates erfolgen asynchron, dass der Hauptthread für jede Änderung layoutleistung nicht wartet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1181">Layout updates happen asynchronously, such that the main thread is not waiting for every possible layout change.</span></span> <span data-ttu-id="a8f26-1182">Abfragen eines Elements über die CodeBehind-Überprüfung der Eigenschaftswerte entsprechen möglicherweise nicht sofort Änderungen an Eigenschaften, die für die Interaktion mit der Größe oder Layout-Eigenschaften (die <xref:System.Windows.FrameworkElement.Width%2A> z. B.-Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1182">Querying an element via code-behind checking of property values may not immediately reflect changes to properties that interact with the sizing or layout characteristics (the <xref:System.Windows.FrameworkElement.Width%2A> property, for example).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8f26-1183">Layout-Updates können erzwungen werden, mithilfe der <xref:System.Windows.UIElement.UpdateLayout%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1183">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method.</span></span> <span data-ttu-id="a8f26-1184">Allerdings wird das Aufrufen dieser Methode ist normalerweise nicht erforderlich und kann dazu führen, dass eine schlechte Leistung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1184">However, calling this method is usually unnecessary and can cause poor performance.</span></span>  
  
 <span data-ttu-id="a8f26-1185">Das Layoutsystem verfolgt zwei separate Warteschlangen mit ungültigen Layouts, eine für <xref:System.Windows.UIElement.Measure%2A> und eine für <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1185">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="a8f26-1186">Die Layoutwarteschlange wird basierend auf die Reihenfolge der Elemente in der visuellen Struktur des Elementlayouts sortiert ist. Elemente, die weiter oben in der Struktur sind am Anfang der Warteschlange, um redundante Layouts verursacht durch wiederholte Änderungen an übergeordneten Elementen zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1186">The layout queue is sorted based upon the order of elements in the visual tree of the element performing layout; elements higher in the tree are at the top of the queue, to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="a8f26-1187">Doppelte Einträge werden automatisch aus der Warteschlange entfernt, und Elemente werden automatisch aus der Warteschlange entfernt, wenn sie bereits die Layout-validiert sind.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1187">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already layout-validated.</span></span>  
  
 <span data-ttu-id="a8f26-1188">Beim Aktualisieren eines Layouts, das <xref:System.Windows.UIElement.Measure%2A> Warteschlange wird geleert zuerst, gefolgt von der <xref:System.Windows.UIElement.Arrange%2A> Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1188">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="a8f26-1189">Ein Element in der <xref:System.Windows.UIElement.Arrange%2A> Warteschlange wird nie angeordnet werden, wenn ein in Element der <xref:System.Windows.UIElement.Measure%2A> Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1189">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Size MeasureCore (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Size MeasureCore(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MeasureCore (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Size MeasureCore(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="abstract member MeasureCore : System.Windows.Size -&gt; System.Windows.Size&#xA;override this.MeasureCore : System.Windows.Size -&gt; System.Windows.Size" Usage="uIElement.MeasureCore availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="a8f26-1190">Die verfügbare Größe, die das übergeordnete Element für das untergeordnete Element reservieren kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1190">The available size that the parent element can allocate for the child.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1191">Stellt beim Überschreiben in einer abgeleiteten Klasse die Maßlogik für das ordnungsgemäße Festlegen der Größe dieses Elements bereit, wobei die Größe des Inhalts sämtlicher untergeordneter Elemente berücksichtigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1191">When overridden in a derived class, provides measurement logic for sizing this element properly, with consideration of the size of any child element content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-1192">Die gewünschte Größe dieses Elements im Layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1192">The desired size of this element in layout.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1193">Es ist eher üblich, dass ein Element aus abgeleitet <xref:System.Windows.FrameworkElement> statt <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1193">It is more common to derive an element from <xref:System.Windows.FrameworkElement> rather than <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="a8f26-1194">Wenn beim Ableiten von <xref:System.Windows.FrameworkElement>, beachten Sie, dass eine Überschreibung der <xref:System.Windows.UIElement.MeasureCore%2A> auf <xref:System.Windows.FrameworkElement> Siegel der <xref:System.Windows.UIElement.MeasureCore%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1194">If you are deriving from <xref:System.Windows.FrameworkElement>, note that an override of <xref:System.Windows.UIElement.MeasureCore%2A> on <xref:System.Windows.FrameworkElement> seals the <xref:System.Windows.UIElement.MeasureCore%2A> method.</span></span> <span data-ttu-id="a8f26-1195">Aus diesem Grund nur überschreiben <xref:System.Windows.UIElement.MeasureCore%2A> als Mittel zum Layoutmerkmale-Measure zu ändern, wenn Sie eine Ableitung aus <xref:System.Windows.UIElement> über eine Vererbung an, das nicht <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1195">Therefore, you only override <xref:System.Windows.UIElement.MeasureCore%2A> as a means to alter layout measure characteristics if you derive from <xref:System.Windows.UIElement> through an inheritance that does not include <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="a8f26-1196">Dies kann der Fall sein, wenn Sie versuchen, eine eigene Implementierung zu erstellen, auf die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Kernebene.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1196">This might be the case if you are attempting to build your own implementation on the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] core-level.</span></span> <span data-ttu-id="a8f26-1197">Andernfalls, wenn beim Ableiten von <xref:System.Windows.FrameworkElement>, und klicken Sie dann die Implementierungsvorlage für die Measure-Verhalten ist das <xref:System.Windows.FrameworkElement> Implementierung.<xref:System.Windows.FrameworkElement.MeasureOverride%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1197">Otherwise, if you are deriving from <xref:System.Windows.FrameworkElement>, then the implementation template for Measure behavior is the <xref:System.Windows.FrameworkElement> implementation of .<xref:System.Windows.FrameworkElement.MeasureOverride%2A>.</span></span>  
  
 <span data-ttu-id="a8f26-1198">Ein übergeordnetes Element mit untergeordneten Elementen muss Aufrufen <xref:System.Windows.UIElement.Measure%2A> für jedes untergeordnete Element ist, andernfalls diese untergeordneten Elemente nicht die Größe oder angeordnet und effektiv aus dem Layout entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1198">A parent element with child elements must call <xref:System.Windows.UIElement.Measure%2A> on each child, otherwise these child elements are not sized or arranged and will effectively disappear from layout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-1199">Eine typische Überschreibung <xref:System.Windows.UIElement.MeasureCore%2A> folgt diesem Muster ungefähre (es ist keine integrierte Auflistung aufgerufen `VisualChildren`; `VisualChildren` ist ein Platzhalter, der beliebige untergeordnete Auflistung darstellt, das-Element behält).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1199">A typical override of <xref:System.Windows.UIElement.MeasureCore%2A> follows this approximate pattern (there is not a built-in collection called `VisualChildren`; `VisualChildren` is a  placeholder that represents whatever child collection your element maintains).</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementmeasureoverride)]
 [!code-vb[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementmeasureoverride)]  
  
-   <span data-ttu-id="a8f26-1200">Rufen Sie <xref:System.Windows.UIElement.Measure%2A> für jedes untergeordnete Element.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1200">You must call <xref:System.Windows.UIElement.Measure%2A> on each child element.</span></span>  
  
-   <span data-ttu-id="a8f26-1201">Im Allgemeinen sollte Ihre Implementierung Messung Informationen zwischen Zwischenspeichern der <xref:System.Windows.UIElement.MeasureCore%2A> und <xref:System.Windows.UIElement.ArrangeCore%2A> Methodenaufrufe in demselben Element.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1201">Generally, your implementation should cache measurement information between the <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> method calls in the same element.</span></span>  
  
-   <span data-ttu-id="a8f26-1202">Aufrufen von Implementierungen der <xref:System.Windows.UIElement.MeasureCore%2A> ist nicht erforderlich, aber möglicherweise angemessen, wenn die basisimplementierung eine gewünschte Layout-Funktion enthält.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1202">Calling base implementations of <xref:System.Windows.UIElement.MeasureCore%2A> is not required, but might be appropriate if the base implementation provides a desired layout capability.</span></span>  
  
-   <span data-ttu-id="a8f26-1203">Aufrufe von <xref:System.Windows.UIElement.Measure%2A> für untergeordnete Elemente sollten übergeben Sie entweder den gleichen `availableSize` als das übergeordnete Element oder eine Teilmenge des Bereichs, je nach Art des Layouts des übergeordneten Elements unterstützt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1203">Calls to <xref:System.Windows.UIElement.Measure%2A> on child elements should pass either the same `availableSize` as the parent, or a subset of the area, depending on the type of layout the parent element supports.</span></span> <span data-ttu-id="a8f26-1204">Beispielsweise wäre es zulässig, die den Bereich ein Rahmen elementspezifischen oder Auffüllung einer Bildlaufleiste oder ein benutzerdefiniertes Steuerelement zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1204">For example, it would be valid to remove the area for an element-specific border or padding, a scrollbar, or a custom control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a8f26-1205">
            <para>Implementierungen müssen in der Lage, einen Wert, der zur Verarbeitung <paramref name="availableSize" /> unendlich ist. Ein unendlichen Wert gibt keine Einschränkungen der angeforderten und effektiv verzögert Messung Wahl zum übergeordneten Element, über der rekursiven Aufrufe Measure.  Implementierungen können für angegeben Wert in Betracht ziehen <paramref name="availableSize" /> eine weiche Einschränkung sein. Das untergeordnete Element kann eine größere Größe angeben, auch wenn andere Aspekte der Anwendungscode die aktuelle tatsächliche Größe des übergeordneten Elements zu bestimmen. Die Größe-Anforderung ist eine Konvention, die angibt, dass das untergeordnete Element an, ob Ihr übergeordnetes Element Inhalt einen Bildlauf innerhalb einer Region Inhaltsanzeige unterstützen kann abgefragt wird.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1205">
              <para>Implementations must be able to process a value provided for <paramref name="availableSize" /> that is infinite. An infinite value indicates no requested constraints, and effectively defers measurement choice to the parent element, through recursive Measure calls.  Implementations can consider the value provided for <paramref name="availableSize" /> to be a soft constraint. The child element might specify a larger size, even if other aspects of application code were able to determine the current actual size of the parent element. The large size request is a convention that indicates that the child element is querying whether your parent element can support content scrolling within a content display region.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1206">Tritt auf, wenn eine Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1206">Occurs when any mouse button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1207">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.MouseDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1207">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-1208">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.MouseDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1208">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-1209">Die <xref:System.Windows.UIElement.MouseDown> -Ereignisses häufig zusammen mit den beiden <xref:System.Windows.UIElement.MouseLeftButtonDown> oder <xref:System.Windows.UIElement.MouseRightButtonDown>, Drücken einer der beiden standardmäßigen Maustasten entsprechen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1209">The <xref:System.Windows.UIElement.MouseDown> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="a8f26-1210"><xref:System.Windows.UIElement.MouseLeftButtonDown> und <xref:System.Windows.UIElement.MouseRightButtonDown> sind ebenfalls Routingereignisse, aber sie sind direkte Routingereignisse und die entsprechende Schaltfläche-spezifische-Ereignis wird ausgelöst, wenn die <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> -Ereignis dieses Element auf der Ereignisroute erreicht.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1210"><xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="a8f26-1211">Finden Sie unter "Hinweise" für <xref:System.Windows.UIElement.MouseLeftButtonDown> oder <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1211">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a8f26-1212">Einige Steuerelemente möglicherweise inhärente Klassenbehandlung für Mausereignisse-Schaltfläche.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1212">Some controls might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="a8f26-1213">Die linke Maustaste ausgelöste Ereignis ist das wahrscheinlichste Ereignis um eine Klassenbehandlung in einem Steuerelement zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1213">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="a8f26-1214">Die Klassenbehandlung häufig kennzeichnet das zugrunde liegende <xref:System.Windows.Input.Mouse> Klassenereignis als behandelt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1214">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="a8f26-1215">Sobald das Ereignis als behandelt markiert ist, werden andere instanzhandlern, die auf das betreffende Element angefügt sind nicht normalerweise ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1215">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="a8f26-1216">Keine andere Klasse oder Instanz Handler, die auf Elemente in der bubbling-Richtung zum Stamm in der Benutzeroberflächenautomatisierungs-Struktur angefügt sind, werden Regel nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1216">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="a8f26-1217">Können Sie beheben Sie das Problem, die in den vorherigen wichtigen beschrieben wird und trotzdem erhalten <xref:System.Windows.UIElement.MouseDown> Ereignisse für die linke Maustaste gedrückt down-Ereignissen in einer abgeleiteten Klasse, die Klassenbehandlung mithilfe einer der folgenden Lösungen:</span><span class="sxs-lookup"><span data-stu-id="a8f26-1217">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="a8f26-1218">Fügen Sie Handler für die <xref:System.Windows.UIElement.PreviewMouseDown> -Ereignis, das nicht von den Steuerelementen als behandelt markiert ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1218">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="a8f26-1219">Beachten Sie, da dies ein Vorschauereignis ist, wird die Route am Stamm beginnt und auf das Steuerelement Tunnel.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1219">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="a8f26-1220">Registrieren Sie einen Handler für das Steuerelement durch Aufrufen von Prozedural <xref:System.Windows.UIElement.AddHandler%2A> und Auswählen der Option für die Signatur, die es ermöglicht Handlern für Ereignisse zu lauschen, auch wenn sie bereits in die Routingereignisdaten als behandelt markiert sind.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1220">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1221">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1221">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1222">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1222">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseDownEvent>|  
|<span data-ttu-id="a8f26-1223">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1223">Routing strategy</span></span>|<span data-ttu-id="a8f26-1224">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-1224">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-1225">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1225">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-1226">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1226">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="a8f26-1227">Außer Kraft setzen <xref:System.Windows.UIElement.OnMouseDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1227">Override <xref:System.Windows.UIElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1228">Identifiziert das <see cref="E:System.Windows.UIElement.MouseDown" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1228">Identifies the <see cref="E:System.Windows.UIElement.MouseDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1229">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1229">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-1230">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1230">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-1231">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1231">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-1232">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1232">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-1233">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1233">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Input.MouseEventHandler " Usage="member this.MouseEnter : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1234">Tritt auf, wenn der Mauszeiger in den Bereich dieses Elements eintritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1234">Occurs when the mouse pointer enters the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1235"><xref:System.Windows.UIElement.MouseEnter> ist eine, die die direkte Ereignisbehandlung Routingstrategie verwendet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1235"><xref:System.Windows.UIElement.MouseEnter> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="a8f26-1236">Direkte Routingereignisse werden nicht auf einer Route ausgelöst wird. Stattdessen werden sie in demselben Element behandelt, in denen sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1236">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="a8f26-1237">Aktivieren sie jedoch andere Aspekte des Routingereignisverhaltens, z. B. in Stilen-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1237">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="a8f26-1238">Obwohl <xref:System.Windows.UIElement.MouseEnter> verfolgt nach, wenn der Mauszeiger die Grenzen eines Elements, das dieses Ereignis, das weitere eintritt buchstäblich meldet, dass die <xref:System.Windows.UIElement.IsMouseOver%2A> -Eigenschaftswert geändert wurde, aus `false` zu `true` für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1238">Although <xref:System.Windows.UIElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="a8f26-1239">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.MouseEnter> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1239">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-1240">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.MouseEnter> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1240">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-1241">Ein <xref:System.Windows.Controls.Button> (oder ein beliebiges <xref:System.Windows.Controls.Primitives.ButtonBase> abgeleitete Klasse) verfügt über native Behandlung für eine <xref:System.Windows.UIElement.KeyDown> Ereignis, wenn die Schaltfläche den Fokus besitzt und die gedrückte Taste die LEERTASTE wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1241">A <xref:System.Windows.Controls.Button> (or any <xref:System.Windows.Controls.Primitives.ButtonBase> derived class) has native handling for a <xref:System.Windows.UIElement.KeyDown> event when the button has focus, and the pressed key is the space bar.</span></span> <span data-ttu-id="a8f26-1242">Die systemeigene Verarbeitung löst die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis mit der Schaltfläche als Quelle und zeichnet auch die Maus, auch wenn der Mauszeiger nicht angezeigt wird, um zu verschieben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1242">The native handling raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event with the button as the source, and also captures the mouse, even though the mouse pointer does not appear to move.</span></span> <span data-ttu-id="a8f26-1243">Durch das Erfassen von Mauseingaben eine <xref:System.Windows.UIElement.MouseEnter> Ereignis wird auch ausgelöst, mit der Schaltfläche als Quelle.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1243">As a result of the mouse capture, a <xref:System.Windows.UIElement.MouseEnter> event is also raised with the button as the source.</span></span> <span data-ttu-id="a8f26-1244">Im Allgemeinen gilt: Wenn ein Element die Mausauswahl, dann erhält <xref:System.Windows.UIElement.MouseEnter> ausgelöst wird, als auch <xref:System.Windows.UIElement.GotMouseCapture> und möglicherweise andere steuerelementspezifische-Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1244">In general, if an element captures the mouse, then <xref:System.Windows.UIElement.MouseEnter> is raised, as well as <xref:System.Windows.UIElement.GotMouseCapture> and possibly other control-specific events.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1245">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1245">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1246">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1246">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseEnterEvent>|  
|<span data-ttu-id="a8f26-1247">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1247">Routing strategy</span></span>|<span data-ttu-id="a8f26-1248">Direkt</span><span class="sxs-lookup"><span data-stu-id="a8f26-1248">Direct</span></span>|  
|<span data-ttu-id="a8f26-1249">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1249">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a8f26-1250">Außer Kraft setzen <xref:System.Windows.UIElement.OnMouseEnter%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1250">Override <xref:System.Windows.UIElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1251">Identifiziert das <see cref="E:System.Windows.UIElement.MouseEnter" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1251">Identifies the <see cref="E:System.Windows.UIElement.MouseEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1252">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1252">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-1253">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1253">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-1254">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1254">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-1255">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1255">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-1256">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1256">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Input.MouseEventHandler " Usage="member this.MouseLeave : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1257">Tritt auf, wenn der Mauszeiger den Bereich dieses Elements verlässt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1257">Occurs when the mouse pointer leaves the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1258"><xref:System.Windows.UIElement.MouseLeave> ist eine, die die direkte Ereignisbehandlung Routingstrategie verwendet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1258"><xref:System.Windows.UIElement.MouseLeave> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="a8f26-1259">Direkte Routingereignisse werden nicht auf einer Route ausgelöst wird. Stattdessen werden sie in demselben Element behandelt, in denen sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1259">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="a8f26-1260">Aktivieren sie jedoch andere Aspekte des Routingereignisverhaltens, z. B. in Stilen-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1260">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="a8f26-1261">Obwohl <xref:System.Windows.UIElement.MouseLeave> verfolgt nach, wenn die Maus ein Element, das dieses Ereignis mehr verlässt buchstäblich meldet, dass die <xref:System.Windows.UIElement.IsMouseOver%2A> -Eigenschaftswert geändert wurde, aus `true` zu `false` für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1261">Although <xref:System.Windows.UIElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="a8f26-1262">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.MouseLeave> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1262">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-1263">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.MouseLeave> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1263">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1264">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1264">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1265">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1265">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeaveEvent>|  
|<span data-ttu-id="a8f26-1266">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1266">Routing strategy</span></span>|<span data-ttu-id="a8f26-1267">Direkt</span><span class="sxs-lookup"><span data-stu-id="a8f26-1267">Direct</span></span>|  
|<span data-ttu-id="a8f26-1268">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1268">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a8f26-1269">Außer Kraft setzen <xref:System.Windows.UIElement.OnMouseLeave%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1269">Override <xref:System.Windows.UIElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1270">Identifiziert das <see cref="E:System.Windows.UIElement.MouseLeave" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1270">Identifies the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1271">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1271">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-1272">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1272">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-1273">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1273">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-1274">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1274">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-1275">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1275">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1276">Tritt auf, wenn die linke Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1276">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1277">Obwohl dies scheint eine bubbling-Route durch eine Elementstruktur folgen, tatsächlich ist eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1277">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="a8f26-1278">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1278">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8f26-1279">Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1279">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8f26-1280">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1280">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8f26-1281">Wenn Sie kennzeichnen <xref:System.Windows.UIElement.MouseLeftButtonDown> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1281">If you mark <xref:System.Windows.UIElement.MouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="a8f26-1282">Dies schließt möglicherweise Klassenhandler generierte Ereignisse wie z. B. <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1282">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="a8f26-1283">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1283">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8f26-1284">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1284">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8f26-1285">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1285">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a8f26-1286">Einige Steuerelementklassen möglicherweise inhärente Klassenbehandlung für Mausereignisse-Schaltfläche.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1286">Some control classes might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="a8f26-1287">Die linke Maustaste ausgelöste Ereignis ist das wahrscheinlichste Ereignis um eine Klassenbehandlung in einem Steuerelement zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1287">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="a8f26-1288">Die Klassenbehandlung häufig kennzeichnet das zugrunde liegende <xref:System.Windows.Input.Mouse> Klassenereignis als behandelt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1288">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="a8f26-1289">Sobald das Ereignis als behandelt markiert ist, werden andere instanzhandlern, die auf das betreffende Element angefügt sind nicht normalerweise ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1289">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="a8f26-1290">Keine andere Klasse oder Instanz Handler, die auf Elemente in der bubbling-Richtung zum Stamm in der Benutzeroberflächenautomatisierungs-Struktur angefügt sind, werden Regel nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1290">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="a8f26-1291">Können Sie beheben Sie das Problem, die in den vorherigen wichtigen beschrieben wird und trotzdem erhalten <xref:System.Windows.UIElement.MouseLeftButtonDown> Ereignisse für die linke Maustaste gedrückt down-Ereignissen in einer abgeleiteten Klasse, die Klassenbehandlung mithilfe einer der folgenden Lösungen:</span><span class="sxs-lookup"><span data-stu-id="a8f26-1291">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="a8f26-1292">Fügen Sie Handler für die <xref:System.Windows.UIElement.PreviewMouseDown> -Ereignis, das nicht von den Steuerelementen als behandelt markiert ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1292">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="a8f26-1293">Beachten Sie, da dies ein Vorschauereignis ist, wird die Route am Stamm beginnt und auf das Steuerelement Tunnel.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1293">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="a8f26-1294">Registrieren Sie einen Handler für das Steuerelement durch Aufrufen von Prozedural <xref:System.Windows.UIElement.AddHandler%2A> und Auswählen der Option für die Signatur, die es ermöglicht Handlern für Ereignisse zu lauschen, auch wenn sie bereits in die Routingereignisdaten als behandelt markiert sind.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1294">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1295">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1295">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1296">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1296">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="a8f26-1297">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1297">Routing strategy</span></span>|<span data-ttu-id="a8f26-1298">Direkt</span><span class="sxs-lookup"><span data-stu-id="a8f26-1298">Direct</span></span>|  
|<span data-ttu-id="a8f26-1299">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1299">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-1300">Außer Kraft setzen <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1300">Override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1301">Identifiziert das <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1301">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1302">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1302">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-1303">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1303">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-1304">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1304">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-1305">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1305">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-1306">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1306">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1307">Tritt auf, wenn die linke Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1307">Occurs when the left mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1308">Obwohl dies scheint eine bubbling-Route durch eine Elementstruktur folgen, tatsächlich ist eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1308">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="a8f26-1309">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1309">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8f26-1310">Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1310">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8f26-1311">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1311">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8f26-1312">Wenn Sie kennzeichnen <xref:System.Windows.UIElement.MouseLeftButtonUp> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1312">If you mark <xref:System.Windows.UIElement.MouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="a8f26-1313">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1313">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8f26-1314">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1314">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8f26-1315">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1315">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1316">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1316">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1317">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1317">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="a8f26-1318">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1318">Routing strategy</span></span>|<span data-ttu-id="a8f26-1319">Direkt</span><span class="sxs-lookup"><span data-stu-id="a8f26-1319">Direct</span></span>|  
|<span data-ttu-id="a8f26-1320">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1320">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-1321">Außer Kraft setzen <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1321">Override <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1322">Identifiziert das <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1322">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1323">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1323">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-1324">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1324">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-1325">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1325">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-1326">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1326">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-1327">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1327">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1328">Tritt auf, wenn der Mauszeiger bewegt wird, während er sich über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1328">Occurs when the mouse pointer moves while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1329">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.MouseMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1329">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-1330">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.MouseMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1330">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1331">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1331">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1332">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1332">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseMoveEvent>|  
|<span data-ttu-id="a8f26-1333">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1333">Routing strategy</span></span>|<span data-ttu-id="a8f26-1334">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-1334">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-1335">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1335">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a8f26-1336">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1336">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="a8f26-1337">Außer Kraft setzen <xref:System.Windows.UIElement.OnMouseMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1337">Override <xref:System.Windows.UIElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1338">Identifiziert das <see cref="E:System.Windows.UIElement.MouseMove" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1338">Identifies the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1339">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1339">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-1340">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1340">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-1341">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1341">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-1342">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1342">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-1343">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1343">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1344">Tritt auf, wenn die rechte Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1344">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1345">Obwohl dies scheint eine bubbling-Route durch eine Elementstruktur folgen, tatsächlich ist eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1345">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="a8f26-1346">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1346">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8f26-1347">Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1347">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8f26-1348">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1348">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8f26-1349">Wenn Sie kennzeichnen <xref:System.Windows.UIElement.MouseRightButtonDown> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1349">If you mark <xref:System.Windows.UIElement.MouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="a8f26-1350">Dies schließt möglicherweise Klassenhandler generierte Ereignisse wie z. B. <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1350">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="a8f26-1351">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1351">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8f26-1352">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1352">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8f26-1353">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1353">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="a8f26-1354">Rechte Schaltfläche Mausereignisse haben systemeigene Behandlung häufig in Anwendungsszenarien.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1354">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="a8f26-1355">Beispielsweise kann eine rechten Maustaste unten ein Kontextmenü anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1355">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="a8f26-1356">Finden Sie unter [Übersicht über ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1356">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1357">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1357">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1358">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1358">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="a8f26-1359">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1359">Routing strategy</span></span>|<span data-ttu-id="a8f26-1360">Direkt</span><span class="sxs-lookup"><span data-stu-id="a8f26-1360">Direct</span></span>|  
|<span data-ttu-id="a8f26-1361">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1361">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-1362">Außer Kraft setzen <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1362">Override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1363">Identifiziert das <see cref="E:System.Windows.UIElement.MouseRightButtonDown" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1363">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1364">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1364">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-1365">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1365">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-1366">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1366">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-1367">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1367">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-1368">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1368">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1369">Tritt auf, wenn die rechte Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1369">Occurs when the right mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1370">Obwohl dies scheint eine bubbling-Route durch eine Elementstruktur folgen, tatsächlich ist eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1370">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="a8f26-1371">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1371">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8f26-1372">Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1372">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8f26-1373">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1373">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8f26-1374">Wenn Sie kennzeichnen <xref:System.Windows.UIElement.MouseRightButtonUp> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1374">If you mark <xref:System.Windows.UIElement.MouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="a8f26-1375">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="a8f26-1375">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8f26-1376">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1376">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8f26-1377">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1377">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1378">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1378">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1379">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1379">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="a8f26-1380">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1380">Routing strategy</span></span>|<span data-ttu-id="a8f26-1381">Direkt</span><span class="sxs-lookup"><span data-stu-id="a8f26-1381">Direct</span></span>|  
|<span data-ttu-id="a8f26-1382">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1382">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-1383">Außer Kraft setzen <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1383">Override <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1384">Identifiziert das <see cref="E:System.Windows.UIElement.MouseRightButtonUp" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1384">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1385">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1385">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-1386">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1386">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-1387">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1387">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-1388">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1388">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-1389">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1389">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1390">Tritt auf, wenn eine Maustaste über diesem Element losgelassen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1390">Occurs when any mouse button is released over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1391">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.MouseUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1391">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-1392">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.MouseUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1392">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-1393">Die <xref:System.Windows.UIElement.MouseUp> -Ereignisses häufig zusammen mit den beiden <xref:System.Windows.UIElement.MouseLeftButtonUp> oder <xref:System.Windows.UIElement.MouseRightButtonUp>, eine Version eines der zwei standard Maustasten entsprechen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1393">The <xref:System.Windows.UIElement.MouseUp> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="a8f26-1394"><xref:System.Windows.UIElement.MouseLeftButtonUp> und <xref:System.Windows.UIElement.MouseRightButtonUp> sind ebenfalls Routingereignisse, aber sie sind direkte Routingereignisse und die entsprechende Schaltfläche-spezifische-Ereignis wird ausgelöst, wenn die <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> -Ereignis dieses Element auf der Ereignisroute erreicht.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1394"><xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="a8f26-1395">Finden Sie unter "Hinweise" für <xref:System.Windows.UIElement.MouseLeftButtonUp> oder <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1395">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1396">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1396">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1397">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1397">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseUpEvent>|  
|<span data-ttu-id="a8f26-1398">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1398">Routing strategy</span></span>|<span data-ttu-id="a8f26-1399">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-1399">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-1400">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1400">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-1401">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1401">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="a8f26-1402">Außer Kraft setzen <xref:System.Windows.UIElement.OnMouseUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1402">Override <xref:System.Windows.UIElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1403">Identifiziert das <see cref="E:System.Windows.UIElement.MouseUp" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1403">Identifies the <see cref="E:System.Windows.UIElement.MouseUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1404">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1404">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-1405">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1405">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-1406">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1406">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-1407">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1407">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-1408">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1408">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1409">Tritt auf, wenn der Benutzer das Mausrad dreht, während sich der Mauszeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1409">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1410">Fokus oder die Maus erfassen haben Vorrang vor, in dem der Mauszeiger befindet; aus diesem Grund, wenn Sie erhalten die <xref:System.Windows.UIElement.MouseWheel> Ereignis von einem Element mit Fokus oder aufgezeichnet, der Mauszeiger möglicherweise nicht über ein anderes Element.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1410">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.UIElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="a8f26-1411">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.MouseWheel> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1411">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseWheel> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-1412">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.MouseWheel> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1412">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-1413">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-1413">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-1414">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-1414">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseWheelEvent>|  
|<span data-ttu-id="a8f26-1415">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-1415">Routing strategy</span></span>|<span data-ttu-id="a8f26-1416">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-1416">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-1417">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-1417">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="a8f26-1418">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1418">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="a8f26-1419">Außer Kraft setzen <xref:System.Windows.UIElement.OnMouseWheel%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1419">Override <xref:System.Windows.UIElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1420">Identifiziert das <see cref="E:System.Windows.UIElement.MouseWheel" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1420">Identifies the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1421">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1421">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-1422">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1422">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-1423">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1423">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-1424">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1424">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-1425">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1425">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="uIElement.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="a8f26-1426">Eine Durchlaufanforderung, die eine Eigenschaft enthält, die entweder einen Modus zum Durchlaufen in der vorliegenden Aktivierreihenfolge oder eine Richtung zum visuellen Verschieben angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1426">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1427">Versucht, den Fokus von diesem Element auf ein anderes Element zu verschieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1427">Attempts to move focus from this element to another element.</span>
          </span>
          <span data-ttu-id="a8f26-1428">Die Richtung, in der der Fokus verschoben wird, wird durch eine Führungsrichtung angegeben, die innerhalb der Organisation des visuellen übergeordneten Elements für dieses Element interpretiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1428">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-1429">
            <see langword="true" />, wenn der angeforderte Durchlauf ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1429">
              <see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1430">Stellen Sie sicher, dass Sie überprüfen, dass den Rückgabewert dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1430">Make sure you check the return value of this method.</span></span> <span data-ttu-id="a8f26-1431">Der Rückgabewert `false` zurückgegeben werden, wenn der Durchlauf ausgeführt wird, in einen Tabstopp, die durch eines Steuerelements Komposition definiert ist, und die durchlaufanforderung hat keine umschließen angefordert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1431">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit&#xA;override this.OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit" Usage="uIElement.OnAccessKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1432">Die Ereignisdaten für das Tastenkombinationsereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1432">The event data to the access key event.</span>
          </span>
          <span data-ttu-id="a8f26-1433">In den Ereignisdaten wird gemeldet, welche Taste aufgerufen wurde. Zudem wird angegeben, ob das <see cref="T:System.Windows.Input.AccessKeyManager" />-Objekt, das das Senden dieser Ereignisse steuert, den Aufruf dieser Tastenkombination auch an andere Elemente gesendet hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1433">The event data reports which key was invoked, and indicate whether the <see cref="T:System.Windows.Input.AccessKeyManager" /> object that controls the sending of these events also sent this access key invocation to other elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1434">Stellt die Klassenbehandlung für eine Situation bereit, in der eine Tastenkombination mit Bedeutung für dieses Element aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1434">Provides class handling for when an access key that is meaningful for this element is invoked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1435">Es ist keine tatsächliche AccessKey-Ereignis in der <xref:System.Windows.UIElement> -Klasse, oder an anderer Stelle, die Sie auslösen, oder fügen Sie Handler für können.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1435">There is no actual AccessKey event in the <xref:System.Windows.UIElement> class, or elsewhere, which you can raise or attach handlers for.</span></span> <span data-ttu-id="a8f26-1436">Stattdessen wird das Ereignis ausgelöst wurde über eine Klasse dedizierter Manager <xref:System.Windows.Input.AccessKeyManager>, welche Prozesse nach dem alle Eingaben, um Zugriffstasten zu suchen, die für die gesamte Eingabe Modell anwendbar sind.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1436">Instead, the event is originated via a dedicated manager class, <xref:System.Windows.Input.AccessKeyManager>, which post-processes all input to search for access keys that are applicable to the entire input model.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a8f26-1437">
            <para>Die Standardimplementierung dieser Methode in <see cref="T:System.Windows.UIElement" /> legt den Fokus auf dieses Element über Tastatur (durch Aufrufen von <see cref="M:System.Windows.UIElement.Focus" />). Implementierungen sollten dieses Verhalten weitergeben, wenn sie den Fokus erhalten kann, sind, da es sich um ein erwartetes Verhalten für Eingabehilfenszenarios handelt. Beachten Sie, dass die grundlegende Implementierung keine Auswirkungen, die mit den übergebenen Ereignisdaten hat und keine weiteren Ereignis löst. Es setzt nur den Fokus.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1437">
              <para>The default implementation of this method in <see cref="T:System.Windows.UIElement" /> sets keyboard focus to this element (by calling <see cref="M:System.Windows.UIElement.Focus" />). Implementations should perpetuate this behavior if they are focusable, because it is an expected behavior for accessibility scenarios. Note that the base implementation does nothing with the passed event data and raises no further event; it just sets the focus.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnChildDesiredSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChildDesiredSizeChanged (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChildDesiredSizeChanged(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChildDesiredSizeChanged (child As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChildDesiredSizeChanged(System::Windows::UIElement ^ child);" />
      <MemberSignature Language="F#" Value="abstract member OnChildDesiredSizeChanged : System.Windows.UIElement -&gt; unit&#xA;override this.OnChildDesiredSizeChanged : System.Windows.UIElement -&gt; unit" Usage="uIElement.OnChildDesiredSizeChanged child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="a8f26-1438">Das untergeordnete Element, dessen Größe geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1438">The child element that is being resized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1439">Unterstützt das Layoutverhalten beim Ändern der Größe eines untergeordneten Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1439">Supports layout behavior when a child element is resized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1440">Diese Methode wird in der Regel nicht vom Anwendungscode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1440">This method is typically not called by your application code.</span></span> <span data-ttu-id="a8f26-1441">Es ist verfügbar, sodass das abgeleitete Element, die Klassen weiter vornehmen können auf ihren eigenen Layoutzustand möglicherweise ungültige überprüft.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1441">It is exposed so that derived element classes can make further checks on their own possibly invalid layout state.</span></span> <span data-ttu-id="a8f26-1442">Klassen könnte auch versuchen für Optimierungen aus, um die Verarbeitungszeit für eine Layoutphase basierend auf größenänderungen von untergeordneten Elementen zu minimieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1442">Classes could also attempt optimizations to minimize the processing time for a layout pass based on size changes to child elements.</span></span> <span data-ttu-id="a8f26-1443">Ein Beispiel für abgeleitetes Elementklasse, die implementiert <xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> ist die <xref:System.Windows.Controls.Grid> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1443">An example derived element class that implements <xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> is the <xref:System.Windows.Controls.Grid> control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a8f26-1444">
            <para>Die <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> Methode verfügt über die standardmäßige Implementierung des Aufrufs <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> für sich selbst. Eine typische Implementierung wäre: Führen Sie beliebige Optimierung eigene Element unterstützt, und klicken Sie dann in der Regel rufen Basis <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> von mindestens einem der codebranches (diejenige, die "dirty" Zustand pro Ihr eigenes Measure, das Logik für das Zwischenspeichern angegeben).  Diese Methode wird nur aufgerufen, die Layout-Verarbeitung, wenn es sich um das untergeordnete Element selbst war, das die größenveränderung der stammen. Wenn das übergeordnete Element initiiert, andernfalls die <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> übergeben, gemäß den Regeln des Layout-System, das übergeordnete Element ist Neuberechnen Layout bereits. Das Layoutsystem verarbeitet Layout in der Reihenfolge der untergeordneten zu den übergeordneten, sodass keine zurück zum übergeordneten Element zur größenanpassung aus den untergeordneten-Element-Layout-aufrufen erforderlich ist.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1444">
              <para>The <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> method has the default implementation of calling <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> on itself. A typical implementation would be: do whatever optimization your own element supports, and then typically call base <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> from at least one of the code branches (the one that indicated "dirty" state per your own measure caching logic).  This method is only called in the layout processing if it was the child itself that originated the size changes. Otherwise, if the parent element initiates the <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> pass, according to the layout system rules, the parent is recalculating layout already. The layout system processes layout in the order of child-to-parent, so no return to parent element sizing from the child element layout calls is necessary.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer&#xA;override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="uIElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-1445">Gibt klassenspezifische <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />-Implementierungen für die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]-Infrastruktur zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1445">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-1446">Die typspezifische <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />-Implementierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1446">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a8f26-1447">
            <para>Die Implementierung dieser Methode ist in der Regel um den Konstruktor eines bestimmten aufzurufen <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> Implementierung, und geben sie als Rückgabewert zurück.  Alle <see cref="T:System.Windows.UIElement" /> abgeleitete Klassen sollten diese Methode implementieren, um ihre eigenen spezifischen bieten <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> Implementierungen der [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Infrastruktur. Weitere Informationen zum Implementieren dieses Musters finden Sie unter <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1447">
              <para>The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.  All <see cref="T:System.Windows.UIElement" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure. For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1448">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1448">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1449">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragEnter" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1449">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1450">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1450">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1451">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1451">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1452">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1452">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1453">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1453">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1454">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1454">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1455">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1455">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1456">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1456">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1457">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1457">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1458">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1458">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1459">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1459">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1460">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1460">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1461">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragLeave" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1461">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1462">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1462">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1463">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1463">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1464">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1464">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1465">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1465">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1466">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1466">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1467">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1467">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1468">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1468">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1469">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1469">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1470">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1470">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1471">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1471">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1472">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1472">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1473">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragOver" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1473">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1474">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1474">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1475">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1475">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1476">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1476">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1477">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1477">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1478">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1478">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1479">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1479">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1480">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1480">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1481">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1481">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1482">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1482">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1483">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1483">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1484">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1484">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1485">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragEnter" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1485">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1486">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1486">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1487">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1487">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1488">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1488">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1489">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1489">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1490">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1490">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1491">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1491">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1492">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1492">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1493">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1493">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1494">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1494">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1495">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1495">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1496">Das <see cref="T:System.Windows.GiveFeedbackEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1496">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1497">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.GiveFeedback" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1497">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1498">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1498">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1499">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1499">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1500">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1500">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1501">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1501">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1502">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1502">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1503">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1503">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1504">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1504">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1505">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1505">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1506">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1506">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1507">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1507">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1508">Ein <see cref="T:System.Windows.RoutedEventArgs" />, das Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1508">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span>
          </span>
          <span data-ttu-id="a8f26-1509">Diese Ereignisdaten müssen den Bezeichner für das <see cref="E:System.Windows.UIElement.GotFocus" />-Ereignis enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1509">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1510">Löst das <see cref="E:System.Windows.UIElement.GotFocus" />-Routingereignis mithilfe der bereitgestellten Ereignisdaten aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1510">Raises the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event by using the event data provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1511">Diese Methode besitzt auch virtuell, eine Standardimplementierung, die das Ereignis auslöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1511">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="a8f26-1512">Dies auch mit \* methodenimplementierung dient zum Auslösen des Ereignisses, und diese methodenimplementierung wird intern zum Auslösen des Ereignisses aufgerufen wenn die <xref:System.Windows.UIElement.IsFocused%2A> Eigenschaftswert ändert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1512">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="a8f26-1513">Die <xref:System.Windows.UIElement.OnGotFocus%2A> Implementierung unterscheidet sich von einigen anderen [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] auf \* Implementierungen, die nur eine bequeme Möglichkeit, Hinzufügen einer Klassenbehandlung für das Ereignis zu bieten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1513">The <xref:System.Windows.UIElement.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a8f26-1514">
            <para>Wenn Sie wohl durchdacht und ungewöhnliche muss den Fokusereignisse nicht ausgelöst haben, stellen Sie sicher, dass Ihre Implementierung die basisimplementierung aufgerufen. Andernfalls die <see cref="E:System.Windows.UIElement.GotFocus" /> Ereignis wird nicht ausgelöst, während typischer Vorgänge, die normalerweise den Fokus auf dieses Element festgelegt. Wenn Sie nicht, dass das Element den Fokus erhalten kann sein beabsichtigen, Sie können verhindern das Element den Fokus erhalten kann durch Festlegen von <see cref="P:System.Windows.UIElement.Focusable" /> zu <see langword="false" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1514">
              <para>Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation. Otherwise, the <see cref="E:System.Windows.UIElement.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element. If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1515">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1515">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1516">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1516">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1517">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1517">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1518">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1518">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1519">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1519">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1520">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1520">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1521">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1521">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1522">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1522">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1523">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1523">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1524">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1524">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1525">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1525">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1526">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1526">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnGotMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1527">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1527">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1528">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1528">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1529">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1529">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1530">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1530">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1531">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1531">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1532">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1532">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1533">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1533">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1534">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1534">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1535">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1535">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1536">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1536">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1537">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1537">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1538">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1538">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnGotStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1539">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1539">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1540">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1540">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1541">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1541">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1542">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1542">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1543">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1543">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1544">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1544">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1545">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1545">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1546">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1546">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1547">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1547">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1548">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1548">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1549">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1549">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1550">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1550">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnGotTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1551">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1551">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1552">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.GotTouchCapture" />-Routingereignis bereit, das eintritt, wenn eine Berührung für dieses Element erfasst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1552">Provides class handling for the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1553">Die <xref:System.Windows.UIElement.OnGotTouchCapture%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1553">The <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-1554">Außer Kraft setzen <xref:System.Windows.UIElement.OnGotTouchCapture%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.GotTouchCapture> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1554">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.GotTouchCapture> event.</span></span> <span data-ttu-id="a8f26-1555">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement.OnGotTouchCapture%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1555">Be sure to call the base class’s <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsKeyboardFocusedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1556">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1556">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1557">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />-Ereignis für dieses Element ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1557">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="a8f26-1558">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1558">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1559">Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <xref:System.Windows.UIElement.IsKeyboardFocused%2A> -Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1559">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="a8f26-1560">Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1560">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a8f26-1561">Die <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1561">Then the <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a8f26-1562">Beachten Sie, dass die <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> Ereignis nicht um ein Routingereignis ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1562">Notice that the  <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="a8f26-1563">Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1563">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a8f26-1564">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1564">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1565">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1565">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8f26-1566">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1566">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1567">Ein <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1567">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1568">Wird unmittelbar vor dem Auslösen des <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />-Ereignisses durch dieses Element aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1568">Invoked just before the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span>
          </span>
          <span data-ttu-id="a8f26-1569">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1569">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1570">Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> -Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1570">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> dependency property changes .</span></span> <span data-ttu-id="a8f26-1571">Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1571">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a8f26-1572">Die <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1572">Then the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a8f26-1573">Beachten Sie, dass die <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> Ereignis nicht um ein Routingereignis ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1573">Notice that the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="a8f26-1574">Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1574">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a8f26-1575">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1575">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1576">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1576">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8f26-1577">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1577">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1578">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1578">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1579">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" />-Ereignis für dieses Element ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1579">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="a8f26-1580">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1580">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1581">Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <xref:System.Windows.UIElement.IsMouseCaptured%2A> Abhängigkeitseigenschaft geändert wird, dessen Wert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1581">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="a8f26-1582">Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1582">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a8f26-1583">Die <xref:System.Windows.UIElement.IsMouseCapturedChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1583">Then the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a8f26-1584">Beachten Sie, dass die <xref:System.Windows.UIElement.IsMouseCapturedChanged> Ereignis kein Routingereignis; ist. Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1584">Notice that the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is not a routed event; Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a8f26-1585">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1585">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1586">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1586">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8f26-1587">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1587">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsMouseCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1588">Ein <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1588">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1589">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />-Ereignis für dieses Element ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1589">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="a8f26-1590">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1590">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a8f26-1591">
            <para>Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> Abhängigkeitseigenschaft geändert wird, dessen Wert. Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern. Die <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst. Beachten Sie, dass das Ereignis nicht als ein Routingereignis ist. Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.  Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen. Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1591">
              <para>This virtual method is raised when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property changes its value. The virtual method is raised first and can manipulate the event data as necessary. Then the <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance. Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.  This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsMouseDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1592">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1592">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1593">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />-Ereignis für dieses Element ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1593">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="a8f26-1594">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1594">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1595">Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> Abhängigkeitseigenschaft geändert wird, dessen Wert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1595">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="a8f26-1596">Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1596">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a8f26-1597">Die <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1597">Then the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a8f26-1598">Beachten Sie, dass die <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> Ereignis nicht um ein Routingereignis ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1598">Notice that the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="a8f26-1599">Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1599">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a8f26-1600">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1600">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1601">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1601">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8f26-1602">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1602">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsStylusCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1603">Ein <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1603">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1604">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" />-Ereignis für dieses Element ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1604">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="a8f26-1605">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1605">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1606">Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <xref:System.Windows.UIElement.IsStylusCaptured%2A> Abhängigkeitseigenschaft geändert wird, dessen Wert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1606">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="a8f26-1607">Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1607">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a8f26-1608">Die <xref:System.Windows.UIElement.IsStylusCapturedChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1608">Then the <xref:System.Windows.UIElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a8f26-1609">Beachten Sie, dass das Ereignis nicht als ein Routingereignis ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1609">Notice that the event is not a routed event.</span></span> <span data-ttu-id="a8f26-1610">Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1610">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a8f26-1611">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1611">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1612">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1612">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8f26-1613">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1613">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsStylusCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1614">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1614">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1615">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />-Ereignis für dieses Element ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1615">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="a8f26-1616">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1616">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1617">Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> Abhängigkeitseigenschaft geändert wird, dessen Wert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1617">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="a8f26-1618">Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1618">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a8f26-1619">Die <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1619">Then the <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a8f26-1620">Beachten Sie, dass das Ereignis nicht als ein Routingereignis ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1620">Notice that the event is not a routed event.</span></span> <span data-ttu-id="a8f26-1621">Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1621">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a8f26-1622">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1622">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1623">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1623">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8f26-1624">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1624">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsStylusDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1625">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1625">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1626">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" />-Ereignis für dieses Element ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1626">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="a8f26-1627">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1627">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1628">Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> Abhängigkeitseigenschaft geändert wird, dessen Wert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1628">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="a8f26-1629">Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1629">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a8f26-1630">Die <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1630">Then the <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a8f26-1631">Beachten Sie, dass das Ereignis nicht als ein Routingereignis ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1631">Notice that the event is not a routed event.</span></span> <span data-ttu-id="a8f26-1632">Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1632">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a8f26-1633">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1633">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1634">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1634">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8f26-1635">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1635">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1636">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1636">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1637">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.KeyDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1637">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1638">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1638">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1639">Tastatureingaben werden von einem dedizierten Eingabe-Manager verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1639">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="a8f26-1640">Andere Features für die Programmierung, die Tastatureingaben, z. B. Eingabe- und Befehle-Bindungen, benötigen möglicherweise die Tastatureingabe verarbeiten, bevor es als eine allgemeine Tastatureingabe verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1640">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="a8f26-1641">Wenn diese Eingabe Systemfunktionen markieren Sie das Ereignis als behandelt, klicken Sie dann <xref:System.Windows.UIElement.OnKeyDown%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1641">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a8f26-1642">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1642">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1643">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1643">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1644">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1644">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1645">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1645">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1646">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1646">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1647">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1647">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1648">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1648">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1649">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1649">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1650">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1650">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1651">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1651">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1652">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.KeyUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1652">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1653">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1653">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1654">Tastatureingaben werden von einem dedizierten Eingabe-Manager verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1654">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="a8f26-1655">Andere Features für die Programmierung, die Tastatureingaben, z. B. Eingabe- und Befehle-Bindungen, benötigen möglicherweise die Tastatureingabe verarbeiten, bevor es als eine allgemeine Tastatureingabe verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1655">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="a8f26-1656">Wenn diese Eingabe Systemfunktionen markieren Sie das Ereignis als behandelt, klicken Sie dann <xref:System.Windows.UIElement.OnKeyUp%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1656">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a8f26-1657">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1657">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1658">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1658">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1659">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1659">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1660">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1660">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1661">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1661">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1662">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1662">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1663">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1663">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1664">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1664">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1665">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1665">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1666">Ein <see cref="T:System.Windows.RoutedEventArgs" />, das Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1666">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span>
          </span>
          <span data-ttu-id="a8f26-1667">Diese Ereignisdaten müssen den Bezeichner für das <see cref="E:System.Windows.UIElement.LostFocus" />-Ereignis enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1667">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1668">Löst das <see cref="E:System.Windows.UIElement.LostFocus" />- Routingereignis mithilfe der bereitgestellten Ereignisdaten aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1668">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event by using the event data that is provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1669">Diese Methode besitzt auch virtuell, eine Standardimplementierung, die das Ereignis auslöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1669">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="a8f26-1670">Dies auch mit \* methodenimplementierung dient zum Auslösen des Ereignisses, und diese methodenimplementierung wird intern zum Auslösen des Ereignisses aufgerufen wenn die <xref:System.Windows.UIElement.IsFocused%2A> Eigenschaftswert ändert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1670">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="a8f26-1671">Diese Implementierung unterscheidet sich von einigen anderen [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] auf \* Implementierungen, die nur eine bequeme Möglichkeit, Hinzufügen einer Klassenbehandlung für das Ereignis zu bieten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1671">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a8f26-1672">
            <para>Wenn Sie wohl durchdacht und ungewöhnliche muss den Fokusereignisse nicht ausgelöst haben, stellen Sie sicher, dass Ihre Implementierung die basisimplementierung aufgerufen. Andernfalls die <see cref="E:System.Windows.UIElement.LostFocus" /> Ereignis wird nicht ausgelöst, während typischer Vorgänge, die normalerweise den Fokus auf dieses Element festgelegt. Wenn Sie nicht, dass das Element den Fokus erhalten kann sein beabsichtigen, Sie können verhindern das Element den Fokus erhalten kann durch Festlegen von <see cref="P:System.Windows.UIElement.Focusable" /> zu <see langword="false" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1672">
              <para>Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation. Otherwise, the <see cref="E:System.Windows.UIElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element. If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1673">Die Instanz von <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, die die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1673">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1674">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1674">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1675">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1675">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1676">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1676">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1677">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1677">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1678">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1678">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1679">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1679">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1680">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1680">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1681">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1681">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1682">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1682">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1683">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1683">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1684">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1684">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1685">Die Instanz von <see cref="T:System.Windows.Input.MouseEventArgs" />, die die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1685">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1686">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1686">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1687">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1687">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1688">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1688">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1689">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1689">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1690">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1690">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1691">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1691">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1692">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1692">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1693">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1693">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1694">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1694">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1695">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1695">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1696">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1696">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnLostStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1697">Die Instanz von <see cref="T:System.Windows.Input.StylusEventArgs" />, die die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1697">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1698">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1698">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1699">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1699">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1700">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1700">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1701">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1701">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1702">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1702">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1703">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1703">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1704">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1704">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1705">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1705">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1706">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1706">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1707">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1707">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1708">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1708">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnLostTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1709">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1709">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1710">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.LostTouchCapture" />-Routingereignis bereit, das auftritt, wenn in diesem Element die Fingereingabenerfassung verloren geht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1710">Provides class handling for the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1711">Die <xref:System.Windows.UIElement.OnLostTouchCapture%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1711">The <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-1712">Außer Kraft setzen <xref:System.Windows.UIElement.OnLostTouchCapture%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.LostTouchCapture> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1712">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.LostTouchCapture> event.</span></span> <span data-ttu-id="a8f26-1713">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement.OnLostTouchCapture%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1713">Be sure to call the base class’s <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationBoundaryFeedback(class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationBoundaryFeedback (e As ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationBoundaryFeedback(System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit&#xA;override this.OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit" Usage="uIElement.OnManipulationBoundaryFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1714">Die Daten für das Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1714">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1715">Wird aufgerufen, wenn das <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />-Ereignis eintritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1715">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1716">Die <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1716">The <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-1717">Außer Kraft setzen <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1717">Override <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event.</span></span> <span data-ttu-id="a8f26-1718">Achten Sie darauf, dass Sie zum Aufrufen der <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> Methode der Basisklasse, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1718">Be sure to call the <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationCompleted (System.Windows.Input.ManipulationCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationCompleted(class System.Windows.Input.ManipulationCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationCompleted (e As ManipulationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationCompleted(System::Windows::Input::ManipulationCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationCompleted : System.Windows.Input.ManipulationCompletedEventArgs -&gt; unit&#xA;override this.OnManipulationCompleted : System.Windows.Input.ManipulationCompletedEventArgs -&gt; unit" Usage="uIElement.OnManipulationCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1719">Die Daten für das Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1719">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1720">Wird aufgerufen, wenn das <see cref="E:System.Windows.UIElement.ManipulationCompleted" />-Ereignis eintritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1720">Called when the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1721">Die <xref:System.Windows.UIElement.OnManipulationCompleted%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1721">The <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-1722">Außer Kraft setzen <xref:System.Windows.UIElement.OnManipulationCompleted%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.ManipulationCompleted> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1722">Override <xref:System.Windows.UIElement.OnManipulationCompleted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationCompleted> event.</span></span> <span data-ttu-id="a8f26-1723">Achten Sie darauf, dass Sie zum Aufrufen der <xref:System.Windows.UIElement.OnManipulationCompleted%2A> Methode der Basisklasse, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1723">Be sure to call the <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationDelta">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationDelta (System.Windows.Input.ManipulationDeltaEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationDelta(class System.Windows.Input.ManipulationDeltaEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationDelta (e As ManipulationDeltaEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationDelta(System::Windows::Input::ManipulationDeltaEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationDelta : System.Windows.Input.ManipulationDeltaEventArgs -&gt; unit&#xA;override this.OnManipulationDelta : System.Windows.Input.ManipulationDeltaEventArgs -&gt; unit" Usage="uIElement.OnManipulationDelta e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationDeltaEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1724">Die Daten für das Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1724">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1725">Wird aufgerufen, wenn das <see cref="E:System.Windows.UIElement.ManipulationDelta" />-Ereignis eintritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1725">Called when the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1726">Die <xref:System.Windows.UIElement.OnManipulationDelta%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1726">The <xref:System.Windows.UIElement.OnManipulationDelta%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-1727">Außer Kraft setzen <xref:System.Windows.UIElement.OnManipulationDelta%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.ManipulationDelta> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1727">Override <xref:System.Windows.UIElement.OnManipulationDelta%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="a8f26-1728">Achten Sie darauf, dass Sie zum Aufrufen der <xref:System.Windows.UIElement.OnManipulationDelta%2A> Methode der Basisklasse, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1728">Be sure to call the <xref:System.Windows.UIElement.OnManipulationDelta%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationInertiaStarting (System.Windows.Input.ManipulationInertiaStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationInertiaStarting(class System.Windows.Input.ManipulationInertiaStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationInertiaStarting (e As ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationInertiaStarting(System::Windows::Input::ManipulationInertiaStartingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationInertiaStarting : System.Windows.Input.ManipulationInertiaStartingEventArgs -&gt; unit&#xA;override this.OnManipulationInertiaStarting : System.Windows.Input.ManipulationInertiaStartingEventArgs -&gt; unit" Usage="uIElement.OnManipulationInertiaStarting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationInertiaStartingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1729">Die Daten für das Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1729">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1730">Wird aufgerufen, wenn das <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" />-Ereignis eintritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1730">Called when the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1731">Die <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1731">The <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-1732">Außer Kraft setzen <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.ManipulationInertiaStarting> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1732">Override <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event.</span></span> <span data-ttu-id="a8f26-1733">Achten Sie darauf, dass Sie zum Aufrufen der <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> Methode der Basisklasse, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1733">Be sure to call the <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarted (System.Windows.Input.ManipulationStartedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarted(class System.Windows.Input.ManipulationStartedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarted (e As ManipulationStartedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarted(System::Windows::Input::ManipulationStartedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationStarted : System.Windows.Input.ManipulationStartedEventArgs -&gt; unit&#xA;override this.OnManipulationStarted : System.Windows.Input.ManipulationStartedEventArgs -&gt; unit" Usage="uIElement.OnManipulationStarted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1734">Die Daten für das Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1734">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1735">Wird aufgerufen, wenn das <see cref="E:System.Windows.UIElement.ManipulationStarted" />-Ereignis eintritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1735">Called when the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1736">Die <xref:System.Windows.UIElement.OnManipulationStarted%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1736">The <xref:System.Windows.UIElement.OnManipulationStarted%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-1737">Außer Kraft setzen <xref:System.Windows.UIElement.OnManipulationStarted%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.ManipulationStarted> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1737">Override <xref:System.Windows.UIElement.OnManipulationStarted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarted> event.</span></span> <span data-ttu-id="a8f26-1738">Achten Sie darauf, dass Sie zum Aufrufen der <xref:System.Windows.UIElement.OnManipulationStarted%2A> Methode der Basisklasse, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1738">Be sure to call the <xref:System.Windows.UIElement.OnManipulationStarted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarting (System.Windows.Input.ManipulationStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarting(class System.Windows.Input.ManipulationStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarting (e As ManipulationStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarting(System::Windows::Input::ManipulationStartingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationStarting : System.Windows.Input.ManipulationStartingEventArgs -&gt; unit&#xA;override this.OnManipulationStarting : System.Windows.Input.ManipulationStartingEventArgs -&gt; unit" Usage="uIElement.OnManipulationStarting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1739">Ein <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1739">A <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1740">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.ManipulationStarting" />-Routingereignis bereit, das beim ersten Erstellen des Manipulationsprozessors eintritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1740">Provides class handling for the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event that occurs when the manipulation processor is first created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1741">Die <xref:System.Windows.UIElement.OnManipulationStarting%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1741">The <xref:System.Windows.UIElement.OnManipulationStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-1742">Außer Kraft setzen <xref:System.Windows.UIElement.OnManipulationStarting%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.ManipulationStarting> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1742">Override <xref:System.Windows.UIElement.OnManipulationStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span> <span data-ttu-id="a8f26-1743">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement.OnManipulationStarting%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1743">Be sure to call the base class’s <xref:System.Windows.UIElement.OnManipulationStarting%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1744">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1744">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="a8f26-1745">Diese Ereignisdaten melden Details zur Maustaste, die gedrückt wurde, und zum behandelten Zustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1745">This event data reports details about the mouse button that was pressed and the handled state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1746">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1746">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1747">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1747">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1748">Aktionen der Maus werden auch von einem dedizierten Eingabe-Manager verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1748">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="a8f26-1749">Andere Features für die Programmierung, die Aktionen der Maus, z. B. Eingabe abhängig und Bindungen, Befehl möglicherweise Handler für die Aktion aufrufen, bevor es als eine allgemeine Schaltfläche Mausaktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1749">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="a8f26-1750">Wenn Sie diese markieren Eingabedateien der <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignis als behandelt, <xref:System.Windows.UIElement.OnMouseDown%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1750">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a8f26-1751">Wenn Sie diesen Klassenhandler verwenden, um das Ereignis als behandelt markieren, Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement.MouseLeftButtonDown> und <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1751">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="a8f26-1752">Eines dieser Ereignisse kann ausgelöst werden, auf dem empfangenden Element beim <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1752">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="a8f26-1753">Wenn Sie dieses Ereignis in der Klassenbehandlung als behandelt markieren, werden dennoch Unterereignisse ausgelöst. Sie kann jedoch zum behandelten Zustand in den Ereignisdaten übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1753">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="a8f26-1754">Wenn das Ereignis in der Klassenbehandlung behandelt wird, Instanzhandler für das Unterereignisse werden nicht aufgerufen, wenn Sie explizit verwenden <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true` um Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1754">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="a8f26-1755">Klassenhandler werden ebenfalls nicht aufgerufen, wenn diese Klassenhandler registriert wurden, mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1755">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="a8f26-1756">Durch Behandlung <xref:System.Windows.UIElement.OnMouseDown%2A>, Sie sind wird impliziert, dass die Klassenbehandlung für alle möglichen Aktionen mit gedrückter berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1756">By handling <xref:System.Windows.UIElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="a8f26-1757">Dieses Verhalten kann unerwünscht sein. Daher vorsichtig, wenn Sie diese virtuelle Methode verwenden, um die Ereignisse als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1757">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="a8f26-1758">Jedes der direkten Schaltfläche-spezifische Ereignisse verfügt auch über ein virtuelles auf \* Methode. Überlegen Sie, ob überschreiben diese Schaltfläche Klassenhandler besser geeignet sein könnte.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1758">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="a8f26-1759">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1759">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1760">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1760">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1761">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1761">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1762">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1762">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1763">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1763">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1764">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1764">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1765">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1765">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1766">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1766">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1767">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1767">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1768">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1768">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1769">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Mouse.MouseEnter" />-Ereignis für dieses Element ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1769">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span>
          </span>
          <span data-ttu-id="a8f26-1770">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1770">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1771">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1771">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1772">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1772">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8f26-1773">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1773">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a8f26-1774">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1774">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1775">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis mit einer direkten routing-Strategie.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1775">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="a8f26-1776">Das Ereignis als behandelt markiert ist nach wie vor nützlich zum Verhindern der typischen Instanzhandler (diejenigen, die keine angeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1776">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1777">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1777">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1778">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Mouse.MouseLeave" />-Ereignis für dieses Element ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1778">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span>
          </span>
          <span data-ttu-id="a8f26-1779">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1779">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1780">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1780">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1781">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1781">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8f26-1782">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1782">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a8f26-1783">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1783">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1784">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis mit einer direkten routing-Strategie.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1784">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="a8f26-1785">Das Ereignis als behandelt markiert ist nach wie vor nützlich zum Verhindern der typischen Instanzhandler (diejenigen, die keine angeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1785">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1786">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1786">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="a8f26-1787">Die Ereignisdaten melden, dass die linke Maustaste gedrückt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1787">The event data reports that the left mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1788">Wird aufgerufen, wenn ein nicht behandeltes geroutetes <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />-Ereignis für dieses Element ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1788">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event is raised on this element.</span>
          </span>
          <span data-ttu-id="a8f26-1789">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1789">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1790">Die <xref:System.Windows.UIElement.MouseLeftButtonDown> Ereignis scheint bubbling-Route übertragen wird aber in ein indirektes Verfahren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1790">The <xref:System.Windows.UIElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8f26-1791"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, das Blasendiagramm weitergeleitet, und jedes <xref:System.Windows.UIElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement.MouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1791"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="a8f26-1792">Obwohl Sie markieren können die <xref:System.Windows.UIElement.MouseLeftButtonDown> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1792">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8f26-1793">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1793">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8f26-1794">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement> Lauscht auf <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1794">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8f26-1795">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1795">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8f26-1796">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1796">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8f26-1797">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement> durch Überschreiben <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1797">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="a8f26-1798">Alternativ können Sie diese Methode überschreiben, um die Ereignisbehandlung für einen bestimmten Maus-Status zu ändern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1798">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="a8f26-1799">An, ob Sie wählen, um die basisimplementierung aufrufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1799">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="a8f26-1800">Deaktiviert die Eingabe Standardbehandlung für dieses Mausereignis für Vorgängerklassen, die erwarten, dass auch aufrufen Basis aufgerufen <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1800">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="a8f26-1801">Sie können z. B. Ableiten aus <xref:System.Windows.Controls.Button> und überschreiben <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> in der abgeleiteten Klasse ohne Aufrufen der basisimplementierung; dies überschreiben jedoch deaktiviert die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1801">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1802">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1802">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="a8f26-1803">Die Ereignisdaten melden, dass die linke Maustaste losgelassen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1803">The event data reports that the left mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1804">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1804">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1805">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1805">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1806">Die <xref:System.Windows.UIElement.MouseLeftButtonUp> Ereignis scheint bubbling-Route übertragen wird aber in ein indirektes Verfahren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1806">The <xref:System.Windows.UIElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8f26-1807"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, das Blasendiagramm weitergeleitet, und jedes <xref:System.Windows.UIElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement.MouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1807"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="a8f26-1808">Obwohl Sie markieren können die <xref:System.Windows.UIElement.MouseLeftButtonUp> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1808">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8f26-1809">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1809">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8f26-1810">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement> Lauscht auf <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1810">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8f26-1811">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1811">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8f26-1812">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1812">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8f26-1813">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement> durch Überschreiben <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1813">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1814">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1814">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1815">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1815">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1816">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1816">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1817">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1817">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1818">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1818">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1819">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1819">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1820">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1820">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1821">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1821">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1822">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1822">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1823">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1823">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1824">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1824">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1825">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1825">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1826">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1826">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="a8f26-1827">Die Ereignisdaten melden, dass die rechte Maustaste gedrückt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1827">The event data reports that the right mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1828">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.MouseRightButtonDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1828">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1829">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1829">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1830">Die <xref:System.Windows.UIElement.MouseRightButtonDown> Ereignis scheint bubbling-Route übertragen wird aber in ein indirektes Verfahren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1830">The <xref:System.Windows.UIElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8f26-1831"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, das Blasendiagramm weitergeleitet, und jedes <xref:System.Windows.UIElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1831"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="a8f26-1832">Obwohl Sie markieren können die <xref:System.Windows.UIElement.MouseRightButtonDown> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1832">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8f26-1833">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1833">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8f26-1834">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement> Lauscht auf <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1834">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8f26-1835">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1835">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8f26-1836">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1836">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8f26-1837">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement> durch Überschreiben <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1837">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="a8f26-1838">Alternativ können Sie diese Methode überschreiben, um die Ereignisbehandlung für einen bestimmten Maus-Status zu ändern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1838">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="a8f26-1839">An, ob Sie wählen, um die basisimplementierung aufrufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1839">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="a8f26-1840">Deaktiviert die Eingabe Standardbehandlung für dieses Mausereignis für Vorgängerklassen, die erwarten, dass auch aufrufen Basis aufgerufen <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1840">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="a8f26-1841">Sie können z. B. Ableiten aus <xref:System.Windows.Controls.Control> und überschreiben <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> in der abgeleiteten Klasse, ohne dass Base aufgerufen; diese Außerkraftsetzung Bedenken Sie jedoch, den Kontext im Menü Dienste auf das Steuerelement wird von der <xref:System.Windows.Controls.Control> Standardverhalten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1841">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1842">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1842">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="a8f26-1843">Die Ereignisdaten melden, dass die rechte Maustaste losgelassen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1843">The event data reports that the right mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1844">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.MouseRightButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1844">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1845">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1845">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1846">Die <xref:System.Windows.UIElement.MouseRightButtonUp> Ereignis scheint bubbling-Route übertragen wird aber in ein indirektes Verfahren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1846">The <xref:System.Windows.UIElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8f26-1847"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, das Blasendiagramm weitergeleitet, und jedes <xref:System.Windows.UIElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1847"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="a8f26-1848">Obwohl Sie markieren können die <xref:System.Windows.UIElement.MouseRightButtonUp> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1848">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8f26-1849">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1849">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8f26-1850">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement> Lauscht auf <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1850">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8f26-1851">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1851">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8f26-1852">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1852">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8f26-1853">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement> durch Überschreiben <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1853">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1854">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1854">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="a8f26-1855">Die Ereignisdaten melden, dass die Maustaste losgelassen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1855">The event data reports that the mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1856">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.Input.Mouse.MouseUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1856">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1857">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1857">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1858">Aktionen der Maus werden auch von einem dedizierten Eingabe-Manager verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1858">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="a8f26-1859">Andere Features für die Programmierung, die Aktionen der Maus, z. B. Eingabe abhängig und Bindungen, Befehl möglicherweise Handler für die Aktion aufrufen, bevor es als eine allgemeine Schaltfläche Mausaktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1859">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="a8f26-1860">Wenn Sie diese markieren Eingabedateien der <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignis als behandelt, <xref:System.Windows.UIElement.OnMouseUp%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1860">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a8f26-1861">Wenn Sie diesen Klassenhandler verwenden, um das Ereignis als behandelt markieren, Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement.MouseLeftButtonUp> und <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1861">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="a8f26-1862">Eines dieser Ereignisse kann ausgelöst werden, auf dem empfangenden Element beim <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1862">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="a8f26-1863">Wenn Sie dieses Ereignis in der Klassenbehandlung als behandelt markieren, werden dennoch Unterereignisse ausgelöst. Sie kann jedoch zum behandelten Zustand in den Ereignisdaten übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1863">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="a8f26-1864">Wenn das Ereignis in der Klassenbehandlung behandelt wird, Instanzhandler für das Unterereignisse werden nicht aufgerufen, wenn Sie explizit verwenden <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true` um Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1864">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="a8f26-1865">Klassenhandler werden ebenfalls nicht aufgerufen, wenn diese Klassenhandler registriert wurden, mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1865">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="a8f26-1866">Durch Behandlung <xref:System.Windows.UIElement.OnMouseUp%2A>, Sie sind somit den Eindruck erwecken, dass die Klassenbehandlung für alle möglichen Aktionen berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1866">By handling <xref:System.Windows.UIElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="a8f26-1867">Dieses Verhalten kann unerwünscht sein. Daher vorsichtig, wenn Sie diese virtuelle Methode verwenden, um die Ereignisse als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1867">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="a8f26-1868">Jedes der direkten Schaltfläche-spezifische Ereignisse verfügt auch über ein virtuelles auf \* Methode. Überlegen Sie, ob überschreiben diese Schaltfläche Klassenhandler besser geeignet sein könnte.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1868">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="a8f26-1869">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1869">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1870">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1870">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1871">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1871">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1872">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1872">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1873">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1873">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1874">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1874">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1875">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1875">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1876">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1876">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1877">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1877">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1878">Das <see cref="T:System.Windows.Input.MouseWheelEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1878">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1879">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseWheel" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1879">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1880">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1880">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1881">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1881">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1882">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1882">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1883">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1883">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1884">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1884">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1885">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1885">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1886">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1886">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1887">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1887">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1888">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1888">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1889">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1889">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1890">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1890">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1891">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDragEnter" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1891">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1892">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1892">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1893">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1893">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1894">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1894">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1895">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1895">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1896">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1896">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1897">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1897">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1898">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1898">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1899">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1899">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1900">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1900">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1901">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1901">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-1902">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1902">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1903">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1903">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1904">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDragLeave" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1904">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1905">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1905">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1906">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1906">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1907">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1907">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1908">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1908">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1909">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1909">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1910">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1910">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1911">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1911">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1912">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1912">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1913">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1913">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1914">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1914">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-1915">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1915">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1916">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1916">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1917">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDragOver" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1917">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1918">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1918">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1919">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1919">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1920">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1920">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1921">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1921">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1922">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1922">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1923">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1923">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1924">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1924">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1925">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1925">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1926">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1926">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1927">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1927">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-1928">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1928">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1929">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1929">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1930">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDrop" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1930">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1931">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1931">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1932">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1932">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1933">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1933">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1934">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1934">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1935">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1935">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1936">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1936">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1937">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1937">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1938">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1938">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1939">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1939">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1940">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1940">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-1941">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1941">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement.OnPreviewGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1942">Das <see cref="T:System.Windows.GiveFeedbackEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1942">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1943">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1943">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1944">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1944">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1945">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1945">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1946">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1946">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1947">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1947">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1948">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1948">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1949">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1949">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1950">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1950">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1951">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1951">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1952">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1952">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1953">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1953">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-1954">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1954">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnPreviewGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1955">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1955">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1956">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1956">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1957">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1957">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1958">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1958">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1959">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1959">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1960">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1960">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1961">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1961">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1962">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1962">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1963">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1963">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1964">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1964">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1965">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1965">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1966">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1966">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-1967">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1967">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1968">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1968">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1969">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1969">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1970">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1970">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1971">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1971">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1972">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1972">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1973">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1973">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1974">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1974">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1975">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1975">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1976">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1976">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1977">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1977">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1978">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1978">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1979">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1979">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-1980">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1980">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnPreviewKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1981">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1981">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1982">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1982">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1983">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1983">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1984">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1984">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1985">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1985">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1986">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1986">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-1987">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1987">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-1988">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1988">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-1989">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1989">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-1990">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1990">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-1991">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1991">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-1992">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1992">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-1993">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1993">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnPreviewLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-1994">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1994">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-1995">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1995">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-1996">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-1996">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-1997">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1997">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-1998">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1998">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-1999">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-1999">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2000">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2000">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2001">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2001">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2002">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2002">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2003">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2003">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2004">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2004">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2005">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2005">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-2006">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2006">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2007">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2007">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="a8f26-2008">Die Ereignisdaten melden, dass eine oder mehrere Maustasten gedrückt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2008">The event data reports that one or more mouse buttons were pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2009">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2009">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2010">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2010">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2011">Aktionen der Maus werden auch von einem dedizierten Eingabe-Manager verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2011">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="a8f26-2012">Andere Features für die Programmierung, die Aktionen der Maus, z. B. Eingabe abhängig und Bindungen, Befehl möglicherweise Handler für die Aktion aufrufen, bevor es als eine allgemeine Schaltfläche Mausaktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2012">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="a8f26-2013">Wenn Sie diese markieren Eingabedateien der <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignis als behandelt, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2013">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a8f26-2014">Wenn Sie diesen Klassenhandler verwenden, um das Ereignis als behandelt markieren, Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> und <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2014">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="a8f26-2015">Eines dieser Ereignisse kann ausgelöst werden, auf dem empfangenden Element beim <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2015">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="a8f26-2016">Wenn Sie dieses Ereignis in der Klassenbehandlung als behandelt markieren, werden dennoch Unterereignisse ausgelöst. Sie kann jedoch zum behandelten Zustand in den Ereignisdaten übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2016">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="a8f26-2017">Wenn das Ereignis in der Klassenbehandlung behandelt wird, Instanzhandler für das Unterereignisse werden nicht aufgerufen, wenn Sie explizit verwenden <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true` um Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2017">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="a8f26-2018">Klassenhandler werden ebenfalls nicht aufgerufen, wenn diese Klassenhandler registriert wurden, mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2018">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="a8f26-2019">Durch Behandlung <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>, Sie sind wird impliziert, dass die Klassenbehandlung für alle möglichen Aktionen mit gedrückter berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2019">By handling <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="a8f26-2020">Dieses Verhalten kann unerwünscht sein. Daher vorsichtig, wenn Sie diese virtuelle Methode verwenden, um die Ereignisse als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2020">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="a8f26-2021">Jedes der direkten Schaltfläche-spezifische Ereignisse verfügt auch über ein virtuelles auf \* Methode. Überlegen Sie, ob überschreiben diese Schaltfläche Klassenhandler besser geeignet sein könnte.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2021">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="a8f26-2022">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2022">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2023">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2023">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2024">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2024">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2025">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2025">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2026">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2026">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2027">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2027">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2028">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2028">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2029">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2029">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2030">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2030">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-2031">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2031">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2032">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2032">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="a8f26-2033">Die Ereignisdaten melden, dass die linke Maustaste gedrückt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2033">The event data reports that the left mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2034">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2034">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2035">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2035">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2036">Die <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> -Ereignis angezeigt wird, die eine tunnelingroute unterwegs sind aber auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2036">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8f26-2037"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, Tunnel weitergeleitet, und jedes <xref:System.Windows.UIElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2037"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="a8f26-2038">Obwohl Sie markieren können die <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2038">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8f26-2039">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2039">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8f26-2040">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement> Lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2040">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8f26-2041">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2041">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8f26-2042">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2042">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8f26-2043">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement> durch Überschreiben <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2043">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="a8f26-2044">Alternativ können Sie diese Methode überschreiben, um die Ereignisbehandlung für einen bestimmten Maus-Status zu ändern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2044">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="a8f26-2045">An, ob Sie wählen, um die basisimplementierung aufrufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2045">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="a8f26-2046">Deaktiviert die Eingabe Standardbehandlung für dieses Mausereignis für Vorgängerklassen, die erwarten, dass auch aufrufen Basis aufgerufen <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2046">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="a8f26-2047">Sie können z. B. Ableiten aus <xref:System.Windows.Controls.Button> und überschreiben <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> in der abgeleiteten Klasse ohne Aufrufen der basisimplementierung; dies überschreiben jedoch deaktiviert die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2047">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2048">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2048">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="a8f26-2049">Die Ereignisdaten melden, dass die linke Maustaste losgelassen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2049">The event data reports that the left mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2050">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2050">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2051">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2051">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2052">Die <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> -Ereignis angezeigt wird, die eine tunnelingroute unterwegs sind aber auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2052">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8f26-2053"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, Tunnel weitergeleitet, und jedes <xref:System.Windows.UIElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2053"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="a8f26-2054">Obwohl Sie markieren können die <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2054">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8f26-2055">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2055">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8f26-2056">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement> Lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2056">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8f26-2057">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2057">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8f26-2058">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2058">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8f26-2059">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement> durch Überschreiben <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2059">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2060">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2060">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2061">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2061">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2062">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2062">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2063">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2063">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2064">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2064">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2065">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2065">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2066">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2066">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2067">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2067">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2068">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2068">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2069">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2069">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2070">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2070">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2071">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2071">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-2072">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2072">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2073">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2073">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="a8f26-2074">Die Ereignisdaten melden, dass die rechte Maustaste gedrückt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2074">The event data reports that the right mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2075">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2075">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2076">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2076">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2077">Die <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> -Ereignis angezeigt wird, die eine tunnelingroute unterwegs sind aber auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2077">The <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8f26-2078"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, Tunnel weitergeleitet, und jedes <xref:System.Windows.UIElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2078"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="a8f26-2079">Obwohl Sie markieren können die <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2079">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8f26-2080">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2080">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8f26-2081">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement> Lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2081">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8f26-2082">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2082">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8f26-2083">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2083">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8f26-2084">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement> durch Überschreiben <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2084">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="a8f26-2085">Alternativ können Sie diese Methode überschreiben, um die Ereignisbehandlung für einen bestimmten Maus-Status zu ändern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2085">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="a8f26-2086">An, ob Sie wählen, um die basisimplementierung aufrufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2086">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="a8f26-2087">Deaktiviert die Eingabe Standardbehandlung für dieses Mausereignis für Vorgängerklassen, die erwarten, dass auch aufrufen Basis aufgerufen <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2087">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="a8f26-2088">Sie können z. B. Ableiten aus <xref:System.Windows.Controls.Control> und überschreiben <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> in der abgeleiteten Klasse, ohne dass Base aufgerufen; diese Außerkraftsetzung Bedenken Sie jedoch, den Kontext im Menü Dienste auf das Steuerelement wird von der <xref:System.Windows.Controls.Control> Standardverhalten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2088">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2089">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2089">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="a8f26-2090">Die Ereignisdaten melden, dass die rechte Maustaste losgelassen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2090">The event data reports that the right mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2091">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2091">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2092">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2092">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2093">Die <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> -Ereignis angezeigt wird, die eine tunnelingroute unterwegs sind aber auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2093">The <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8f26-2094"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, Tunnel weitergeleitet, und jedes <xref:System.Windows.UIElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2094"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="a8f26-2095">Obwohl Sie markieren können die <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2095">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8f26-2096">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2096">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8f26-2097">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement> Lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2097">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8f26-2098">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2098">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8f26-2099">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2099">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8f26-2100">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement> durch Überschreiben <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2100">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2101">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2101">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="a8f26-2102">Die Ereignisdaten melden, dass eine oder mehrere Maustasten losgelassen wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2102">The event data reports that one or more mouse buttons were released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2103">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2103">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2104">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2104">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2105">Aktionen der Maus werden auch von einem dedizierten Eingabe-Manager verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2105">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="a8f26-2106">Andere Features für die Programmierung, die Aktionen der Maus, z. B. Eingabe abhängig und Bindungen, Befehl möglicherweise Handler für die Aktion aufrufen, bevor es als eine allgemeine Schaltfläche Mausaktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2106">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="a8f26-2107">Wenn Sie diese markieren Eingabedateien der <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignis als behandelt, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2107">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a8f26-2108">Wenn Sie diesen Klassenhandler verwenden, um das Ereignis als behandelt markieren, Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> und <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2108">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="a8f26-2109">Eines dieser Ereignisse kann ausgelöst werden, auf dem empfangenden Element beim <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2109">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="a8f26-2110">Wenn Sie dieses Ereignis in der Klassenbehandlung als behandelt markieren, werden dennoch Unterereignisse ausgelöst. Sie kann jedoch zum behandelten Zustand in den Ereignisdaten übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2110">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="a8f26-2111">Wenn das Ereignis in der Klassenbehandlung behandelt wird, Instanzhandler für das Unterereignisse werden nicht aufgerufen, wenn Sie explizit verwenden <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true` um Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2111">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="a8f26-2112">Klassenhandler werden ebenfalls nicht aufgerufen, wenn diese Klassenhandler registriert wurden, mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2112">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="a8f26-2113">Durch Behandlung <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>, Sie sind somit den Eindruck erwecken, dass die Klassenbehandlung für alle möglichen Aktionen berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2113">By handling <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="a8f26-2114">Dieses Verhalten kann unerwünscht sein. Daher vorsichtig, wenn Sie diese virtuelle Methode verwenden, um die Ereignisse als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2114">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="a8f26-2115">Jedes der direkten Schaltfläche-spezifische Ereignisse verfügt auch über ein virtuelles auf \* Methode. Überlegen Sie, ob überschreiben diese Schaltfläche Klassenhandler besser geeignet sein könnte.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2115">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="a8f26-2116">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2116">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2117">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2117">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2118">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2118">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2119">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2119">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2120">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2120">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2121">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2121">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2122">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2122">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2123">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2123">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2124">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2124">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2125">Das <see cref="T:System.Windows.Input.MouseWheelEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2125">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2126">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2126">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2127">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2127">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2128">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2128">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2129">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2129">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2130">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2130">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2131">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2131">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2132">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2132">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2133">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2133">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2134">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2134">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2135">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2135">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2136">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2136">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-2137">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2137">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement.OnPreviewQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2138">Das <see cref="T:System.Windows.QueryContinueDragEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2138">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2139">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2139">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2140">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2140">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2141">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2141">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2142">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2142">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2143">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2143">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2144">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2144">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2145">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2145">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2146">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2146">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2147">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2147">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2148">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2148">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2149">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2149">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-2150">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2150">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2151">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2151">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2152">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2152">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2153">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2153">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2154">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2154">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2155">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2155">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2156">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2156">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2157">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2157">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2158">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2158">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2159">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2159">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2160">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2160">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2161">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2161">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2162">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2162">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-2163">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2163">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2164">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2164">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2165">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2165">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2166">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2166">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2167">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2167">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2168">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2168">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2169">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2169">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2170">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2170">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2171">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2171">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2172">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2172">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2173">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2173">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2174">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2174">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2175">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2175">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-2176">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2176">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2177">Das <see cref="T:System.Windows.Input.StylusDownEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2177">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2178">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2178">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2179">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2179">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2180">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2180">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2181">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2181">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2182">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2182">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2183">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2183">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2184">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2184">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2185">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2185">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2186">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2186">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2187">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2187">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2188">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2188">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-2189">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2189">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2190">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2190">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2191">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2191">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2192">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2192">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2193">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2193">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2194">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2194">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2195">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2195">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2196">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2196">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2197">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2197">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2198">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2198">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2199">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2199">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2200">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2200">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2201">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2201">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-2202">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2202">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2203">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2203">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2204">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2204">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2205">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2205">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2206">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2206">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2207">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2207">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2208">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2208">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2209">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2209">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2210">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2210">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2211">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2211">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2212">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2212">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2213">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2213">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2214">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2214">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-2215">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2215">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2216">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2216">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2217">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2217">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2218">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2218">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2219">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2219">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2220">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2220">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2221">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2221">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2222">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2222">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2223">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2223">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2224">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2224">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2225">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2225">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2226">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2226">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2227">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2227">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-2228">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2228">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2229">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2229">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2230">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2230">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2231">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2231">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2232">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2232">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2233">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2233">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2234">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2234">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2235">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2235">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2236">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2236">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2237">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2237">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2238">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2238">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2239">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2239">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2240">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2240">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-2241">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2241">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2242">Das <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2242">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2243">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2243">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2244">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2244">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2245">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2245">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2246">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2246">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2247">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2247">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2248">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2248">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2249">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2249">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2250">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2250">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2251">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2251">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2252">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2252">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2253">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2253">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-2254">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2254">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2255">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2255">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2256">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2256">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2257">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2257">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2258">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2258">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2259">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2259">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2260">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2260">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2261">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2261">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2262">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2262">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2263">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2263">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2264">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2264">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2265">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2265">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2266">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2266">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-2267">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2267">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement.OnPreviewTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2268">Das <see cref="T:System.Windows.Input.TextCompositionEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2268">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2269">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2269">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2270">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2270">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2271">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2271">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2272">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2272">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2273">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2273">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2274">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2274">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2275">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2275">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2276">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2276">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2277">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2277">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2278">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2278">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2279">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2279">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8f26-2280">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2280">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.UIElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnPreviewTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2281">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2281">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2282">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.PreviewTouchDown" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe in diesem Element erfasst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2282">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2283">Die <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2283">The <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-2284">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.PreviewTouchDown> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2284">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="a8f26-2285">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2285">Be sure to call the base class’s <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnPreviewTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2286">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2286">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2287">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.PreviewTouchMove" />-Routingereignis bereit, das auftritt, wenn sich eine Fingereingabe innerhalb dieses Elements bewegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2287">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2288">Die <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2288">The <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-2289">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.PreviewTouchMove> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2289">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="a8f26-2290">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2290">Be sure to call the base class’s <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnPreviewTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2291">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2291">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2292">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.PreviewTouchUp" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe innerhalb dieses Elements freigegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2292">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2293">Die <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2293">The <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-2294">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.PreviewTouchUp> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2294">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="a8f26-2295">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2295">Be sure to call the base class’s <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2296">Das <see cref="T:System.Windows.QueryContinueDragEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2296">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2297">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.QueryContinueDrag" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2297">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2298">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2298">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2299">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2299">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2300">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2300">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2301">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2301">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2302">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2302">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2303">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2303">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2304">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2304">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2305">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2305">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2306">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2306">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2307">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2307">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit&#xA;override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="uIElement.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2308">Das <see cref="T:System.Windows.Input.QueryCursorEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2308">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2309">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.QueryCursor" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2309">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2310">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2310">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2311">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2311">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2312">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2312">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2313">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2313">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2314">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2314">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2315">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2315">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2316">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2316">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2317">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2317">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2318">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2318">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2319">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2319">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnRender">
      <MemberSignature Language="C#" Value="protected virtual void OnRender (System.Windows.Media.DrawingContext drawingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRender(class System.Windows.Media.DrawingContext drawingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRender(System::Windows::Media::DrawingContext ^ drawingContext);" />
      <MemberSignature Language="F#" Value="abstract member OnRender : System.Windows.Media.DrawingContext -&gt; unit&#xA;override this.OnRender : System.Windows.Media.DrawingContext -&gt; unit" Usage="uIElement.OnRender drawingContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="drawingContext">
          <span data-ttu-id="a8f26-2320">Die Zeichnungsanweisungen für ein bestimmtes Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2320">The drawing instructions for a specific element.</span>
          </span>
          <span data-ttu-id="a8f26-2321">Dieser Kontext wird für das Layoutsystem bereitgestellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2321">This context is provided to the layout system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2322">Beteiligt sich beim Überschreiben in einer abgeleiteten Klasse an Rendervorgängen, die vom Layoutsystem gesteuert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2322">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span>
          </span>
          <span data-ttu-id="a8f26-2323">Die Renderinganweisungen für dieses Element werden beim Aufrufen dieser Methode nicht direkt verwendet, sondern stattdessen für spätere asynchrone Layout- und Zeichnungsvorgänge beibehalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2323">The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2324">Diese Methode keine Standardimplementierung besitzt, der <xref:System.Windows.UIElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2324">This method has no default implementation in the <xref:System.Windows.UIElement> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-2325">Das folgende Codebeispiel zeigt eine mögliche Implementierung für eine abgeleitete Panel-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2325">The following code example shows a possible implementation for a panel derived class.</span></span>  
  
 [!code-csharp[LightWeightCustomPanel#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LightWeightCustomPanel/CSharp/OffsetPanel.cs#1)]
 [!code-vb[LightWeightCustomPanel#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/LightWeightCustomPanel/visualbasic/offsetpanel.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a8f26-2326">
            <para>Die <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> Methode überschrieben werden, um weitere grafische Elemente, die (zuvor nicht in einer logischen Struktur definiert) hinzufügen, eine gerenderte-Element, z. B. Auswirkungen oder Adorner. Ein <see cref="T:System.Windows.Media.DrawingContext" /> Objekt als Argument, das Methoden zum Zeichnen von Formen, Text, Bilder oder Videos enthält übergeben wird.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2326">
              <para>The <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> method can be overridden to add further graphical elements (not previously defined in a logical tree) to a rendered element, such as effects or adorners. A <see cref="T:System.Windows.Media.DrawingContext" /> object is passed as an argument, which provides methods for drawing shapes, text, images or videos.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRenderSizeChanged (System.Windows.SizeChangedInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRenderSizeChanged (info As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ info);" />
      <MemberSignature Language="F#" Value="abstract member OnRenderSizeChanged : System.Windows.SizeChangedInfo -&gt; unit&#xA;override this.OnRenderSizeChanged : System.Windows.SizeChangedInfo -&gt; unit" Usage="uIElement.OnRenderSizeChanged info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="a8f26-2327">Die gepackten Parameter (<see cref="T:System.Windows.SizeChangedInfo" />), die alte und neue Größen sowie die Dimensionen enthalten, die sich tatsächlich ändern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2327">The packaged parameters (<see cref="T:System.Windows.SizeChangedInfo" />), which includes old and new sizes, and which dimension actually changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2328">Beteiligt sich beim Überschreiben in einer abgeleiteten Klasse an Rendervorgängen, die vom Layoutsystem gesteuert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2328">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span>
          </span>
          <span data-ttu-id="a8f26-2329">Diese Methode wird nach der Layoutaktualisierung und vor dem Rendering aufgerufen, wenn die <see cref="P:System.Windows.UIElement.RenderSize" /> des Elements bei einer Layoutaktualisierung geändert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2329">This method is invoked after layout update, and before rendering, if the element's <see cref="P:System.Windows.UIElement.RenderSize" /> has changed as a result of layout update.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2330">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2330">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2331">Ein typisches WPF-Frameworkebene-Element verwendet die außer Kraft setzen-Implementierung von <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2331">A typical WPF framework-level element uses the override implementation from <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="a8f26-2332">Die <xref:System.Windows.FrameworkElement> Implementierung erklärt die <xref:System.Windows.FrameworkElement.Width%2A> und <xref:System.Windows.FrameworkElement.Height%2A> Eigenschaften und behandelt die Grundlagen der Neugestaltung des Layouts.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2332">The <xref:System.Windows.FrameworkElement> implementation invalidates the <xref:System.Windows.FrameworkElement.Width%2A> and <xref:System.Windows.FrameworkElement.Height%2A> properties and handles the basics of remaking the layout.</span></span> <span data-ttu-id="a8f26-2333">Überschreiben von <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> an die <xref:System.Windows.UIElement> Ebene impliziert, dass die Element-Implementierung ist absichtlich nicht die Implementierung der WPF-Frameworkebene, und daher das-Element Layoutlogik direkt in der Regel durch das Schreiben von behandeln muss einer Ersetzung Layoutsystem.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2333">Overriding <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> at the <xref:System.Windows.UIElement> level implies that your element implementation is deliberately not using the WPF framework-level implementation, and therefore your element must handle layout logic more directly, typically by writing a replacement layout system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2334">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2334">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2335">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2335">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2336">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2336">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2337">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2337">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2338">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2338">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2339">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2339">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2340">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2340">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2341">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2341">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2342">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2342">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2343">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2343">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2344">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2344">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2345">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2345">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2346">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2346">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2347">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2347">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2348">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2348">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2349">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2349">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2350">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2350">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2351">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2351">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2352">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2352">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2353">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2353">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2354">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2354">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2355">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2355">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2356">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2356">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2357">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2357">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement.OnStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2358">Das <see cref="T:System.Windows.Input.StylusDownEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2358">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2359">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2359">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2360">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2360">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2361">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2361">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2362">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2362">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2363">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2363">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2364">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2364">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2365">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2365">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2366">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2366">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2367">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2367">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2368">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2368">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2369">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2369">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2370">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2370">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2371">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Stylus.StylusEnter" />-Ereignis von diesem Element ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2371">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span>
          </span>
          <span data-ttu-id="a8f26-2372">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2372">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2373">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2373">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2374">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2374">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8f26-2375">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2375">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a8f26-2376">Der Zweck dieser Methode ähnelt [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2376">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2377">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2377">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2378">Das Ereignis als behandelt markiert ist nach wie vor nützlich zum Verhindern von typischen Instanzhandler (diejenigen, die keine angeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2378">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2379">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2379">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2380">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2380">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2381">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2381">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2382">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2382">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2383">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2383">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2384">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2384">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2385">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2385">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2386">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2386">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2387">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2387">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2388">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2388">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2389">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2389">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2390">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2390">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2391">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2391">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2392">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusInRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2392">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2393">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2393">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2394">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2394">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2395">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2395">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2396">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2396">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2397">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2397">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2398">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2398">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2399">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2399">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2400">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2400">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2401">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2401">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2402">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2402">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2403">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2403">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2404">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Stylus.StylusLeave" />-Ereignis von diesem Element ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2404">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span>
          </span>
          <span data-ttu-id="a8f26-2405">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2405">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2406">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2406">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2407">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2407">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8f26-2408">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2408">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a8f26-2409">Der Zweck dieser Methode ähnelt [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2409">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2410">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2410">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2411">Das Ereignis als behandelt markiert ist nach wie vor nützlich zum Verhindern von typischen Instanzhandler (diejenigen, die keine angeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2411">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2412">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2412">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2413">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2413">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2414">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2414">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2415">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2415">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2416">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2416">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2417">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2417">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2418">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2418">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2419">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2419">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2420">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2420">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2421">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2421">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2422">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2422">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2423">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2423">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2424">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2424">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2425">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2425">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2426">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2426">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2427">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2427">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2428">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2428">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2429">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2429">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2430">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2430">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2431">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2431">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2432">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2432">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2433">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2433">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2434">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2434">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2435">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2435">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement.OnStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2436">Das <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2436">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2437">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2437">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2438">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2438">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2439">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2439">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2440">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2440">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2441">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2441">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2442">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2442">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2443">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2443">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2444">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2444">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2445">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2445">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2446">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2446">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2447">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2447">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2448">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2448">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2449">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2449">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2450">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2450">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2451">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2451">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2452">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2452">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2453">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2453">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2454">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2454">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2455">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2455">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2456">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2456">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2457">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2457">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2458">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2458">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2459">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2459">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2460">Das <see cref="T:System.Windows.Input.TextCompositionEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2460">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2461">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2461">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="a8f26-2462">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2462">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2463">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2463">This method has no default implementation.</span></span> <span data-ttu-id="a8f26-2464">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2464">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8f26-2465">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2465">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8f26-2466">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2466">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8f26-2467">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2467">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8f26-2468">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2468">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8f26-2469">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2469">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8f26-2470">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2470">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8f26-2471">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2471">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2472">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2472">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2473">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.TouchDown" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe innerhalb dieses Elements erfasst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2473">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2474">Die <xref:System.Windows.UIElement.OnTouchDown%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2474">The <xref:System.Windows.UIElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-2475">Außer Kraft setzen <xref:System.Windows.UIElement.OnTouchDown%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.TouchDown> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2475">Override <xref:System.Windows.UIElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchDown> event.</span></span> <span data-ttu-id="a8f26-2476">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement.OnTouchDown%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2476">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2477">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2477">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2478">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.TouchEnter" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe von außerhalb der Grenzen dieses Elements nach innen verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2478">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2479">Die <xref:System.Windows.UIElement.OnTouchEnter%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2479">The <xref:System.Windows.UIElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-2480">Außer Kraft setzen <xref:System.Windows.UIElement.OnTouchEnter%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.TouchEnter> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2480">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchEnter> event.</span></span> <span data-ttu-id="a8f26-2481">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement.OnTouchEnter%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2481">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2482">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2482">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2483">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.TouchLeave" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe in <see cref="T:System.Windows.UIElement" /> von innerhalb der Grenzen nach außen verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2483">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2484">Die <xref:System.Windows.UIElement.OnTouchLeave%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2484">The <xref:System.Windows.UIElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-2485">Außer Kraft setzen <xref:System.Windows.UIElement.OnTouchLeave%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.TouchLeave> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2485">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchLeave> event.</span></span> <span data-ttu-id="a8f26-2486">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement.OnTouchLeave%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2486">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2487">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2487">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2488">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.TouchMove" />-Routingereignis bereit, das auftritt, wenn sich eine Fingereingabe innerhalb dieses Elements bewegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2488">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2489">Die <xref:System.Windows.UIElement.OnTouchMove%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2489">The <xref:System.Windows.UIElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-2490">Außer Kraft setzen <xref:System.Windows.UIElement.OnTouchMove%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.TouchMove> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2490">Override <xref:System.Windows.UIElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchMove> event.</span></span> <span data-ttu-id="a8f26-2491">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement.OnTouchMove%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2491">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-2492">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2492">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2493">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.TouchUp" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe innerhalb dieses Elements freigegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2493">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2494">Die <xref:System.Windows.UIElement.OnTouchUp%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2494">The <xref:System.Windows.UIElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="a8f26-2495">Außer Kraft setzen <xref:System.Windows.UIElement.OnTouchUp%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement.TouchUp> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2495">Override <xref:System.Windows.UIElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchUp> event.</span></span> <span data-ttu-id="a8f26-2496">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement.OnTouchUp%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2496">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="uIElement.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="a8f26-2497">Das bisherige übergeordnete Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2497">The previous parent.</span>
          </span>
          <span data-ttu-id="a8f26-2498">Dieses wird u. U. mit dem Wert <see langword="null" /> bereitgestellt, wenn für das <see cref="T:System.Windows.DependencyObject" /> zuvor kein übergeordnetes Element vorhanden war.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2498">This may be provided as <see langword="null" /> if the <see cref="T:System.Windows.DependencyObject" /> did not have a parent element previously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2499">Wird aufgerufen, wenn das übergeordnete Element dieses <see cref="T:System.Windows.UIElement" /> eine Änderung an seinem zugrunde liegenden visuellen übergeordneten Element meldet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2499">Invoked when the parent element of this <see cref="T:System.Windows.UIElement" /> reports a change to its underlying visual parent.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a8f26-2500">
            <para>Wenn Sie diese Methode überschreiben, rufen Sie die basisimplementierung immer. Die Basis-Standardimplementierung führt einige interne Wartung Reverse geerbte Eigenschaft Status. Die basisimplementierung aufgerufen, wird dieser Status ungültig.  Diese Methode überschreibt <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />. <see cref="T:System.Windows.FrameworkElement" /> und <see cref="T:System.Windows.Window" /> sowohl auch überschreiben, die <see cref="T:System.Windows.UIElement" /> Implementierung <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />, und <see cref="T:System.Windows.Window" /> versiegelt.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2500">
              <para>If you override this method, always call the base implementation. The default base implementation performs some internal maintenance of reverse-inherited property state. Failing to call the base implementation will invalidate this state.  This method overrides <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />. <see cref="T:System.Windows.FrameworkElement" /> and <see cref="T:System.Windows.Window" /> both also override the <see cref="T:System.Windows.UIElement" /> implementation of <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />, and <see cref="T:System.Windows.Window" /> seals it.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Opacity : double with get, set" Usage="System.Windows.UIElement.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2501">Ruft den Durchlässigkeitsfaktor ab, der auf das gesamte <see cref="T:System.Windows.UIElement" /> angewendet wird, wenn dieses in der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] gerendert wird, oder legt diesen Faktor fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2501">Gets or sets the opacity factor applied to the entire <see cref="T:System.Windows.UIElement" /> when it is rendered in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          </span>
          <span data-ttu-id="a8f26-2502">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2502">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-2503">Der Deckkraftfaktor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2503">The opacity factor.</span>
          </span>
          <span data-ttu-id="a8f26-2504">Die Standarddeckkraft ist 1,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2504">Default opacity is 1.0.</span>
          </span>
          <span data-ttu-id="a8f26-2505">Erwartete Werte liegen zwischen 0,0 und 1,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2505">Expected values are between 0.0 and 1.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2506">Die 1,0 wird standardmäßig mit den anfänglichen Metadaten dieser Abhängigkeitseigenschaft auf die <xref:System.Windows.UIElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2506">The 1.0 default value is the default provided by the initial metadata of this dependency property on the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="a8f26-2507">Andere abgeleiteten Klassen können potenziell diesen Standardwert ändern, werden die Metadaten aus ihrem Klassenkonstruktor.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2507">Other derived classes may potentially change this default value by overriding the metadata from within their class constructor.</span></span>  
  
 <span data-ttu-id="a8f26-2508">Der Wert des <xref:System.Windows.UIElement.Opacity%2A> wird nicht auf die tatsächliche Layout angewendet werden, es sei denn, das Element auch sichtbar ist (<xref:System.Windows.UIElement.IsVisible%2A> ist `true`).</span><span class="sxs-lookup"><span data-stu-id="a8f26-2508">The value of <xref:System.Windows.UIElement.Opacity%2A> won't be applied to actual layout unless the element is also visible (<xref:System.Windows.UIElement.IsVisible%2A> is `true`).</span></span>  
  
 <span data-ttu-id="a8f26-2509"><xref:System.Windows.UIElement.Opacity%2A> wird von übergeordneten Elementen auf angewendet in der Elementstruktur auf untergeordnete Elemente, aber die sichtbaren Auswirkungen der geschachtelten Deckkraft, die Einstellungen in den Wert der Eigenschaft der einzelnen untergeordneten Elemente angegeben sind nicht.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2509"><xref:System.Windows.UIElement.Opacity%2A> is applied from parent elements on down the element tree to child elements, but the visible effects of the nested opacity settings aren't indicated in the property value of individual child elements.</span></span> <span data-ttu-id="a8f26-2510">Z. B. wenn eine Liste eine Durchlässigkeit von 50 % (0,5 hat) und eines der Listenelemente aus der die Durchlässigkeit von 20 % (0,2) festgelegt ist, die tatsächliche Durchlässigkeit für dieses Listenelement wird gerendert als handele es sich um 10 % (0,1), aber der Wert der Eigenschaft des Listenelements <xref:System.Windows.UIElement.Opacity%2A> Eigenschaft würde weiterhin sein.  0,2, wenn die Abfrage.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2510">For instance, if a list has a 50% (0.5) opacity and one of its list items has its own opacity set to 20% (0.2), the net visible opacity for that list item will be rendered as if it were 10% (0.1), but the property value of the list item <xref:System.Windows.UIElement.Opacity%2A> property would still be 0.2 when queried.</span></span>  
  
 <span data-ttu-id="a8f26-2511">Auch wenn die deklarierte oder ausgewertete Deckkraft 0 ist, ein Element noch beteiligt Eingabeereignisse und Befehle und ist potenziell den Fokus erhalten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2511">Even if the declared or evaluated opacity is 0, an element still participates in input events and commands, and is potentially focusable.</span></span> <span data-ttu-id="a8f26-2512">Dieser Aspekt kann nützlich sein, z. B. Sie eine Deckkraft NULL-Objekt (z. B. eine Form) zum Maskieren die zugrunde liegenden Objekte mit transparente Elemente verwenden können.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2512">This aspect can be useful, for instance you can use an opacity-zero object (such as a shape) for masking underlying objects with transparent elements.</span></span> <span data-ttu-id="a8f26-2513">Die Deckkraft NULL-Objekt kann dann alle das Eingabeereignis, Verarbeitung für einen zugrunde liegenden Bereich behandeln.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2513">The opacity-zero object can then handle all the input event processing for an underlying area.</span></span> <span data-ttu-id="a8f26-2514">Allerdings die `Background` oder `Fill` des Objekts oder der Form sollte festgelegt werden auf einen Wert, selbst wenn sie ist <xref:System.Windows.Media.Brushes.Transparent%2A>Treffertests andernfalls nicht aktiviert ist und keine Ereignisse empfangen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2514">However, the `Background` or `Fill` of the object or shape should be set to a value, even if it is <xref:System.Windows.Media.Brushes.Transparent%2A>, otherwise hit testing is not enabled, and no events are received.</span></span>  
  
<a name="dependencyPropertyInfo_Opacity"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-2515">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-2515">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2516">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2516">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityProperty>|  
|<span data-ttu-id="a8f26-2517">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-2517">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-2518">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-2518">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.OpacityMask" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMask">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush OpacityMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush OpacityMask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.OpacityMask" />
      <MemberSignature Language="VB.NET" Value="Public Property OpacityMask As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ OpacityMask { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OpacityMask : System.Windows.Media.Brush with get, set" Usage="System.Windows.UIElement.OpacityMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2519">Ruft eine Durchlässigkeitsmaske als <see cref="T:System.Windows.Media.Brush" />-Implementierung ab, die auf eine Alphakanalmaskierung für den gerenderten Inhalt dieses Elements angewendet wird, oder legt diese Maske fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2519">Gets or sets an opacity mask, as a <see cref="T:System.Windows.Media.Brush" /> implementation that is applied to any alpha-channel masking for the rendered content of this element.</span>
          </span>
          <span data-ttu-id="a8f26-2520">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2520">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-2521">Der für die Deckkraftmaskierung zu verwendende Pinsel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2521">The brush to use for opacity masking.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2522">Diese Eigenschaft verwendet nur den Inhalt der alpha-Kanal für den angegebenen Wert <xref:System.Windows.Media.Brush>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2522">This property only uses whatever the alpha channel value is for the supplied <xref:System.Windows.Media.Brush>.</span></span> <span data-ttu-id="a8f26-2523">Die anderen Kanäle des der <xref:System.Windows.Media.Brush>gerenderten Inhalts (Rot, Grün oder Blau) werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2523">The other channels of the <xref:System.Windows.Media.Brush>'s rendered content (Red, Green, or Blue) are ignored.</span></span>  
  
 <span data-ttu-id="a8f26-2524">Die häufigste <xref:System.Windows.Media.Brush> für diesen Zweck ist ein <xref:System.Windows.Media.ImageBrush>, die für eine Vielzahl von Techniken wie z. B. eine Vignette maskiert Foto verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2524">The most typical <xref:System.Windows.Media.Brush> for this purpose is an <xref:System.Windows.Media.ImageBrush>, which can be used for a variety of photo masking techniques such as a vignette.</span></span> <span data-ttu-id="a8f26-2525">Aber definierten <xref:System.Windows.Media.Brush> (z. B. <xref:System.Windows.Media.LinearGradientBrush>) kann verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2525">But any defined <xref:System.Windows.Media.Brush> (such as <xref:System.Windows.Media.LinearGradientBrush>) can be used.</span></span>  
  
 <span data-ttu-id="a8f26-2526">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], Wert dieser Eigenschaft können eine Inlinesyntax, die spezifisch für jede Implementierung von ist das <xref:System.Windows.Media.Brush> abstrakte Klasse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2526">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property value can use an inline syntax that is specific to each implementation of the <xref:System.Windows.Media.Brush> abstract class.</span></span> <span data-ttu-id="a8f26-2527">Weitere Informationen finden Sie unter [Zeichnen mit Volltonfarben und Farbverläufen](~/docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-2527">For more information, see [Painting with Solid Colors and Gradients Overview](~/docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_OpacityMask"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-2528">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-2528">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2529">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2529">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityMaskProperty>|  
|<span data-ttu-id="a8f26-2530">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-2530">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-2531">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-2531">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-2532">Das folgende Markup-Beispiel zeigt eine <xref:System.Windows.Media.ImageBrush> Deckkraftmaske angewendet auf einen anderen <xref:System.Windows.Controls.Image>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2532">The following markup example shows an <xref:System.Windows.Media.ImageBrush> opacity mask applied to another <xref:System.Windows.Controls.Image>.</span></span>  
  
 [!code-xaml[OpacityMasksSnippet#UIElementOpacityMask](~/samples/snippets/csharp/VS_Snippets_Wpf/OpacityMasksSnippet/CS/ImageBrushExample.xaml#uielementopacitymask)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Opacity" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMaskProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityMaskProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityMaskProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityMaskProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityMaskProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityMaskProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpacityMaskProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.OpacityMaskProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2533">Bezeichnet die <see cref="P:System.Windows.UIElement.OpacityMask" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2533">Identifies the <see cref="P:System.Windows.UIElement.OpacityMask" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpacityProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.OpacityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2534">Bezeichnet die <see cref="P:System.Windows.UIElement.Opacity" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2534">Identifies the <see cref="P:System.Windows.UIElement.Opacity" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistId">
      <MemberSignature Language="C#" Value="public int PersistId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PersistId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.PersistId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PersistId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PersistId : int" Usage="System.Windows.UIElement.PersistId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2535">Ruft einen Wert ab, der dieses Element eindeutig angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2535">Gets a value that uniquely identifies this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-2536">Der eindeutige Bezeichner für dieses Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2536">The unique identifier for this element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2537"><xref:System.Windows.UIElement.PersistId%2A> zur eindeutigen Identifizierung jedes Element ein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2537"><xref:System.Windows.UIElement.PersistId%2A> uniquely identifies each element.</span></span> <span data-ttu-id="a8f26-2538">Ein Element bleibt unverändert, <xref:System.Windows.UIElement.PersistId%2A> jedes Mal, wenn dasselbe [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] (einschließlich binärdarstellungen) geladen wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2538">An element keeps the same <xref:System.Windows.UIElement.PersistId%2A> every time the same [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] is loaded (including binary representations).</span></span> <span data-ttu-id="a8f26-2539">Dieser Bezeichner wird für interne laden, analysieren und Serialisierung-Anforderungen verwendet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2539">This identifier is used for internal loading, parsing and serialization requirements.</span></span> <span data-ttu-id="a8f26-2540">Es dient nicht vom Anwendungscode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2540">It is not intended to be used by your application code.</span></span>  
  
 <span data-ttu-id="a8f26-2541">Diese Eigenschaft hat keine Beziehung zu den <xref:System.Object.GetHashCode%2A> Ergebnis für jede bestimmte Instanz.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2541">This property has no relationship to the <xref:System.Object.GetHashCode%2A> result for any given instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject&#xA;override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="uIElement.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="a8f26-2542">Die Richtung des angeforderten Fokusdurchlaufs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2542">The direction of the requested focus traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-2543">Gibt beim Überschreiben in einer abgeleiteten Klasse das Element zurück, das den Fokus für eine bestimmte Richtung des Fokusdurchlaufs empfängt, ohne dass der Fokus tatsächlich auf das betreffende Element verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2543">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-2544">Das Element, das den Fokus erhält, wenn <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> tatsächlich aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2544">The element that would have received focus if <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2545">Die Standardimplementierung dieser Methode in dieser Klasse ist unvollständig und gibt immer `null`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2545">The default implementation of this method in this class is incomplete, and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragEnter : System.Windows.DragEventHandler " Usage="member this.PreviewDragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2546">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Ziel meldet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2546">Occurs when the input system reports an underlying drag event with this element as the drag target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2547">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewDragEnter> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2547">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2548">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewDragEnter> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2548">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2549">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2549">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2550">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2550">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="a8f26-2551">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2551">Routing strategy</span></span>|<span data-ttu-id="a8f26-2552">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2552">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2553">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2553">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8f26-2554">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2554">The corresponding bubbling event is <xref:System.Windows.UIElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="a8f26-2555">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewDragEnter%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2555">Override <xref:System.Windows.UIElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2556">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewDragEnter" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2556">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2557">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2557">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2558">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2558">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2559">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2559">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2560">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2560">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2561">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2561">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragLeave : System.Windows.DragEventHandler " Usage="member this.PreviewDragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2562">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Quelle meldet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2562">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2563">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewDragLeave> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2563">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2564">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewDragLeave> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2564">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2565">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2565">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2566">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2566">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="a8f26-2567">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2567">Routing strategy</span></span>|<span data-ttu-id="a8f26-2568">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2568">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2569">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2569">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8f26-2570">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2570">The corresponding bubbling event is <xref:System.Windows.UIElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="a8f26-2571">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewDragLeave%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2571">Override <xref:System.Windows.UIElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2572">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewDragLeave" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2572">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2573">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2573">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2574">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2574">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2575">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2575">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2576">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2576">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2577">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2577">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragOver : System.Windows.DragEventHandler " Usage="member this.PreviewDragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2578">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als potenzielles Drop-Ziel meldet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2578">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2579">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewDragOver> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2579">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2580">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewDragOver> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2580">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2581">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2581">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2582">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2582">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragOverEvent>|  
|<span data-ttu-id="a8f26-2583">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2583">Routing strategy</span></span>|<span data-ttu-id="a8f26-2584">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2584">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2585">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2585">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8f26-2586">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2586">The corresponding bubbling event is <xref:System.Windows.UIElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="a8f26-2587">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewDragOver%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2587">Override <xref:System.Windows.UIElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2588">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewDragOver" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2588">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragOver" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2589">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2589">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2590">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2590">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2591">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2591">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2592">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2592">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2593">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2593">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberSignature Language="F#" Value="member this.PreviewDrop : System.Windows.DragEventHandler " Usage="member this.PreviewDrop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2594">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drop-Ereignis meldet, das dieses Element als Drop-Ziel aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2594">Occurs when the input system reports an underlying drop event with this element as the drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2595">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewDrop> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2595">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDrop> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2596">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewDrop> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2596">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2597">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2597">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2598">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2598">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDropEvent>|  
|<span data-ttu-id="a8f26-2599">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2599">Routing strategy</span></span>|<span data-ttu-id="a8f26-2600">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2600">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2601">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2601">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8f26-2602">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2602">The corresponding bubbling event is <xref:System.Windows.UIElement.Drop>.</span></span>  
  
-   <span data-ttu-id="a8f26-2603">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewDrop%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2603">Override <xref:System.Windows.UIElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2604">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewDrop" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2604">Identifies the <see cref="E:System.Windows.UIElement.PreviewDrop" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2605">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2605">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2606">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2606">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2607">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2607">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2608">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2608">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2609">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2609">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2610">Tritt auf, wenn ein Drag &amp; Drop-Vorgang gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2610">Occurs when a drag-and-drop operation is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2611">Die <xref:System.Windows.UIElement.PreviewGiveFeedback> Ereignis können Sie die Quelle eines Ereignisses ziehen Sie die Darstellung des Mauszeigers zu ändern, um dem Benutzer während eines Drag & Drop-Vorgangs ein visuelles Feedback.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2611">The <xref:System.Windows.UIElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="a8f26-2612">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewGiveFeedback> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2612">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2613">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewGiveFeedback> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2613">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2614">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2614">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2615">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2615">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="a8f26-2616">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2616">Routing strategy</span></span>|<span data-ttu-id="a8f26-2617">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2617">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2618">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2618">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="a8f26-2619">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2619">The corresponding bubbling event is <xref:System.Windows.UIElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="a8f26-2620">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2620">Override <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2621">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2621">Identifies the <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2622">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2622">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2623">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2623">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2624">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2624">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2625">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2625">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2626">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2626">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2627">Tritt auf, wenn sich der Fokus der Tastatur auf diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2627">Occurs when the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2628">Da dieses Ereignis wird verwendet, Tunneln, routing, das Element, das Fokus besitzt möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2628">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8f26-2629">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2629">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="a8f26-2630">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2630">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2631">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2631">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2632">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2632">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2633">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2633">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="a8f26-2634">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2634">Routing strategy</span></span>|<span data-ttu-id="a8f26-2635">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2635">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2636">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2636">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="a8f26-2637">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2637">The corresponding bubbling event is <xref:System.Windows.UIElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="a8f26-2638">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2638">Override <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2639">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2639">Identifies the <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2640">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2640">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2641">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2641">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2642">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2642">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2643">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2643">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2644">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2644">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2645">Tritt auf, wenn eine Taste gedrückt wird, während sich der Fokus auf diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2645">Occurs when a key is pressed while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2646">Schlüsselverarbeitung interagiert mit anderen Features der Plattform wie z. B. die Befehle "und" Text-Komposition.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2646">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="a8f26-2647">Die <xref:System.Windows.UIElement.KeyDown> Ereignis ist eine Low-Level-Text für ein Eingabeereignis, das nicht auf bestimmte Steuerelemente wie erwartet Verhalten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2647">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="a8f26-2648">Dies ist, da einige Steuerelemente verfügen über Steuerelement zusammensetzt oder Klassenbehandlung, die eine höhere Version von Text bietet Eingabeverarbeitung und verknüpfte Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2648">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="a8f26-2649">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewKeyDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2649">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2650">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewKeyDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2650">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2651">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2651">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2652">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2652">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="a8f26-2653">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2653">Routing strategy</span></span>|<span data-ttu-id="a8f26-2654">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2654">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2655">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2655">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="a8f26-2656">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2656">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="a8f26-2657">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewKeyDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2657">Override <xref:System.Windows.UIElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2658">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewKeyDown" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2658">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2659">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2659">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2660">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2660">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2661">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2661">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2662">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2662">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2663">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2663">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2664">Tritt auf, wenn eine Taste losgelassen wird, während sich der Fokus auf diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2664">Occurs when a key is released while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2665">Schlüsselverarbeitung interagiert mit anderen Features der Plattform wie z. B. die Befehle "und" Text-Komposition.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2665">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="a8f26-2666">Die <xref:System.Windows.UIElement.KeyUp> Ereignis ist eine Low-Level-Text für ein Eingabeereignis, das nicht auf bestimmte Steuerelemente wie erwartet Verhalten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2666">The <xref:System.Windows.UIElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="a8f26-2667">Dies ist, da einige Steuerelemente verfügen über Steuerelement zusammensetzt oder Klassenbehandlung, die eine höhere Version von Text bietet Eingabeverarbeitung und verknüpfte Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2667">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="a8f26-2668">Informationen finden Sie in der Dokumentation für einzelne Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2668">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="a8f26-2669">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewKeyUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2669">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2670">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewKeyUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2670">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2671">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2671">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2672">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2672">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="a8f26-2673">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2673">Routing strategy</span></span>|<span data-ttu-id="a8f26-2674">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2674">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2675">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2675">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="a8f26-2676">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2676">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="a8f26-2677">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewKeyUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2677">Override <xref:System.Windows.UIElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2678">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewKeyUp" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2678">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2679">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2679">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2680">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2680">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2681">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2681">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2682">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2682">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2683">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2683">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2684">Tritt auf, wenn sich der Fokus der Tastatur nicht mehr auf diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2684">Occurs when the keyboard is no longer focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2685">Da dieses Ereignis wird verwendet, Tunneln, routing, das Element, das Fokus verloren hat möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2685">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8f26-2686">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, die Fokus verloren hat.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2686">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="a8f26-2687">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2687">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2688">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2688">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2689">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2689">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2690">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2690">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="a8f26-2691">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2691">Routing strategy</span></span>|<span data-ttu-id="a8f26-2692">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2692">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2693">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2693">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="a8f26-2694">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2694">The corresponding bubbling event is <xref:System.Windows.UIElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="a8f26-2695">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2695">Override <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2696">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2696">Identifies the <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2697">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2697">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2698">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2698">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2699">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2699">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2700">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2700">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2701">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2701">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2702">Tritt auf, wenn eine Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2702">Occurs when any mouse button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2703">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewMouseDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2703">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2704">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewMouseDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2704">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-2705">Die <xref:System.Windows.UIElement.PreviewMouseDown> -Ereignisses häufig zusammen mit den beiden <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> oder <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, Drücken einer der beiden standardmäßigen Maustasten entsprechen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2705">The <xref:System.Windows.UIElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="a8f26-2706"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> und <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> sind ebenfalls Routingereignisse, aber sie sind direkte Routingereignisse und die entsprechende Schaltfläche-spezifische-Ereignis wird ausgelöst, wenn die <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> -Ereignis dieses Element auf der Ereignisroute erreicht.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2706"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="a8f26-2707">Finden Sie unter "Hinweise" für <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> oder <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2707">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2708">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2708">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2709">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2709">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="a8f26-2710">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2710">Routing strategy</span></span>|<span data-ttu-id="a8f26-2711">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2711">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2712">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2712">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-2713">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2713">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="a8f26-2714">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2714">Override <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2715">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseDown" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2715">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2716">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2716">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2717">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2717">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2718">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2718">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2719">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2719">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2720">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2720">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2721">Tritt auf, wenn die linke Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2721">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2722">Obwohl dies scheint auf eine tunnelingroute in einer Elementstruktur folgen, tatsächlich ist eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2722">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="a8f26-2723">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2723">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8f26-2724">Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2724">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8f26-2725">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2725">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8f26-2726">Wenn Sie kennzeichnen <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2726">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="a8f26-2727">Dies schließt möglicherweise Klassenhandler generierte Ereignisse wie z. B. <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2727">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="a8f26-2728">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="a8f26-2728">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8f26-2729">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2729">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8f26-2730">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2730">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2731">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2731">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2732">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2732">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="a8f26-2733">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2733">Routing strategy</span></span>|<span data-ttu-id="a8f26-2734">Direkt</span><span class="sxs-lookup"><span data-stu-id="a8f26-2734">Direct</span></span>|  
|<span data-ttu-id="a8f26-2735">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2735">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-2736">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2736">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2737">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2737">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2738">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2738">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2739">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2739">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2740">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2740">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2741">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2741">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2742">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2742">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2743">Tritt auf, wenn die linke Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2743">Occurs when the left mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2744">Obwohl dies scheint auf eine tunnelingroute in einer Elementstruktur folgen, tatsächlich ist eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2744">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="a8f26-2745">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2745">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8f26-2746">Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2746">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8f26-2747">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2747">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8f26-2748">Wenn Sie kennzeichnen <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2748">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="a8f26-2749">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="a8f26-2749">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8f26-2750">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2750">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8f26-2751">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2751">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2752">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2752">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2753">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2753">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="a8f26-2754">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2754">Routing strategy</span></span>|<span data-ttu-id="a8f26-2755">Direkt</span><span class="sxs-lookup"><span data-stu-id="a8f26-2755">Direct</span></span>|  
|<span data-ttu-id="a8f26-2756">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2756">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-2757">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2757">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2758">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2758">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2759">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2759">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2760">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2760">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2761">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2761">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2762">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2762">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2763">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2763">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2764">Tritt auf, wenn der Mauszeiger bewegt wird, während er sich über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2764">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2765">Dieses Ereignis tritt auf, wenn der Mauszeiger zunächst in der Grenzen des Elements eintritt und auch wenn der Mauszeiger bewegt wird und trotzdem innerhalb der Grenzen des Elements.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2765">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="a8f26-2766">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewMouseMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2766">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2767">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewMouseMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2767">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2768">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2768">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2769">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2769">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="a8f26-2770">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2770">Routing strategy</span></span>|<span data-ttu-id="a8f26-2771">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2771">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2772">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2772">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a8f26-2773">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2773">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="a8f26-2774">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewMouseMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2774">Override <xref:System.Windows.UIElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2775">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseMove" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2775">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2776">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2776">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2777">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2777">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2778">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2778">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2779">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2779">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2780">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2780">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2781">Tritt auf, wenn die rechte Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2781">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2782">Obwohl dies scheint auf eine tunnelingroute in einer Elementstruktur folgen, tatsächlich ist eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2782">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="a8f26-2783">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2783">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8f26-2784">Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2784">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8f26-2785">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2785">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8f26-2786">Wenn Sie kennzeichnen <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2786">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="a8f26-2787">Dies schließt möglicherweise Klassenhandler generierte Ereignisse wie z. B. <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2787">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="a8f26-2788">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="a8f26-2788">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8f26-2789">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2789">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8f26-2790">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2790">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2791">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2791">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2792">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2792">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="a8f26-2793">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2793">Routing strategy</span></span>|<span data-ttu-id="a8f26-2794">Direkt</span><span class="sxs-lookup"><span data-stu-id="a8f26-2794">Direct</span></span>|  
|<span data-ttu-id="a8f26-2795">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2795">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-2796">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2796">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2797">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2797">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2798">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2798">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2799">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2799">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2800">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2800">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2801">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2801">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2802">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2802">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2803">Tritt auf, wenn die rechte Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2803">Occurs when the right mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2804">Obwohl dies scheint auf eine tunnelingroute in einer Elementstruktur folgen, tatsächlich ist eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2804">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="a8f26-2805">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2805">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8f26-2806">Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2806">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8f26-2807">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2807">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8f26-2808">Wenn Sie kennzeichnen <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2808">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="a8f26-2809">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="a8f26-2809">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8f26-2810">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2810">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8f26-2811">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2811">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2812">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2812">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2813">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2813">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="a8f26-2814">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2814">Routing strategy</span></span>|<span data-ttu-id="a8f26-2815">Direkt</span><span class="sxs-lookup"><span data-stu-id="a8f26-2815">Direct</span></span>|  
|<span data-ttu-id="a8f26-2816">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2816">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-2817">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2817">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2818">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2818">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2819">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2819">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2820">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2820">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2821">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2821">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2822">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2822">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2823">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2823">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2824">Tritt auf, wenn eine Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2824">Occurs when any mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2825">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewMouseUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2825">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2826">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewMouseUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2826">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-2827">Die <xref:System.Windows.UIElement.PreviewMouseUp> -Ereignisses häufig zusammen mit den beiden <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> oder <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, Drücken einer der beiden standardmäßigen Maustasten entsprechen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2827">The <xref:System.Windows.UIElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="a8f26-2828"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> und <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> sind ebenfalls Routingereignisse, aber sie sind direkte Routingereignisse und die entsprechende Schaltfläche-spezifische-Ereignis wird ausgelöst, wenn die <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> -Ereignis dieses Element auf der Ereignisroute erreicht.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2828"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="a8f26-2829">Finden Sie unter "Hinweise" für <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> oder <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2829">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2830">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2830">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2831">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2831">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="a8f26-2832">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2832">Routing strategy</span></span>|<span data-ttu-id="a8f26-2833">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2833">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2834">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2834">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-2835">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2835">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="a8f26-2836">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2836">Override <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2837">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseUp" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2837">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2838">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2838">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2839">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2839">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2840">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2840">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2841">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2841">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2842">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2842">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2843">Tritt auf, wenn der Benutzer das Mausrad dreht, während sich der Mauszeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2843">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2844">Fokus oder die Maus erfassen haben Vorrang vor, in dem der Mauszeiger befindet; Wenn Sie dieses Ereignis von einem Element mit Fokus oder erfasste erhalten haben, kann der Mauszeiger aus diesem Grund tatsächlich über ein anderes Element befinden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2844">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="a8f26-2845">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewMouseMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2845">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2846">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewMouseMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2846">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2847">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2847">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2848">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2848">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="a8f26-2849">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2849">Routing strategy</span></span>|<span data-ttu-id="a8f26-2850">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2850">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2851">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2851">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="a8f26-2852">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2852">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="a8f26-2853">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2853">Override <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2854">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseWheel" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2854">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseWheel" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2855">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2855">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2856">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2856">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2857">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2857">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2858">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2858">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2859">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2859">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2860">Tritt auf, wenn sich der Status der Tastatur oder der Maustaste während eines Drag &amp; Drop-Vorgangs ändert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2860">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2861">Die <xref:System.Windows.UIElement.PreviewQueryContinueDrag> Ereignis ermöglicht der Ziehquelle, um zu deklarieren, die Drag & Drop-Vorgang abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2861">The <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="a8f26-2862">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewQueryContinueDrag> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2862">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2863">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewQueryContinueDrag> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2863">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2864">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2864">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2865">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2865">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="a8f26-2866">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2866">Routing strategy</span></span>|<span data-ttu-id="a8f26-2867">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2867">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2868">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2868">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="a8f26-2869">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2869">The corresponding bubbling event is <xref:System.Windows.UIElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="a8f26-2870">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2870">Override <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2871">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2871">Identifies the <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2872">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2872">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2873">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2873">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2874">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2874">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2875">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2875">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2876">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2876">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2877">Tritt auf, wenn die Stifttaste gedrückt wird, während sich der Zeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2877">Occurs when the stylus button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2878">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewStylusButtonDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2878">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2879">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewStylusButtonDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2879">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-2880">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2880">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-2881">Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-2881">For more information, see [Touch Input Support in Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2882">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2882">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2883">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2883">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="a8f26-2884">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2884">Routing strategy</span></span>|<span data-ttu-id="a8f26-2885">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2885">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2886">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2886">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-2887">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2887">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="a8f26-2888">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2888">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2889">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2889">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2890">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2890">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2891">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2891">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2892">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2892">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2893">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2893">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2894">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2894">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2895">Tritt auf, wenn die Stifttaste losgelassen wird, während sich der Zeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2895">Occurs when the stylus button is released while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2896">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewStylusButtonUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2896">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2897">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewStylusButtonUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2897">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-2898">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2898">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-2899">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-2899">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2900">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2900">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2901">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2901">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="a8f26-2902">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2902">Routing strategy</span></span>|<span data-ttu-id="a8f26-2903">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2903">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2904">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2904">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-2905">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2905">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="a8f26-2906">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2906">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2907">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2907">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2908">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2908">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2909">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2909">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2910">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2910">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2911">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2911">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2912">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2912">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2913">Tritt auf, wenn der Stift den Digitizer berührt, während dieser sich über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2913">Occurs when the stylus touches the digitizer while it is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2914">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewStylusDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2914">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2915">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewStylusDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2915">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-2916">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2916">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-2917">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-2917">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2918">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2918">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2919">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2919">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="a8f26-2920">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2920">Routing strategy</span></span>|<span data-ttu-id="a8f26-2921">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2921">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2922">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2922">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="a8f26-2923">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2923">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="a8f26-2924">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewStylusDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2924">Override <xref:System.Windows.UIElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2925">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusDown" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2925">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2926">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2926">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2927">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2927">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2928">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2928">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2929">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2929">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2930">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2930">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2931">Tritt auf, wenn der Stift über ein Element bewegt wird, ohne den Digitizer zu berühren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2931">Occurs when the stylus moves over an element without actually touching the digitizer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2932">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewStylusInAirMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2932">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2933">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewStylusInAirMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2933">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-2934">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2934">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-2935">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-2935">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2936">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2936">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2937">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2937">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="a8f26-2938">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2938">Routing strategy</span></span>|<span data-ttu-id="a8f26-2939">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2939">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2940">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2940">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8f26-2941">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2941">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="a8f26-2942">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2942">Override <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2943">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2943">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2944">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2944">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2945">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2945">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2946">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2946">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2947">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2947">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2948">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2948">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2949">Tritt auf, wenn sich der Tablettstift nah genug am Digitizer befindet, um erkannt zu werden, während er sich über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2949">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2950">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewStylusInRange> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2950">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2951">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewStylusInRange> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2951">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-2952">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2952">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-2953">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-2953">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2954">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2954">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2955">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2955">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="a8f26-2956">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2956">Routing strategy</span></span>|<span data-ttu-id="a8f26-2957">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2957">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2958">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2958">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8f26-2959">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2959">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="a8f26-2960">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2960">Override <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2961">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusInRange" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2961">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2962">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2962">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2963">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2963">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2964">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2964">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2965">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2965">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2966">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2966">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2967">Tritt auf, wenn der Tablettstift bewegt wird, während er sich über dem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2967">Occurs when the stylus moves while over the element.</span>
          </span>
          <span data-ttu-id="a8f26-2968">Der Tablettstift muss während der Erkennung durch den Digitizer bewegt werden, damit dieses Ereignis ausgelöst wird, andernfalls wird stattdessen <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> ausgelöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2968">The stylus must move while being detected by the digitizer to raise this event, otherwise, <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> is raised instead.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2969">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewStylusMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2969">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2970">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewStylusMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2970">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-2971">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2971">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-2972">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-2972">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2973">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2973">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2974">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2974">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="a8f26-2975">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2975">Routing strategy</span></span>|<span data-ttu-id="a8f26-2976">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2976">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2977">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2977">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8f26-2978">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2978">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="a8f26-2979">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewStylusMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2979">Override <xref:System.Windows.UIElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2980">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusMove" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2980">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2981">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2981">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-2982">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2982">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-2983">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2983">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-2984">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2984">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-2985">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2985">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2986">Tritt auf, wenn sich der Stift zu weit vom Digitizer entfernt befindet, um erkannt zu werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2986">Occurs when the stylus is too far from the digitizer to be detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2987">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewStylusOutOfRange> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2987">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-2988">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewStylusOutOfRange> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2988">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-2989">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2989">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-2990">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-2990">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-2991">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-2991">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-2992">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-2992">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="a8f26-2993">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-2993">Routing strategy</span></span>|<span data-ttu-id="a8f26-2994">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-2994">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-2995">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-2995">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8f26-2996">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2996">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="a8f26-2997">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2997">Override <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-2998">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-2998">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-2999">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-2999">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3000">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3000">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3001">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3001">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3002">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3002">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3003">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3003">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3004">Tritt auf, wenn ein Benutzer eine von mehreren Gesten ausführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3004">Occurs when a user performs one of several stylus gestures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3005">Weitere Informationen zu Gesten, finden Sie unter <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3005">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="a8f26-3006">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewStylusSystemGesture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3006">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3007">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewStylusSystemGesture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3007">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-3008">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3008">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-3009">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3009">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3010">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3010">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3011">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3011">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="a8f26-3012">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3012">Routing strategy</span></span>|<span data-ttu-id="a8f26-3013">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-3013">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-3014">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3014">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="a8f26-3015">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3015">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="a8f26-3016">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3016">Override <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3017">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3017">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3018">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3018">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3019">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3019">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3020">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3020">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3021">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3021">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3022">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3022">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3023">Tritt auf, wenn der Benutzer den Tablettstift vom Digitizer hebt, während er sich über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3023">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3024">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewStylusDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3024">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3025">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewStylusDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3025">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-3026">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3026">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-3027">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3027">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3028">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3028">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3029">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3029">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="a8f26-3030">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3030">Routing strategy</span></span>|<span data-ttu-id="a8f26-3031">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-3031">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-3032">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3032">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8f26-3033">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3033">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="a8f26-3034">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewStylusUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3034">Override <xref:System.Windows.UIElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3035">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusUp" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3035">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3036">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3036">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3037">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3037">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3038">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3038">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3039">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3039">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3040">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3040">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberSignature Language="F#" Value="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3041">Tritt auf, wenn dieses Element Text geräteunabhängig empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3041">Occurs when this element gets text in a device-independent manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3042">Die <xref:System.Windows.UIElement.PreviewTextInput> Ereignis ermöglicht, eine Komponente oder Anwendung, die für die Texteingabe in einem geräteunabhängig überwachen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3042">The <xref:System.Windows.UIElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="a8f26-3043">Die Tastatur dient primär der <xref:System.Windows.UIElement.PreviewTextInput>; Spracherkennung, handschrifterkennung und andere Eingabegeräte können jedoch auch generieren <xref:System.Windows.UIElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3043">The keyboard is the primary means of <xref:System.Windows.UIElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="a8f26-3044">Aufgrund von Tastenkombinationen – entweder in die Standard-Tastatur oder über den Eingabemethoden-Editoren, mehrere wichtige Ereignisse können nur ein Text Ereignisse auslösen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3044">Because of key combinations—either in default keyboards or through input method editors—multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="a8f26-3045">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.PreviewTextInput> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3045">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3046">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.PreviewTextInput> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3046">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3047">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3047">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3048">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3048">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTextInputEvent>|  
|<span data-ttu-id="a8f26-3049">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3049">Routing strategy</span></span>|<span data-ttu-id="a8f26-3050">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-3050">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-3051">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3051">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="a8f26-3052">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3052">The corresponding bubbling event is <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="a8f26-3053">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewTextInput%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3053">Override <xref:System.Windows.UIElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3054">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewTextInput" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3054">Identifies the <see cref="E:System.Windows.UIElement.PreviewTextInput" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3055">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3055">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3056">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3056">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3057">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3057">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3058">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3058">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3059">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3059">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3060">Tritt auf, wenn ein Finger den Bildschirm berührt und sich dieser über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3060">Occurs when a finger touches the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3061">In der Standardeinstellung die <xref:System.Windows.UIElement.PreviewTouchDown> und <xref:System.Windows.UIElement.TouchDown> Ereignisse werden nicht ausgeführt, bis ein Finger den Bildschirm berührt und verschiebt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3061">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="a8f26-3062">Einen Finger auf dem Bildschirm zu drücken und gedrückt halten, ohne ihn zu verschieben wird das Drücken und das Verhalten von aufzunehmen eine <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3062">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="a8f26-3063">Das Drücken und halten Verhalten ist gleichbedeutend mit einer Maus mit der rechten Maustaste.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3063">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="a8f26-3064">Die dazu führen, dass die <xref:System.Windows.UIElement.PreviewTouchDown> und <xref:System.Windows.UIElement.TouchDown> Festlegen von Ereignissen, die ausgeführt werden, sobald ein Finger den Bildschirm berührt die <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> angefügte Eigenschaft zu `false` für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3064">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3065">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3065">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3066">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3066">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="a8f26-3067">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3067">Routing strategy</span></span>|<span data-ttu-id="a8f26-3068">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-3068">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-3069">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3069">Delegate</span></span>|<span data-ttu-id="a8f26-3070">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3070"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8f26-3071">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3071">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="a8f26-3072">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3072">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3073">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewTouchDown" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3073">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3074">Tritt auf, wenn sich ein Finger auf dem Bildschirm bewegt, während sich der Finger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3074">Occurs when a finger moves on the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3075">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3075">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3076">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3076">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="a8f26-3077">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3077">Routing strategy</span></span>|<span data-ttu-id="a8f26-3078">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-3078">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-3079">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3079">Delegate</span></span>|<span data-ttu-id="a8f26-3080">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3080"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8f26-3081">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3081">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="a8f26-3082">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3082">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3083">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewTouchMove" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3083">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3084">Tritt auf, wenn ein Finger vom Bildschirm genommen wird, während sich der Finger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3084">Occurs when a finger is raised off of the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3085">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3085">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3086">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3086">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="a8f26-3087">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3087">Routing strategy</span></span>|<span data-ttu-id="a8f26-3088">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="a8f26-3088">Tunneling</span></span>|  
|<span data-ttu-id="a8f26-3089">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3089">Delegate</span></span>|<span data-ttu-id="a8f26-3090">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3090"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8f26-3091">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3091">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="a8f26-3092">Außer Kraft setzen <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3092">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3093">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewTouchUp" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3093">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3094">Tritt auf, wenn sich der Status der Tastatur oder der Maustaste während eines Drag &amp; Drop-Vorgangs ändert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3094">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3095">Die <xref:System.Windows.UIElement.QueryContinueDrag> Ereignis können Sie die Quelle des Ziehvorgangs bestimmen, ob der Drag & Drop-Vorgang abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3095">The <xref:System.Windows.UIElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="a8f26-3096">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.QueryContinueDrag> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3096">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3097">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.QueryContinueDrag> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3097">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3098">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3098">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3099">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3099">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryContinueDragEvent>|  
|<span data-ttu-id="a8f26-3100">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3100">Routing strategy</span></span>|<span data-ttu-id="a8f26-3101">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-3101">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-3102">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3102">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="a8f26-3103">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3103">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="a8f26-3104">Außer Kraft setzen <xref:System.Windows.UIElement.OnQueryContinueDrag%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3104">Override <xref:System.Windows.UIElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3105">Identifiziert das <see cref="E:System.Windows.UIElement.QueryContinueDrag" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3105">Identifies the <see cref="E:System.Windows.UIElement.QueryContinueDrag" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3106">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3106">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3107">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3107">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3108">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3108">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3109">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3109">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3110">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3110">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberSignature Language="F#" Value="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " Usage="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3111">Tritt auf, wenn die Anzeige des Cursors angefordert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3111">Occurs when the cursor is requested to display.</span>
          </span>
          <span data-ttu-id="a8f26-3112">Dieses Ereignis wird immer dann für ein Element ausgelöst, wenn der Mauszeiger an eine neue Position bewegt wird, d  h., das Cursorobjekt muss möglicherweise in Abhängigkeit von seiner neuen Position geändert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3112">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3113">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.QueryCursor> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3113">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryCursor> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3114">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.QueryCursor> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3114">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-3115">Der Cursor, die mit diesem Ereignisnamen verwiesen wird, ist nicht unbedingt der Cursor (manchmal als Einfügemarke bezeichnet).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3115">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="a8f26-3116">Stattdessen wird der Cursor in diesem Kontext das Objekt, das die auf dem Bildschirm grafische Anzeige, die im Zusammenhang mit mehreren möglichen Eingaben relevanten Geräten oder Konzepte in der Windows-Programmierung deklariert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3116">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="a8f26-3117">Dieses Objekt wird dargestellt, durch die <xref:System.Windows.Input.Cursor> -Klasse in WPF.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3117">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="a8f26-3118">Das WPF-Eingabesystem können Sie diesen Cursor zu ändern, wenn sie die Bildschirmposition des Mauszeigers darstellt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3118">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="a8f26-3119">Können Sie vordefinierte Werte aus der <xref:System.Windows.Input.Cursors> -Enumeration, oder Sie können einen benutzerdefinierten Cursor als Bilddatei zu deklarieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3119">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="a8f26-3120">Überwacht die <xref:System.Windows.UIElement.QueryCursor> Ereignis nicht um eine effiziente Methode für die Verwaltung der Cursor ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3120">Listening for the <xref:System.Windows.UIElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="a8f26-3121">Jedes Element definieren Sie stattdessen eine eigene Cursorverhalten mit <xref:System.Windows.FrameworkContentElement.Cursor%2A> und <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3121">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="a8f26-3122">Sie sollten nur auf verlassen <xref:System.Windows.UIElement.QueryCursor> , wenn Sie nicht die Basiselementen für WPF-Frameworkebene, oder in außergewöhnlichen Fällen, in dem Definieren des Cursorverhaltens individuell pro Element nicht Ihren Anforderungen entspricht.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3122">You should only rely on <xref:System.Windows.UIElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="a8f26-3123">Weitere Informationen zum Implementieren von Cursorverhalten als Reaktion auf <xref:System.Windows.UIElement.QueryCursor>, finden Sie unter <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3123">For more information on implementing cursor behavior in response to <xref:System.Windows.UIElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3124">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3124">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3125">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3125">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryCursorEvent>|  
|<span data-ttu-id="a8f26-3126">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3126">Routing strategy</span></span>|<span data-ttu-id="a8f26-3127">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-3127">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-3128">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3128">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="a8f26-3129">Es ist keine definiertes entsprechende Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3129">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a8f26-3130">Außer Kraft setzen <xref:System.Windows.UIElement.OnQueryCursor%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3130">Override <xref:System.Windows.UIElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3131">Identifiziert das <see cref="E:System.Windows.UIElement.QueryCursor" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3131">Identifies the <see cref="E:System.Windows.UIElement.QueryCursor" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3132">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3132">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3133">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3133">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3134">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3134">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3135">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3135">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3136">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3136">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.RaiseEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a8f26-3137">Eine Instanz von <see cref="T:System.Windows.RoutedEventArgs" />, die die Ereignisdaten enthält und zudem das auszulösende Ereignis angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3137">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-3138">Löst ein bestimmtes Routingereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3138">Raises a specific routed event.</span>
          </span>
          <span data-ttu-id="a8f26-3139">Das auszulösende <see cref="T:System.Windows.RoutedEvent" /> wird in der <see cref="T:System.Windows.RoutedEventArgs" />-Instanz bestimmt, die als <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />-Eigenschaft für diese Ereignisdaten bereitgestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3139">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3140">Die `e` Parameter wird als gemeinsamer Basistyp für alle Routingereignisdaten eingegeben; allerdings sollten Daten für das Ereignis zugewiesen werden, als spezifischste Event-Datentyp, der für das Ereignis ausgelöst wird, verfügbar ist, da <xref:System.Windows.RoutedEventArgs> abgeleitete Klassen enthalten die tatsächliche Daten-Eigenschaften, die vorgesehen sind, für das spezifische Ereignis, wenn es ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3140">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="a8f26-3141"><xref:System.Windows.RoutedEventArgs> ist nicht nur die Status-Eigenschaften für das Ereignis. Er gibt außerdem die Routingereignis ausgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3141"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="a8f26-3142">Dieses Ereignis auslösen Muster und die Routingereignisdaten, unterscheiden sich von [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignisse und Klassen, die in der Regel nur die Eigenschaften enthalten, die dem Ereignis verknüpft sind.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3142">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-3143">Das folgende Beispiel erstellt Ereignisdaten, fügt die Ereignis-ID an die Daten und verwendet dann die Ereignis eine Instanz ein benutzerdefiniertes Routingereignisses ausgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3143">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[RoutedEventCustom#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#raiseevent)]
 [!code-vb[RoutedEventCustom#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberSignature Language="F#" Value="member this.ReleaseAllTouchCaptures : unit -&gt; unit" Usage="uIElement.ReleaseAllTouchCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3144">Gibt alle erfassten Fingereingabegeräte für das Element frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3144">Releases all captured touch devices from this element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMouseCapture : unit -&gt; unit&#xA;override this.ReleaseMouseCapture : unit -&gt; unit" Usage="uIElement.ReleaseMouseCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3145">Gibt die Erfassung von Mauseingaben frei, wenn für dieses Element die Erfassung festgelegt war.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3145">Releases the mouse capture, if this element held the capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3146">Wenn dieses Element die Erfassung nicht vorhanden war, hat das Aufrufen dieser Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3146">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="a8f26-3147">Prüfen Sie ggf. auf den Wert der <xref:System.Windows.UIElement.IsMouseCaptured%2A> , bevor Sie diese Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3147">Consider checking the value of <xref:System.Windows.UIElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-3148">Im folgende Beispiel wird die Parallel zur im Beispiel für die <xref:System.Windows.UIElement.CaptureMouse%2A>: behandelt die Maustaste gedrückt, bis zu Version die Erfassung von Mauseingaben und erneut zu aktivieren, wenn die Maus.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3148">The following example is the parallel to the example given for <xref:System.Windows.UIElement.CaptureMouse%2A>: it handles mouse button up to release mouse capture and re-enable moving the mouse.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStylusCapture : unit -&gt; unit&#xA;override this.ReleaseStylusCapture : unit -&gt; unit" Usage="uIElement.ReleaseStylusCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3149">Gibt das Erfassen der Eingaben von Tablettstiftgeräten frei, wenn für dieses Element die Erfassung festgelegt war.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3149">Releases the stylus device capture, if this element held the capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3150">Wenn dieses Element die Erfassung nicht vorhanden war, hat das Aufrufen dieser Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3150">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="a8f26-3151">Prüfen Sie ggf. auf den Wert der <xref:System.Windows.UIElement.IsStylusCaptured%2A> , bevor Sie diese Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3151">Consider checking the value of <xref:System.Windows.UIElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.ReleaseTouchCapture : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement.ReleaseTouchCapture touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">
          <span data-ttu-id="a8f26-3152">Das freizugebende Gerät.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3152">The device to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-3153">Versucht, das angegebene Fingereingabegerät von diesem Element freizugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3153">Attempts to release the specified touch device from this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-3154">
            <see langword="true" />, wenn das Fingereingabegerät freigegeben wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3154">
              <see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8f26-3155">
            <paramref name="touchDevice" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3155">
              <paramref name="touchDevice" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="a8f26-3156">Der Bezeichner des Routingereignisses, für das der Handler angefügt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3156">The identifier of the routed event for which the handler is attached.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="a8f26-3157">Die spezifische Handlerimplementierung, die aus der Ereignishandlerauflistung dieses Elements entfernt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3157">The specific handler implementation to remove from the event handler collection on this element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-3158">Entfernt den angegebenen Routingereignishandler aus diesem Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3158">Removes the specified routed event handler from this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3159">Das häufigste Szenario für die Verwendung dieser [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] stellt beim Implementieren der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "Wrapper"-Ereignis, das eines benutzerdefinierten Routingereignisses, insbesondere beim Implementieren der "entfernen"-Logik für Handler auf zugeordnet ist die [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ebene.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3159">The most common scenario for using this [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="a8f26-3160">Das Beispiel, in dem dies entspricht Abschnitt veranschaulicht dieses Szenario "Hinweise".</span><span class="sxs-lookup"><span data-stu-id="a8f26-3160">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="a8f26-3161">Das Aufrufen dieser Methode hat keine Auswirkungen, gäbe es keine Handler registriert mit Kriterien, die die Eingabeparameter für den Methodenaufruf entspricht.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3161">Calling this method has no effect if there were no handlers registered with criteria that matches the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="a8f26-3162">Wenn mehr als einen Handler, die die Kriterien, die nur der erste Handler übereinstimmen angefügt ist, den Fall, dass Speicher des ereignishandlers entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3162">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="a8f26-3163">Dieses Verhalten ist konsistent mit [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Verhalten der `-=` Operator.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3163">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="a8f26-3164">Weder `routedEvent` noch `handler` möglicherweise `null`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3164">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="a8f26-3165">Es wird versucht, einen der Werte `null` wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3165">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="a8f26-3166">Diese Methode ignoriert die `handledEventsToo` Informationen zu den Parametern, die bereitgestellt wird, wenn der Handler wurde hinzugefügt, mit der <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur, die Verarbeitung der bereits behandelten Ereignisse ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3166">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="a8f26-3167">Beide Arten von Handler entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3167">Either type of handler is removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-3168">Im folgenden Beispiel wird <xref:System.Windows.UIElement.RemoveHandler%2A> als Teil einer Ereignisdefinition-Wrapper.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3168">The following example uses <xref:System.Windows.UIElement.RemoveHandler%2A> as part of an event wrapper definition.</span></span>  
  
 [!code-csharp[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#addremovehandler)]
 [!code-vb[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#addremovehandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="RenderSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size RenderSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size RenderSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderSize" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size RenderSize { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.RenderSize : System.Windows.Size with get, set" Usage="System.Windows.UIElement.RenderSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3169">Ruft die endgültige Größe zum Rendern dieses Elements ab (oder legt diese fest, siehe „Hinweise“).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3169">Gets (or sets) the final render size of this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-3170">Die gerenderte Größe für dieses Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3170">The rendered size for this element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="a8f26-3171">Versuchen Sie nicht zum Festlegen dieser Eigenschaft entweder in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] oder im Code, wenn das Layoutsystem von WPF-Frameworkebene verwenden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3171">Do not attempt to set this property, either in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or in code, if using the WPF framework-level layout system.</span></span> <span data-ttu-id="a8f26-3172">Fast alle normalen Anwendungsszenarien verwendet dieses Layoutsystems.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3172">Nearly all typical application scenarios will use this layout system.</span></span> <span data-ttu-id="a8f26-3173">Das Layoutsystem berücksichtigt nicht festgelegt wurden die <xref:System.Windows.UIElement.RenderSize%2A> -Eigenschaft direkt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3173">The layout system will not respect sizes set in the <xref:System.Windows.UIElement.RenderSize%2A> property directly.</span></span> <span data-ttu-id="a8f26-3174">Die <xref:System.Windows.UIElement.RenderSize%2A> Eigenschaft wird nur zu bestimmten WPF-Kernebenen-bridging Fälle, die absichtlich umgangen werden die typischen Layout-Protokolle, wie die Unterstützung von beschreibbaren deklariert die <xref:System.Windows.Documents.Adorner> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3174">The <xref:System.Windows.UIElement.RenderSize%2A> property is declared writable only to enable certain WPF core-level bridging cases that deliberately circumvent the typical layout protocols, such as support for the <xref:System.Windows.Documents.Adorner> class.</span></span>  
  
 <span data-ttu-id="a8f26-3175">Diese Eigenschaft kann verwendet werden, für die Überprüfung der entsprechenden Renderinggröße innerhalb Layoutsystems überschreibt z. B. <xref:System.Windows.UIElement.OnRender%2A> oder <xref:System.Windows.UIElement.GetLayoutClip%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3175">This property can be used for checking the applicable render size within layout system overrides such as <xref:System.Windows.UIElement.OnRender%2A> or <xref:System.Windows.UIElement.GetLayoutClip%2A>.</span></span>  
  
 <span data-ttu-id="a8f26-3176">Ein gängiges Szenario ist der Umgang mit den <xref:System.Windows.FrameworkElement.SizeChanged> -Ereignis mit der Klassenhandler außer Kraft setzen oder die <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3176">A more common scenario is handling the <xref:System.Windows.FrameworkElement.SizeChanged> event with the class handler override or the <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> event.</span></span>  
  
## Examples  
 <span data-ttu-id="a8f26-3177">Das folgende Beispiel zeigt, wie ein benutzerdefinierter Adorner verwendet die <xref:System.Windows.UIElement.RenderSize%2A> Wert zum Erstellen und die Rechteck-Grafik, die als Teil den Adorner, definiert die Größe der <xref:System.Windows.UIElement.OnRender%2A> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3177">The following example shows how a custom adorner uses the <xref:System.Windows.UIElement.RenderSize%2A> value in order to create and size the rectangle graphic that defines the adorner, as part of its <xref:System.Windows.UIElement.OnRender%2A> implementation.</span></span>  
  
 [!code-csharp[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/csharp/VS_Snippets_Wpf/AdornersMiscCode/CSharp/Window1.xaml.cs#uielementdesiredsize)]
 [!code-vb[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AdornersMiscCode/visualbasic/window1.xaml.vb#uielementdesiredsize)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Transform RenderTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Transform RenderTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransform As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Transform ^ RenderTransform { System::Windows::Media::Transform ^ get(); void set(System::Windows::Media::Transform ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenderTransform : System.Windows.Media.Transform with get, set" Usage="System.Windows.UIElement.RenderTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3178">Ruft Transformationsinformationen ab, die die Renderposition dieses Elements betreffen, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3178">Gets or sets transform information that affects the rendering position of this element.</span>
          </span>
          <span data-ttu-id="a8f26-3179">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3179">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-3180">Beschreibt die Einzelheiten der gewünschten Rendertransformation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3180">Describes the specifics of the desired render transform.</span>
          </span>
          <span data-ttu-id="a8f26-3181">Der Standardwert ist <see cref="P:System.Windows.Media.Transform.Identity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3181">The default is <see cref="P:System.Windows.Media.Transform.Identity" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3182">Eine Rendertransformation nicht neu generieren Layoutgröße oder Größeninformationen zu rendern.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3182">A render transform does not regenerate layout size or render size information.</span></span> <span data-ttu-id="a8f26-3183">Rendern von Transformationen sind für die Animation noch die Anwendung eines temporären Effekts auf ein Element in der Regel vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3183">Render transforms are typically intended for animating or applying a temporary effect to an element.</span></span> <span data-ttu-id="a8f26-3184">Das Element kann z. B. vergrößert, wenn konzentriert sich über Flackern, oder zum Zeichnen von Auge auf diesen Teil Laden der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="a8f26-3184">For example, the element might zoom when focused or moused over, or might jitter on load to draw the eye to that part of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransform"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-3185">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-3185">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3186">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3186">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformProperty>|  
|<span data-ttu-id="a8f26-3187">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-3187">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-3188">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-3188">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point RenderTransformOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point RenderTransformOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransformOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransformOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point RenderTransformOrigin { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.RenderTransformOrigin : System.Windows.Point with get, set" Usage="System.Windows.UIElement.RenderTransformOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3189">Ruft den Mittelpunkt einer beliebigen von <see cref="P:System.Windows.UIElement.RenderTransform" /> deklarierten Rendertransformation in Bezug auf die Grenzen des Elements ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3189">Gets or sets the center point of any possible render transform declared by <see cref="P:System.Windows.UIElement.RenderTransform" />, relative to the bounds of the element.</span>
          </span>
          <span data-ttu-id="a8f26-3190">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3190">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-3191">Der Wert, der die Rendertransformation deklariert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3191">The value that declares the render transform.</span>
          </span>
          <span data-ttu-id="a8f26-3192">Der Standardwert ist ein <see cref="T:System.Windows.Point" /> mit den Koordinaten (0;0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3192">The default value is a <see cref="T:System.Windows.Point" /> with coordinates (0,0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3193"><xref:System.Windows.UIElement.RenderTransformOrigin%2A> verwendet eine vom Standard abweichende der <xref:System.Windows.Point> Struktur auf, die <xref:System.Windows.Point> stellt keine absolute Position in einem Koordinatensystem dar.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3193"><xref:System.Windows.UIElement.RenderTransformOrigin%2A> has a somewhat nonstandard use of the <xref:System.Windows.Point> structure value, in that the <xref:System.Windows.Point> does not represent an absolute location in a coordinate system.</span></span> <span data-ttu-id="a8f26-3194">Stattdessen werden die Werte zwischen 0 und 1 als Faktor für den Bereich des aktuellen Elements in jeder x-und y-Achse interpretiert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3194">Instead, values between 0 and 1 are interpreted as a factor for the range of the current element in each x,y axis.</span></span> <span data-ttu-id="a8f26-3195">Z. B. (0,5; 0,5) führt dazu, dass die Rendertransformation, um die Konzentration auf das Element, oder (1,1) die Rendertransformation am unteren rechten Ecke des Elements platziert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3195">For example, (0.5,0.5) will cause the render transform to be centered on the element, or (1,1) would place the render transform at the bottom right corner of the element.</span></span> <span data-ttu-id="a8f26-3196"><xref:System.Double.NaN> ist kein zulässiger Wert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3196"><xref:System.Double.NaN> is not an accepted value.</span></span>  
  
 <span data-ttu-id="a8f26-3197">Bei Werten jenseits 0 und 1 werden ebenfalls akzeptiert, und führt zu mehr Transformation der unkonventionelle Effekte.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3197">Values beyond 0 and 1 are also accepted, and will result in more unconventional transform effects.</span></span> <span data-ttu-id="a8f26-3198">Z. B. Wenn Sie festlegen, <xref:System.Windows.UIElement.RenderTransformOrigin%2A> (5,5), und wenden Sie dann eine <xref:System.Windows.Media.RotateTransform>, den Drehpunkt werden auch außerhalb der Grenzen des Elements selbst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3198">For instance, if you set <xref:System.Windows.UIElement.RenderTransformOrigin%2A> to be (5,5), and then apply a <xref:System.Windows.Media.RotateTransform>, the rotation point will be well outside the bounds of the element itself.</span></span> <span data-ttu-id="a8f26-3199">Die Transformation wird das Element in einem großen Kreis drehen, die nach unten rechts stammt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3199">The transform will spin your element around in a big circle that originates beyond bottom right.</span></span> <span data-ttu-id="a8f26-3200">Der Ursprung könnte möglicherweise an einer beliebigen Stelle in seinem übergeordneten Element und möglicherweise möglicherweise aus Frame oder einer Ansicht.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3200">The origin might be somewhere inside its parent element and could possibly be possibly out of frame or view.</span></span> <span data-ttu-id="a8f26-3201">Negative Datenpunktwerte sind ähnlich, dieser werden oben links Grenzen hinausgehen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3201">Negative point values are similar, these will go beyond the top left bounds.</span></span>  
  
 <span data-ttu-id="a8f26-3202">Rendern von Transformationen wirken sich nicht auf Layout und in der Regel zum Animieren oder Anwenden eines temporären Effekts auf ein Element verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3202">Render transforms do not affect layout, and are typically used to animate or apply a temporary effect to an element.</span></span>  
  
<a name="xamlAttributeUsage_RenderTransformOrigin"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="a8f26-3203">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="a8f26-3203">XAML Attribute Usage</span></span>  
  
```  
<object RenderTransformOrigin="xOrigin, yOrigin"/>  
```  
  
<a name="xamlPropertyElementUsage_RenderTransformOrigin"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="a8f26-3204">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="a8f26-3204">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.RenderTransformOrigin>  
    <Point X=" xOrigin " Y=" yOrigin "/>  
  </object.RenderTransformOrigin>  
</object>  
```  
  
<a name="xamlValues_RenderTransformOrigin"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a8f26-3205">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="a8f26-3205">XAML Values</span></span>  
 <span data-ttu-id="a8f26-3206">*xOrigin*</span><span class="sxs-lookup"><span data-stu-id="a8f26-3206">*xOrigin*</span></span>  
 <span data-ttu-id="a8f26-3207">Der horizontale Ursprung Faktor.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3207">The horizontal origin factor.</span></span> <span data-ttu-id="a8f26-3208">Dies wird in der Regel als ein Wert zwischen 0 und 1 angegeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3208">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="a8f26-3209">Siehe Hinweise.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3209">See Remarks.</span></span>  
  
 <span data-ttu-id="a8f26-3210">*yOrigin*</span><span class="sxs-lookup"><span data-stu-id="a8f26-3210">*yOrigin*</span></span>  
 <span data-ttu-id="a8f26-3211">Der Faktor für die vertikale Ursprung.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3211">The vertical origin factor.</span></span> <span data-ttu-id="a8f26-3212">Dies wird in der Regel als ein Wert zwischen 0 und 1 angegeben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3212">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="a8f26-3213">Siehe Hinweise.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3213">See Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransformOrigin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-3214">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-3214">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3215">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3215">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformOriginProperty>|  
|<span data-ttu-id="a8f26-3216">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-3216">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-3217">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-3217">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-3218">Im folgende Beispiel werden die Elemente im Code erstellt wird, gilt eine <xref:System.Windows.UIElement.RenderTransformOrigin%2A>, und wendet dann einen <xref:System.Windows.UIElement.RenderTransform%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3218">The following example builds up elements in code, applies a <xref:System.Windows.UIElement.RenderTransformOrigin%2A>, and then applies a  <xref:System.Windows.UIElement.RenderTransform%2A>.</span></span>  
  
 [!code-csharp[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/csharp/VS_Snippets_Wpf/transformanimations_snip/CSharp/RotateAboutCenterExample.cs#uielementrendertransformorigin)]
 [!code-vb[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/visualbasic/VS_Snippets_Wpf/transformanimations_snip/visualbasic/rotateaboutcenterexample.vb#uielementrendertransformorigin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.RenderTransform" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOriginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformOriginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformOriginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformOriginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformOriginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformOriginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RenderTransformOriginProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.RenderTransformOriginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3219">Bezeichnet die <see cref="P:System.Windows.UIElement.RenderTransformOrigin" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3219">Identifies the <see cref="P:System.Windows.UIElement.RenderTransformOrigin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RenderTransformProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.RenderTransformProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3220">Bezeichnet die <see cref="P:System.Windows.UIElement.RenderTransform" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3220">Identifies the <see cref="P:System.Windows.UIElement.RenderTransform" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeCommandBindings : unit -&gt; bool" Usage="uIElement.ShouldSerializeCommandBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3221">Gibt zurück, ob in Serialisierungsprozessen der Inhalt der <see cref="P:System.Windows.UIElement.CommandBindings" />-Eigenschaft für Instanzen dieser Klasse serialisiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3221">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.CommandBindings" /> property on instances of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-3222">
            <see langword="true" />, wenn der <see cref="P:System.Windows.UIElement.CommandBindings" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3222">
              <see langword="true" /> if the <see cref="P:System.Windows.UIElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3223">Als Ergebnis erhalten `true` Wenn <xref:System.Windows.UIElement.CommandBindings%2A> lokal festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3223">This will return `true` if <xref:System.Windows.UIElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="a8f26-3224">Dies `ShouldSerialize` Methode wird bereitgestellt, da die <xref:System.Windows.UIElement.CommandBindings%2A> Eigenschaft hat keine einfachen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3224">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="a8f26-3225">Diese Methode gibt an, ob die Eigenschaft von seinem Standardwert geändert hat.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3225">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="a8f26-3226">Diese Methode wird in der Regel aufgerufen, wenn Sie entweder einen Designer oder entwickeln Ihre eigenen Steuerelement Integrieren einer <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3226">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="a8f26-3227">Weitere Informationen finden Sie unter [Definieren von Standardwerten mit der ShouldSerialize-Methode und der Reset-Methode](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3227">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeInputBindings : unit -&gt; bool" Usage="uIElement.ShouldSerializeInputBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3228">Gibt zurück, ob in Serialisierungsprozessen der Inhalt der <see cref="P:System.Windows.UIElement.InputBindings" />-Eigenschaft für Instanzen dieser Klasse serialisiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3228">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.InputBindings" /> property on instances of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-3229">
            <see langword="true" />, wenn der <see cref="P:System.Windows.UIElement.InputBindings" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3229">
              <see langword="true" /> if the <see cref="P:System.Windows.UIElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3230">Als Ergebnis erhalten `true` Wenn <xref:System.Windows.UIElement.InputBindings%2A> lokal festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3230">This will return `true` if <xref:System.Windows.UIElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="a8f26-3231">Dies `ShouldSerialize` Methode wird bereitgestellt, da die <xref:System.Windows.UIElement.InputBindings%2A> Eigenschaft hat keine einfachen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3231">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="a8f26-3232">Diese Methode gibt an, ob die Eigenschaft von seinem Standardwert geändert hat.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3232">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="a8f26-3233">Diese Methode wird in der Regel aufgerufen, wenn Sie entweder einen Designer oder entwickeln Ihre eigenen Steuerelement Integrieren einer <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3233">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="a8f26-3234">Weitere Informationen finden Sie unter [Definieren von Standardwerten mit der ShouldSerialize-Methode und der Reset-Methode](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3234">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixels">
      <MemberSignature Language="C#" Value="public bool SnapsToDevicePixels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SnapsToDevicePixels" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.SnapsToDevicePixels" />
      <MemberSignature Language="VB.NET" Value="Public Property SnapsToDevicePixels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SnapsToDevicePixels { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SnapsToDevicePixels : bool with get, set" Usage="System.Windows.UIElement.SnapsToDevicePixels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3235">Ruft einen Wert ab, der bestimmt, ob für das Rendern dieses Elements gerätespezifische Pixelseinstellungen verwendet werden sollen, oder legt ihn fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3235">Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.</span>
          </span>
          <span data-ttu-id="a8f26-3236">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3236">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-3237">
            <see langword="true" />, wenn das Element gemäß den gerätespezifischen Pixeleinstellungen gerendert werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3237">
              <see langword="true" /> if the element should render in accordance to device pixels; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8f26-3238">Der gemäß <see cref="T:System.Windows.UIElement" /> deklarierte Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3238">The default as declared on <see cref="T:System.Windows.UIElement" /> is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3239">Sie können diese Eigenschaft festlegen, um `true` für Ihre Stammelement Pixel aktivieren ausrichten rendern, während die Benutzeroberfläche.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3239">You can set this property to `true` on your root element to enable pixel snap rendering throughout the UI.</span></span> <span data-ttu-id="a8f26-3240">Für Geräte, die auf mehr als 96 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)], Pixel ausrichten, rendern kann visuelle Anti-Aliasing-Artefakte ausgetreten ist eine Einheit durchgezogene Linien minimieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3240">For devices operating at greater than 96 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)], pixel snap rendering can minimize anti-aliasing visual artifacts in the vicinity of single-unit solid lines.</span></span>  
  
 <span data-ttu-id="a8f26-3241">Wenn von geerbt <xref:System.Windows.FrameworkElement> oder eine mögliche abgeleiteten Klassen, <xref:System.Windows.FrameworkElement> überschreibt die Metadaten für diese Abhängigkeitseigenschaft Festlegen der <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> Metadateneigenschaft, die `true`.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3241">When inherited by <xref:System.Windows.FrameworkElement> or any possible derived classes, <xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property to set the <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> metadata property to `true`.</span></span> <span data-ttu-id="a8f26-3242">Wird sichergestellt, dass nur das äußerste Element in einer Unterstruktur muss an <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> als `true`, und klicken Sie dann alle untergeordneten Elemente dieser Teilstruktur meldet <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> als `true` und hat den <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> visueller Effekt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3242">What this achieves is that only the outermost element in a subtree needs to specify <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true`, and all child elements of that subtree will then report <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true` and will have the <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> visual effect.</span></span>  
  
<a name="dependencyPropertyInfo_SnapsToDevicePixels"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-3243">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-3243">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3244">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3244">Identifier field</span></span>|<xref:System.Windows.UIElement.SnapsToDevicePixelsProperty>|  
|<span data-ttu-id="a8f26-3245">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-3245">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-3246">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-3246">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixelsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SnapsToDevicePixelsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.SnapsToDevicePixelsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SnapsToDevicePixelsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SnapsToDevicePixelsProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.SnapsToDevicePixelsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3247">Bezeichnet die <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3247">Identifies the <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3248">Tritt auf, wenn die Stifttaste gedrückt wird, während sich der Zeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3248">Occurs when the stylus button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3249">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.StylusButtonDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3249">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3250">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.StylusButtonDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3250">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-3251">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3251">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-3252">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3252">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3253">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3253">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3254">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3254">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonDownEvent>|  
|<span data-ttu-id="a8f26-3255">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3255">Routing strategy</span></span>|<span data-ttu-id="a8f26-3256">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-3256">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-3257">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3257">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-3258">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3258">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="a8f26-3259">Außer Kraft setzen <xref:System.Windows.UIElement.OnStylusButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3259">Override <xref:System.Windows.UIElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3260">Identifiziert das <see cref="E:System.Windows.UIElement.StylusButtonDown" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3260">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3261">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3261">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3262">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3262">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3263">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3263">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3264">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3264">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3265">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3265">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3266">Tritt auf, wenn die Stifttaste losgelassen wird, während sich der Zeiger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3266">Occurs when the stylus button is released while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3267">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.StylusButtonUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3267">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3268">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.StylusButtonUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3268">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-3269">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3269">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-3270">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3270">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3271">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3271">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3272">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3272">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonUpEvent>|  
|<span data-ttu-id="a8f26-3273">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3273">Routing strategy</span></span>|<span data-ttu-id="a8f26-3274">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-3274">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-3275">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3275">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="a8f26-3276">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3276">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="a8f26-3277">Außer Kraft setzen <xref:System.Windows.UIElement.OnStylusButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3277">Override <xref:System.Windows.UIElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3278">Identifiziert das <see cref="E:System.Windows.UIElement.StylusButtonUp" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3278">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3279">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3279">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3280">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3280">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3281">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3281">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3282">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3282">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3283">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3283">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberSignature Language="F#" Value="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3284">Tritt auf, wenn der Stift den Digitizer berührt, während sich der Stift über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3284">Occurs when the stylus touches the digitizer while the stylus is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3285">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.StylusDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3285">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3286">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.StylusDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3286">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-3287">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3287">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-3288">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3288">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3289">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3289">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3290">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3290">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusDownEvent>|  
|<span data-ttu-id="a8f26-3291">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3291">Routing strategy</span></span>|<span data-ttu-id="a8f26-3292">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-3292">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-3293">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3293">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="a8f26-3294">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3294">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="a8f26-3295">Außer Kraft setzen <xref:System.Windows.UIElement.OnStylusDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3295">Override <xref:System.Windows.UIElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3296">Identifiziert das <see cref="E:System.Windows.UIElement.StylusDown" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3296">Identifies the <see cref="E:System.Windows.UIElement.StylusDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3297">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3297">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3298">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3298">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3299">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3299">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3300">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3300">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3301">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3301">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberSignature Language="F#" Value="member this.StylusEnter : System.Windows.Input.StylusEventHandler " Usage="member this.StylusEnter : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3302">Tritt auf, wenn der Stift in den Bereich dieses Elements eintritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3302">Occurs when the stylus enters the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3303"><xref:System.Windows.UIElement.StylusEnter> ist eine, die die direkte Ereignisbehandlung Routingstrategie verwendet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3303"><xref:System.Windows.UIElement.StylusEnter> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="a8f26-3304">Direkte Routingereignisse werden nicht auf einer Route ausgelöst wird. Stattdessen werden sie in demselben Element behandelt, in denen sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3304">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="a8f26-3305">Aktivieren sie jedoch andere Aspekte des Routingereignisverhaltens, z. B. in Stilen-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3305">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="a8f26-3306">Obwohl <xref:System.Windows.UIElement.StylusEnter> verfolgt nach, wenn der Stift den Bereich eines Elements, das dieses Ereignis, das weitere eintritt buchstäblich meldet, dass die <xref:System.Windows.UIElement.IsStylusOver%2A> -Eigenschaftswert geändert wurde, aus `false` zu `true` für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3306">Although <xref:System.Windows.UIElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="a8f26-3307">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.StylusEnter> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3307">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3308">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.StylusEnter> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3308">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-3309">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3309">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-3310">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3310">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3311">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3311">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3312">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3312">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusEnterEvent>|  
|<span data-ttu-id="a8f26-3313">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3313">Routing strategy</span></span>|<span data-ttu-id="a8f26-3314">Direkt</span><span class="sxs-lookup"><span data-stu-id="a8f26-3314">Direct</span></span>|  
|<span data-ttu-id="a8f26-3315">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3315">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8f26-3316">Außer Kraft setzen <xref:System.Windows.UIElement.OnStylusEnter%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3316">Override <xref:System.Windows.UIElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3317">Identifiziert das <see cref="E:System.Windows.UIElement.StylusEnter" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3317">Identifies the <see cref="E:System.Windows.UIElement.StylusEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3318">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3318">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3319">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3319">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3320">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3320">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3321">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3321">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3322">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3322">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3323">Tritt auf, wenn der Stift über ein Element bewegt wird, ohne den Digitizer zu berühren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3323">Occurs when the stylus moves over an element without actually touching the digitizer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3324">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.StylusInAirMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3324">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3325">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.StylusInAirMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3325">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-3326">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3326">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-3327">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3327">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3328">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3328">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3329">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3329">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="a8f26-3330">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3330">Routing strategy</span></span>|<span data-ttu-id="a8f26-3331">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-3331">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-3332">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3332">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8f26-3333">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3333">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="a8f26-3334">Außer Kraft setzen <xref:System.Windows.UIElement.OnStylusInAirMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3334">Override <xref:System.Windows.UIElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3335">Identifiziert das <see cref="E:System.Windows.UIElement.StylusInAirMove" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3335">Identifies the <see cref="E:System.Windows.UIElement.StylusInAirMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3336">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3336">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3337">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3337">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3338">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3338">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3339">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3339">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3340">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3340">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberSignature Language="F#" Value="member this.StylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3341">Tritt auf, wenn sich der Tablettstift nah genug am Digitizer befindet, um erkannt zu werden, während er sich über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3341">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3342">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.StylusInRange> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3342">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3343">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.StylusInRange> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3343">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-3344">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3344">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-3345">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3345">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3346">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3346">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3347">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3347">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInRangeEvent>|  
|<span data-ttu-id="a8f26-3348">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3348">Routing strategy</span></span>|<span data-ttu-id="a8f26-3349">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-3349">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-3350">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3350">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8f26-3351">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3351">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="a8f26-3352">Außer Kraft setzen <xref:System.Windows.UIElement.OnStylusInRange%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3352">Override <xref:System.Windows.UIElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3353">Identifiziert das <see cref="E:System.Windows.UIElement.StylusInRange" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3353">Identifies the <see cref="E:System.Windows.UIElement.StylusInRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3354">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3354">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3355">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3355">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3356">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3356">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3357">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3357">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3358">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3358">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberSignature Language="F#" Value="member this.StylusLeave : System.Windows.Input.StylusEventHandler " Usage="member this.StylusLeave : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3359">Tritt auf, wenn der Stift den Bereich des Elements verlässt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3359">Occurs when the stylus leaves the bounds of the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3360"><xref:System.Windows.UIElement.StylusLeave> ist eine, die die direkte Ereignisbehandlung Routingstrategie verwendet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3360"><xref:System.Windows.UIElement.StylusLeave> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="a8f26-3361">Direkte Routingereignisse werden nicht auf einer Route ausgelöst wird. Stattdessen werden sie in demselben Element behandelt, in denen sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3361">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="a8f26-3362">Aktivieren sie jedoch andere Aspekte des Routingereignisverhaltens, z. B. in Stilen-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3362">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="a8f26-3363">Obwohl <xref:System.Windows.UIElement.StylusLeave> verfolgt nach, wenn der Stift den Bereich eines Elements, das dieses Ereignis mehr verlässt buchstäblich meldet, dass die <xref:System.Windows.UIElement.IsStylusOver%2A> -Eigenschaftswert geändert wurde, aus `true` zu `false` für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3363">Although <xref:System.Windows.UIElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="a8f26-3364">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.StylusLeave> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3364">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3365">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.StylusLeave> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3365">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-3366">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3366">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-3367">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3367">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3368">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3368">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3369">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3369">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusLeaveEvent>|  
|<span data-ttu-id="a8f26-3370">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3370">Routing strategy</span></span>|<span data-ttu-id="a8f26-3371">Direkt</span><span class="sxs-lookup"><span data-stu-id="a8f26-3371">Direct</span></span>|  
|<span data-ttu-id="a8f26-3372">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3372">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8f26-3373">Außer Kraft setzen <xref:System.Windows.UIElement.OnStylusLeave%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3373">Override <xref:System.Windows.UIElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3374">Identifiziert das <see cref="E:System.Windows.UIElement.StylusLeave" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3374">Identifies the <see cref="E:System.Windows.UIElement.StylusLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3375">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3375">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3376">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3376">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3377">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3377">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3378">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3378">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3379">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3379">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberSignature Language="F#" Value="member this.StylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3380">Tritt auf, wenn der Stift über das Element bewegt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3380">Occurs when the stylus moves over this element.</span>
          </span>
          <span data-ttu-id="a8f26-3381">Zum Auslösen dieses Ereignisses muss der Stift auf dem Digitizer bewegt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3381">The stylus must move while on the digitizer to raise this event.</span>
          </span>
          <span data-ttu-id="a8f26-3382">Andernfalls wird stattdessen <see cref="E:System.Windows.UIElement.StylusInAirMove" /> ausgelöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3382">Otherwise, <see cref="E:System.Windows.UIElement.StylusInAirMove" /> is raised instead.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3383">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.StylusMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3383">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3384">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.StylusMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3384">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-3385">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3385">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-3386">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3386">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3387">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3387">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3388">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3388">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusMoveEvent>|  
|<span data-ttu-id="a8f26-3389">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3389">Routing strategy</span></span>|<span data-ttu-id="a8f26-3390">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-3390">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-3391">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3391">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8f26-3392">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3392">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="a8f26-3393">Außer Kraft setzen <xref:System.Windows.UIElement.OnStylusMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3393">Override <xref:System.Windows.UIElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3394">Identifiziert das <see cref="E:System.Windows.UIElement.StylusMove" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3394">Identifies the <see cref="E:System.Windows.UIElement.StylusMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3395">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3395">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3396">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3396">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3397">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3397">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3398">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3398">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3399">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3399">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3400">Tritt auf, wenn der Stift zu weit vom Digitizer entfernt ist, um erkannt zu werden, während er sich über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3400">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3401">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.StylusOutOfRange> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3401">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3402">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.StylusOutOfRange> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3402">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-3403">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3403">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-3404">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3404">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3405">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3405">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3406">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3406">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="a8f26-3407">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3407">Routing strategy</span></span>|<span data-ttu-id="a8f26-3408">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-3408">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-3409">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3409">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8f26-3410">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3410">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="a8f26-3411">Außer Kraft setzen <xref:System.Windows.UIElement.OnStylusOutOfRange%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3411">Override <xref:System.Windows.UIElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3412">Identifiziert das <see cref="E:System.Windows.UIElement.StylusOutOfRange" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3412">Identifies the <see cref="E:System.Windows.UIElement.StylusOutOfRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3413">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3413">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3414">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3414">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3415">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3415">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3416">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3416">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3417">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3417">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusPlugIns">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.StylusPlugIns" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StylusPlugIns As StylusPlugInCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ StylusPlugIns { System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StylusPlugIns : System.Windows.Input.StylusPlugIns.StylusPlugInCollection" Usage="System.Windows.UIElement.StylusPlugIns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPlugIns.StylusPlugInCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3418">Ruft eine Auflistung aller Tablettstift-Plug-In-Objekte (Anpassung) ab, die diesem Element zugeordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3418">Gets a collection of all stylus plug-in (customization) objects associated with this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-3419">Die Auflistung der Tablettstift-Plug-Ins als spezielle Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3419">The collection of stylus plug-ins, as a specialized collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3420">Ist ein Beispiel für ein Steuerelement, das diese Auflistung füllt <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3420">An example of a control that populates this collection is <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="a8f26-3421"><xref:System.Windows.Controls.InkCanvas> Fügt der <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> als Auflistungselement, wodurch die <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> nastala chyba vstupu interagieren und Generieren von eindeutigen Rendering als Reaktion auf den Stift-Ereignisse gesteuert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3421"><xref:System.Windows.Controls.InkCanvas> adds the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> as a collection item, which enables the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to interact with stylus input and produce the unique rendering in response to stylus driven events.</span></span>  
  
 <span data-ttu-id="a8f26-3422">Weitere Informationen zum Erstellen von benutzerdefinierten Plug-Ins, die empfangen und nastala chyba vstupu interpretieren kann, finden Sie unter [Abfangen von Eingabe des Tablettstifts](~/docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3422">For information on creating custom plug-ins that can receive and interpret stylus input, see [Intercepting Input from the Stylus](~/docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-3423">Das folgende Beispiel erstellt eine <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> -Instanz und fügt es der <xref:System.Windows.UIElement.StylusPlugIns%2A> Sammlung für ein benutzerdefiniertes Steuerelement zum Behandeln von Freihandeingaben.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3423">The following example creates a <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> instance and adds it to the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection for a custom ink handling control.</span></span>  
  
 [!code-csharp[StylusPluginSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusPluginSamples/CSharp/StylusControl.cs#3)]
 [!code-vb[StylusPluginSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusPluginSamples/VisualBasic/StylusControl.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />
        <altmember cref="T:System.Windows.Controls.InkCanvas" />
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3424">Tritt auf, wenn ein Benutzer eine von mehreren Gesten ausführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3424">Occurs when a user performs one of several stylus gestures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3425">Weitere Informationen zu Gesten, finden Sie unter <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3425">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="a8f26-3426">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.StylusSystemGesture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3426">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3427">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.StylusSystemGesture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3427">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-3428">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3428">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-3429">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3429">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3430">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3430">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3431">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3431">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="a8f26-3432">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3432">Routing strategy</span></span>|<span data-ttu-id="a8f26-3433">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-3433">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-3434">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3434">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="a8f26-3435">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3435">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="a8f26-3436">Außer Kraft setzen <xref:System.Windows.UIElement.OnStylusSystemGesture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3436">Override <xref:System.Windows.UIElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3437">Identifiziert das <see cref="E:System.Windows.UIElement.StylusSystemGesture" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3437">Identifies the <see cref="E:System.Windows.UIElement.StylusSystemGesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3438">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3438">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3439">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3439">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3440">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3440">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3441">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3441">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3442">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3442">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberSignature Language="F#" Value="member this.StylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.StylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3443">Tritt auf, wenn ein Benutzer den Stift vom Digitizer hebt, während sich der Stift über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3443">Occurs when the user raises the stylus off the digitizer while it is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3444">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.StylusUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3444">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3445">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.StylusUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3445">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8f26-3446">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3446">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8f26-3447">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3447">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3448">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3448">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3449">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3449">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusUpEvent>|  
|<span data-ttu-id="a8f26-3450">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3450">Routing strategy</span></span>|<span data-ttu-id="a8f26-3451">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-3451">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-3452">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3452">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8f26-3453">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3453">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="a8f26-3454">Außer Kraft setzen <xref:System.Windows.UIElement.OnStylusUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3454">Override <xref:System.Windows.UIElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3455">Identifiziert das <see cref="E:System.Windows.UIElement.StylusUp" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3455">Identifies the <see cref="E:System.Windows.UIElement.StylusUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3456">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3456">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3457">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3457">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3458">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3458">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3459">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3459">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3460">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3460">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3461">Tritt auf, wenn dieses Element Text geräteunabhängig empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3461">Occurs when this element gets text in a device-independent manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="a8f26-3462">Dieses Ereignis möglicherweise bereits als behandelt, indem die internen Implementierungen zusammengesetzte Steuerelemente gekennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3462">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="a8f26-3463">Siehe Anmerkung unten an.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3463">See Remark below.</span></span>  
  
 <span data-ttu-id="a8f26-3464">Die <xref:System.Windows.UIElement.TextInput> Ereignis bereits von der internen Implementierungen der zusammengesetzte Steuerelemente als behandelt markiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3464">The <xref:System.Windows.UIElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="a8f26-3465">Z. B. eine <xref:System.Windows.Controls.TextBox> ist ein zusammengesetztes Steuerelement, in denen die <xref:System.Windows.UIElement.TextInput> Ereignis ist bereits als behandelt, in der Zusammensetzung markiert.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3465">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.UIElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="a8f26-3466">Grund hierfür das Steuerelement bestimmte Arten von Eingaben, wie z. B. die Pfeiltasten, dass für das Steuerelement eine besondere Bedeutung interpretieren muss.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3466">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="a8f26-3467">Bei Verwendung von <xref:System.Windows.UIElement.PreviewTextInput> des Ereignisses, in dem Sie Handler für die Texteingabe anfügen, können Sie bessere Ergebnisse erhalten.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3467">If you use <xref:System.Windows.UIElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="a8f26-3468">Diese Technik umgeht den meisten Fällen, in denen steuerelementzusammensetzung hat bereits das Ereignis als behandelt markiert, und verhindert, dass den Handler empfängt das Ereignis auf der Ereignisroute.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3468">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="a8f26-3469">Die <xref:System.Windows.UIElement.TextInput> Ereignis ermöglicht, eine Komponente oder Anwendung, die für die Texteingabe in einem geräteunabhängig überwachen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3469">The <xref:System.Windows.UIElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="a8f26-3470">Die Tastatur dient primär der <xref:System.Windows.UIElement.TextInput>, Spracherkennung, handschrifterkennung und andere Eingabegeräte können auch auslösen, aber <xref:System.Windows.UIElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3470">The keyboard is the primary means of <xref:System.Windows.UIElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
 <span data-ttu-id="a8f26-3471">Aufgrund von Tastenkombinationen – entweder in die Standard-Tastatur oder über den Eingabemethoden-Editoren, mehrere wichtige Ereignisse können nur eine Eingabe Text-Ereignis auslösen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3471">Because of key combinations—either in default keyboards or through input method editors—multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="a8f26-3472">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement.TextInput> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3472">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.TextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="a8f26-3473">Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement.TextInput> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3473">Event handlers that are attached to the <xref:System.Windows.UIElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3474">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3474">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3475">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3475">Identifier field</span></span>|<xref:System.Windows.UIElement.TextInputEvent>|  
|<span data-ttu-id="a8f26-3476">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3476">Routing strategy</span></span>|<span data-ttu-id="a8f26-3477">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-3477">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-3478">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3478">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="a8f26-3479">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3479">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="a8f26-3480">Außer Kraft setzen <xref:System.Windows.UIElement.OnTextInput%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3480">Override <xref:System.Windows.UIElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3481">Identifiziert das <see cref="E:System.Windows.UIElement.TextInput" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3481">Identifies the <see cref="E:System.Windows.UIElement.TextInput" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3482">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3482">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8f26-3483">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3483">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8f26-3484">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3484">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8f26-3485">Weitere Informationen über das Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3485">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8f26-3486">Weitere Informationen über das Hinzufügen von Klassenhandlern anhand von Routingereignisbezeichnern finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3486">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberSignature Language="F#" Value="member this.TouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3487">Tritt auf, wenn ein Finger den Bildschirm berührt und sich dieser über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3487">Occurs when a finger touches the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3488">In der Standardeinstellung die <xref:System.Windows.UIElement.PreviewTouchDown> und <xref:System.Windows.UIElement.TouchDown> Ereignisse werden nicht ausgeführt, bis ein Finger den Bildschirm berührt und verschiebt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3488">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="a8f26-3489">Einen Finger auf dem Bildschirm zu drücken und gedrückt halten, ohne ihn zu verschieben wird das Drücken und das Verhalten von aufzunehmen eine <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3489">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="a8f26-3490">Das Drücken und halten Verhalten ist gleichbedeutend mit einer Maus mit der rechten Maustaste.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3490">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="a8f26-3491">Die dazu führen, dass die <xref:System.Windows.UIElement.PreviewTouchDown> und <xref:System.Windows.UIElement.TouchDown> Festlegen von Ereignissen, die ausgeführt werden, sobald ein Finger den Bildschirm berührt die <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> angefügte Eigenschaft zu `false` für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3491">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3492">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3492">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3493">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3493">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchDownEvent>|  
|<span data-ttu-id="a8f26-3494">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3494">Routing strategy</span></span>|<span data-ttu-id="a8f26-3495">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-3495">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-3496">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3496">Delegate</span></span>|<span data-ttu-id="a8f26-3497">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3497"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8f26-3498">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3498">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="a8f26-3499">Außer Kraft setzen <xref:System.Windows.UIElement.OnTouchDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3499">Override <xref:System.Windows.UIElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3500">Identifiziert das <see cref="E:System.Windows.UIElement.TouchDown" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3500">Identifies the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberSignature Language="F#" Value="member this.TouchEnter : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchEnter : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3501">Tritt ein, wenn sich eine Fingereingabe in die Grenzen dieses Elements hineinbewegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3501">Occurs when a touch moves from outside to inside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3502">Dieses Ereignis wird immer dann ausgelöst, und zwar unabhängig davon, ob das Fingereingabegerät für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3502">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3503">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3503">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3504">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3504">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchEnterEvent>|  
|<span data-ttu-id="a8f26-3505">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3505">Routing strategy</span></span>|<span data-ttu-id="a8f26-3506">Direkt</span><span class="sxs-lookup"><span data-stu-id="a8f26-3506">Direct</span></span>|  
|<span data-ttu-id="a8f26-3507">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3507">Delegate</span></span>|<span data-ttu-id="a8f26-3508">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3508"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8f26-3509">Außer Kraft setzen <xref:System.Windows.UIElement.OnTouchEnter%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3509">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3510">Identifiziert das <see cref="E:System.Windows.UIElement.TouchEnter" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3510">Identifies the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCaptured : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3511">Ruft alle Fingereingabegeräte ab, die für dieses Element erfasst werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3511">Gets all touch devices that are captured to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-3512">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die für dieses Element erfasst werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3512">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCapturedWithin : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3513">Ruft alle Fingereingabegeräte ab, die für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3513">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-3514">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3514">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesDirectlyOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3515">Ruft alle Fingereingabegeräte ab, die sich über diesem Element befinden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3515">Gets all touch devices that are over this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-3516">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die sich über diesem Element befinden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3516">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3517">Ruft alle Fingereingabegeräte ab, die sich über diesem Element oder seinen untergeordneten Elementen in der visuellen Struktur befinden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3517">Gets all touch devices that are over this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-3518">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die sich über diesem Element oder seinen untergeordneten Elemente in der visuellen Struktur befinden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3518">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberSignature Language="F#" Value="member this.TouchLeave : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchLeave : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3519">Tritt ein, wenn sich eine Fingereingabe aus den Grenzen dieses Elements herausbewegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3519">Occurs when a touch moves from inside to outside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3520">Dieses Ereignis wird immer dann ausgelöst, und zwar unabhängig davon, ob das Fingereingabegerät für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3520">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3521">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3521">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3522">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3522">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchLeaveEvent>|  
|<span data-ttu-id="a8f26-3523">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3523">Routing strategy</span></span>|<span data-ttu-id="a8f26-3524">Direkt</span><span class="sxs-lookup"><span data-stu-id="a8f26-3524">Direct</span></span>|  
|<span data-ttu-id="a8f26-3525">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3525">Delegate</span></span>|<span data-ttu-id="a8f26-3526">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3526"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8f26-3527">Außer Kraft setzen <xref:System.Windows.UIElement.OnTouchLeave%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3527">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3528">Identifiziert das <see cref="E:System.Windows.UIElement.TouchLeave" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3528">Identifies the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberSignature Language="F#" Value="member this.TouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3529">Tritt auf, wenn sich ein Finger auf dem Bildschirm bewegt, während sich der Finger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3529">Occurs when a finger moves on the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3530">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3530">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3531">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3531">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchMoveEvent>|  
|<span data-ttu-id="a8f26-3532">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3532">Routing strategy</span></span>|<span data-ttu-id="a8f26-3533">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-3533">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-3534">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3534">Delegate</span></span>|<span data-ttu-id="a8f26-3535">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3535"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8f26-3536">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3536">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="a8f26-3537">Außer Kraft setzen <xref:System.Windows.UIElement.OnTouchMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3537">Override <xref:System.Windows.UIElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3538">Identifiziert das <see cref="E:System.Windows.UIElement.TouchMove" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3538">Identifies the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberSignature Language="F#" Value="member this.TouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3539">Tritt auf, wenn ein Finger vom Bildschirm genommen wird, während sich der Finger über diesem Element befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3539">Occurs when a finger is raised off of the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8f26-3540">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="a8f26-3540">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3541">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3541">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchUpEvent>|  
|<span data-ttu-id="a8f26-3542">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="a8f26-3542">Routing strategy</span></span>|<span data-ttu-id="a8f26-3543">Bubbling</span><span class="sxs-lookup"><span data-stu-id="a8f26-3543">Bubbling</span></span>|  
|<span data-ttu-id="a8f26-3544">delegate</span><span class="sxs-lookup"><span data-stu-id="a8f26-3544">Delegate</span></span>|<span data-ttu-id="a8f26-3545">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3545"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8f26-3546">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3546">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="a8f26-3547">Außer Kraft setzen <xref:System.Windows.UIElement.OnTouchUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3547">Override <xref:System.Windows.UIElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3548">Identifiziert das <see cref="E:System.Windows.UIElement.TouchUp" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3548">Identifies the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslatePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point TranslatePoint (System.Windows.Point point, System.Windows.UIElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point TranslatePoint(valuetype System.Windows.Point point, class System.Windows.UIElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point TranslatePoint(System::Windows::Point point, System::Windows::UIElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.TranslatePoint : System.Windows.Point * System.Windows.UIElement -&gt; System.Windows.Point" Usage="uIElement.TranslatePoint (point, relativeTo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="relativeTo" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="a8f26-3549">Der Punktwert relativ zu diesem Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3549">The point value, as relative to this element.</span>
          </span>
        </param>
        <param name="relativeTo">
          <span data-ttu-id="a8f26-3550">Das Element, in das der angegebene Punkt übersetzt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3550">The element to translate the given point into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8f26-3551">Übersetzt einen Punkt relativ zu diesem Element in Koordinaten, die relativ zum angegebenen Element sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3551">Translates a point relative to this element to coordinates that are relative to the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8f26-3552">Ein Punktwert, der jetzt relativ zum Zielelement anstatt zu diesem Quellelement ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3552">A point value, now relative to the target element rather than this source element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3553">Übergeben von `null` für `relativeTo` ist zulässig, und gibt an, dass die Koordinaten relativ zum Stammelement in der logischen Struktur sein sollen, zu der dieses Element gehört.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3553">Passing `null` for `relativeTo` is permitted, and indicates that coordinates should be relative to the root element in the logical tree that this element belongs to.</span></span>  
  
 <span data-ttu-id="a8f26-3554">Diese Methode wird verwendet, für die Übersetzung Test Punktwerte erreicht.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3554">This method is used for translating hit test point values.</span></span> <span data-ttu-id="a8f26-3555">Das Aufrufen dieser Methode ist vor allem relevant, wenn Sie ein Steuerelement erstellen und Verarbeitung von Eingaben auf einer niedrigeren Ebene.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3555">Calling this method is mainly relevant if you are authoring a control and need to process input at a lower level.</span></span> <span data-ttu-id="a8f26-3556">Wenn Sie vorhandenen Steuerelemente verwenden, können Sie in der Regel davon ausgehen, dass abgeschlossene Steuerelemente ordnungsgemäß übersetzte Treffertestergebnissen gemeldet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3556">If you are using existing controls, you can generally assume that completed controls will report correctly translated hit test results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uid">
      <MemberSignature Language="C#" Value="public string Uid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Uid" />
      <MemberSignature Language="VB.NET" Value="Public Property Uid As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uid { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uid : string with get, set" Usage="System.Windows.UIElement.Uid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3557">Ruft den eindeutigen Bezeichner (für Lokalisierung) für dieses Element ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3557">Gets or sets the unique identifier (for localization) for this element.</span>
          </span>
          <span data-ttu-id="a8f26-3558">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3558">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-3559">Eine Zeichenfolge, die der eindeutige Bezeichner für dieses Element ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3559">A string that is the unique identifier for this element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3560">Zum Abrufen von Designern verwendet die `x:Uid` Wert (finden Sie unter [WPF-Globalisierung und Lokalisierung (Übersicht)](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md) Informationen).</span><span class="sxs-lookup"><span data-stu-id="a8f26-3560">Used by designers to get the `x:Uid` value (see [WPF Globalization and Localization Overview](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md) for more information).</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-3561">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-3561">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3562">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3562">Identifier field</span></span>|<xref:System.Windows.UIElement.UidProperty>|  
|<span data-ttu-id="a8f26-3563">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-3563">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-3564">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-3564">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UidProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UidProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UidProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.UidProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UidProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UidProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UidProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.UidProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3565">Bezeichnet die <see cref="P:System.Windows.UIElement.Uid" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3565">Identifies the <see cref="P:System.Windows.UIElement.Uid" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLayout">
      <MemberSignature Language="C#" Value="public void UpdateLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.UpdateLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLayout();" />
      <MemberSignature Language="F#" Value="member this.UpdateLayout : unit -&gt; unit" Usage="uIElement.UpdateLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3566">Stellt sicher, dass alle visuellen untergeordneten Elemente dieses Elements ordnungsgemäß für das Layout aktualisiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3566">Ensures that all visual child elements of this element are properly updated for layout.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3567">Beim Aufrufen dieser Methode, die Elemente mit <xref:System.Windows.UIElement.IsMeasureValid%2A> `false` oder <xref:System.Windows.UIElement.IsArrangeValid%2A> `false` elementspezifischen ruft <xref:System.Windows.UIElement.MeasureCore%2A> und <xref:System.Windows.UIElement.ArrangeCore%2A> -Methoden, die erzwingt, dass Layout aktualisieren, und jeder berechnete Größe werden überprüft.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3567">When you call this method, elements with <xref:System.Windows.UIElement.IsMeasureValid%2A>`false` or <xref:System.Windows.UIElement.IsArrangeValid%2A>`false` will call element-specific <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> methods, which forces layout update, and all computed sizes will be validated.</span></span>  
  
 <span data-ttu-id="a8f26-3568">Das Aufrufen dieser Methode hat keine Auswirkungen, wenn Layout unverändert ist, oder weder Anordnung oder Messung Zustand eines Layouts ungültig ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3568">Calling this method has no effect if layout is unchanged, or if neither arrangement nor measurement state of a layout is invalid.</span></span> <span data-ttu-id="a8f26-3569">Jedoch, wenn das Layout ungültig, wird die <xref:System.Windows.UIElement.UpdateLayout%2A> Aufruf wird das gesamte Layout wiederholen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3569">However, if layout is invalid in either respect, the <xref:System.Windows.UIElement.UpdateLayout%2A> call will redo the entire layout.</span></span> <span data-ttu-id="a8f26-3570">Aus diesem Grund sollten Sie Aufruf <xref:System.Windows.UIElement.UpdateLayout%2A> nach jeder inkrementelle und geringfügige Änderung in der Elementstruktur.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3570">Therefore, you should avoid calling <xref:System.Windows.UIElement.UpdateLayout%2A> after each incremental and minor change in the element tree.</span></span> <span data-ttu-id="a8f26-3571">Das Layoutsystem führt Elementlayout verzögert, mithilfe eines Algorithmus, das Leistung und Währung, Lastenausgleich und eine Gewichtung Strategie zum Zurückstellen von Änderungen an der Stämme, bis alle untergeordneten Elemente gültig sind.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3571">The layout system will perform element layout in a deferred manner, using an algorithm that balances performance and currency, and with a weighting strategy to defer changes to roots until all child elements are valid.</span></span> <span data-ttu-id="a8f26-3572">Sie sollten nur aufrufen, <xref:System.Windows.UIElement.UpdateLayout%2A> Wenn unumgänglich aktualisierten Größen und Positionen und erst, nachdem Sie sicher, dass alle Änderungen an Eigenschaften, dass Sie das Steuerelement, und dass das Layout auswirken können abgeschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3572">You should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if you absolutely need updated sizes and positions, and only after you are certain that all changes to properties that you control and that may affect layout are completed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility Visibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberSignature Language="F#" Value="member this.Visibility : System.Windows.Visibility with get, set" Usage="System.Windows.UIElement.Visibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3573">Ruft die [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]-Sichtbarkeit dieses Elements ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3573">Gets or sets the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] visibility of this element.</span>
          </span>
          <span data-ttu-id="a8f26-3574">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3574">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8f26-3575">Ein Wert aus der Enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3575">A value of the enumeration.</span>
          </span>
          <span data-ttu-id="a8f26-3576">Der Standardwert ist <see cref="F:System.Windows.Visibility.Visible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3576">The default value is <see cref="F:System.Windows.Visibility.Visible" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f26-3577">Diese Eigenschaft wirkt sich auf den Wert der <xref:System.Windows.UIElement.IsVisible%2A>, der möglicherweise wiederum Auslösen der <xref:System.Windows.UIElement.IsVisibleChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3577">Setting this property affects the value of <xref:System.Windows.UIElement.IsVisible%2A>, which in turn may raise the <xref:System.Windows.UIElement.IsVisibleChanged> event.</span></span> <span data-ttu-id="a8f26-3578">Allerdings <xref:System.Windows.UIElement.IsVisible%2A> andere Faktoren, die beeinflussen, z. B. die sichtbarkeitseinstellungen der übergeordneten Elemente, die es enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3578">However, <xref:System.Windows.UIElement.IsVisible%2A> has other factors that influence it, for instance the visibility settings of parents that contain it.</span></span>  
  
 <span data-ttu-id="a8f26-3579">Elemente, in denen <xref:System.Windows.UIElement.Visibility%2A> nicht <xref:System.Windows.Visibility.Visible> keine Teilnahme am Eingabeereignissen (oder Befehle), führen Sie beeinflussen nicht die Measure oder die Anordnungsübergabe des Layouts, sind nicht in einer Sequenz Registerkarte und Treffertests nicht gemeldet werden.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3579">Elements where <xref:System.Windows.UIElement.Visibility%2A> is not <xref:System.Windows.Visibility.Visible> do not participate in input events (or commands), do not influence either the Measure or Arrange passes of layout, are not in a tab sequence, and will not be reported in hit testing.</span></span>  
  
 <span data-ttu-id="a8f26-3580">Wenn von geerbt <xref:System.Windows.Window> oder die abgeleiteten Klassen <xref:System.Windows.Window> ändert den Standardwert dieser Eigenschaft sein <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3580">When inherited by <xref:System.Windows.Window> or its derived classes, <xref:System.Windows.Window> redefines the default value of this property to be <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="a8f26-3581">Dies hat Auswirkungen hat die Ausführung nicht die Maßübergabe des Layouts auf einem anfänglich erstellten <xref:System.Windows.Window>, und <xref:System.Windows.UIElement.RenderSize%2A> (0,0) zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3581">This has the effect of not running the Measure pass of layout on an initially created <xref:System.Windows.Window>, and <xref:System.Windows.UIElement.RenderSize%2A> returns (0,0).</span></span> <span data-ttu-id="a8f26-3582">Ausführliche Informationen finden Sie unter <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3582">For details, see <xref:System.Windows.Window>.</span></span> <span data-ttu-id="a8f26-3583"><xref:System.Windows.Controls.Primitives.Popup> Außerdem definiert den Standardwert werden <xref:System.Windows.Visibility.Collapsed>, mit ähnlich Verhalten <xref:System.Windows.Controls.Primitives.Popup> und die abgeleiteten Klassen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3583"><xref:System.Windows.Controls.Primitives.Popup> also redefines the default value to be <xref:System.Windows.Visibility.Collapsed>, with similar resulting behavior for <xref:System.Windows.Controls.Primitives.Popup> and its derived classes.</span></span>  
  
<a name="dependencyPropertyInfo_Visibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8f26-3584">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="a8f26-3584">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8f26-3585">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="a8f26-3585">Identifier field</span></span>|<xref:System.Windows.UIElement.VisibilityProperty>|  
|<span data-ttu-id="a8f26-3586">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="a8f26-3586">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8f26-3587">Keiner</span><span class="sxs-lookup"><span data-stu-id="a8f26-3587">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8f26-3588">Das folgende Beispiel implementiert einen Handler, der auf zwei unterschiedliche benannten Schaltflächen verweist, die ein sich gegenseitig ausschließende-Paar in der Benutzeroberfläche werden sollen.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3588">The following example implements a handler that references two different named buttons that are intended to be a mutually exclusive pair in the user interface.</span></span> <span data-ttu-id="a8f26-3589">Vor dem Ausführen der eigentliche Programmlogik, die der Schaltfläche zugeordnet, die Schaltfläche selbst festgelegt ist, sollen <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>, und die anderen Schaltfläche im Paar nastaven NA hodnotu <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8f26-3589">Prior to running the actual program logic associated with the button, the button itself is set to be <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>, and the other button in the pair is set to <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[MediaElement_snip#UIElementVisibility](~/samples/snippets/csharp/VS_Snippets_Wpf/MediaElement_snip/CSharp/PlaybackExample.cs#uielementvisibility)]
 [!code-vb[MediaElement_snip#UIElementVisibility](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MediaElement_snip/VB/PlaybackExample.vb#uielementvisibility)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsVisible" />
        <altmember cref="T:System.Windows.Visibility" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.VisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.VisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8f26-3590">Bezeichnet die <see cref="P:System.Windows.UIElement.Visibility" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8f26-3590">Identifies the <see cref="P:System.Windows.UIElement.Visibility" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>