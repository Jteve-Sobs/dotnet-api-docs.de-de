<Type Name="UIElement" FullName="System.Windows.UIElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="65c62877f5e23150791d4056c11b1973b985cf02" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86697020" /></Metadata><TypeSignature Language="C#" Value="public class UIElement : System.Windows.Media.Visual, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UIElement extends System.Windows.Media.Visual implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.UIElement" />
  <TypeSignature Language="VB.NET" Value="Public Class UIElement&#xA;Inherits Visual&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class UIElement : System::Windows::Media::Visual, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <TypeSignature Language="F#" Value="type UIElement = class&#xA;    inherit Visual&#xA;    interface IInputElement&#xA;    interface IAnimatable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UIElement extends System.Windows.Media.Visual implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type UIElement = class&#xA;    inherit Visual&#xA;    interface IAnimatable&#xA;    interface IInputElement" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Visual</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Markup.UidProperty("Uid")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Markup.UidProperty("Uid")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c3662-101"><see cref="T:System.Windows.UIElement" /> ist eine Basisklasse für Implementierungen auf WPF-Kernebene, die auf WPF-Elementen (Windows Presentation Foundation) und grundlegenden Darstellungsmerkmalen aufbauen.</span><span class="sxs-lookup"><span data-stu-id="c3662-101"><see cref="T:System.Windows.UIElement" /> is a base class for WPF core level implementations building on Windows Presentation Foundation (WPF) elements and basic presentation characteristics.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-102"><xref:System.Windows.UIElement> stellt einen Ausgangspunkt für elementlayoutmerkmale bereit und macht auch virtuelle Methoden verfügbar, die von abgeleiteten Klassen überschrieben werden können, was das layoutrenderingverhalten des Elements und seiner untergeordneten Elemente beeinflussen kann.</span><span class="sxs-lookup"><span data-stu-id="c3662-102"><xref:System.Windows.UIElement> provides a starting point for element layout characteristics, and also exposes virtual methods that derived classes can override, which can influence the layout rendering behavior of the element and its child elements.</span></span>  
  
 <span data-ttu-id="c3662-103">Ein Großteil des Eingabe-und Fokus Verhaltens für Elemente im Allgemeinen ist auch in der- <xref:System.Windows.UIElement> Klasse definiert.</span><span class="sxs-lookup"><span data-stu-id="c3662-103">Much of the input and focusing behavior for elements in general is also defined in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="c3662-104">Dies schließt die Ereignisse für Tastatur-, Maus-und Stift Eingaben sowie zugehörige Status Eigenschaften ein.</span><span class="sxs-lookup"><span data-stu-id="c3662-104">This includes the events for keyboard, mouse and stylus input, and related status properties.</span></span> <span data-ttu-id="c3662-105">Viele dieser Ereignisse sind Routing Ereignisse, und viele der Eingabe bezogenen Ereignisse verfügen sowohl über eine bubblingerweiterungs Version als auch über eine tunnelingversion des Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="c3662-105">Many of these events are routed events, and many of the input-related events have both a bubbling routing version as well as a tunneling version of the event.</span></span> <span data-ttu-id="c3662-106">Diese paarweise vorkommenden Ereignisse sind in der Regel die Ereignisse, die von den Autoren gesteuert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-106">These paired events are typically the events of greatest interest to control authors.</span></span>  
  
 <span data-ttu-id="c3662-107"><xref:System.Windows.UIElement> umfasst auch APIs, die sich auf das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Ereignis Modell beziehen, einschließlich Methoden, die angegebene Routing Ereignisse, die aus einer Element Instanz stammen, auswerfen können.</span><span class="sxs-lookup"><span data-stu-id="c3662-107"><xref:System.Windows.UIElement> also includes APIs that relate to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] event model, including methods that can raise specified routed events that are sourced from an element instance.</span></span>  
  
 <span data-ttu-id="c3662-108">In Bezug auf die Architektur <xref:System.Windows.UIElement> kann als ungefähr gleichwertig mit einem Fenster Handle in der [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] Programmierung oder einem Element in der Programmierung angesehen werden [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="c3662-108">In terms of architecture, <xref:System.Windows.UIElement> can be considered roughly equivalent to a window handle in [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] programming, or an Element in [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] programming.</span></span> <span data-ttu-id="c3662-109"><xref:System.Windows.UIElement> ist ein Basiselement auf WPF-Kernebene.</span><span class="sxs-lookup"><span data-stu-id="c3662-109"><xref:System.Windows.UIElement> is a base element at the WPF core level.</span></span>  
  
 <span data-ttu-id="c3662-110">Ein <xref:System.Windows.UIElement> verfügt über die folgenden Funktionen, die speziell von der-Klasse definiert werden <xref:System.Windows.UIElement> :</span><span class="sxs-lookup"><span data-stu-id="c3662-110">A <xref:System.Windows.UIElement> has the following capabilities that are specifically defined by the <xref:System.Windows.UIElement> class:</span></span>  
  
-   <span data-ttu-id="c3662-111">Kann als untergeordnetes Element ( <xref:System.Windows.UIElement> abgeleitet von <xref:System.Windows.Media.Visual> , eine Grafikklasse auf hoher Ebene) dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-111">Can render as a child element (<xref:System.Windows.UIElement> derives from <xref:System.Windows.Media.Visual>, a high level graphics class)</span></span>  
  
-   <span data-ttu-id="c3662-112">Enthält Logik, die zum Anpassen möglicher untergeordneter Elemente eines verwendet wird <xref:System.Windows.UIElement> (wenn von einem Layoutsystem interpretiert).</span><span class="sxs-lookup"><span data-stu-id="c3662-112">Contains logic that is used to size and position possible child elements of a <xref:System.Windows.UIElement> (when interpreted by a layout system)</span></span>  
  
-   <span data-ttu-id="c3662-113">Kann auf Benutzereingaben (einschließlich der Steuerung, an die Eingaben gesendet werden, über die Behandlung von Ereignis Routing oder Routing von Befehlen) Antworten</span><span class="sxs-lookup"><span data-stu-id="c3662-113">Can respond to user input (including control of where input is getting sent to via their handling of event routing, or routing of commands)</span></span>  
  
-   <span data-ttu-id="c3662-114">Kann Routing Ereignisse, die eine Route durch die logische Elementstruktur bewegen, hervorrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-114">Can raise routed events that travel a route through the logical element tree</span></span>  
  
-   <span data-ttu-id="c3662-115">Unterstützt einige Aspekte des Animations Systems</span><span class="sxs-lookup"><span data-stu-id="c3662-115">Supports some aspects of the animation system</span></span>  
  
 <span data-ttu-id="c3662-116"><xref:System.Windows.FrameworkElement> ist die Implementierungs Klasse auf WPF-Frameworkebene, die auf aufbaut <xref:System.Windows.UIElement> und bestimmte Interaktionen mit der WPF-Frameworkebene hinzufügt.</span><span class="sxs-lookup"><span data-stu-id="c3662-116"><xref:System.Windows.FrameworkElement> is the WPF framework-level implementation class that builds on <xref:System.Windows.UIElement>, and adds specific interactions with the WPF framework level.</span></span> <span data-ttu-id="c3662-117"><xref:System.Windows.FrameworkElement> Hinzufügen und Definieren der folgenden Funktionen:</span><span class="sxs-lookup"><span data-stu-id="c3662-117"><xref:System.Windows.FrameworkElement> adds and defines the following capabilities:</span></span>  
  
-   <span data-ttu-id="c3662-118">Zusätzliche frameworkspezifische Layouteigenschaften</span><span class="sxs-lookup"><span data-stu-id="c3662-118">Additional framework-specific layout characteristics</span></span>  
  
-   <span data-ttu-id="c3662-119">Unterstützung für umfangreichere Metadatenberichte zu Eigenschaften</span><span class="sxs-lookup"><span data-stu-id="c3662-119">Support for richer metadata reporting on properties</span></span>  
  
-   <span data-ttu-id="c3662-120">Klassenspezifische Implementierung bestimmter Eingabe Basisklassen und angefügter Eigenschaften oder angehängter Ereignisse</span><span class="sxs-lookup"><span data-stu-id="c3662-120">Class-specific implementation of certain input base classes and their attached properties or attached events</span></span>  
  
-   <span data-ttu-id="c3662-121">Stilunterstützung</span><span class="sxs-lookup"><span data-stu-id="c3662-121">Style support</span></span>  
  
-   <span data-ttu-id="c3662-122">Weitere Animations Unterstützung</span><span class="sxs-lookup"><span data-stu-id="c3662-122">Further animation support</span></span>  
  
 <span data-ttu-id="c3662-123">Eine andere verknüpfte Klasse ist <xref:System.Windows.ContentElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-123">Another related class is <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="c3662-124">Die- <xref:System.Windows.ContentElement> Klasse implementiert viele der gleichen Member wie <xref:System.Windows.UIElement> , und der Unterschied zwischen diesen beiden Klassen muss mit der vorgesehenen Position im gesamten Inhalts Modell erfolgen.</span><span class="sxs-lookup"><span data-stu-id="c3662-124">The <xref:System.Windows.ContentElement> class implements many of the same members as does <xref:System.Windows.UIElement>; the difference between these two classes has to do with their intended place in the overall content model.</span></span> <span data-ttu-id="c3662-125">Eine <xref:System.Windows.UIElement> abgeleitete Klasse definiert in der Regel ein relativ rigides Inhalts Modell, d. h. es gibt Einschränkungen hinsichtlich der Elemente, die untergeordnete Elemente im Markup sein können.</span><span class="sxs-lookup"><span data-stu-id="c3662-125">A <xref:System.Windows.UIElement> derived class typically defines a relatively rigid content model, meaning that there are restrictions on what elements may be child elements in markup.</span></span> <span data-ttu-id="c3662-126">Möglicherweise gibt es Kapazität für die Aufnahme weniger restriktiver untergeordneter Inhalte in einer <xref:System.Windows.UIElement> , diese Kapazität wird jedoch in der Regel in den festgelegten Inhalts Eigenschaften zentralisiert.</span><span class="sxs-lookup"><span data-stu-id="c3662-126">There might be capacity for taking less restrictive child content in a <xref:System.Windows.UIElement>, but that capacity is typically centralized in designated content properties.</span></span> <span data-ttu-id="c3662-127">Eine <xref:System.Windows.ContentElement> abgeleitete Klasse ist in der Regel nicht so restriktiv, dass Sie Inhalte unterstützt, wie z. b. Dokumente im Fluss Format.</span><span class="sxs-lookup"><span data-stu-id="c3662-127">A <xref:System.Windows.ContentElement> derived class is typically not as restrictive about content, to support scenarios such as flow-format documents.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c3662-128"><xref:System.Windows.UIElement.Visibility%2A> State beeinflusst alle Eingaben, die von diesem Element verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-128"><xref:System.Windows.UIElement.Visibility%2A> state affects all input handling by that element.</span></span> <span data-ttu-id="c3662-129">Elemente, die nicht sichtbar sind, werden nicht an Treffer Tests beteiligt und empfangen keine Eingabeereignisse, auch wenn sich die Maus über dem Bereich befindet, in dem das Element angezeigt wird, wenn Sie sichtbar wären.</span><span class="sxs-lookup"><span data-stu-id="c3662-129">Elements that are not visible do not participate in hit testing and do not receive input events, even if the mouse is over the bounds where the element would be if were visible.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3662-130">Initialisiert eine neue Instanz der <see cref="T:System.Windows.UIElement" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="c3662-130">Initializes a new instance of the <see cref="T:System.Windows.UIElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-131">Das Erstellen einer neuen-Instanz, die tatsächlich vom Typ ist <xref:System.Windows.UIElement> , ist im Anwendungscode nicht üblich, da <xref:System.Windows.UIElement> ein Basiselement ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-131">Creating a new instance that is actually of type <xref:System.Windows.UIElement> is uncommon in application code, because <xref:System.Windows.UIElement> is a base element.</span></span> <span data-ttu-id="c3662-132">Siehe [Übersicht über Basiselemente](/dotnet/framework/wpf/advanced/base-elements-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-132">See [Base Elements Overview](/dotnet/framework/wpf/advanced/base-elements-overview).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3662-133">Fügt einen Routingereignishandler für ein bestimmtes Routingereignis hinzu, wobei der Handler der Handlerauflistung für das aktuelle Element hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-133">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHandler (routedEvent As RoutedEvent, handler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="c3662-134">Ein Bezeichner für das zu behandelnde Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-134">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="c3662-135">Ein Verweis auf die Handlerimplementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-135">A reference to the handler implementation.</span></span></param>
        <summary><span data-ttu-id="c3662-136">Fügt einen Routingereignishandler für ein bestimmtes Routingereignis hinzu, wobei der Handler der Handlerauflistung für das aktuelle Element hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-136">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-137">Sie können den gleichen Handler für das gleiche Ereignis mehrmals hinzufügen, ohne eine Ausnahme ausgelöst zu haben.</span><span class="sxs-lookup"><span data-stu-id="c3662-137">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="c3662-138">Der Handler wird jedoch tatsächlich mehrmals aufgerufen, wenn das Ereignis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-138">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="c3662-139">Berücksichtigen Sie daher, wie dieses Verhalten Nebeneffekte haben kann, die in ihrer Handlerimplementierung berücksichtigt werden sollten.</span><span class="sxs-lookup"><span data-stu-id="c3662-139">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="c3662-140">In der Regel verwenden Sie diese Methode, um die Implementierung des Add-Accessors für das [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] Ereignis Zugriffsmuster eines benutzerdefinierten Routing Ereignisses bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-140">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHandler (routedEvent As RoutedEvent, handler As Delegate, handledEventsToo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="uIElement.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="c3662-141">Ein Bezeichner für das zu behandelnde Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-141">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="c3662-142">Ein Verweis auf die Handlerimplementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-142">A reference to the handler implementation.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="c3662-143"><see langword="true" />, wenn der Handler registriert werden soll, sodass er selbst dann aufgerufen wird, wenn das Routingereignis in den zugehörigen Ereignisdaten als behandelt markiert ist, <see langword="false" />, wenn der Handler mit der Standardbedingung registriert werden soll, dass er nicht aufgerufen wird, wenn das Routingereignis bereits als behandelt markiert ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-143"><see langword="true" /> to register the handler such that it is invoked even when  the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span></span>  
  
<span data-ttu-id="c3662-144">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-144">The default is <see langword="false" />.</span></span>  
  
<span data-ttu-id="c3662-145">Legen Sie die Anforderung zum erneuten Behandeln eines Routingereignisses nicht gewohnheitsmäßig fest.</span><span class="sxs-lookup"><span data-stu-id="c3662-145">Do not routinely ask to rehandle a routed event.</span></span></param>
        <summary><span data-ttu-id="c3662-146">Fügt einen Routingereignishandler für ein bestimmtes Routingereignis hinzu, wobei der Handler der Handlerauflistung für das aktuelle Element hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-146">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span> <span data-ttu-id="c3662-147">Legen Sie <paramref name="handledEventsToo" /> auf <see langword="true" /> fest, damit der bereitgestellte Handler für ein Routingereignis aufgerufen wird, das bereits von einem anderen Element auf der Ereignisroute als behandelt markiert wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-147">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-148">Die praktische Verarbeitung von Eingabe Ereignissen auf niedriger Ebene ist eine komplexe Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="c3662-148">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="c3662-149">Viele Steuerelemente implementieren Verhalten, bei dem ein bestimmtes Ereignis als behandelt markiert ist und durch ein weiteres intuitives Ereignis ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-149">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="c3662-150">Im allgemeinen markiert ein Steuerelement nur ein Platt Form Eingabe Ereignis als behandelt, wenn es dafür eine Entwurfs Absicht gibt.</span><span class="sxs-lookup"><span data-stu-id="c3662-150">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="c3662-151">In bestimmten Szenarien ist es möglicherweise nicht sinnvoll, die jeweilige Behandlung des Eingabe Ereignisses zu beachten.</span><span class="sxs-lookup"><span data-stu-id="c3662-151">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="c3662-152">In diesen Szenarios ist die Registrierung von Handlern bei `handledEventsToo` wie `true` angemessen.</span><span class="sxs-lookup"><span data-stu-id="c3662-152">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="c3662-153">Dies sollte jedoch nicht regelmäßig durchzuführen sein.</span><span class="sxs-lookup"><span data-stu-id="c3662-153">But you should not do this routinely.</span></span> <span data-ttu-id="c3662-154">Das Aufrufen von Handlern als Reaktion auf alle Ereignisse, auch wenn Sie behandelt werden, erschwert ihre eigene Logik zur Anwendungs Ereignisverarbeitung.</span><span class="sxs-lookup"><span data-stu-id="c3662-154">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="c3662-155">Wenn die Handlerlogik beträchtlich ist, kann die Leistung beeinträchtigt werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-155">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="c3662-156">Sie sollten die Verwendung von Anfüge Handlern für bereits behandelte Ereignisse in Situationen reservieren, in denen Sie bereits während des Entwicklungsprozesses erkannt haben, dass bestimmte Steuerelemente Ereignisse verarbeiten, die Sie mit der Anwendungslogik noch verarbeiten möchten.</span><span class="sxs-lookup"><span data-stu-id="c3662-156">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="c3662-157">Ein weiteres Verfahren, um das Verhalten der Klassen Behandlung für bestimmte Kombinationen von Ereignis Steuerelementen zu vermeiden, besteht darin, die Vorschau Alternative dieses Ereignisses zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="c3662-157">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="c3662-158">Wenn z <xref:System.Windows.UIElement.MouseLeftButtonDown> . b. als behandelt durch Klassen Behandlung gekennzeichnet ist, können Sie stattdessen möglicherweise Handler für hinzufügen <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-158">For example, if <xref:System.Windows.UIElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="c3662-159">Sie können den gleichen Handler für das gleiche Ereignis mehrmals hinzufügen, ohne eine Ausnahme ausgelöst zu haben.</span><span class="sxs-lookup"><span data-stu-id="c3662-159">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="c3662-160">Der Handler wird jedoch tatsächlich mehrmals aufgerufen, wenn das Ereignis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-160">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="c3662-161">Berücksichtigen Sie daher, wie dieses Verhalten Nebeneffekte haben kann, die in ihrer Handlerimplementierung berücksichtigt werden sollten.</span><span class="sxs-lookup"><span data-stu-id="c3662-161">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="c3662-162">In der Regel verwenden Sie diese Methode, um die Implementierung des Add-Accessors für das [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] Ereignis Zugriffsmuster eines benutzerdefinierten Routing Ereignisses bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-162">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-163">Im folgenden Beispiel wird ein Handler implementiert, der für das- <xref:System.Windows.FrameworkElement.Initialized> Ereignis auf einer Seite aufgerufen wird, die mithilfe von einen definierten Handler an eines der benannten Elemente auf der Seite anfügt `handledEventsToo` `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-163">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="c3662-164">Dieser Handler wird auch dann aufgerufen, wenn ein anderes Element entlang der Route die freigegebenen Ereignisdaten als behandelt markiert hat, bevor das Behandlungs Element in der Route erreicht wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-164">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AddToEventRoute : System.Windows.EventRoute * System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.AddToEventRoute (route, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route"><span data-ttu-id="c3662-165">Die Ereignisroute, der Handler hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-165">The event route that handlers are added to.</span></span></param>
        <param name="e"><span data-ttu-id="c3662-166">Die Ereignisdaten, mit denen die Handler hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-166">The event data that is used to add the handlers.</span></span> <span data-ttu-id="c3662-167">Diese Methode verwendet die <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />-Eigenschaft der Ereignisdaten, um die Handler zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-167">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the event data to create the handlers.</span></span></param>
        <summary><span data-ttu-id="c3662-168">Fügt der angegebenen <see cref="T:System.Windows.EventRoute" /> Handler für die aktuelle Auflistung von <see cref="T:System.Windows.UIElement" />-Ereignishandlern hinzu.</span><span class="sxs-lookup"><span data-stu-id="c3662-168">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.UIElement" /> event handler collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-169">Diese Methode kann von Inhalts Host Elementen verwendet werden (entweder von, die implementieren, <xref:System.Windows.IContentHost> oder, die nicht sind), um Handler für untergeordnete Elemente hinzuzufügen <xref:System.Windows.EventRoute> .</span><span class="sxs-lookup"><span data-stu-id="c3662-169">This method can be used by content host elements (either those that implement <xref:System.Windows.IContentHost> or those that don't) to add handlers for child elements to the <xref:System.Windows.EventRoute>.</span></span> <span data-ttu-id="c3662-170">Dies ist normalerweise nicht erforderlich, <xref:System.Windows.UIElement> da Handler für alle Elemente, die in einer abgeschlossenen logischen Struktur gefunden werden, automatisch hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-170">Ordinarily, this is not required for <xref:System.Windows.UIElement>, because handlers are automatically added for all elements found in a completed logical tree.</span></span> <span data-ttu-id="c3662-171">In einigen Fällen, in denen <xref:System.Windows.ContentElement> und <xref:System.Windows.UIElement> in Vorlagen Strukturen gemischt sind, müssen jedoch beteiligte Elemente, die aus der Vorlage stammen, einer Route hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-171">However, in some cases where <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are mixed in templated trees, intervening elements that came from the template need to be added to a route.</span></span> <span data-ttu-id="c3662-172"><xref:System.Windows.ContentElement>Und <xref:System.Windows.UIElement> unterstützen eine Version dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="c3662-172">Both <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> support a version of this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.UIElement.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-173">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob dieses Element als Ziel eines Drag &amp; Drop-Vorgangs verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="c3662-173">Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.</span></span>  <span data-ttu-id="c3662-174">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-174">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-175"><see langword="true" />, wenn dieses Element als Ziel eines Drag &amp; Drop-Vorgangs verwendet werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-175"><see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c3662-176">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-176">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-177">Drag & amp; Drop-Vorgänge sind standardmäßig nicht aktiviert und müssen durch Festlegen von auf absichtlich aktiviert werden <xref:System.Windows.UIElement.AllowDrop%2A> `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-177">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.UIElement.AllowDrop%2A> to `true`.</span></span> <span data-ttu-id="c3662-178">Über diese grundlegende Einstellung hinaus ist das Drag & Drop-Verhalten vollständig Implementierungs spezifisch und wird nicht von <xref:System.Windows.UIElement> oder einer anderen Basiselement Klasse definiert.</span><span class="sxs-lookup"><span data-stu-id="c3662-178">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.UIElement> or any other base element class.</span></span> <span data-ttu-id="c3662-179">Bestimmte Steuerelemente, z <xref:System.Windows.Controls.RichTextBox> . b., verfügen über ein Standardverhalten.</span><span class="sxs-lookup"><span data-stu-id="c3662-179">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior.</span></span> <span data-ttu-id="c3662-180">Weitere Informationen zum Ziehen und ablegen finden Sie unter [Übersicht über Drag](/dotnet/framework/wpf/advanced/drag-and-drop-overview)& Drop.</span><span class="sxs-lookup"><span data-stu-id="c3662-180">For more information on drag and drop, see [Drag and Drop Overview](/dotnet/framework/wpf/advanced/drag-and-drop-overview).</span></span>  
  
 <span data-ttu-id="c3662-181"><xref:System.Windows.FrameworkElement> überschreibt die Metadaten für diese Abhängigkeits Eigenschaft in der Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-181"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="c3662-182">Insbesondere legt <xref:System.Windows.FrameworkElement> Diese Eigenschaft fest, um die Vererbung von Eigenschafts Werten zuzulassen ( <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> `true` in Metadaten).</span><span class="sxs-lookup"><span data-stu-id="c3662-182">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="c3662-183">Die Vererbung von Eigenschafts Werten in diesem Kontext bedeutet, dass, wenn untergeordnete Elemente vorhanden sind, für die kein anderer Wert <xref:System.Windows.UIElement.AllowDrop%2A> durch lokale Werte oder Stile zugewiesen ist, der Wert des nächsten übergeordneten Elements, dem dieser Wert zugewiesen wird (auch in Stilen, Standardwerte oder einem lokalen Wert), der Wert des übergeordneten Elements allen zuvor nicht zugewiesenen untergeordneten Elementen vom Eigenschaften System zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-183">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from the parent element will be assigned to all previously unassigned child elements by the property system.</span></span> <span data-ttu-id="c3662-184">In der Praxis bedeutet dies, dass Sie angeben können, ob Drop-Vorgänge für das Stamm Element zulässig sind, und dass dieser Wert an alle untergeordneten Elemente weitergegeben wird, die nicht explizit als zugewiesen wurden `false` .</span><span class="sxs-lookup"><span data-stu-id="c3662-184">In practice this means that you can specify whether to allow drop operations at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-185">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-185">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-186">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-186">Identifier field</span></span>|<xref:System.Windows.UIElement.AllowDropProperty>|  
|<span data-ttu-id="c3662-187">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-187">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-188">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-188">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c3662-189">Im folgenden Markup Beispiel wird die- <xref:System.Windows.UIElement.AllowDrop%2A> Eigenschaft `true` mithilfe eines-Attributs für ein festgelegt, und einige andere verknüpfte Eigenschaften, die <xref:System.Windows.Controls.TextBox> in Aggregate aktiviert werden, ermöglichen das <xref:System.Windows.Controls.TextBox> Ziel eines mehrzeiligen Text Datenobjekts, wenn es gezogen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-189">The following markup example sets the <xref:System.Windows.UIElement.AllowDrop%2A> property `true` using an attribute on a <xref:System.Windows.Controls.TextBox>, as well as setting some other related properties that in aggregate enable that <xref:System.Windows.Controls.TextBox> to be the target of a multiline text data object when it is dragged in.</span></span> <span data-ttu-id="c3662-190">Das komplette Beispiel finden Sie unter [Beispiel zum Laden einer](https://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7)gelöschten Datei.</span><span class="sxs-lookup"><span data-stu-id="c3662-190">For the complete sample, see [Load a Dropped File Sample](https://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7).</span></span>  
  
 [!code-xaml[DragDrop_DropOpenTextFile#UIElementAllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DropOpenTextFile/CS/window1.xaml#uielementallowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowDropProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AllowDropProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-191">Bezeichnet die <see cref="P:System.Windows.UIElement.AllowDrop" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-191">Identifies the <see cref="P:System.Windows.UIElement.AllowDrop" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3662-192">Wendet eine Animation auf eine angegebene Abhängigkeitseigenschaft für dieses Element an.</span><span class="sxs-lookup"><span data-stu-id="c3662-192">Applies an animation to a specified dependency property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-193">Diese Methode ist versiegelt und kann nicht überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-193">This method is sealed and cannot be overridden.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="uIElement.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="c3662-194">Der Bezeichner für die zu animierende Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-194">The identifier for the property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="c3662-195">Die Animationsuhr, die die Animation steuert und deklariert.</span><span class="sxs-lookup"><span data-stu-id="c3662-195">The animation clock that controls and declares the animation.</span></span></param>
        <summary><span data-ttu-id="c3662-196">Wendet eine Animation auf eine angegebene Abhängigkeitseigenschaft für dieses Element an.</span><span class="sxs-lookup"><span data-stu-id="c3662-196">Applies an animation to a specified dependency property on this element.</span></span> <span data-ttu-id="c3662-197">Alle vorhandenen Animationen werden beendet und durch die neue Animation ersetzt.</span><span class="sxs-lookup"><span data-stu-id="c3662-197">Any existing animations are stopped and replaced with the new animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-198">Um eine Animation aus einer Eigenschaft zu entfernen, geben Sie den Bezeichner für diese Eigenschaft als an, `dp` und geben Sie `clock` als an `null` .</span><span class="sxs-lookup"><span data-stu-id="c3662-198">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="c3662-199">Dadurch wird die Animation entfernt, und die animierte Eigenschaft wird auf ihren Basiswert festgelegt.</span><span class="sxs-lookup"><span data-stu-id="c3662-199">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="c3662-200">Die ursprünglich zugeordnete Animations Uhr wird jedoch nicht beendet.</span><span class="sxs-lookup"><span data-stu-id="c3662-200">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="c3662-201">Alle anderen Animationen, die dieser Uhr zugewiesen sind, werden weiterhin ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="c3662-201">Any other animations assigned to that clock will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-202">Im folgenden Beispiel wird auf eine <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` bestimmte zeitliche Animation angewendet, indem aufgerufen wird <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-202">In the following example, a <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` has a particular timing animation applied to it by calling <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/ClockControllerSpeedRatioExample.cs#uielementapplyanimationclock)]
 [!code-vb[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/clockcontrollerspeedratioexample.vb#uielementapplyanimationclock)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock, handoffBehavior As HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="uIElement.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="c3662-203">Die zu animierende Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-203">The property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="c3662-204">Die Animationsuhr, die die Animation steuert und deklariert.</span><span class="sxs-lookup"><span data-stu-id="c3662-204">The animation clock that controls and declares the animation.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="c3662-205">Ein Wert aus der Enumeration.</span><span class="sxs-lookup"><span data-stu-id="c3662-205">A value of the enumeration.</span></span> <span data-ttu-id="c3662-206">Die Standardeinstellung ist <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, durch die eine vorhandene Animation beendet und durch die neue ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-206">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span></span></param>
        <summary><span data-ttu-id="c3662-207">Wendet eine Animation auf eine angegebene Abhängigkeitseigenschaft für dieses Element an, wobei angegeben werden kann, was geschieht, wenn die Eigenschaft bereits eine laufende Animation aufweist.</span><span class="sxs-lookup"><span data-stu-id="c3662-207">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-208">Um eine Animation aus einer Eigenschaft zu entfernen, geben Sie den Bezeichner für diese Eigenschaft als an, `dp` und geben Sie `clock` als an `null` .</span><span class="sxs-lookup"><span data-stu-id="c3662-208">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="c3662-209">Dadurch wird die Animation entfernt, und die animierte Eigenschaft wird auf ihren Basiswert festgelegt.</span><span class="sxs-lookup"><span data-stu-id="c3662-209">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="c3662-210">Die ursprünglich zugeordnete Animations Uhr wird jedoch nicht beendet.</span><span class="sxs-lookup"><span data-stu-id="c3662-210">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="c3662-211">Alle anderen Animationen, die dieser Uhr zugewiesen sind, werden weiterhin ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="c3662-211">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCaptured : bool" Usage="System.Windows.UIElement.AreAnyTouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-212">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-212">Gets a value that indicates whether at least one touch is captured to this element.</span></span></summary>
        <value><span data-ttu-id="c3662-213"><see langword="true" />, wenn mindestens eine Fingereingabe für dieses Element erfasst wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-213"><see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-214">Bezeichnet die <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-214">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCapturedWithin : bool" Usage="System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-215">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-215">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="c3662-216"><see langword="true" />, wenn mindestens eine Fingereingabe für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-216"><see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-217">Bezeichnet die <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-217">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesDirectlyOver : bool" Usage="System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-218">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät über diesem Element gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-218">Gets a value that indicates whether at least one touch is pressed over this element.</span></span></summary>
        <value><span data-ttu-id="c3662-219"><see langword="true" />, wenn mindestens eine Fingereingabe auf diesem Element registriert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-219"><see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-220">Bezeichnet die <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-220">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesOver : bool" Usage="System.Windows.UIElement.AreAnyTouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-221">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät auf diesem Element oder seinen untergeordneten Elementen in der visuellen Struktur gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-221">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="c3662-222"><see langword="true" />, wenn mindestens eine Fingereingabe auf diesem Element oder den untergeordneten Elementen in der visuellen Struktur erfasst wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-222"><see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-223">Bezeichnet die <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-223">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arrange">
      <MemberSignature Language="C#" Value="public void Arrange (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Arrange(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Arrange (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Arrange(System::Windows::Rect finalRect);" />
      <MemberSignature Language="F#" Value="member this.Arrange : System.Windows.Rect -&gt; unit" Usage="uIElement.Arrange finalRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect"><span data-ttu-id="c3662-224">Die endgültige Größe, die das übergeordnete Element für das untergeordnete Element berechnet, als eine <see cref="T:System.Windows.Rect" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-224">The final size that the parent computes for the child element, provided as a <see cref="T:System.Windows.Rect" /> instance.</span></span></param>
        <summary><span data-ttu-id="c3662-225">Positioniert untergeordnete Elemente und bestimmt die Größe für ein <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-225">Positions child elements and determines a size for a <see cref="T:System.Windows.UIElement" />.</span></span> <span data-ttu-id="c3662-226">Übergeordnete Elemente rufen diese Methode aus ihrer <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" />-Implementierung (oder einer Entsprechung auf WPF-Frameworkebene) auf, um eine rekursive Layoutaktualisierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-226">Parent elements call this method from their <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> implementation (or a WPF framework-level equivalent) to form a recursive layout update.</span></span> <span data-ttu-id="c3662-227">Diese Methode stellt die zweite Übergabe einer Layoutaktualisierung dar.</span><span class="sxs-lookup"><span data-stu-id="c3662-227">This method constitutes the second pass of a layout update.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-228">Bei Elementen, die auf der WPF-Frameworkebene ausgeführt werden, sollte das Verhalten von <xref:System.Windows.UIElement.Arrange%2A> nicht (und kann nicht geändert werden).</span><span class="sxs-lookup"><span data-stu-id="c3662-228">For WPF framework-level element deriving scenarios, behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="c3662-229">Stattdessen sollten Sie die- <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> Implementierung in der Klasse überschreiben.</span><span class="sxs-lookup"><span data-stu-id="c3662-229">Instead, you should override the <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation in your class.</span></span> <span data-ttu-id="c3662-230">Ihre <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> Implementierung wird intern von <xref:System.Windows.UIElement.Arrange%2A> als Teil der standardmäßigen WPF-Frameworkebene aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-230">Your <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="c3662-231">Ihre <xref:System.Windows.UIElement.ArrangeCore%2A> Implementierung sollte auch <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> für jedes untergeordnete Element aufgerufen werden, wenn es über untergeordnete Elemente verfügt.</span><span class="sxs-lookup"><span data-stu-id="c3662-231">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> on each child element, if it has child elements.</span></span>  
  
 <span data-ttu-id="c3662-232">Bei WPF-Elementen, die auf der kernebenenebene abgeleitet werden, sollte das Verhalten für <xref:System.Windows.UIElement.Arrange%2A> nicht geändert werden (und nicht, wenn Sie Schatten).</span><span class="sxs-lookup"><span data-stu-id="c3662-232">For WPF core-level element deriving scenarios, the behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="c3662-233">Stattdessen sollten Sie <xref:System.Windows.UIElement.ArrangeCore%2A> in der Klasse überschreiben.</span><span class="sxs-lookup"><span data-stu-id="c3662-233">Instead, you should override <xref:System.Windows.UIElement.ArrangeCore%2A> in your class.</span></span> <span data-ttu-id="c3662-234">Ihre <xref:System.Windows.UIElement.ArrangeCore%2A> Implementierung wird intern von <xref:System.Windows.UIElement.Arrange%2A> als Teil der standardmäßigen WPF-Frameworkebene aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-234">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="c3662-235">Dabei wird jedoch davon ausgegangen, dass Sie das Layout der WPF-Frameworkebene und das zugehörige Layoutsystem verwenden. Dies ist häufig nicht der Fall, wenn Sie Elemente auf WPF-Kern Ebene von der <xref:System.Windows.UIElement> Basiselement Klasse ableiten.</span><span class="sxs-lookup"><span data-stu-id="c3662-235">However, this assumes you are using WPF framework-level layout and its layout system, which is often not the case if you are specifically deriving elements at the WPF core-level from the <xref:System.Windows.UIElement> base element class.</span></span> <span data-ttu-id="c3662-236">Ihre <xref:System.Windows.UIElement.ArrangeCore%2A> Implementierung sollte auch <xref:System.Windows.UIElement.Arrange%2A> für jedes untergeordnete Element aufgerufen werden, wenn es über untergeordnete Elemente verfügt.</span><span class="sxs-lookup"><span data-stu-id="c3662-236">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.UIElement.Arrange%2A> on each child element, if it has child elements.</span></span> <span data-ttu-id="c3662-237">Beachten Sie, dass das WPF-kernelebenenszenario impliziert, dass Sie keine <xref:System.Windows.FrameworkElement> abgeleitete Klasse verwenden, da die-Klasse <xref:System.Windows.FrameworkElement> versiegelt ist <xref:System.Windows.FrameworkElement.ArrangeCore%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-237">Note that the WPF core-level scenario implies that you are not using a <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span>  
  
 <span data-ttu-id="c3662-238">Die Berechnung der layoutpositionierung auf WPF-Frameworkebene in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] besteht aus einem <xref:System.Windows.UIElement.Measure%2A> -und einem- <xref:System.Windows.UIElement.Arrange%2A> Rückruf.</span><span class="sxs-lookup"><span data-stu-id="c3662-238">Computation of WPF framework-level layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] consists of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="c3662-239">Während des <xref:System.Windows.UIElement.Measure%2A> Aufrufes bestimmt das Layoutsystem die Größenanforderungen eines Elements mit einem bereitgestellten <xref:System.Windows.Size> `availableSize` Argument ().</span><span class="sxs-lookup"><span data-stu-id="c3662-239">During the <xref:System.Windows.UIElement.Measure%2A> call, the layout system determines an element's size requirements using a provided <xref:System.Windows.Size> (`availableSize`) argument.</span></span> <span data-ttu-id="c3662-240">Während des <xref:System.Windows.UIElement.Arrange%2A> Aufrufes schließt das Layoutsystem die Größe und Position des Begrenzungs Felds eines Elements ab.</span><span class="sxs-lookup"><span data-stu-id="c3662-240">During the <xref:System.Windows.UIElement.Arrange%2A> call, the layout system finalizes the size and position of an element's bounding box.</span></span>  <span data-ttu-id="c3662-241">Weitere Informationen finden Sie unter [Layout](/dotnet/framework/wpf/advanced/layout).</span><span class="sxs-lookup"><span data-stu-id="c3662-241">For more information, see [Layout](/dotnet/framework/wpf/advanced/layout).</span></span>  
  
 <span data-ttu-id="c3662-242">`availableSize` kann eine beliebige Zahl zwischen 0 (null) und unendlich sein.</span><span class="sxs-lookup"><span data-stu-id="c3662-242">`availableSize` can be any number from zero to infinity.</span></span> <span data-ttu-id="c3662-243">Elemente, die angelegt werden sollen, geben das erforderliche minimal <xref:System.Windows.Size> über den- `availableSize` Parameter zurück.</span><span class="sxs-lookup"><span data-stu-id="c3662-243">Elements to be laid out return the minimum <xref:System.Windows.Size> they require through the `availableSize` parameter.</span></span>  
  
 <span data-ttu-id="c3662-244">Wenn ein Layout zum ersten Mal instanziiert wird, empfängt es immer einen- <xref:System.Windows.UIElement.Measure%2A> Rückruf <xref:System.Windows.UIElement.Arrange%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-244">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="c3662-245">Nach dem ersten Layoutdurchlauf wird jedoch möglicherweise ein- <xref:System.Windows.UIElement.Arrange%2A> Rückruf ohne einen empfangen <xref:System.Windows.UIElement.Measure%2A> . Dies kann vorkommen, wenn eine Eigenschaft, die nur Auswirkungen hat, <xref:System.Windows.UIElement.Arrange%2A> geändert wird (z. b. die Ausrichtung) oder wenn das übergeordnete Element einen <xref:System.Windows.UIElement.Arrange%2A> ohne einen empfängt <xref:System.Windows.UIElement.Measure%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-245">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="c3662-246">Durch einen-Befehl <xref:System.Windows.UIElement.Measure%2A> wird ein-Befehl automatisch ungültig <xref:System.Windows.UIElement.Arrange%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-246">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="c3662-247">Layoutaktualisierungen werden in der Regel asynchron (zu einem vom Layoutsystem festgelegten Zeitpunkt) durchführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-247">Layout updates generally occur asynchronously (at a time determined by the layout system).</span></span> <span data-ttu-id="c3662-248">Ein Element reflektiert möglicherweise nicht sofort Änderungen an Eigenschaften, die die Größe des Elements beeinflussen (z <xref:System.Windows.FrameworkElement.Width%2A> . b.).</span><span class="sxs-lookup"><span data-stu-id="c3662-248">An element might not immediately reflect changes to properties that affect element sizing (such as <xref:System.Windows.FrameworkElement.Width%2A>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c3662-249">Layoutaktualisierungen können mithilfe der-Methode erzwungen werden <xref:System.Windows.UIElement.UpdateLayout%2A> . das Aufrufen dieser Funktion ist jedoch nicht empfehlenswert, da Sie in der Regel unnötig ist und zu einer schlechten Leistung führen kann.</span><span class="sxs-lookup"><span data-stu-id="c3662-249">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method; however, calling this function is not recommended, as it is usually unnecessary and can cause poor performance.</span></span> <span data-ttu-id="c3662-250">In vielen Fällen, in denen der Aufruf von <xref:System.Windows.UIElement.UpdateLayout%2A> sinnvoll ist, verarbeitet das Layoutsystem wahrscheinlich bereits Updates.</span><span class="sxs-lookup"><span data-stu-id="c3662-250">In many situations where calling <xref:System.Windows.UIElement.UpdateLayout%2A> might be appropriate, the layout system will probably already be processing updates.</span></span> <span data-ttu-id="c3662-251">Das Layoutsystem kann Layoutänderungen auf eine Weise verarbeiten, die alle erforderlichen Updates als Teil eines Pakets optimieren kann.</span><span class="sxs-lookup"><span data-stu-id="c3662-251">The layout system can process layout changes in a manner that can optimize all necessary updates as part of a package.</span></span>  
  
 <span data-ttu-id="c3662-252">Das Layoutsystem speichert zwei separate Warteschlangen mit ungültigen Layouts, eine für <xref:System.Windows.UIElement.Measure%2A> und eine für <xref:System.Windows.UIElement.Arrange%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-252">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="c3662-253">Die layoutwarteschlange wird basierend auf der Reihenfolge der Elemente in der visuellen Struktur sortiert.</span><span class="sxs-lookup"><span data-stu-id="c3662-253">The layout queue is sorted based upon the order of elements in the visual tree.</span></span> <span data-ttu-id="c3662-254">Elemente oberhalb der Struktur befinden sich am Anfang der Warteschlange, um redundante Layouts zu vermeiden, die durch wiederholte Änderungen in den übergeordneten Elementen verursacht werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-254">Elements higher in the tree are at the top of the queue, in order to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="c3662-255">Doppelte Einträge werden automatisch aus der Warteschlange entfernt, und Elemente werden automatisch aus der Warteschlange entfernt, wenn Sie bereits gültig sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-255">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already valid.</span></span>  
  
 <span data-ttu-id="c3662-256">Beim Aktualisieren des Layouts <xref:System.Windows.UIElement.Measure%2A> wird die Warteschlange zuerst geleert, gefolgt von der <xref:System.Windows.UIElement.Arrange%2A> Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="c3662-256">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="c3662-257">Ein Element in der <xref:System.Windows.UIElement.Arrange%2A> Warteschlange wird nie angeordnet, wenn ein Element in der <xref:System.Windows.UIElement.Measure%2A> Warteschlange vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-257">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeCore">
      <MemberSignature Language="C#" Value="protected virtual void ArrangeCore (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ArrangeCore(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ArrangeCore (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ArrangeCore(System::Windows::Rect finalRect);" />
      <MemberSignature Language="F#" Value="abstract member ArrangeCore : System.Windows.Rect -&gt; unit&#xA;override this.ArrangeCore : System.Windows.Rect -&gt; unit" Usage="uIElement.ArrangeCore finalRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect"><span data-ttu-id="c3662-258">Der letzte Bereich im übergeordneten Element, den das Element verwenden soll, um sich selbst und seine untergeordneten Elemente anzuordnen.</span><span class="sxs-lookup"><span data-stu-id="c3662-258">The final area within the parent that element should use to arrange itself and its child elements.</span></span></param>
        <summary><span data-ttu-id="c3662-259">Definiert die Vorlage für die Definition zum Anordnen des Layouts auf der WPF-Kernebene.</span><span class="sxs-lookup"><span data-stu-id="c3662-259">Defines the template for WPF core-level arrange layout definition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c3662-260">Das Überschreiben dieser Methode ist nur geeignet, wenn Sie auf der WPF-Kernebene ableiten und nicht das Layoutsystem der WPF-Frameworkebene und die <xref:System.Windows.FrameworkElement> abgeleitete Klasse verwenden, da die-Klasse <xref:System.Windows.FrameworkElement> versiegelt ist <xref:System.Windows.FrameworkElement.ArrangeCore%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-260">Overriding this method is only appropriate if you are deriving at the WPF core-level, and you are not using the WPF framework-level layout system and <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span> <span data-ttu-id="c3662-261">Wenn Sie das Layoutsystem auf WPF-Frameworkebene verwenden, ist die entsprechende Methode zum Überschreiben für das klassenspezifische layoutanordnungs Verhalten <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-261">If you are using the WPF framework-level layout system, the appropriate method to override for class-specific layout arrange behavior is <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-262"><xref:System.Windows.UIElement.ArrangeCore%2A> Implementierungen sollten die Basis Implementierung aufrufen, um eine Größe zurückzugeben, anschließend die- <xref:System.Windows.UIElement.Arrange%2A> Methode der einzelnen sichtbaren untergeordneten Elemente aufzurufen und die von diesen Aufrufen zurückgegebenen Größen <xref:System.Windows.UIElement.Arrange%2A> mit der Größe der Basis Implementierung abzugleichen.</span><span class="sxs-lookup"><span data-stu-id="c3662-262"><xref:System.Windows.UIElement.ArrangeCore%2A> implementations should call the base implementation to return a size, then call the <xref:System.Windows.UIElement.Arrange%2A> method of each visible child element, and reconcile the sizes returned by these <xref:System.Windows.UIElement.Arrange%2A> calls with the size of the base implementation.</span></span> <span data-ttu-id="c3662-263">Die Logik für den Abgleich Aspekt einer- <xref:System.Windows.UIElement.ArrangeCore%2A> Implementierung kann variieren, je nach Layoutmerkmalen des Elements.</span><span class="sxs-lookup"><span data-stu-id="c3662-263">The logic for the reconciliation aspect of a <xref:System.Windows.UIElement.ArrangeCore%2A> implementation might vary, depending on the layout characteristics of your element.</span></span> <span data-ttu-id="c3662-264">In der folgenden Beispiel Vorlage `VisualChildren` ist eine hypothetische Eigenschaft, die das Element zum Auflisten des Inhalts definieren kann. <xref:System.Windows.UIElement> definiert keine Inhalts Auflistungen auf dieser Ebene. die Architektur der WPF-Frameworkebene führt das Inhalts Verhalten auf abgeleitete Elemente wie z. b. bestimmte Steuerelemente oder Steuerelement Basisklassen aus.</span><span class="sxs-lookup"><span data-stu-id="c3662-264">In the following example template, `VisualChildren` is a hypothetical property that your element might define to help enumerate its content; <xref:System.Windows.UIElement> does not define content collections at this level, the WPF framework-level architecture defers content behavior to derived elements such as specific controls or control base classes.</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementarrangeoverride)]
 [!code-vb[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementarrangeoverride)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c3662-265">Wenn Sie Elemente auf der WPF-kernstufe entwickeln, sollten Sie diese Methode überschreiben, um dem WPF-Element auf der Kern Ebene ein eindeutiges anordnen-Layoutverhalten zu ermöglichen oder um geeignete Layoutentscheidungen über die untergeordneten Elemente der Elemente zu treffen.</span><span class="sxs-lookup"><span data-stu-id="c3662-265">If you are developing elements at the WPF core level,you should override this method to give your WPF core-level element a unique arrange layout behavior, or to make proper layout decisions about the child elements of your elements.</span></span> <span data-ttu-id="c3662-266">Eine außer Kraft Setzung ist möglicherweise erforderlich, wenn diese untergeordneten Elemente von einem definierten Muster wie z. b. nicht erkennbar sind <see cref="T:System.Windows.Controls.ItemCollection" /> .</span><span class="sxs-lookup"><span data-stu-id="c3662-266">An override might be necessary if those child elements are not recognizable from a defined pattern such as an <see cref="T:System.Windows.Controls.ItemCollection" />.</span></span>  
  
<span data-ttu-id="c3662-267">Ein übergeordnetes Element muss die klassenspezifischen <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> für jedes untergeordnete Element aufzurufen, da diese untergeordneten Elemente andernfalls nicht gerendert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-267">A parent element must call the class-specific <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> on each child element, otherwise those child elements are not rendered.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3662-268">Startet eine Animation für eine angegebene animierte Eigenschaft dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="c3662-268">Starts an animation for a specified animated property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="uIElement.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="c3662-269">Die zu animierende Eigenschaft, die als Bezeichner einer Abhängigkeitseigenschaft angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-269">The property to animate, which is specified as a dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="c3662-270">Die Zeitachse der zu startenden Animation.</span><span class="sxs-lookup"><span data-stu-id="c3662-270">The timeline of the animation to start.</span></span></param>
        <summary><span data-ttu-id="c3662-271">Startet eine Animation für eine angegebene animierte Eigenschaft dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="c3662-271">Starts an animation for a specified animated property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-272">Wenn Sie überprüfen, ob eine Eigenschaft animiert ist, beachten Sie, dass die Animation beginnt und als animiert eingestuft wird, wenn der erste Frame, der über den nicht animierten Startpunkt hinausgeht, gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-272">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="c3662-273">Wenn <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> für den `animation` `null` Wert hat, werden alle aktuellen Animationen entfernt und der aktuelle Wert der-Eigenschaft gespeichert.</span><span class="sxs-lookup"><span data-stu-id="c3662-273">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="c3662-274">Wenn der gesamte `animation` Wert ist `null` , werden alle Animationen aus der Eigenschaft entfernt, und der Eigenschafts Wert wird auf den Basiswert zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="c3662-274">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="c3662-275">Die ursprünglich zugeordnete Animations Zeitachse wird jedoch nicht beendet.</span><span class="sxs-lookup"><span data-stu-id="c3662-275">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="c3662-276">Alle anderen Animationen, die dieser Zeitachse zugewiesen sind, werden weiterhin ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="c3662-276">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-277">Im folgenden Beispiel wird eine Animation erstellt, zugewiesen und dann aufgerufen, <xref:System.Windows.UIElement.BeginAnimation%2A> um Sie zu starten.</span><span class="sxs-lookup"><span data-stu-id="c3662-277">The following example creates an animation, assigns it, and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> to start it.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#beginanimation)]
 [!code-vb[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#beginanimation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline, handoffBehavior As HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="uIElement.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="c3662-278">Die zu animierende Eigenschaft, die als Bezeichner einer Abhängigkeitseigenschaft angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-278">The property to animate, which is specified as the dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="c3662-279">Die Zeitachse der anzuwendenden Animation.</span><span class="sxs-lookup"><span data-stu-id="c3662-279">The timeline of the animation to be applied.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="c3662-280">Ein Wert der Enumeration, der angibt, wie die neue Animation mit aktuellen (ausgeführten) Animationen interagieren soll, die sich bereits auf den Eigenschaftswert auswirken.</span><span class="sxs-lookup"><span data-stu-id="c3662-280">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span></span></param>
        <summary><span data-ttu-id="c3662-281">Startet eine spezifische Animation für eine bestimmte animierte Eigenschaft dieses Elements, wobei angegeben werden kann, welches Verhalten gelten soll, wenn die Eigenschaft bereits über eine ausgeführte Animation verfügt.</span><span class="sxs-lookup"><span data-stu-id="c3662-281">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-282">Wenn Sie überprüfen, ob eine Eigenschaft animiert ist, beachten Sie, dass die Animation beginnt und als animiert eingestuft wird, wenn der erste Frame, der über den nicht animierten Startpunkt hinausgeht, gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-282">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="c3662-283">Wenn <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> für den `animation` `null` Wert hat, werden alle aktuellen Animationen entfernt und der aktuelle Wert der-Eigenschaft gespeichert.</span><span class="sxs-lookup"><span data-stu-id="c3662-283">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="c3662-284">Wenn der gesamte `animation` Wert ist `null` , werden alle Animationen aus der Eigenschaft entfernt, und der Eigenschafts Wert wird auf den Basiswert zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="c3662-284">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="c3662-285">Die ursprünglich zugeordnete Animations Zeitachse wird jedoch nicht beendet.</span><span class="sxs-lookup"><span data-stu-id="c3662-285">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="c3662-286">Alle anderen Animationen, die dieser Zeitachse zugewiesen sind, werden weiterhin ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="c3662-286">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-287">Im folgenden Beispiel wird ein Handler implementiert, der eine vorhandene Animation aus einer Ressource abruft und dann <xref:System.Windows.UIElement.BeginAnimation%2A> mit einem angegebenen Übergabe Verhalten aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-287">The following example implements a handler that obtains an existing animation from a resource and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> with a specified handoff behavior.</span></span>  
  
 [!code-csharp[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesIntroduction/CSharp/SampleViewer.xaml.cs#beginanimationhandoff)]
 [!code-vb[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesIntroduction/visualbasic/sampleviewer.xaml.vb#beginanimationhandoff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect BitmapEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffect BitmapEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffect As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffect ^ BitmapEffect { System::Windows::Media::Effects::BitmapEffect ^ get(); void set(System::Windows::Media::Effects::BitmapEffect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BitmapEffect : System.Windows.Media.Effects.BitmapEffect with get, set" Usage="System.Windows.UIElement.BitmapEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-288">Ruft den Bitmapeffekt ab, der direkt auf den gerenderten Inhalt dieses Elements angewendet wird, bzw. legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="c3662-288">Gets or sets a bitmap effect that applies directly to the rendered content for this element.</span></span>  <span data-ttu-id="c3662-289">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-289">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-290">Der anzuwendende Bitmapeffekt.</span><span class="sxs-lookup"><span data-stu-id="c3662-290">The bitmap effect to apply.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-291"><xref:System.Windows.Media.Effects.BitmapEffect> ist ein abstrakter Typ. daher [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] erfordert die Verwendung eine implementierte abgeleitete Klasse von <xref:System.Windows.Media.Effects.BitmapEffect> , z <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect> . b..</span><span class="sxs-lookup"><span data-stu-id="c3662-291"><xref:System.Windows.Media.Effects.BitmapEffect> is an abstract type, therefore the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage requires an implemented derived class of <xref:System.Windows.Media.Effects.BitmapEffect>, such as <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</span></span> <span data-ttu-id="c3662-292">Beachten Sie, dass eine implementierte abgeleitete Klasse ein Sammlungstyp ist, der es Ihnen ermöglicht, mehr als eine sequenzielle <xref:System.Windows.Media.Effects.BitmapEffect> mithilfe einer geschachtelte Tag-Syntax anzugeben.</span><span class="sxs-lookup"><span data-stu-id="c3662-292">Note that one implemented derived class is a collection type that allows you to specify more than one sequential <xref:System.Windows.Media.Effects.BitmapEffect>, using a nested tag syntax.</span></span>  
  
 <span data-ttu-id="c3662-293">Keine vorhandene abgeleitete Klasse von <xref:System.Windows.Media.Effects.BitmapEffect> unterstützt einen Typkonverter, sodass die [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Syntax, die Sie für diese Eigenschaft verwenden, im allgemeinen Eigenschaften Element Syntax ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-293">No existing derived class of <xref:System.Windows.Media.Effects.BitmapEffect> supports a type converter, so the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax that you use for this property is generally property element syntax.</span></span>  
  
<a name="dependencyPropertyInfo_BitmapEffect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-294">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-294">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-295">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-295">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectProperty>|  
|<span data-ttu-id="c3662-296">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-296">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-297">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-297">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c3662-298">Im folgenden Beispiel wird ein Bitmapeffekt mithilfe von festgelegt <xref:System.Windows.Media.Effects.BlurBitmapEffect> .</span><span class="sxs-lookup"><span data-stu-id="c3662-298">The following example sets a bitmap effect, using <xref:System.Windows.Media.Effects.BlurBitmapEffect>.</span></span>  
  
 [!code-csharp[EffectsGallery_snip#CodeBehindBlurCodeBehindExampleInline](~/samples/snippets/csharp/VS_Snippets_Wpf/EffectsGallery_snip/CSharp/blurcodebehindexample.xaml.cs#codebehindblurcodebehindexampleinline)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInput">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffectInput" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffectInput As BitmapEffectInput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffectInput ^ BitmapEffectInput { System::Windows::Media::Effects::BitmapEffectInput ^ get(); void set(System::Windows::Media::Effects::BitmapEffectInput ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BitmapEffectInput : System.Windows.Media.Effects.BitmapEffectInput with get, set" Usage="System.Windows.UIElement.BitmapEffectInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffectInput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-299">Ruft die Eingabequelle des Bitmapeffekts ab, der direkt auf den gerenderten Inhalt dieses Elements angewendet wird, bzw. legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="c3662-299">Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.</span></span>  <span data-ttu-id="c3662-300">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-300">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-301">Die Quelle für Bitmapeffekte.</span><span class="sxs-lookup"><span data-stu-id="c3662-301">The source for bitmap effects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BitmapEffectInput"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-302">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-302">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-303">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-303">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectInputProperty>|  
|<span data-ttu-id="c3662-304">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-304">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-305">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-305">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInputProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectInputProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectInputProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectInputProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectInputProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectInputProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BitmapEffectInputProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.BitmapEffectInputProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-306">Bezeichnet die <see cref="P:System.Windows.UIElement.BitmapEffectInput" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-306">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffectInput" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BitmapEffectProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.BitmapEffectProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-307">Bezeichnet die <see cref="P:System.Windows.UIElement.BitmapEffect" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-307">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffect" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CacheMode CacheMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CacheMode CacheMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CacheMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheMode As CacheMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CacheMode ^ CacheMode { System::Windows::Media::CacheMode ^ get(); void set(System::Windows::Media::CacheMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheMode : System.Windows.Media.CacheMode with get, set" Usage="System.Windows.UIElement.CacheMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CacheMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-308">Ruft eine zwischengespeicherte Darstellung des <see cref="T:System.Windows.UIElement" /> ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="c3662-308">Gets or sets a cached representation of the <see cref="T:System.Windows.UIElement" />.</span></span></summary>
        <value><span data-ttu-id="c3662-309">Ein <see cref="T:System.Windows.Media.CacheMode" />, der eine zwischengespeicherte Darstellung von <see cref="T:System.Windows.UIElement" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-309">A <see cref="T:System.Windows.Media.CacheMode" /> that holds a cached representation of the <see cref="T:System.Windows.UIElement" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-310">Legen Sie die-Eigenschaft fest, <xref:System.Windows.UIElement.CacheMode%2A> Wenn Sie die Leistung für den Inhalt erhöhen müssen, der zum Rendering zeitaufwändig ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-310">Set the <xref:System.Windows.UIElement.CacheMode%2A> property when you need to increase performance for content that is time consuming to render.</span></span> <span data-ttu-id="c3662-311">Weitere Informationen finden Sie unter <xref:System.Windows.Media.BitmapCache>.</span><span class="sxs-lookup"><span data-stu-id="c3662-311">For more information, see <xref:System.Windows.Media.BitmapCache>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.CacheMode" />
        <altmember cref="T:System.Windows.Media.BitmapCache" />
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="CacheModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CacheModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CacheModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.CacheModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CacheModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CacheModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CacheModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.CacheModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-312">Bezeichnet die <see cref="P:System.Windows.UIElement.CacheMode" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-312">Identifies the <see cref="P:System.Windows.UIElement.CacheMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberSignature Language="F#" Value="abstract member CaptureMouse : unit -&gt; bool&#xA;override this.CaptureMouse : unit -&gt; bool" Usage="uIElement.CaptureMouse " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3662-313">Versucht, die Mausaufzeichnung für dieses Element zu erzwingen.</span><span class="sxs-lookup"><span data-stu-id="c3662-313">Attempts to force capture of the mouse to this element.</span></span></summary>
        <returns><span data-ttu-id="c3662-314"><see langword="true" />, wenn die Maus erfolgreich aufgezeichnet wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-314"><see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-315">Ein Element muss aktiviert sein, damit es aufgezeichnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="c3662-315">To be captured, an element must be enabled.</span></span> <span data-ttu-id="c3662-316">Überprüfen Sie, ob <xref:System.Windows.UIElement.IsEnabled%2A> `true` vor aufgerufen wird <xref:System.Windows.UIElement.CaptureMouse%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-316">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.UIElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="c3662-317">Wenn beim Aufrufen von <xref:System.Windows.UIElement.CaptureMouse%2A> zurückgegeben `true` wird, dann <xref:System.Windows.UIElement.IsMouseCaptured%2A> ist ebenfalls `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-317">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.UIElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="c3662-318">Wenn der Aufruf von <xref:System.Windows.UIElement.CaptureMouse%2A> zurückgibt `true` , <xref:System.Windows.UIElement.GotMouseCapture> werden das-Ereignis und das- <xref:System.Windows.UIElement.IsMouseCapturedChanged> Ereignis ausgelöst, wobei <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in den Ereignisdaten als das-Element gemeldet wird, in dem die- <xref:System.Windows.UIElement.CaptureMouse%2A> Methode aufgerufen</span><span class="sxs-lookup"><span data-stu-id="c3662-318">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.UIElement.GotMouseCapture> and <xref:System.Windows.UIElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.UIElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="c3662-319">Wenn Sie die Erfassung erzwingen, können Sie die vorhandenen Erfassungen stören, insbesondere bei Erfassungen, die sich auf Drag & Drop mit der Maus beziehen.</span><span class="sxs-lookup"><span data-stu-id="c3662-319">If you force capture, you might interfere with existing captures - especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="c3662-320">Um die Maus Aufzeichnung von allen Elementen zu löschen, müssen Sie <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> mit dem Parameter aufrufen, der `element` als angegeben wird `null` .</span><span class="sxs-lookup"><span data-stu-id="c3662-320">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-321">Im folgenden Beispiel wird ein paar von Handlern für die Maus-und Tasten Eingabe Kombination implementiert, mit denen die Maus aufgezeichnet (und die Aufzeichnung) und ein spezieller Maus Modus für die Anzeige eines 3D-Modells aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-321">The following example implements a pair of handlers for mouse and key input combination that capture (and uncapture) the mouse and enable a special mouse mode for viewing a 3D model.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberSignature Language="F#" Value="abstract member CaptureStylus : unit -&gt; bool&#xA;override this.CaptureStylus : unit -&gt; bool" Usage="uIElement.CaptureStylus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3662-322">Versucht, die Tablettstiftaufzeichnung für dieses Element zu erzwingen.</span><span class="sxs-lookup"><span data-stu-id="c3662-322">Attempts to force capture of the stylus to this element.</span></span></summary>
        <returns><span data-ttu-id="c3662-323"><see langword="true" />, wenn der Tablettstift erfolgreich aufgezeichnet wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-323"><see langword="true" /> if the stylus was successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-324">Die Standard Implementierung, die auf dem zugrunde liegenden Standard Stift Gerät basiert, gibt immer zurück `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-324">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="c3662-325">Wenn Sie jedoch die Eingabegeräte erweitern, die die Geräte Implementierung für das Eingabe System bereitstellen, ist es möglich, ein System mit einer alternativen Stift-Geräte Implementierung zu erstellen, die möglicherweise andere Ergebnisse zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="c3662-325">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="c3662-326">Wenn ein Element den Tablettstift erfasst, empfängt es eine Stift Eingabe, auch wenn sich der Tablettstift außerhalb seiner Begrenzungen befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-326">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="c3662-327">Der Tablettstift wird in der Regel nur während Drag & Drop-Vorgängen aufgezeichnet.</span><span class="sxs-lookup"><span data-stu-id="c3662-327">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="c3662-328">Durch Aufrufen dieser Methode wird eine zugrunde liegende statische <xref:System.Windows.Input.Stylus> Methode aufgerufen <xref:System.Windows.Input.Stylus.Capture%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-328">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="c3662-329">Das tatsächliche Aufzeichnungs Verhalten wird von der aktiven Stift Geräte Implementierung implementiert.</span><span class="sxs-lookup"><span data-stu-id="c3662-329">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="c3662-330">Ein Element muss aktiviert sein, damit es aufgezeichnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="c3662-330">To be captured, an element must be enabled.</span></span> <span data-ttu-id="c3662-331">Überprüfen Sie, ob vor dem-Befehl <xref:System.Windows.UIElement.IsEnabled%2A> `true` zurückgibt <xref:System.Windows.UIElement.CaptureStylus%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-331">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.UIElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="c3662-332">Wenn das Aufrufen von <xref:System.Windows.UIElement.CaptureStylus%2A> zurückgibt `true` , <xref:System.Windows.UIElement.IsStylusCaptured%2A> ist ebenfalls `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-332">If calling <xref:System.Windows.UIElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.UIElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureTouch (touchDevice As TouchDevice) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.CaptureTouch : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement.CaptureTouch touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="c3662-333">Das zu erfassende Gerät.</span><span class="sxs-lookup"><span data-stu-id="c3662-333">The device to capture.</span></span></param>
        <summary><span data-ttu-id="c3662-334">Versucht, die Fingereingabe für dieses Element zu erzwingen.</span><span class="sxs-lookup"><span data-stu-id="c3662-334">Attempts to force capture of a touch to this element.</span></span></summary>
        <returns><span data-ttu-id="c3662-335"><see langword="true" />, wenn die angegebene Fingereingabe für dieses Element erfasst wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-335"><see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-336"><xref:System.Windows.UIElement.CaptureTouch%2A> Gibt zurück `false` , wenn der <xref:System.Windows.Input.TouchDevice> gegenwärtig in einem anderen Element aufgezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-336"><xref:System.Windows.UIElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="c3662-337">Wenn <xref:System.Windows.UIElement.CaptureTouch%2A> zurückgibt `true` , wird das- <xref:System.Windows.UIElement.GotTouchCapture> Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-337">If <xref:System.Windows.UIElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.UIElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="c3662-338">Verwenden Sie die <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> -Methode, und geben Sie das zu veröffentlichenden Fingerabdruck Gerät an, um die Erfassung einer einzelnen Fingereingabe von diesem Element aufzuheben.</span><span class="sxs-lookup"><span data-stu-id="c3662-338">To release capture of a single touch from this element, use the <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="c3662-339">Verwenden Sie die-Methode, um alle Berührungen von diesem Element freizugeben <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-339">To release all touches from this element, use the <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3662-340"><paramref name="touchDevice" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-340"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry Clip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry Clip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Clip" />
      <MemberSignature Language="VB.NET" Value="Public Property Clip As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Geometry ^ Clip { System::Windows::Media::Geometry ^ get(); void set(System::Windows::Media::Geometry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Clip : System.Windows.Media.Geometry with get, set" Usage="System.Windows.UIElement.Clip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-341">Ruft die Geometrie ab, die zum Definieren der Gliederung des Inhalts eines Elements verwendet wird, oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="c3662-341">Gets or sets the geometry used to define the outline of the contents of an element.</span></span>  <span data-ttu-id="c3662-342">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-342">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-343">Die Geometrie, die zur Größenanpassung des Clippingbereichs verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="c3662-343">The geometry to be used for clipping area sizing.</span></span> <span data-ttu-id="c3662-344">Der Standardwert ist eine <see cref="T:System.Windows.Media.Geometry" /> von 0 (null).</span><span class="sxs-lookup"><span data-stu-id="c3662-344">The default is a null <see cref="T:System.Windows.Media.Geometry" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-345">Elemente außerhalb der Geometrie werden im gerenderten Layout visuell abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="c3662-345">Elements outside the geometry will be visually clipped in the rendered layout.</span></span> <span data-ttu-id="c3662-346">Die Geometrie muss nicht rechteckig sein.</span><span class="sxs-lookup"><span data-stu-id="c3662-346">The geometry does not have to be rectangular.</span></span>  
  
<a name="dependencyPropertyInfo_Clip"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-347">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-347">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-348">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-348">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipProperty>|  
|<span data-ttu-id="c3662-349">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-349">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-350">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-350">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c3662-351">In diesem Beispiel wird gezeigt, wie die Region eines Frameworkelements definiert wird <xref:System.Windows.UIElement.Clip%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-351">This example shows how to define a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="c3662-352">Um einen Clip zu definieren, verwenden Sie einen <xref:System.Windows.Media.Geometry> (z. b. ein, <xref:System.Windows.Media.EllipseGeometry> um die-Eigenschaft des Elements festzulegen <xref:System.Windows.UIElement.Clip%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-352">To define a clip, use a <xref:System.Windows.Media.Geometry> (for example, an <xref:System.Windows.Media.EllipseGeometry> to set the element's <xref:System.Windows.UIElement.Clip%2A> property.</span></span> <span data-ttu-id="c3662-353">Nur der Bereich, der sich innerhalb des Bereichs der Geometrie befindet, wird angezeigt.</span><span class="sxs-lookup"><span data-stu-id="c3662-353">Only the area that is within the region of the geometry will be visible.</span></span>  
  
 <span data-ttu-id="c3662-354">Das folgende Beispiel zeigt ein- <xref:System.Windows.Controls.Image> Element ohne einen definierten Clip-Bereich.</span><span class="sxs-lookup"><span data-stu-id="c3662-354">The following example shows an <xref:System.Windows.Controls.Image> element without a defined clip region.</span></span> <span data-ttu-id="c3662-355">Da kein Clip Bereich definiert ist, wird das gesamte Bild angezeigt.</span><span class="sxs-lookup"><span data-stu-id="c3662-355">Because no clip region is defined, the entire image is displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#2)]  
  
 <span data-ttu-id="c3662-356">![Ein Objekt vor dem Anwenden eines Beschneidungsbereichs](~/add/media/mil-task-clip-region-noclip.png "Ein Objekt vor dem Anwenden eines Beschneidungsbereichs")</span><span class="sxs-lookup"><span data-stu-id="c3662-356">![An object before applying a clip region](~/add/media/mil-task-clip-region-noclip.png "An object before applying a clip region")</span></span>  
<span data-ttu-id="c3662-357">Bild ohne Clip-Bereich</span><span class="sxs-lookup"><span data-stu-id="c3662-357">Image with No Clip Region</span></span>  
  
 <span data-ttu-id="c3662-358">Im nächsten Beispiel wird ein identisches Bild erstellt, mit dem Unterschied, dass es über einen definierten Clip Bereich verfügt.</span><span class="sxs-lookup"><span data-stu-id="c3662-358">In the next example, an identical Image is created, except that it has a defined clip region.</span></span> <span data-ttu-id="c3662-359">Es wird nur der Teil des Bilds angezeigt, der sich innerhalb des Bereichs von befindet <xref:System.Windows.Media.EllipseGeometry> .</span><span class="sxs-lookup"><span data-stu-id="c3662-359">Only the part of the image that is within the area the <xref:System.Windows.Media.EllipseGeometry> will be displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#4)]  
  
 <span data-ttu-id="c3662-360">![Ein beschnittenes Objekt](~/add/media/mil-task-clip-region-ellispe.PNG "Ein beschnittenes Objekt")</span><span class="sxs-lookup"><span data-stu-id="c3662-360">![A clipped object](~/add/media/mil-task-clip-region-ellispe.PNG "A clipped object")</span></span>  
<span data-ttu-id="c3662-361">Bild mit einem Ellipsen Clip Bereich</span><span class="sxs-lookup"><span data-stu-id="c3662-361">Image with an Elliptical Clip Region</span></span>  
  
 <span data-ttu-id="c3662-362">Im folgenden Beispiel wird gezeigt, wie die Region eines Frameworkelements animiert wird <xref:System.Windows.UIElement.Clip%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-362">The following example shows how animate a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="c3662-363">In diesem Beispiel wird ein <xref:System.Windows.Media.EllipseGeometry> elliptischer Clip Bereich für ein <xref:System.Windows.Controls.Image> Element definiert.</span><span class="sxs-lookup"><span data-stu-id="c3662-363">In this example, an <xref:System.Windows.Media.EllipseGeometry> is used to define an elliptical clip region for an <xref:System.Windows.Controls.Image> element.</span></span> <span data-ttu-id="c3662-364">Eine <xref:System.Windows.Media.Animation.PointAnimation> animiert die-Eigenschaft der Ellipse-Geometrie <xref:System.Windows.Media.EllipseGeometry.Center%2A> von (0,0) bis (200, 150).</span><span class="sxs-lookup"><span data-stu-id="c3662-364">A <xref:System.Windows.Media.Animation.PointAnimation> animates the ellipse geometry's <xref:System.Windows.Media.EllipseGeometry.Center%2A> property from (0, 0) to (200, 150).</span></span> <span data-ttu-id="c3662-365">Die Animation beginnt, nachdem das Bild geladen und unbegrenzt wiederholt wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-365">The animation starts playing after the image is loaded and repeats indefinitely.</span></span>  
  
 [!code-xaml[ClipPathExample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#5)]  
  
 <span data-ttu-id="c3662-366">Das vollständige Beispiel finden Sie im [Beispiel Clip Region](https://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span><span class="sxs-lookup"><span data-stu-id="c3662-366">For the full sample, see the [Clip Region Sample](https://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
      </Docs>
    </Member>
    <Member MemberName="ClipProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClipProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.ClipProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-367">Bezeichnet die <see cref="P:System.Windows.UIElement.Clip" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-367">Identifies the <see cref="P:System.Windows.UIElement.Clip" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipToBounds">
      <MemberSignature Language="C#" Value="public bool ClipToBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ClipToBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.ClipToBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property ClipToBounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ClipToBounds { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ClipToBounds : bool with get, set" Usage="System.Windows.UIElement.ClipToBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-368">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob der Inhalt dieses Elements (oder Inhalt aus seinen untergeordneten Elementen) abgeschnitten wird, sodass er in das enthaltende Element passt.</span><span class="sxs-lookup"><span data-stu-id="c3662-368">Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.</span></span>   <span data-ttu-id="c3662-369">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-369">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-370"><see langword="true" />, wenn der Inhalt abgeschnitten werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-370"><see langword="true" /> if the content should be clipped; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c3662-371">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-371">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-372">Bei untergeordneten Elementen <xref:System.Windows.UIElement.ClipToBounds%2A> wirkt sich dies auf das Layoutverhalten aus, abhängig davon, ob die Höhe und Breite des übergeordneten Elements durch oder bestimmt werden <xref:System.Windows.FrameworkElement.Height%2A>  /  <xref:System.Windows.FrameworkElement.Width%2A> <xref:System.Windows.FrameworkElement.MaxHeight%2A>  /  <xref:System.Windows.FrameworkElement.MaxWidth%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-372">For child elements, <xref:System.Windows.UIElement.ClipToBounds%2A> has different effects on layout behaviors depending on whether the height and width of the parent element are being determined by <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> or <xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span></span> <span data-ttu-id="c3662-373"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A> das übergeordnete Element wird unabhängig vom Wert von immer berücksichtigt, <xref:System.Windows.UIElement.ClipToBounds%2A> und beim effektiven Clipping wird der Inhalt immer auf der Grundlage dieser Maximums abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="c3662-373"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A> of the parent element are always respected regardless of the value of <xref:System.Windows.UIElement.ClipToBounds%2A> and the effective clipping will always clip the content based on these maximums.</span></span> <span data-ttu-id="c3662-374">Durch die Einstellungen des übergeordneten Elements <xref:System.Windows.FrameworkElement.Height%2A>  /  <xref:System.Windows.FrameworkElement.Width%2A> wird der Inhalt nicht zugeschnitten, wenn den Wert <xref:System.Windows.UIElement.ClipToBounds%2A> `false` hat. der Inhalt wird jedoch Clip, wenn gleich <xref:System.Windows.UIElement.ClipToBounds%2A> ist `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-374">The parent's <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> settings will not clip the content when <xref:System.Windows.UIElement.ClipToBounds%2A> is `false`, but will clip the content if <xref:System.Windows.UIElement.ClipToBounds%2A> is `true`.</span></span>  
  
 <span data-ttu-id="c3662-375">Beachten Sie, dass das Standard `false` Verhalten von als Standardverhalten in der- <xref:System.Windows.UIElement> Klasse implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-375">Note that defaulting to `false` is the general behavior as implemented in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="c3662-376">Es ist möglich, dass ein beliebiges Element, das von abgeleitet wird, <xref:System.Windows.UIElement> die Metadaten der Abhängigkeits Eigenschaft für diese Eigenschaft in dieser Instanz überschreibt, sodass stattdessen der Standardwert von `true`</span><span class="sxs-lookup"><span data-stu-id="c3662-376">It is possible for any given element that derives from <xref:System.Windows.UIElement> to override the dependency property metadata for this property in that instance to default to `true` instead.</span></span> <span data-ttu-id="c3662-377">Mehrere vorhandene abgeleitete Klassen überschreiben diese Metadaten und/oder passen den Standardwert der Abhängigkeits Eigenschaft an.</span><span class="sxs-lookup"><span data-stu-id="c3662-377">Several existing derived classes override this metadata and/or adjust the dependency property default value.</span></span>  
  
 <span data-ttu-id="c3662-378"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter> und <xref:System.Windows.Controls.Primitives.Popup> überschreiben den Standardwert `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-378"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.Popup> each override the default value to be `true`.</span></span>  
  
 <span data-ttu-id="c3662-379"><xref:System.Windows.FrameworkElement> überschreibt die Metadaten für diese Abhängigkeits Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-379"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property.</span></span> <span data-ttu-id="c3662-380">Insbesondere legt <xref:System.Windows.FrameworkElement> Diese Eigenschaft fest, um die Vererbung von Eigenschafts Werten zuzulassen ( <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> `true` in Metadaten).</span><span class="sxs-lookup"><span data-stu-id="c3662-380">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="c3662-381">Die Vererbung von Eigenschafts Werten in diesem Kontext bedeutet Folgendes: Wenn untergeordnete Elemente vorhanden sind, für die kein anderer Wert <xref:System.Windows.UIElement.ClipToBounds%2A> über lokale Werte oder Stile zugewiesen ist, wird der Wert des nächsten übergeordneten Elements, dem dieser Wert zugewiesen ist (wiederum entweder in Stilen, Standardwerten oder einem lokalen Wert), dem-Eigenschaften System zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="c3662-381">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.ClipToBounds%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a locally value), then the value from the parent element will be assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="c3662-382">In der Praxis bedeutet dies, dass Sie angeben können, ob Clip an die Grenzen des Stamm Elements zulässig sein soll, und dass dieser Wert an alle untergeordneten Elemente weitergegeben wird, die nicht explizit als zugewiesen wurden `false` .</span><span class="sxs-lookup"><span data-stu-id="c3662-382">In practice this means that you can specify whether to allow clip to bounds at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_ClipToBounds"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-383">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-383">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-384">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-384">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipToBoundsProperty>|  
|<span data-ttu-id="c3662-385">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-385">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-386">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-386">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Clip" />
      </Docs>
    </Member>
    <Member MemberName="ClipToBoundsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipToBoundsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipToBoundsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipToBoundsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipToBoundsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipToBoundsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClipToBoundsProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.ClipToBoundsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-387">Bezeichnet die <see cref="P:System.Windows.UIElement.ClipToBounds" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-387">Identifies the <see cref="P:System.Windows.UIElement.ClipToBounds" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBindings : System.Windows.Input.CommandBindingCollection" Usage="System.Windows.UIElement.CommandBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-388">Ruft eine Auflistung von <see cref="T:System.Windows.Input.CommandBinding" />-Objekten ab, die diesem Element zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-388">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects associated with this element.</span></span> <span data-ttu-id="c3662-389">Ein <see cref="T:System.Windows.Input.CommandBinding" /> ermöglicht die Behandlung eines Befehls für dieses Element und deklariert die Bindung zwischen einem Befehl, seinen Ereignissen und den von diesem Element angefügten Handlern.</span><span class="sxs-lookup"><span data-stu-id="c3662-389">A <see cref="T:System.Windows.Input.CommandBinding" /> enables command handling for this element, and declares the linkage between a command, its events, and the handlers attached by this element.</span></span></summary>
        <value><span data-ttu-id="c3662-390">Die Auflistung aller <see cref="T:System.Windows.Input.CommandBinding" />-Objekte.</span><span class="sxs-lookup"><span data-stu-id="c3662-390">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-391">Eine andere Möglichkeit zum Auffüllen der Auflistung <xref:System.Windows.UIElement.CommandBindings%2A> besteht darin, Methoden Programm gesteuert zu verwenden <xref:System.Windows.Input.CommandManager> .</span><span class="sxs-lookup"><span data-stu-id="c3662-391">Another typical way to populate the <xref:System.Windows.UIElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="c3662-392">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="c3662-392">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  
  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c3662-393">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="c3662-393">XAML Values</span></span>  
 <span data-ttu-id="c3662-394">*oneormorecommandbindungen*</span><span class="sxs-lookup"><span data-stu-id="c3662-394">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="c3662-395">Ein oder mehrere- <xref:System.Windows.Input.CommandBinding> Elemente.</span><span class="sxs-lookup"><span data-stu-id="c3662-395">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="c3662-396">Für jede dieser Attribute sollte ein <xref:System.Windows.Input.CommandBinding.Command%2A> -Attribut auf einen bekannten Befehl festgelegt sein, und Attribute für die <xref:System.Windows.Input.CommandBinding.CanExecute> -und- <xref:System.Windows.Input.CommandBinding.Executed> Handlerimplementierungen sind festgelegt.</span><span class="sxs-lookup"><span data-stu-id="c3662-396">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="c3662-397">Weitere Informationen finden Sie unter <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="c3662-397">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-398">Im folgenden Beispiel wird ein einem <xref:System.Windows.Input.CommandBinding> Fenster mithilfe von Markup hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="c3662-398">The following example adds a <xref:System.Windows.Input.CommandBinding> to a window using markup.</span></span> <span data-ttu-id="c3662-399">Beachten Sie, dass in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] <xref:System.Windows.Input.CommandBindingCollection> nicht im Markup als Element deklariert wird. das Auflistungs Objekt wird durch den Typ abgeleitet, den die-Eigenschaft annimmt, und Sie füllen das Property-Element mit einem oder mehreren- <xref:System.Windows.Input.CommandBinding> Elementen auf:</span><span class="sxs-lookup"><span data-stu-id="c3662-399">Note that in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the <xref:System.Windows.Input.CommandBindingCollection> is not declared in the markup as an element; the collection object is inferred by the type that the property takes, and you populate the property element with one or more <xref:System.Windows.Input.CommandBinding> elements:</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 <span data-ttu-id="c3662-400">Weitere Informationen zur Syntax für Auflistungen [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] finden Sie [in der XAML-Syntax im Detail](/dotnet/framework/wpf/advanced/xaml-syntax-in-detail).</span><span class="sxs-lookup"><span data-stu-id="c3662-400">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](/dotnet/framework/wpf/advanced/xaml-syntax-in-detail).</span></span>  
  
 <span data-ttu-id="c3662-401">Im folgenden Beispiel wird der Code im Wesentlichen identisch dargestellt:</span><span class="sxs-lookup"><span data-stu-id="c3662-401">The following example does essentially the same thing in code:</span></span>  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="DesiredSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size DesiredSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size DesiredSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.DesiredSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size DesiredSize { System::Windows::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredSize : System.Windows.Size" Usage="System.Windows.UIElement.DesiredSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-402">Ruft die Größe ab, die dieses Element während des Messdurchgangs im Layoutprozess berechnet hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-402">Gets the size that this element computed during the measure pass of the layout process.</span></span></summary>
        <value><span data-ttu-id="c3662-403">Die berechnete Größe, die die gewünschte Größe für den Anordnungsdurchgang wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-403">The computed size, which becomes the desired size for the arrange pass.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-404">Der Wert, der von dieser Eigenschaft zurückgegeben wird, ist nur eine gültige Messung, wenn der Wert der- <xref:System.Windows.UIElement.IsMeasureValid%2A> Eigenschaft ist `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-404">The value returned by this property will only be a valid measurement if the value of the <xref:System.Windows.UIElement.IsMeasureValid%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="c3662-405"><xref:System.Windows.UIElement.DesiredSize%2A> wird in der Regel als einer der Mess Faktoren überprüft, wenn Sie layoutverhaltensüberschreibungen wie <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> , <xref:System.Windows.FrameworkElement.MeasureOverride%2A> oder implementieren <xref:System.Windows.UIElement.OnRender%2A> . (in <xref:System.Windows.UIElement.OnRender%2A> diesem Fall können Sie stattdessen überprüfen <xref:System.Windows.UIElement.RenderSize%2A> , aber dies hängt von ihrer Implementierung ab.)</span><span class="sxs-lookup"><span data-stu-id="c3662-405"><xref:System.Windows.UIElement.DesiredSize%2A> is typically checked as one of the measurement factors when you implement layout behavior overrides such as <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>, or <xref:System.Windows.UIElement.OnRender%2A> (in the <xref:System.Windows.UIElement.OnRender%2A> case, you might check <xref:System.Windows.UIElement.RenderSize%2A> instead, but this depends on your implementation).</span></span> <span data-ttu-id="c3662-406">Abhängig vom Szenario kann <xref:System.Windows.UIElement.DesiredSize%2A> von ihrer Implementierungs Logik vollständig beachtet werden, Einschränkungen für <xref:System.Windows.UIElement.DesiredSize%2A> können angewendet werden, und solche Einschränkungen können auch andere Eigenschaften des übergeordneten Elements oder des untergeordneten Elements ändern.</span><span class="sxs-lookup"><span data-stu-id="c3662-406">Depending on the scenario, <xref:System.Windows.UIElement.DesiredSize%2A> might be fully respected by your implementation logic, constraints on <xref:System.Windows.UIElement.DesiredSize%2A> might be applied, and such constraints might also change other characteristics of either the parent element or child element.</span></span> <span data-ttu-id="c3662-407">Beispielsweise kann ein Steuerelement, das Bild lauffähigen Bereiche unterstützt (aber nicht von den Steuerelementen auf WPF-Frameworkebene abgeleitet werden soll, die Bild lauffähigen Bereiche bereits aktivieren <xref:System.Windows.UIElement.DesiredSize%2A> ), die</span><span class="sxs-lookup"><span data-stu-id="c3662-407">For example, a control that supports scrollable regions (but chooses not to derive from the WPF framework-level controls that already enable scrollable regions) could compare available size to <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="c3662-408">Das Steuerelement kann dann einen internen Zustand festlegen, der Scrollleisten in der [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] für dieses Steuerelement aktiviert hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-408">The control could then set an internal state that enabled scrollbars in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] for that control.</span></span> <span data-ttu-id="c3662-409">Oder <xref:System.Windows.UIElement.DesiredSize%2A> kann in bestimmten Szenarien möglicherweise auch ignoriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-409">Or, <xref:System.Windows.UIElement.DesiredSize%2A> could potentially also be ignored in certain scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-410">Das folgende Beispiel zeigt <xref:System.Windows.UIElement.DesiredSize%2A> als Teil einer- <xref:System.Windows.FrameworkElement.MeasureOverride%2A> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-410">The following example shows <xref:System.Windows.UIElement.DesiredSize%2A> as part of a <xref:System.Windows.FrameworkElement.MeasureOverride%2A> implementation.</span></span> <span data-ttu-id="c3662-411">Beachten <xref:System.Windows.UIElement.Measure%2A> Sie, dass unmittelbar vor dem Abrufen von aufgerufen wird <xref:System.Windows.UIElement.DesiredSize%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-411">Notice how <xref:System.Windows.UIElement.Measure%2A> is called immediately prior to obtaining <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="c3662-412">Dadurch wird sichergestellt, dass <xref:System.Windows.UIElement.DesiredSize%2A> einen legitimen Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-412">This assures that <xref:System.Windows.UIElement.DesiredSize%2A> holds a legitimate value.</span></span>  
  
 [!code-cpp[PlotPanel#2](~/samples/snippets/cpp/VS_Snippets_Wpf/PlotPanel/CPP/PlotPanel.cpp#2)]
 [!code-csharp[PlotPanel#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PlotPanel/CSharp/PlotPanel.cs#2)]
 [!code-vb[PlotPanel#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PlotPanel/VisualBasic/PlotPanel.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.DragEventHandler " Usage="member this.DragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-413">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Ziel meldet.</span><span class="sxs-lookup"><span data-stu-id="c3662-413">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-414">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-414">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-415">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.DragEnter> werden an das zugrunde liegende <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-415">Event handlers that are attached to the <xref:System.Windows.UIElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-416">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-416">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-417">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-417">Identifier field</span></span>|<xref:System.Windows.UIElement.DragEnterEvent>|  
|<span data-ttu-id="c3662-418">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-418">Routing strategy</span></span>|<span data-ttu-id="c3662-419">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-419">Bubbling</span></span>|  
|<span data-ttu-id="c3662-420">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-420">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="c3662-421">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewDragEnter> .</span><span class="sxs-lookup"><span data-stu-id="c3662-421">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="c3662-422"><xref:System.Windows.UIElement.OnDragEnter%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-422">Override <xref:System.Windows.UIElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-423">Identifiziert das <see cref="E:System.Windows.UIElement.DragEnter" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-423">Identifies the <see cref="E:System.Windows.UIElement.DragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-424">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-424">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-425">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-425">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-426">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-426">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-427">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-427">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-428">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-428">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.DragEventHandler " Usage="member this.DragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-429">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Quelle meldet.</span><span class="sxs-lookup"><span data-stu-id="c3662-429">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-430">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-430">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-431">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.DragLeave> werden an das zugrunde liegende <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-431">Event handlers that are attached to the <xref:System.Windows.UIElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-432">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-432">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-433">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-433">Identifier field</span></span>|<xref:System.Windows.UIElement.DragLeaveEvent>|  
|<span data-ttu-id="c3662-434">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-434">Routing strategy</span></span>|<span data-ttu-id="c3662-435">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-435">Bubbling</span></span>|  
|<span data-ttu-id="c3662-436">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-436">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="c3662-437">Das entsprechende tunnelingereignis ist <xref:System.Windows.DragDrop.PreviewDragLeave> .</span><span class="sxs-lookup"><span data-stu-id="c3662-437">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="c3662-438"><xref:System.Windows.UIElement.OnDragLeave%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-438">Override <xref:System.Windows.UIElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-439">Identifiziert das <see cref="E:System.Windows.UIElement.DragLeave" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-439">Identifies the <see cref="E:System.Windows.UIElement.DragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-440">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-440">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-441">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-441">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-442">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-442">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-443">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-443">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-444">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-444">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.DragEventHandler " Usage="member this.DragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-445">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als potenzielles Drop-Ziel meldet.</span><span class="sxs-lookup"><span data-stu-id="c3662-445">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-446">Dieses Ereignis tritt auch dann auf, wenn das ziehen aus den Element Begrenzungen stammt.</span><span class="sxs-lookup"><span data-stu-id="c3662-446">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="c3662-447">Wenn der Zieh Vorgang außerhalb der Grenzen beginnt und dann innerhalb von verschoben wird, wird dieses Ereignis ebenfalls ausgelöst sowie die <xref:System.Windows.UIElement.DragEnter> zugehörigen Vorschau Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="c3662-447">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.UIElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="c3662-448">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-448">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-449">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.DragOver> werden an das zugrunde liegende <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-449">Event handlers that are attached to the <xref:System.Windows.UIElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-450">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-450">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-451">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-451">Identifier field</span></span>|<xref:System.Windows.UIElement.DragOverEvent>|  
|<span data-ttu-id="c3662-452">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-452">Routing strategy</span></span>|<span data-ttu-id="c3662-453">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-453">Bubbling</span></span>|  
|<span data-ttu-id="c3662-454">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-454">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="c3662-455">Das entsprechende tunnelingereignis ist <xref:System.Windows.DragDrop.PreviewDragOver> .</span><span class="sxs-lookup"><span data-stu-id="c3662-455">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="c3662-456"><xref:System.Windows.UIElement.OnDragOver%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-456">Override <xref:System.Windows.UIElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-457">Identifiziert das <see cref="E:System.Windows.UIElement.DragOver" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-457">Identifies the <see cref="E:System.Windows.UIElement.DragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-458">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-458">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-459">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-459">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-460">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-460">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-461">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-461">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-462">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-462">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberSignature Language="F#" Value="member this.Drop : System.Windows.DragEventHandler " Usage="member this.Drop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-463">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Ablageereignis meldet, das dieses Element als Ablageziel aufweist.</span><span class="sxs-lookup"><span data-stu-id="c3662-463">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-464">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-464">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-465">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.Drop> werden an das zugrunde liegende <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-465">Event handlers that are attached to the <xref:System.Windows.UIElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-466">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-467">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-467">Identifier field</span></span>|<xref:System.Windows.UIElement.DropEvent>|  
|<span data-ttu-id="c3662-468">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-468">Routing strategy</span></span>|<span data-ttu-id="c3662-469">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-469">Bubbling</span></span>|  
|<span data-ttu-id="c3662-470">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-470">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="c3662-471">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewDrop> .</span><span class="sxs-lookup"><span data-stu-id="c3662-471">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="c3662-472"><xref:System.Windows.UIElement.OnDrop%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-472">Override <xref:System.Windows.UIElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-473">Identifiziert das <see cref="E:System.Windows.UIElement.Drop" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-473">Identifies the <see cref="E:System.Windows.UIElement.Drop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-474">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-474">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-475">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-475">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-476">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-476">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-477">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-477">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-478">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-478">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.Effect Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::Effect ^ Effect { System::Windows::Media::Effects::Effect ^ get(); void set(System::Windows::Media::Effects::Effect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Media.Effects.Effect with get, set" Usage="System.Windows.UIElement.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-479">Ruft den Bitmapeffekt ab, der auf das <see cref="T:System.Windows.UIElement" />-Objekt angewendet werden soll, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="c3662-479">Gets or sets the bitmap effect to apply to the <see cref="T:System.Windows.UIElement" />.</span></span> <span data-ttu-id="c3662-480">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-480">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-481">Ein <see cref="T:System.Windows.Media.Effects.Effect" />, der den Bitmapeffekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="c3662-481">An <see cref="T:System.Windows.Media.Effects.Effect" /> that represents the bitmap effect.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-482">Verwenden Sie die- <xref:System.Windows.UIElement.Effect%2A> Eigenschaft, um einen Bitmapeffekt auf eine anzuwenden <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-482">Use the <xref:System.Windows.UIElement.Effect%2A> property to apply a bitmap effect to a <xref:System.Windows.UIElement>.</span></span>  
  
<a name="dependencyPropertyInfo_Effect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-483">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-483">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-484">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-484">Identifier field</span></span>|<xref:System.Windows.UIElement.EffectProperty>|  
|<span data-ttu-id="c3662-485">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-485">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-486">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-486">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c3662-487">Der folgende XAML-Code zeigt, wie der-Eigenschaft ein benutzerdefinierter zugewiesen wird <xref:System.Windows.Media.Effects.ShaderEffect> <xref:System.Windows.UIElement.Effect%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-487">The following XAML shows how to assign a custom <xref:System.Windows.Media.Effects.ShaderEffect> to the <xref:System.Windows.UIElement.Effect%2A> property.</span></span>  
  
 [!code-xaml[System.Windows.Media.Effects.ShaderEffect#1000](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/Window1.xaml#1000)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="EffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.EffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EffectProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EffectProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.EffectProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-488">Bezeichnet die <see cref="P:System.Windows.UIElement.Effect" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-488">Identifies the <see cref="P:System.Windows.UIElement.Effect" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="uIElement.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3662-489">Versucht, den Fokus auf dieses Element festzulegen.</span><span class="sxs-lookup"><span data-stu-id="c3662-489">Attempts to set focus to this element.</span></span></summary>
        <returns><span data-ttu-id="c3662-490"><see langword="true" />, wenn der logische und der Tastaturfokus auf dieses Element festgelegt wurden, <see langword="false" />, wenn nur der logische Fokus auf dieses Element festgelegt wurde oder wenn durch den Aufruf dieser Methode keine Fokusänderung erzwungen wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-490"><see langword="true" /> if keyboard focus and logical focus were set to this element; <see langword="false" /> if only logical focus was set to this element, or if the call to this method did not force the focus to change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-491">, Um auf den Fokus zu sein, <xref:System.Windows.UIElement.Focusable%2A> und <xref:System.Windows.UIElement.IsEnabled%2A> müssen beide sein `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-491">To be focusable, <xref:System.Windows.UIElement.Focusable%2A> and <xref:System.Windows.UIElement.IsEnabled%2A> must both be `true`.</span></span>  
  
 <span data-ttu-id="c3662-492">Auch wenn das-Element fokussierbar und gültig ist, `Focus` können die Vorschau Ereignisse in einer bestimmten Struktur verarbeitet werden, und der Fokus auf dieses Element ist möglicherweise nicht zulässig (z. b. in einem zusammengesetzten Steuerelement).</span><span class="sxs-lookup"><span data-stu-id="c3662-492">Even if the element is focusable and valid, the `Focus` preview events may be processed in a specific tree, and focus on that element may not be allowed (for example, in a composite control).</span></span>
<span data-ttu-id="c3662-493">In einem solchen Fall gibt diese Methode zurück `false` .</span><span class="sxs-lookup"><span data-stu-id="c3662-493">In such a case, this method returns `false`.</span></span>
 
 <span data-ttu-id="c3662-494">Im Allgemeinen wird der Fokus durch zwei verschiedene Konzepte gesteuert: Tastaturfokus und logischer Fokus.</span><span class="sxs-lookup"><span data-stu-id="c3662-494">In general, focus is controlled by two different concepts: keyboard focus and logical focus.</span></span> <span data-ttu-id="c3662-495">Diese beiden Konzepte sind nicht immer identisch.</span><span class="sxs-lookup"><span data-stu-id="c3662-495">These two concepts are not always the same.</span></span> <span data-ttu-id="c3662-496">Weitere Informationen finden Sie unter [Fokus](/dotnet/framework/wpf/advanced/focus-overview) Übersicht und [Eingabe Übersicht](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-496">For more information, see [Focus summary](/dotnet/framework/wpf/advanced/focus-overview) and [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>
 
 <span data-ttu-id="c3662-497">Wenn der Aufruf von <xref:System.Windows.UIElement.Focus%2A> zurückgibt `true` , <xref:System.Windows.UIElement.IsKeyboardFocused%2A> <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> sind und ebenfalls `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-497">If calling <xref:System.Windows.UIElement.Focus%2A> returns `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="c3662-498">Wenn die zugehörigen Eigenschaften nicht bereits vorhanden sind `true` , werden beim aufzurufen  <xref:System.Windows.UIElement.Focus%2A> eines oder mehrere der folgenden Ereignisse in der folgenden Reihenfolge ausgelöst: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> , <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (Quelle ist das neue Fokus Ziel), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> , <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> , <xref:System.Windows.UIElement.LostKeyboardFocus> , <xref:System.Windows.UIElement.GotKeyboardFocus> (Quelle ist das neue Fokus Ziel).</span><span class="sxs-lookup"><span data-stu-id="c3662-498">If the related properties are not already `true`, when you call  <xref:System.Windows.UIElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus>, <xref:System.Windows.UIElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
 <span data-ttu-id="c3662-499">Damit dieser-Befehl erfolgreich ausgeführt werden kann, musste ein anderes Element in der Anwendung zuvor den Fokus haben.</span><span class="sxs-lookup"><span data-stu-id="c3662-499">In order for this call to be successful, some other element in the application needed to have focus previously.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-500">Im folgenden Beispiel wird der Fokus auf einen <xref:System.Windows.Controls.TextBox> , auf den von verwiesen <xref:System.Windows.FrameworkElement.Name%2A> wird, festgelegt und dann die Position des Cursors in angepasst <xref:System.Windows.Controls.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="c3662-500">The following example sets focus to a <xref:System.Windows.Controls.TextBox> referenced by <xref:System.Windows.FrameworkElement.Name%2A>, and then adjusts the position of the cursor within the <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-csharp[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBox_CursorToEnd/CSharp/Window1.xaml.cs#uielementfocus)]
 [!code-vb[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBox_CursorToEnd/VisualBasic/Window1.xaml.vb#uielementfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="System.Windows.UIElement.Focusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-501">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob das Element den Fokus erhalten kann.</span><span class="sxs-lookup"><span data-stu-id="c3662-501">Gets or sets a value that indicates whether the element can receive focus.</span></span>  <span data-ttu-id="c3662-502">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-502">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-503"><see langword="true" />, wenn das Element den Fokus erhalten kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-503"><see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span></span> <span data-ttu-id="c3662-504">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-504">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-505">Nur das fokussierte Element empfängt Tastatureingaben.</span><span class="sxs-lookup"><span data-stu-id="c3662-505">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="c3662-506"><xref:System.Windows.UIElement.Focusable%2A> der [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] Eigenschaften Accessor für das, was in Wirklichkeit eine Abhängigkeits Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-506"><xref:System.Windows.UIElement.Focusable%2A> is the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property.</span></span> <span data-ttu-id="c3662-507">Bei dieser speziellen Abhängigkeits Eigenschaft ist der sichtbare "Default"-Wert in abgeleiteten Element Klassen anders festgelegt, insbesondere in-Steuerelementen.</span><span class="sxs-lookup"><span data-stu-id="c3662-507">This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes, particularly in controls.</span></span> <span data-ttu-id="c3662-508">Dies geschieht in der Regel auf zwei Arten:</span><span class="sxs-lookup"><span data-stu-id="c3662-508">This commonly occurs in one of two ways:</span></span>  
  
-   <span data-ttu-id="c3662-509">Die Abhängigkeits Eigenschaft wird von einer bestimmten abgeleiteten Klasse geerbt, aber diese abgeleitete Klasse überschreibt die Metadaten der Abhängigkeits Eigenschaft und ändert den Standardwert der Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-509">The dependency property is inherited by a particular derived class, but that derived class overrides the metadata of the dependency property and changes the property default value.</span></span>  
  
-   <span data-ttu-id="c3662-510">Ein-Stil oder eine Vorlage wird auf ein-Element angewendet, das den Wert der Abhängigkeits Eigenschaft unterschiedlich festlegt.</span><span class="sxs-lookup"><span data-stu-id="c3662-510">A style or template is applied to an element, which sets that dependency property value differently.</span></span>  
  
 <span data-ttu-id="c3662-511">Beispielsweise ist der sichtbare "Standard" von <xref:System.Windows.UIElement.Focusable%2A> für ein <xref:System.Windows.Controls.Button> Steuerelement, obwohl er `true` <xref:System.Windows.Controls.Button> <xref:System.Windows.UIElement.Focusable%2A> als [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Eigenschaft direkt von erbt <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-511">For example, the apparent "default" of <xref:System.Windows.UIElement.Focusable%2A> for a <xref:System.Windows.Controls.Button> control will be `true`, even though <xref:System.Windows.Controls.Button> inherits <xref:System.Windows.UIElement.Focusable%2A> as a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property directly from <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="c3662-512">Dies liegt daran, dass der angewendete Metadatenwert für die <xref:System.Windows.UIElement.Focusable%2A> Abhängigkeits Eigenschaft innerhalb des statischen Konstruktors der Basisklasse überschrieben wurde <xref:System.Windows.Controls.Control> , der sich zwischen <xref:System.Windows.Controls.Button> und <xref:System.Windows.UIElement> in der Klassenhierarchie befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-512">This is because the applied metadata value for the <xref:System.Windows.UIElement.Focusable%2A> dependency property was overridden within the static constructor of the <xref:System.Windows.Controls.Control> base class, which is situated between <xref:System.Windows.Controls.Button> and <xref:System.Windows.UIElement> in the class hierarchy.</span></span>  
  
 <span data-ttu-id="c3662-513">Wenn Sie von <xref:System.Windows.Controls.Control> oder von den abgeleiteten Klassen geerbt werden, wird <xref:System.Windows.Controls.Control> der Standardwert dieser Eigenschaft neu definiert als `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-513">When inherited by <xref:System.Windows.Controls.Control> or its derived classes, <xref:System.Windows.Controls.Control> redefines the default value of this property to be `true`.</span></span>  
  
 <span data-ttu-id="c3662-514">Bei der Vererbung durch <xref:System.Windows.Controls.Label> (bei der es sich um eine <xref:System.Windows.Controls.Control> abgeleitete Klasse handelt) wird der Standardwert wieder neu definiert, sodass er ist `false`</span><span class="sxs-lookup"><span data-stu-id="c3662-514">When inherited by <xref:System.Windows.Controls.Label> (which is a <xref:System.Windows.Controls.Control> derived class), the default value is again redefined to be `false`.</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-515">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-515">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-516">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-516">Identifier field</span></span>|<xref:System.Windows.UIElement.FocusableProperty>|  
|<span data-ttu-id="c3662-517">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-517">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-518">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-518">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c3662-519">Der folgende Beispielcode veranschaulicht eine Steuerelement Vorlage für ein bestimmtes benutzerdefiniertes Steuerelement, das <xref:System.Windows.UIElement.Focusable%2A> `false` auf eines der Elemente in der Vorlage festlegt.</span><span class="sxs-lookup"><span data-stu-id="c3662-519">The following example code illustrates a control template for a particular custom control, which sets <xref:System.Windows.UIElement.Focusable%2A> `false` on one of the elements within the template.</span></span>  
  
 [!code-xaml[RichTextBox_NoScrollViewer#_ControlTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBox_NoScrollViewer/CS/window1.xaml#_controltemplate)]
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c3662-520">Wenn Sie von <see cref="T:System.Windows.UIElement" /> direkt ableiten (im Gegensatz zu from <see cref="T:System.Windows.Controls.Control" /> ), sollten Sie überprüfen, ob das Element in den Fokus gesetzt werden kann, da das Element standardmäßig nicht für die Fokus verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="c3662-520">When deriving from <see cref="T:System.Windows.UIElement" /> directly (as opposed to from <see cref="T:System.Windows.Controls.Control" />), consider whether you wish your element to be focusable, because by default the element will not be focusable.</span></span> <span data-ttu-id="c3662-521">Wenn Sie möchten, dass das Element als Fokus verwendet werden kann, überschreiben Sie die Metadaten für diese Eigenschaft im statischen Konstruktor des Typs wie folgt:</span><span class="sxs-lookup"><span data-stu-id="c3662-521">If you wish your element to be focusable, override the metadata for this property within your type's static constructor as follows:</span></span> 
<span data-ttu-id="c3662-522">[! Code-csharp[corepseudocode # uielementshordeverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [! Code-vb[corepseudocode # uielementshordeverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]</span><span class="sxs-lookup"><span data-stu-id="c3662-522">[!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]</span></span> 
<span data-ttu-id="c3662-523">dabei <paramref name="myElement" /> sollte der Klassenname des Typs sein, für den Sie den Metadatenwert überschreiben.</span><span class="sxs-lookup"><span data-stu-id="c3662-523">where <paramref name="myElement" /> should be the class name of the type that you are overriding the metadata value on.</span></span></para></block>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberSignature Language="F#" Value="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-524">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.UIElement.Focusable" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="c3662-524">Occurs when the value of the <see cref="P:System.Windows.UIElement.Focusable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-525">Dieser Member ist ein- [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-525">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusableProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.FocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-526">Bezeichnet die <see cref="P:System.Windows.UIElement.Focusable" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-526">Identifies the <see cref="P:System.Windows.UIElement.Focusable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj&#xA;override this.GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="uIElement.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="c3662-527">Die zu überprüfende Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-527">The dependency property to check.</span></span></param>
        <summary><span data-ttu-id="c3662-528">Gibt den Wert der Basiseigenschaft für die angegebene Eigenschaft dieses Elements zurück, wobei alle möglichen animierten Werte aus einer ausgeführten oder beendeten Animation nicht berücksichtigt werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-528">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span></span></summary>
        <returns><span data-ttu-id="c3662-529">Der Eigenschaftswert, bei dem keine Animationen an die angegebene Abhängigkeitseigenschaft angefügt sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-529">The property value as if no animations are attached to the specified dependency property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-530">Wenn keine Animationen an die Eigenschaft angefügt sind, <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> ist der Rückgabewert immer identisch mit dem <xref:System.Windows.DependencyObject.GetValue%2A> Rückgabewert.</span><span class="sxs-lookup"><span data-stu-id="c3662-530">If no animations are attached to the property, then the <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="c3662-531">Wenn Animationen angefügt sind, werden alle möglichen von der Animation abgeleiteten Werte, einschließlich der Start-und Endwerte, ignoriert, und der Eigenschafts Wert wird basierend auf allen anderen möglichen Eingaben bestimmt.</span><span class="sxs-lookup"><span data-stu-id="c3662-531">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="c3662-532">Weitere Informationen finden Sie unter [Priorität von Abhängigkeitseigenschaftswerten](/dotnet/framework/wpf/advanced/dependency-property-value-precedence).</span><span class="sxs-lookup"><span data-stu-id="c3662-532">For more information, see [Dependency Property Value Precedence](/dotnet/framework/wpf/advanced/dependency-property-value-precedence).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-533">Im folgenden Beispiel wird ein Handler implementiert, der den Basiswert einer animierten <xref:System.Windows.FrameworkElement.Width%2A> Eigenschaft für einen sowie <xref:System.Windows.Controls.Button> den Basiswert einer Transformation meldet.</span><span class="sxs-lookup"><span data-stu-id="c3662-533">The following example implements a handler that reports the base value of an animated <xref:System.Windows.FrameworkElement.Width%2A> property on a <xref:System.Windows.Controls.Button>, as well as the base value of a transform.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#getanimationbasevalue)]
 [!code-vb[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#getanimationbasevalue)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetLayoutClip">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.Geometry GetLayoutClip (System.Windows.Size layoutSlotSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.Geometry GetLayoutClip(valuetype System.Windows.Size layoutSlotSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetLayoutClip (layoutSlotSize As Size) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::Geometry ^ GetLayoutClip(System::Windows::Size layoutSlotSize);" />
      <MemberSignature Language="F#" Value="abstract member GetLayoutClip : System.Windows.Size -&gt; System.Windows.Media.Geometry&#xA;override this.GetLayoutClip : System.Windows.Size -&gt; System.Windows.Media.Geometry" Usage="uIElement.GetLayoutClip layoutSlotSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutSlotSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="layoutSlotSize"><span data-ttu-id="c3662-534">Die vom Element bereitgestellte verfügbare Größe.</span><span class="sxs-lookup"><span data-stu-id="c3662-534">The available size provided by the element.</span></span></param>
        <summary><span data-ttu-id="c3662-535">Gibt eine alternative Clippinggeometrie zurück, die den Bereich darstellt, der abgeschnitten werden würde, wenn <see cref="P:System.Windows.UIElement.ClipToBounds" /> auf <see langword="true" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-535">Returns an alternative clipping geometry that represents the region that would be clipped if <see cref="P:System.Windows.UIElement.ClipToBounds" /> were set to <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="c3662-536">Die mögliche Clippinggeometrie.</span><span class="sxs-lookup"><span data-stu-id="c3662-536">The potential clipping geometry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-537">Die Standard Implementierung gibt einen legitimen Wert zurück, verwendet jedoch nicht den- `layoutSlotSize` Parameter in den Berechnungen.</span><span class="sxs-lookup"><span data-stu-id="c3662-537">The default implementation will return a legitimate value, but does not use the `layoutSlotSize` parameter in its calculations.</span></span> <span data-ttu-id="c3662-538">Stattdessen wird der Wert von verwendet <xref:System.Windows.UIElement.RenderSize%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-538">Instead it uses the value of <xref:System.Windows.UIElement.RenderSize%2A>.</span></span>  
  
 <span data-ttu-id="c3662-539">Diese Methode wird durch die sofort abgeleitete Klasse erheblich überschrieben <xref:System.Windows.FrameworkElement> , und die Überschreibung <xref:System.Windows.FrameworkElement> führt zu einem anspruchsvolleren Verhalten für allgemeine Elemente auf WPF-Frameworkebene.</span><span class="sxs-lookup"><span data-stu-id="c3662-539">This method is substantially overridden by the immediately derived <xref:System.Windows.FrameworkElement> class, and the <xref:System.Windows.FrameworkElement> override produces a more sophisticated behavior for general WPF framework-level elements.</span></span> <span data-ttu-id="c3662-540">Ausführliche Informationen finden Sie unter <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c3662-540">For details, see <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="abstract member GetUIParentCore : unit -&gt; System.Windows.DependencyObject&#xA;override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="uIElement.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3662-541">Gibt beim Überschreiben in einer abgeleiteten Klasse ein alternatives übergeordnetes [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]-Element für dieses Element zurück, wenn kein visuelles übergeordnetes Element vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-541">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span></span></summary>
        <returns><span data-ttu-id="c3662-542">Ein Objekt, wenn die Implementierung einer abgeleiteten Klasse eine alternative übergeordnete Verbindung melden kann.</span><span class="sxs-lookup"><span data-stu-id="c3662-542">An object, if implementation of a derived class has an alternate parent connection to report.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-543">Die standardmäßige virtuelle Implementierung dieser Methode gibt zurück `null` .</span><span class="sxs-lookup"><span data-stu-id="c3662-543">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="c3662-544"><xref:System.Windows.FrameworkElement> bietet eine praktische Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-544"><xref:System.Windows.FrameworkElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="c3662-545">Alternative übergeordnete Elemente werden für das Ereignis Routing verwendet, in Fällen, in denen ein Element eine Alternative übergeordnete Struktur erstellt, sodass seine Ereignisse auf eine Weise weitergeleitet werden, die von dem Standardmuster für das Routing der visuellen Struktur zum standardmäßigen übergeordneten Element oder nach unten in der Vorschau Routing Strategie abweicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-545">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-546">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag &amp;amp; Drop-Ereignis meldet, das dieses Element betrifft.</span><span class="sxs-lookup"><span data-stu-id="c3662-546">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-547">Das <xref:System.Windows.UIElement.GiveFeedback> Ereignis ermöglicht der Quelle eines Drag-Ereignisses, die Darstellung des Mauszeigers zu ändern, um dem Benutzer visuelles Feedback während eines Drag & Drop-Vorgangs zu geben.</span><span class="sxs-lookup"><span data-stu-id="c3662-547">The <xref:System.Windows.UIElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="c3662-548">Das visuelle Feedback verstärkt, dass ein Drag & Drop-Vorgang durchläuft.</span><span class="sxs-lookup"><span data-stu-id="c3662-548">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="c3662-549">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.GiveFeedback> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-549">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-550">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.GiveFeedback> werden an das zugrunde liegende <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-550">Event handlers that are attached to the <xref:System.Windows.UIElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-551">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-551">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-552">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-552">Identifier field</span></span>|<xref:System.Windows.UIElement.GiveFeedbackEvent>|  
|<span data-ttu-id="c3662-553">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-553">Routing strategy</span></span>|<span data-ttu-id="c3662-554">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-554">Bubbling</span></span>|  
|<span data-ttu-id="c3662-555">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-555">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="c3662-556">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewGiveFeedback> .</span><span class="sxs-lookup"><span data-stu-id="c3662-556">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="c3662-557"><xref:System.Windows.UIElement.OnGiveFeedback%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-557">Override <xref:System.Windows.UIElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-558">Identifiziert das <see cref="E:System.Windows.UIElement.GiveFeedback" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-558">Identifies the <see cref="E:System.Windows.UIElement.GiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-559">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-559">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-560">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-560">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-561">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-561">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-562">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-562">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-563">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-563">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.RoutedEventHandler " Usage="member this.GotFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-564">Tritt auf, wenn dieses Element den logischen Fokus erhält.</span><span class="sxs-lookup"><span data-stu-id="c3662-564">Occurs when this element gets logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-565">Der logische Fokus unterscheidet sich vom Tastaturfokus, wenn der Fokus absichtlich mithilfe eines Methoden Aufrufes erzwungen wird, der vorherige Tastaturfokus jedoch in einem anderen Bereich vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-565">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="c3662-566">In diesem Szenario behält der Tastaturfokus bei, und das Element, in dem eine <xref:System.Windows.UIElement.Focus%2A> Methode aufgerufen wird, erhält weiterhin den logischen Fokus.</span><span class="sxs-lookup"><span data-stu-id="c3662-566">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="c3662-567">Eine genauere Interpretation dieses Ereignisses besteht darin, dass es ausgelöst wird, wenn der Wert der- <xref:System.Windows.UIElement.IsFocused%2A> Eigenschaft eines Elements in der Route von in geändert `false` wird `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-567">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="c3662-568">Da dieses Ereignis bubblingerrouting verwendet, kann das Element, das den Fokus erhält, ein untergeordnetes Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-568">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="c3662-569">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, das den Fokus erhalten hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-569">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-570">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-570">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-571">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-571">Identifier field</span></span>|<xref:System.Windows.UIElement.GotFocusEvent>|  
|<span data-ttu-id="c3662-572">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-572">Routing strategy</span></span>|<span data-ttu-id="c3662-573">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-573">Bubbling</span></span>|  
|<span data-ttu-id="c3662-574">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-574">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="c3662-575">Es ist kein entsprechendes tunnelingereignis vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-575">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="c3662-576"><xref:System.Windows.UIElement.OnGotFocus%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-576">Override <xref:System.Windows.UIElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-577">Identifiziert das <see cref="E:System.Windows.UIElement.GotFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-577">Identifies the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-578">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-578">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-579">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-579">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-580">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-580">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-581">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-581">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-582">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-582">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-583">Tritt auf, wenn sich der Fokus der Tastatur auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-583">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-584"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> ist ein ähnliches Ereignis, das Statusänderungen in einer Eigenschaft nachverfolgt, die den Fokus Zustand für ein Element beibehält. Das <xref:System.Windows.UIElement.GotKeyboardFocus> Ereignis wird in vielen der gleichen Situationen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-584"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.UIElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="c3662-585">Da dieses Ereignis bubblingerrouting verwendet, kann das Element, das den Fokus besitzt, ein untergeordnetes Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-585">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="c3662-586">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, das den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="c3662-586">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="c3662-587">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.GotKeyboardFocus> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-587">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-588">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.GotKeyboardFocus> werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-588">Event handlers that are attached to the <xref:System.Windows.UIElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-589">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-589">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-590">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-590">Identifier field</span></span>|<xref:System.Windows.UIElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="c3662-591">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-591">Routing strategy</span></span>|<span data-ttu-id="c3662-592">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-592">Bubbling</span></span>|  
|<span data-ttu-id="c3662-593">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-593">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="c3662-594">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> .</span><span class="sxs-lookup"><span data-stu-id="c3662-594">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="c3662-595"><xref:System.Windows.UIElement.OnGotKeyboardFocus%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-595">Override <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-596">Identifiziert das <see cref="E:System.Windows.UIElement.GotKeyboardFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-596">Identifies the <see cref="E:System.Windows.UIElement.GotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-597">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-597">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-598">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-598">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-599">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-599">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-600">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-600">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-601">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-601">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-602">Tritt auf, wenn dieses Element die Mausauswahl erhält.</span><span class="sxs-lookup"><span data-stu-id="c3662-602">Occurs when this element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-603">Wenn ein Element die Maus erfasst, empfängt es auch dann Maus Eingaben, wenn sich der Mauszeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-603">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="c3662-604">Die Maus wird in der Regel nur während Drag & Drop-Vorgängen aufgezeichnet und bleibt so lange aufgezeichnet, bis die Drop-Aktion des Drag & Drop-Vorgangs auftritt.</span><span class="sxs-lookup"><span data-stu-id="c3662-604">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="c3662-605">Da dieses Ereignis bubblingerrouting verwendet, kann das-Element, das Capture aufweist, ein untergeordnetes-Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-605">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="c3662-606">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das eigentliche Element zu bestimmen, das über die Maus Aufzeichnung verfügt.</span><span class="sxs-lookup"><span data-stu-id="c3662-606">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="c3662-607">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.GotMouseCapture> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-607">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.UIElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-608">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.GotMouseCapture> werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-608">Event handlers that are attached to the <xref:System.Windows.UIElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-609">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-609">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-610">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-610">Identifier field</span></span>|<xref:System.Windows.UIElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="c3662-611">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-611">Routing strategy</span></span>|<span data-ttu-id="c3662-612">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-612">Bubbling</span></span>|  
|<span data-ttu-id="c3662-613">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-613">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="c3662-614">Es ist kein entsprechendes tunnelingereignis definiert.</span><span class="sxs-lookup"><span data-stu-id="c3662-614">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="c3662-615"><xref:System.Windows.UIElement.OnGotMouseCapture%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-615">Override <xref:System.Windows.UIElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-616">Identifiziert das <see cref="E:System.Windows.UIElement.GotMouseCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-616">Identifies the <see cref="E:System.Windows.UIElement.GotMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-617">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-617">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-618">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-618">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-619">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-619">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-620">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-620">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-621">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-621">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-622">Tritt auf, wenn dieses Element die Stiftauswahl erhält.</span><span class="sxs-lookup"><span data-stu-id="c3662-622">Occurs when this element captures the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-623">Wenn ein Element den Tablettstift erfasst, empfängt er die Stift Eingabe, auch wenn sich der Zeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-623">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="c3662-624">Der Tablettstift wird in der Regel nur bei Drag & Drop-Vorgängen aufgezeichnet und behält die Erfassung bei, bis die Drop-Aktion des Drag & Drop-Vorgangs auftritt.</span><span class="sxs-lookup"><span data-stu-id="c3662-624">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="c3662-625">Da dieses Ereignis bubblingerrouting verwendet, kann das-Element, das Capture aufweist, ein untergeordnetes-Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-625">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="c3662-626">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element mit Capture zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="c3662-626">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="c3662-627">Dieses Ereignis erstellt einen Alias für das angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.GotStylusCapture> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-627">This event creates an alias for the attached event for this class so that <xref:System.Windows.UIElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-628">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.GotStylusCapture> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-628">Event handlers that are attached to the <xref:System.Windows.UIElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-629">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-629">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-630">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-630">Identifier field</span></span>|<xref:System.Windows.UIElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="c3662-631">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-631">Routing strategy</span></span>|<span data-ttu-id="c3662-632">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-632">Bubbling</span></span>|  
|<span data-ttu-id="c3662-633">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-633">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="c3662-634">Es ist kein entsprechendes tunnelingereignis definiert.</span><span class="sxs-lookup"><span data-stu-id="c3662-634">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="c3662-635"><xref:System.Windows.UIElement.OnGotStylusCapture%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-635">Override <xref:System.Windows.UIElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-636">Identifiziert das <see cref="E:System.Windows.UIElement.GotStylusCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-636">Identifies the <see cref="E:System.Windows.UIElement.GotStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-637">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-637">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-638">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-638">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-639">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-639">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-640">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-640">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-641">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-641">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.GotTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.GotTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-642">Tritt ein, wenn eine Fingereingabe für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-642">Occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-643">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-643">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-644">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-644">Identifier field</span></span>|<xref:System.Windows.UIElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="c3662-645">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-645">Routing strategy</span></span>|<span data-ttu-id="c3662-646">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-646">Bubbling</span></span>|  
|<span data-ttu-id="c3662-647">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-647">Delegate</span></span>|<span data-ttu-id="c3662-648">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-648"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="c3662-649"><xref:System.Windows.UIElement.OnGotTouchCapture%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-649">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-650">Identifiziert das <see cref="E:System.Windows.UIElement.GotTouchCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-650">Identifies the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.UIElement.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-651">Ruft einen Wert ab, der angibt, ob dieses Element über animierte Eigenschaften verfügt.</span><span class="sxs-lookup"><span data-stu-id="c3662-651">Gets a value indicating whether this element has any animated properties.</span></span></summary>
        <value><span data-ttu-id="c3662-652"><see langword="true" />, wenn Animationen an eine der Eigenschaften dieses Elements angefügt sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-652"><see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-653">Diese Eigenschaft gibt `true` entweder für persistente (ungeklockte, immer ausgelaufende) Animationen oder für Animationen mit einer bestimmten Zeitachse zurück.</span><span class="sxs-lookup"><span data-stu-id="c3662-653">This property returns `true` either for persistent (unclocked, always-running) animations, or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasEffectiveKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HasEffectiveKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasEffectiveKeyboardFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEffectiveKeyboardFocus : bool" Usage="System.Windows.UIElement.HasEffectiveKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-654">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Windows.UIElement" /> den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="c3662-654">Gets a value that indicates whether the <see cref="T:System.Windows.UIElement" /> has focus.</span></span></summary>
        <value><span data-ttu-id="c3662-655"><see langword="true" />, wenn das <see cref="T:System.Windows.UIElement" /> den Fokus besitzt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-655"><see langword="true" /> if the <see cref="T:System.Windows.UIElement" /> has focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-656">Unterklassen können diese Eigenschaft überschreiben, um anzugeben, wann das Element über den Tastaturfokus verfügt.</span><span class="sxs-lookup"><span data-stu-id="c3662-656">Subclasses can override this property to specify when the element has keyboard focus.</span></span>  <span data-ttu-id="c3662-657">Dies ist nützlich, wenn Ihre <xref:System.Windows.UIElement> Elemente enthält, die den Tastaturfokus haben können, und Sie möchten, dass das Element meldet, dass es den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="c3662-657">This is useful when your <xref:System.Windows.UIElement> contains elements that can have keyboard focus and you want your element to report that it has focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3662-658">Implementiert <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />, um das Treffertestverhalten für Basiselemente bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-658">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="override this.HitTestCore : System.Windows.Media.GeometryHitTestParameters -&gt; System.Windows.Media.GeometryHitTestResult" Usage="uIElement.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="c3662-659">Beschreibt den durchzuführenden Treffertest, einschließlich des anfänglichen Trefferpunkts.</span><span class="sxs-lookup"><span data-stu-id="c3662-659">Describes the hit test to perform, including the initial hit point.</span></span></param>
        <summary><span data-ttu-id="c3662-660">Implementiert <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />, um das Treffertestverhalten für Basiselemente bereitzustellen (<see cref="T:System.Windows.Media.GeometryHitTestResult" /> wird zurückgegeben).</span><span class="sxs-lookup"><span data-stu-id="c3662-660">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.GeometryHitTestResult" />).</span></span></summary>
        <returns><span data-ttu-id="c3662-661">Ergebnisse des Tests, einschließlich der ausgewerteten Geometrie.</span><span class="sxs-lookup"><span data-stu-id="c3662-661">Results of the test, including the evaluated geometry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-662"><xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType>Weitere Informationen zum Überschreiben dieser Methode in weiteren abgeleiteten Klassen finden Sie in der ursprünglichen virtuellen Methode.</span><span class="sxs-lookup"><span data-stu-id="c3662-662">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="c3662-663">Beachten Sie, dass mehrere spezifische Steuerelemente ( <xref:System.Windows.Controls.TextBlock> z. b.) über unterschiedliche Implementierungen verfügen, die diese überschreiben.</span><span class="sxs-lookup"><span data-stu-id="c3662-663">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override this one.</span></span>  
  
 <span data-ttu-id="c3662-664">Diese Methode ist nicht für den Aufruf aus dem Anwendungscode vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="c3662-664">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="c3662-665">Diese Methode unterstützt interne Treffer Test Verhaltensweisen, die von verschiedenen Aspekten des Eingabe Systems verfügbar gemacht werden (z. b., ob sich der Mauszeiger über einem Element befindet).</span><span class="sxs-lookup"><span data-stu-id="c3662-665">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="override this.HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult" Usage="uIElement.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="c3662-666">Beschreibt den durchzuführenden Treffertest, einschließlich des anfänglichen Trefferpunkts.</span><span class="sxs-lookup"><span data-stu-id="c3662-666">Describes the hit test to perform, including the initial hit point.</span></span></param>
        <summary><span data-ttu-id="c3662-667">Implementiert <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" />, um das Treffertestverhalten für Basiselemente bereitzustellen (<see cref="T:System.Windows.Media.HitTestResult" /> wird zurückgegeben).</span><span class="sxs-lookup"><span data-stu-id="c3662-667">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.HitTestResult" />).</span></span></summary>
        <returns><span data-ttu-id="c3662-668">Die Ergebnisse des Tests, einschließlich des ausgewerteten Punkts.</span><span class="sxs-lookup"><span data-stu-id="c3662-668">Results of the test, including the evaluated point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-669"><xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType>Weitere Informationen zum Überschreiben dieser Methode in weiteren abgeleiteten Klassen finden Sie in der ursprünglichen virtuellen Methode.</span><span class="sxs-lookup"><span data-stu-id="c3662-669">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="c3662-670">Beachten Sie, dass mehrere spezifische Steuerelemente (z. b <xref:System.Windows.Controls.TextBlock> .) über unterschiedliche Implementierungen verfügen, die <xref:System.Windows.UIElement.HitTestCore%2A> gemäß der Definition durch Überschreiben <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-670">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override <xref:System.Windows.UIElement.HitTestCore%2A> as defined by <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="c3662-671">Diese Methode ist nicht für den Aufruf aus dem Anwendungscode vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="c3662-671">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="c3662-672">Diese Methode unterstützt interne Treffer Test Verhaltensweisen, die von verschiedenen Aspekten des Eingabe Systems verfügbar gemacht werden (z. b., ob sich der Mauszeiger über einem Element befindet).</span><span class="sxs-lookup"><span data-stu-id="c3662-672">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBindings : System.Windows.Input.InputBindingCollection" Usage="System.Windows.UIElement.InputBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-673">Ruft die Auflistung der mit diesem Element verbundenen Eingabebindungen ab.</span><span class="sxs-lookup"><span data-stu-id="c3662-673">Gets the collection of input bindings associated with this element.</span></span></summary>
        <value><span data-ttu-id="c3662-674">Die Auflistung der Eingabebindungen.</span><span class="sxs-lookup"><span data-stu-id="c3662-674">The collection of input bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-675">Eingabe Bindungen unterstützen die Bindung von Befehlen an Eingabegeräte.</span><span class="sxs-lookup"><span data-stu-id="c3662-675">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="c3662-676">Beispielsweise <xref:System.Windows.Input.MouseBinding> implementiert Eingabe Bindungen, die spezielle Eigenschaften für Maus Geräte enthalten.</span><span class="sxs-lookup"><span data-stu-id="c3662-676">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are particular to mouse devices.</span></span>  
  
 <span data-ttu-id="c3662-677">Die Auflistung der Eingabe Bindungen enthält sowohl Eingabe Bindungen, die den-Typ betreffen, als auch Eingabe Bindungen, die für die-Instanz deklariert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-677">The collection of input bindings will include both input bindings that pertain to the type as well as input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="c3662-678">Eine verwandte Eigenschaft, <xref:System.Windows.UIElement.CommandBindings%2A> , verwaltet eine Auflistung von Befehls Bindungen.</span><span class="sxs-lookup"><span data-stu-id="c3662-678">A related property, <xref:System.Windows.UIElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="c3662-679">Diese unterscheiden sich von Eingabe Bindungen darin, dass Sie die nächste Ebene der Befehls Verarbeitung darstellen und Aktionen darstellen, die an bekannte Befehle gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-679">These differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="c3662-680">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="c3662-680">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  
  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c3662-681">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="c3662-681">XAML Values</span></span>  
 <span data-ttu-id="c3662-682">*oneormoreinputbindungen*</span><span class="sxs-lookup"><span data-stu-id="c3662-682">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="c3662-683">Mindestens ein- <xref:System.Windows.Input.InputBinding> Element (in der Regel die von <xref:System.Windows.Input.KeyBinding> oder <xref:System.Windows.Input.MouseBinding> abgeleiteten Klassen).</span><span class="sxs-lookup"><span data-stu-id="c3662-683">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="c3662-684">Für jedes dieser wird erwartet, dass ein <xref:System.Windows.Input.InputBinding.Command%2A> -Attribut und ein- <xref:System.Windows.Input.InputBinding.Gesture%2A> Attribut festgelegt sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-684">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-685">Im folgenden Beispiel wird diese Eigenschaft in <xref:System.Windows.Window> mit einem einzelnen aufgefüllt <xref:System.Windows.Input.KeyBinding> .</span><span class="sxs-lookup"><span data-stu-id="c3662-685">The following example populates this property on a <xref:System.Windows.Window>, with a single <xref:System.Windows.Input.KeyBinding>.</span></span>  
  
 [!code-xaml[CommandingOverviewSnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 <span data-ttu-id="c3662-686">Weitere Informationen zur Syntax für Auflistungen [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] finden Sie [in der XAML-Syntax im Detail](/dotnet/framework/wpf/advanced/xaml-syntax-in-detail).</span><span class="sxs-lookup"><span data-stu-id="c3662-686">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](/dotnet/framework/wpf/advanced/xaml-syntax-in-detail).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="InputHitTest">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement InputHitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.IInputElement InputHitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputHitTest (point As Point) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::IInputElement ^ InputHitTest(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.InputHitTest : System.Windows.Point -&gt; System.Windows.IInputElement" Usage="uIElement.InputHitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="c3662-687">Die Offsetkoordinaten innerhalb dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="c3662-687">The offset coordinates within this element.</span></span></param>
        <summary><span data-ttu-id="c3662-688">Gibt das Eingabeelement innerhalb des aktuellen Elements zurück, das sich an den angegebenen Koordinaten befindet, relativ zum Ursprung des aktuellen Elements.</span><span class="sxs-lookup"><span data-stu-id="c3662-688">Returns the input element within the current element that is at the specified coordinates, relative to the current element's origin.</span></span></summary>
        <returns><span data-ttu-id="c3662-689">Das untergeordnete Element, das sich an der angegebenen Position befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-689">The element child that is located at the given position.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-690"><xref:System.Windows.IInputElement> wird als Rückgabetyp zurückgegeben, da dieser Typ eine gemeinsame Schnittstelle sowohl für <xref:System.Windows.UIElement> als auch für ist <xref:System.Windows.ContentElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-690"><xref:System.Windows.IInputElement> is returned as the return type, because that type is a common interface for both <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="c3662-691">Anschließend können Sie den Rückgabetyp entsprechend umwandeln oder die-Schnittstellen Instanz für bestimmte Member verwenden, die von der- <xref:System.Windows.IInputElement> Schnittstelle definiert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-691">You can then cast the return type appropriately, or use the interface instance for certain members that are defined by the <xref:System.Windows.IInputElement> interface.</span></span>  
  
 <span data-ttu-id="c3662-692">Diese Methode wird in der Regel nicht aus dem Anwendungscode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-692">This method typically is not called from your application code.</span></span> <span data-ttu-id="c3662-693">Das Aufrufen dieser Methode ist nur geeignet, wenn Sie eine beträchtliche Menge der bereits vorhandenen Eingabe Features auf niedriger Ebene implementieren möchten, z. b. das Neuerstellen der Maus Geräte Logik.</span><span class="sxs-lookup"><span data-stu-id="c3662-693">Calling this method is only appropriate if you intend to re-implement a substantial amount of the low level input features that are already present, such as recreating mouse device logic.</span></span>  
  
 <span data-ttu-id="c3662-694"><xref:System.Windows.IContentHost> vertraggibt eine <xref:System.Windows.IContentHost.InputHitTest%2A> Methode mit derselben Signatur aus, die von einigen Elementen explizit implementiert werden muss.</span><span class="sxs-lookup"><span data-stu-id="c3662-694"><xref:System.Windows.IContentHost> contracts an <xref:System.Windows.IContentHost.InputHitTest%2A> method with the same signature, which some elements choose to implement explicitly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateArrange">
      <MemberSignature Language="C#" Value="public void InvalidateArrange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateArrange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateArrange" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateArrange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateArrange();" />
      <MemberSignature Language="F#" Value="member this.InvalidateArrange : unit -&gt; unit" Usage="uIElement.InvalidateArrange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3662-695">Erklärt den Anordnungszustand (das Layout) des Elements für ungültig.</span><span class="sxs-lookup"><span data-stu-id="c3662-695">Invalidates the arrange state (layout) for the element.</span></span> <span data-ttu-id="c3662-696">Nach der Ungültigkeitserklärung wird das Layout des Elements aktualisiert, was asynchron erfolgt, es sei denn, es wird anschließend durch <see cref="M:System.Windows.UIElement.UpdateLayout" /> erzwungen.</span><span class="sxs-lookup"><span data-stu-id="c3662-696">After the invalidation, the element will have its layout updated, which will occur asynchronously unless subsequently forced by <see cref="M:System.Windows.UIElement.UpdateLayout" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-697">Häufige Aufrufe von <xref:System.Windows.UIElement.InvalidateArrange%2A> oder insbesondere, um <xref:System.Windows.UIElement.UpdateLayout%2A> erhebliche Leistungs Konsequenzen zu haben.</span><span class="sxs-lookup"><span data-stu-id="c3662-697">Frequent calls to <xref:System.Windows.UIElement.InvalidateArrange%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="c3662-698">Vermeiden Sie daher das Aufrufen dieser Methode, es sei denn, Sie benötigen unbedingt einen präzisen Layoutzustand für nachfolgende Aufrufe anderer APIs in Ihrem Code.</span><span class="sxs-lookup"><span data-stu-id="c3662-698">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other APIs in your code.</span></span> <span data-ttu-id="c3662-699">Ein erweitertes Szenario, in dem Sie möglicherweise aufzurufen <xref:System.Windows.UIElement.InvalidateArrange%2A> , ist, wenn Sie eine <xref:System.Windows.PropertyChangedCallback> für eine Abhängigkeits Eigenschaft erstellen, die sich nicht in einer <xref:System.Windows.Freezable> oder einer <xref:System.Windows.FrameworkElement> abgeleiteten Klasse befindet, die beim Ändern des Layouts weiterhin den Anordnungs Durchlauf beeinflusst.</span><span class="sxs-lookup"><span data-stu-id="c3662-699">An advanced scenario where you might call <xref:System.Windows.UIElement.InvalidateArrange%2A> is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the arrange pass of layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateMeasure">
      <MemberSignature Language="C#" Value="public void InvalidateMeasure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateMeasure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateMeasure" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateMeasure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateMeasure();" />
      <MemberSignature Language="F#" Value="member this.InvalidateMeasure : unit -&gt; unit" Usage="uIElement.InvalidateMeasure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3662-700">Erklärt den Maßzustand (Layout) des Elements für ungültig.</span><span class="sxs-lookup"><span data-stu-id="c3662-700">Invalidates the measurement state (layout) for the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-701">Wenn Sie diese Methode aufrufen <xref:System.Windows.UIElement.InvalidateArrange%2A> , wird auch intern aufgerufen. es ist nicht erforderlich, <xref:System.Windows.UIElement.InvalidateMeasure%2A> und nacheinander aufzurufen <xref:System.Windows.UIElement.InvalidateArrange%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-701">Calling this method also calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally, there is no need to call <xref:System.Windows.UIElement.InvalidateMeasure%2A> and <xref:System.Windows.UIElement.InvalidateArrange%2A> in succession.</span></span> <span data-ttu-id="c3662-702">Nach der Ungültigkeits Validierung wird das Layout des-Elements aktualisiert, was asynchron erfolgt, es sei denn, <xref:System.Windows.UIElement.UpdateLayout%2A> wird aufgerufen, um eine synchrone Layoutänderung zu erzwingen.</span><span class="sxs-lookup"><span data-stu-id="c3662-702">After the invalidation, the element will have its layout updated, which will occur asynchronously, unless <xref:System.Windows.UIElement.UpdateLayout%2A> is called to force a synchronous layout change.</span></span>  
  
 <span data-ttu-id="c3662-703">Das Layoutsystem auf WPF-Frameworkebene führt seine eigene Bearbeitung von Änderungen in der visuellen Struktur eines Elements durch. in den meisten Fällen wird das Layoutsystem bei Bedarf das Äquivalent dieser Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-703">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and in most common layout invalidation cases the layout system is calling the equivalent of this method when necessary.</span></span> <span data-ttu-id="c3662-704">Diese Methode sollte nur aufgerufen werden, wenn Sie eine komplette layoutimplementierung erstellen, die eine direkte Bearbeitung der Elementstruktur oder ähnliche Erweiterte Szenarien bewirkt.</span><span class="sxs-lookup"><span data-stu-id="c3662-704">You should only call this method if you are producing a complete layout implementation, which does direct manipulation of the element tree, or similar advanced scenarios.</span></span> <span data-ttu-id="c3662-705">Ein solches Szenario besteht darin, dass Sie ein- <xref:System.Windows.PropertyChangedCallback> Objekt für eine Abhängigkeits Eigenschaft erstellen, die sich nicht in einer <xref:System.Windows.Freezable> <xref:System.Windows.FrameworkElement> abgeleiteten Klasse oder einer abgeleiteten Klasse befindet, die sich bei Änderungen weiterhin auf den Measure-Durchlauf auswirkt.</span><span class="sxs-lookup"><span data-stu-id="c3662-705">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the measure pass of layout when it changes.</span></span>  
  
 <span data-ttu-id="c3662-706">Häufige Aufrufe von <xref:System.Windows.UIElement.InvalidateMeasure%2A> oder insbesondere, um <xref:System.Windows.UIElement.UpdateLayout%2A> erhebliche Leistungs Konsequenzen zu haben.</span><span class="sxs-lookup"><span data-stu-id="c3662-706">Frequent calls to <xref:System.Windows.UIElement.InvalidateMeasure%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="c3662-707">Vermeiden Sie daher das Aufrufen dieser Methode, es sei denn, Sie benötigen unbedingt einen präzisen Layoutzustand für nachfolgende Aufrufe anderer APIs in Ihrem Code.</span><span class="sxs-lookup"><span data-stu-id="c3662-707">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other APIs in your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateVisual">
      <MemberSignature Language="C#" Value="public void InvalidateVisual ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateVisual() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateVisual" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateVisual ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateVisual();" />
      <MemberSignature Language="F#" Value="member this.InvalidateVisual : unit -&gt; unit" Usage="uIElement.InvalidateVisual " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3662-708">Macht das Rendern des Elements ungültig und erzwingt einen vollständig neuen Layoutdurchlauf.</span><span class="sxs-lookup"><span data-stu-id="c3662-708">Invalidates the rendering of the element, and forces a complete new layout pass.</span></span> <span data-ttu-id="c3662-709"><see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> wird aufgerufen, sobald der Layoutzyklus abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-709"><see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> is called after the layout cycle is completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-710">Diese Methode ruft <xref:System.Windows.UIElement.InvalidateArrange%2A> intern auf.</span><span class="sxs-lookup"><span data-stu-id="c3662-710">This method calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally.</span></span>  
  
 <span data-ttu-id="c3662-711">Diese Methode wird im Allgemeinen nicht aus dem Anwendungscode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-711">This method is not generally called from your application code.</span></span> <span data-ttu-id="c3662-712">Das Layoutsystem auf WPF-Frameworkebene führt seine eigene Bearbeitung von Änderungen in der visuellen Struktur eines Elements durch und würde bei Bedarf das Äquivalent dieser Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-712">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and would be calling the equivalent of this method when necessary already.</span></span> <span data-ttu-id="c3662-713">Das Aufrufen dieser Methode ist nur für erweiterte Szenarios erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c3662-713">Calling this method is necessary only for advanced scenarios.</span></span> <span data-ttu-id="c3662-714">Ein solches Szenario besteht darin, dass Sie ein- <xref:System.Windows.PropertyChangedCallback> Objekt für eine Abhängigkeits Eigenschaft erstellen, die sich nicht in einer von <xref:System.Windows.Freezable> oder <xref:System.Windows.FrameworkElement> abgeleiteten Klasse befindet, die sich bei einer Änderung weiterhin auf das Layout auswirkt.</span><span class="sxs-lookup"><span data-stu-id="c3662-714">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
      </Docs>
    </Member>
    <Member MemberName="IsArrangeValid">
      <MemberSignature Language="C#" Value="public bool IsArrangeValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArrangeValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsArrangeValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArrangeValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArrangeValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArrangeValid : bool" Usage="System.Windows.UIElement.IsArrangeValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-715">Ruft einen Wert ab, der angibt, ob die berechnete Größe und die berechnete Position von untergeordneten Elementen im Layout dieses Elements gültig sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-715">Gets a value indicating whether the computed size and position of child elements in this element's layout are valid.</span></span></summary>
        <value><span data-ttu-id="c3662-716"><see langword="true" />, wenn die Größe und die Position im Layout gültig sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-716"><see langword="true" /> if the size and position of layout are valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-717">Sie können erzwingen, dass die Anordnung für ungültig erklärt wird, indem Sie <xref:System.Windows.UIElement.InvalidateArrange%2A> für dieses Element (oder die zugehörigen übergeordneten Elemente) aufrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-717">You can force arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateArrange%2A> on this element (or its parents).</span></span> <span data-ttu-id="c3662-718">Dadurch wird das Layout für die Neukomposition zu einem Zeitpunkt festgelegt, zu dem das Layoutsystem bestimmt.</span><span class="sxs-lookup"><span data-stu-id="c3662-718">This flags the layout for recomposition at such time as the layout system determines.</span></span> <span data-ttu-id="c3662-719">Alternativ kann ein sofortiger Aufrufvorgang erfolgen <xref:System.Windows.UIElement.UpdateLayout%2A> , aber dies sollte nur erfolgen, wenn sicher ist, dass keine weiteren Invalidierungen ausstehen (eine große Anzahl unnötig erzwungener Updates wirkt sich auf die Leistung aus).</span><span class="sxs-lookup"><span data-stu-id="c3662-719">Alternatively, an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A> could be made, but this should only be done if it is certain that no further invalidations are pending (a large number of unnecessarily forced updates has performance consequences).</span></span>  
  
 <span data-ttu-id="c3662-720"><xref:System.Windows.UIElement.IsArrangeValid%2A> darf nicht sein `true` , es sei denn <xref:System.Windows.UIElement.IsMeasureValid%2A> , ist auch `true` (beim Layoutprozess kann die Anordnung ohne gültige Messung nicht gültig sein).</span><span class="sxs-lookup"><span data-stu-id="c3662-720"><xref:System.Windows.UIElement.IsArrangeValid%2A> cannot be `true` unless <xref:System.Windows.UIElement.IsMeasureValid%2A> is also `true` (in the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
        <altmember cref="P:System.Windows.UIElement.IsMeasureValid" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.UIElement.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-721">Dient zum Abrufen oder Festlegen eines Werts, der angibt, ob dieses Element auf der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-721">Gets or sets a value indicating whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  <span data-ttu-id="c3662-722">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-722">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-723"><see langword="true" />, wenn das Element aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-723"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c3662-724">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-724">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-725">Beachten Sie, dass diese Eigenschaft durch klassenspezifische Implementierungen von <xref:System.Windows.UIElement.IsEnabledCore%2A> für bestimmte Elemente, häufig zur Laufzeit, beeinflusst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-725">Note that this property is influenced by class-specific implementations of <xref:System.Windows.UIElement.IsEnabledCore%2A> on particular elements, often at runtime.</span></span> <span data-ttu-id="c3662-726">Der hier aufgeführte Standardwert ist daher manchmal nicht wirksam.</span><span class="sxs-lookup"><span data-stu-id="c3662-726">Therefore, the default value listed here is sometimes not effective.</span></span> <span data-ttu-id="c3662-727">Beispielsweise ist eine <xref:System.Windows.Controls.Primitives.ScrollBar> immer dann, <xref:System.Windows.UIElement.IsEnabled%2A> `false` Wenn festgestellt wird, dass keine Bild Lauf Leiste unterstützt werden muss.</span><span class="sxs-lookup"><span data-stu-id="c3662-727">For instance, a <xref:System.Windows.Controls.Primitives.ScrollBar> will be <xref:System.Windows.UIElement.IsEnabled%2A> `false` whenever it is determined that there is no need to support a scrollbar.</span></span> <span data-ttu-id="c3662-728">Der Versuch, diesen Wert festzulegen, wird auch möglicherweise durch den von zurückgegebenen Wert überschrieben <xref:System.Windows.UIElement.IsEnabledCore%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-728">Attempting to set this value will also potentially be overridden by the value returned by <xref:System.Windows.UIElement.IsEnabledCore%2A>.</span></span>  
  
 <span data-ttu-id="c3662-729">Nicht aktivierte Elemente werden nicht an Treffer Tests oder dem Fokus beteiligt und werden daher nicht als Quellen für Eingabeereignisse verwendet.</span><span class="sxs-lookup"><span data-stu-id="c3662-729">Elements that are not enabled do not participate in hit testing or focus and therefore will not be sources of input events.</span></span>  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-730">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-730">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-731">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-731">Identifier field</span></span>|<xref:System.Windows.UIElement.IsEnabledProperty>|  
|<span data-ttu-id="c3662-732">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-732">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-733">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-733">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c3662-734">Das folgende Beispiel zeigt einen Handler auf einer Schaltfläche, die bei Ausführung <xref:System.Windows.UIElement.IsEnabled%2A> `false` für eine andere benannte Schaltfläche festgelegt wird `b1` .</span><span class="sxs-lookup"><span data-stu-id="c3662-734">The following example shows a handler on one button that when executed will set <xref:System.Windows.UIElement.IsEnabled%2A> `false` on another named button `b1`.</span></span>  
  
 [!code-csharp[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/CSharp/default.xaml.cs#handler)]
 [!code-vb[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/VisualBasic/default.xaml.vb#handler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-735">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsEnabled" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-735">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsEnabled" /> property on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-736">Dieser Member ist ein- [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-736">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.UIElement.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-737">Ruft einen Wert ab, der in abgeleiteten Klassen zum Rückgabewert von <see cref="P:System.Windows.UIElement.IsEnabled" /> wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-737">Gets a value that becomes the return value of <see cref="P:System.Windows.UIElement.IsEnabled" /> in derived classes.</span></span></summary>
        <value><span data-ttu-id="c3662-738"><see langword="true" />, wenn das Element aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-738"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c3662-739">Die Standard Implementierung dieser Eigenschaft speichert den Wert zwischen und berechnet auch, ob das übergeordnete Element dieses Elements aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-739">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span></span> <span data-ttu-id="c3662-740">(Wenn das übergeordnete Element nicht aktiviert ist, kann das untergeordnete Element nicht effektiv aktiviert werden [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] .) Wenn Sie diese Implementierung außer Kraft setzen möchten, stellen Sie sicher, dass Sie die Basis Implementierung zum Beibehalten dieses Verhaltens aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-740">(If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span></span>  
  
<span data-ttu-id="c3662-741">Die- <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> Klasse stellt eine vorhandene Überschreibungs Implementierung dieser Eigenschaft bereit.</span><span class="sxs-lookup"><span data-stu-id="c3662-741">The <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> class provides an existing override implementation of this property.</span></span> <span data-ttu-id="c3662-742">Diese außer Kraft Setzung bestimmt, ob der Inhalt im Inhalts Präsentationsbereich den verfügbaren Bereich überschreitet.</span><span class="sxs-lookup"><span data-stu-id="c3662-742">This override determines whether the content inside the content presentation area exceeds the available area.</span></span> <span data-ttu-id="c3662-743">Wenn der Inhalt den Bereich überschreitet, wird der Bild Lauf Leiste-Teil aktiviert.</span><span class="sxs-lookup"><span data-stu-id="c3662-743">If the content does exceed the area, the scrollbar portion is enabled.</span></span> <span data-ttu-id="c3662-744">Andernfalls ist die Scrollleiste nicht aktiviert.</span><span class="sxs-lookup"><span data-stu-id="c3662-744">Otherwise, the scrollbar is not enabled.</span></span></para></block>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
        <altmember cref="P:System.Windows.UIElement.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-745">Bezeichnet die <see cref="P:System.Windows.UIElement.IsEnabled" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-745">Identifies the <see cref="P:System.Windows.UIElement.IsEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="System.Windows.UIElement.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-746">Ruft einen Wert ab, der bestimmt, ob dieses Element den logischen Fokus hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-746">Gets a value that determines whether this element has logical focus.</span></span>  <span data-ttu-id="c3662-747">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-747">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-748"><see langword="true" />, wenn dieses Element den logischen Fokus hat, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-748"><see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-749">Der logische Fokus kann sich vom Tastaturfokus unterscheiden, wenn eine Anwendung über mehrere Fokusbereiche verfügt, z. b. zwischen den Menü Inhalten und dem Rest der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="c3662-749">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="c3662-750">In diesem Szenario kann sich der Tastaturfokus nur auf einem Element der Benutzeroberfläche der Anwendung befinden. bestimmte Elemente in anderen Schwerpunkt Teilungen behalten jedoch möglicherweise weiterhin den logischen Fokus.</span><span class="sxs-lookup"><span data-stu-id="c3662-750">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="c3662-751">Weitere Informationen zum logischen Fokus finden Sie unter [Fokus Übersicht](/dotnet/framework/wpf/advanced/focus-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-751">For more information on logical focus, see [Focus Overview](/dotnet/framework/wpf/advanced/focus-overview).</span></span>  
  
 <span data-ttu-id="c3662-752">Der Fokus wird nicht durch Festlegen dieser Eigenschaft festgelegt (schreibgeschützt).</span><span class="sxs-lookup"><span data-stu-id="c3662-752">You do not set focus by setting this property (it is read-only).</span></span> <span data-ttu-id="c3662-753">Die typische Verwendung für diese Eigenschaft besteht darin, Sie als Abhängigkeits Eigenschaft für oder zu verwenden <xref:System.Windows.Setter> <xref:System.Windows.EventTrigger> .</span><span class="sxs-lookup"><span data-stu-id="c3662-753">The typical use for this property is to use it as a dependency property for a <xref:System.Windows.Setter> or <xref:System.Windows.EventTrigger>.</span></span> <span data-ttu-id="c3662-754">Um den Fokus Programm gesteuert festzulegen, wird aufgerufen <xref:System.Windows.UIElement.Focus%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-754">To set focus programmatically, call <xref:System.Windows.UIElement.Focus%2A>.</span></span> <span data-ttu-id="c3662-755">Der Fokus kann auch durch eine Benutzeraktion oder durch Implementierung von Steuerelementen festgelegt werden, die möglicherweise das Verhalten der Maus Erfassung einschließen.</span><span class="sxs-lookup"><span data-stu-id="c3662-755">Focus can also be set by user action or by control implementations, which possibly include mouse capture behavior.</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-756">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-756">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-757">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-757">Identifier field</span></span>|<xref:System.Windows.UIElement.IsFocusedProperty>|  
|<span data-ttu-id="c3662-758">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-758">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-759">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-759">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c3662-760">Das folgende Beispiel ist ein Code Handler, der den Hintergrund eines-Steuer Elements ändert, wenn es fokussiert ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-760">The following example is a code handler that changes the background of a control when it is focused.</span></span>  
  
 [!code-csharp[PopupSimple#IsFocused](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSimple/CSharp/Window1.xaml.cs#isfocused)]  
  
 <span data-ttu-id="c3662-761">Eine andere gängige Methode zum Erreichen desselben Effekts ist das Platzieren eines <xref:System.Windows.Trigger> in der <xref:System.Windows.Style> eines Steuer Elements. dieser Ansatz erfordert keine Behandlung bestimmter Ereignisse mit Code Behind und ermöglicht Entwicklern einen besseren Zugriff auf die interaktive und grafische Natur von [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="c3662-761">Another common way to achieve this same effect is to place a <xref:System.Windows.Trigger> in the <xref:System.Windows.Style> of a control; this approach does not require handling specific events with code-behind and allows designers greater access to the interactive and graphical nature of the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="c3662-762">Ein Beispiel finden Sie unter Gewusst [wie: Erstellen eines äußeren Glanz Effekts](https://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1).</span><span class="sxs-lookup"><span data-stu-id="c3662-762">For an example, see [How to: Create an Outer Glow Effect](https://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-763">Bezeichnet die <see cref="P:System.Windows.UIElement.IsFocused" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-763">Identifies the <see cref="P:System.Windows.UIElement.IsFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisible">
      <MemberSignature Language="C#" Value="public bool IsHitTestVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsHitTestVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHitTestVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisible : bool with get, set" Usage="System.Windows.UIElement.IsHitTestVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-764">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob dieses Element möglicherweise als Treffertestergebnis von einem Teil des gerenderten Inhalts zurückgegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="c3662-764">Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content.</span></span> <span data-ttu-id="c3662-765">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-765">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-766"><see langword="true" />, wenn dieses Element als Treffertestergebnis von mindestens einem Punkt zurückgegeben werden konnte, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-766"><see langword="true" /> if this element could be returned as a hit test result from at least one point; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c3662-767">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-767">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-768">Der effektive Wert dieser Eigenschaft wird von den relativen Positionen der Treffer Test fähige-Elemente in der logischen Struktur beeinflusst.</span><span class="sxs-lookup"><span data-stu-id="c3662-768">The effective value of this property is influenced by the relative positions of hit testable elements in the logical tree.</span></span> <span data-ttu-id="c3662-769">Wenn ein Element beispielsweise ein untergeordnetes Element eines Elements ist, das nicht als Treffer Test sichtbar ist, bleibt der effektive Wert der Eigenschaft für das untergeordnete Element bestehen `false` , auch wenn versucht wird, diesen Wert lokal festzulegen.</span><span class="sxs-lookup"><span data-stu-id="c3662-769">For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain `false`, even if attempting to set that value locally.</span></span> <span data-ttu-id="c3662-770">Aus diesem Grund ist es wichtig, dass Sie auf einem zusammengesetzten Steuerelement nicht auf festlegen, <xref:System.Windows.UIElement.IsHitTestVisible%2A> `false` es sei denn, Sie möchten keine Eingaben oder Treffer Tests für dieses Steuerelement ausführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-770">For this reason, it is important that you do not set <xref:System.Windows.UIElement.IsHitTestVisible%2A> to `false` on a composited control unless you do not want any input or hit testing on that control.</span></span> <span data-ttu-id="c3662-771">Weitere Informationen zu Treffertests finden Sie unter [Treffertests in der visuellen Ebene](/dotnet/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer).</span><span class="sxs-lookup"><span data-stu-id="c3662-771">For more information on hit testing, see [Hit Testing in the Visual Layer](/dotnet/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer).</span></span>  
  
<a name="dependencyPropertyInfo_IsHitTestVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-772">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-772">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-773">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-773">Identifier field</span></span>|<xref:System.Windows.UIElement.IsHitTestVisibleProperty>|  
|<span data-ttu-id="c3662-774">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-774">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-775">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-775">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsHitTestVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsHitTestVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-776">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsHitTestVisible" />-Abhängigkeitseigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-776">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-777">Dieser Member ist ein- [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-777">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHitTestVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsHitTestVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHitTestVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHitTestVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHitTestVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsHitTestVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-778">Bezeichnet die <see cref="P:System.Windows.UIElement.IsHitTestVisible" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-778">Identifies the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodEnabled : bool" Usage="System.Windows.UIElement.IsInputMethodEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-779">Ruft einen Wert ab, der angibt, ob ein Eingabemethodensystem wie z. B. ein [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)] für die Verarbeitung von Eingaben für dieses Element aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-779">Gets a value indicating whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)],  is enabled for processing the input to this element.</span></span></summary>
        <value><span data-ttu-id="c3662-780"><see langword="true" />, wenn eine Eingabemethode aktiv ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-780"><see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c3662-781">Der Standardwert der zugrunde liegenden verknüpften Eigenschaft ist <see langword="true;" />, jedoch wird dieser Wert durch den tatsächlichen Zustand der Eingabemethoden zur Laufzeit beeinflusst.</span><span class="sxs-lookup"><span data-stu-id="c3662-781">The default value of the underlying attached property is <see langword="true;" /> however, this will be influenced by the actual state of input methods at runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-782">Diese Eigenschaft gibt den Wert zurück, der von der angefügten-Eigenschaft <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> für die derzeit aktivierten Eingabemethoden zurückgegeben wird (Tastatur, Sprache und andere Eingabegeräte).</span><span class="sxs-lookup"><span data-stu-id="c3662-782">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocused : bool" Usage="System.Windows.UIElement.IsKeyboardFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-783">Ruft einen Wert ab, der angibt, ob dieses Element über den Tastaturfokus verfügt.</span><span class="sxs-lookup"><span data-stu-id="c3662-783">Gets a value indicating whether this element has keyboard focus.</span></span>  <span data-ttu-id="c3662-784">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-784">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-785"><see langword="true" />, wenn dieses Element über den Tastaturfokus verfügt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-785"><see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c3662-786">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-786">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-787">Änderungen am festgelegten Wert dieser Eigenschaft können von Fokus bezogenen Ereignissen begleitet werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-787">Changes to the determined value of this property may be accompanied by focus-related events.</span></span>  
  
 <span data-ttu-id="c3662-788"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> und <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> werden üblicherweise innerhalb von Klassen Ereignis Handlern für andere Eingabe bezogene Ereignisse verwendet, um beispielsweise zu bestimmen, ob das Element bereits über den Tastaturfokus verfügt, oder um Determinationen vorzunehmen, wenn Mausereignisse und Tastatur Ereignisse in Verbindung auftreten.</span><span class="sxs-lookup"><span data-stu-id="c3662-788"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-789">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-789">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-790">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-790">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="c3662-791">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-791">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-792">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-792">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
        <altmember cref="E:System.Windows.UIElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-793">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsKeyboardFocused" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-793">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-794">Dieser Member ist ein- [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-794">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsKeyboardFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-795">Bezeichnet die <see cref="P:System.Windows.UIElement.IsKeyboardFocused" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-795">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithin : bool" Usage="System.Windows.UIElement.IsKeyboardFocusWithin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-796">Ruft einen Wert ab, der angibt, ob sich der Tastaturfokus innerhalb des Elements oder in seinen untergeordneten Elementen in der visuellen Struktur befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-796">Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.</span></span>  <span data-ttu-id="c3662-797">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-797">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-798"><see langword="true" />, wenn sich der Tastaturfokus auf dem Element oder seinen untergeordneten Elementen befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-798"><see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-799">Durch Änderungen am Wert dieser Eigenschaft wird normalerweise das- <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> Ereignis angehoben, es sei denn, eine abgeleitete Klasse wurde überschrieben, <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> um das Ereignis zu unterdrücken.</span><span class="sxs-lookup"><span data-stu-id="c3662-799">Changes to the value of this property typically raise the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="c3662-800">Diese Eigenschaft wird nicht direkt festgelegt, aber Sie können den Fokus auf ein Element festlegen, indem Sie aufrufen <xref:System.Windows.UIElement.Focus%2A> , oder indem Sie eine <xref:System.Windows.UIElement.MoveFocus%2A> Anforderung vornehmen.</span><span class="sxs-lookup"><span data-stu-id="c3662-800">You do not set this property directly, but you can set the focus to an element by calling <xref:System.Windows.UIElement.Focus%2A>, or by making a <xref:System.Windows.UIElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="c3662-801">Dieser Eigenschafts Wert kann durch beide Methodenaufrufe geändert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-801">Either of these method calls might change this property value.</span></span>  
  
 <span data-ttu-id="c3662-802"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> und <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> werden in der Regel innerhalb von Klassen Ereignis Handlern für andere Eingabe bezogene Ereignisse verwendet, um beispielsweise zu bestimmen, ob das Element bereits über den Tastaturfokus verfügt, oder um Determinationen vorzunehmen, wenn Mausereignisse und Tastatur Ereignisse in Verbindung treten.</span><span class="sxs-lookup"><span data-stu-id="c3662-802"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-803">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-803">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-804">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-804">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="c3662-805">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-805">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-806">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-806">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-807">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-807">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-808">Dieser Member ist ein- [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-808">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsKeyboardFocusWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-809">Bezeichnet die <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-809">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabled">
      <MemberSignature Language="C#" Value="public bool IsManipulationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManipulationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsManipulationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsManipulationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManipulationEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsManipulationEnabled : bool with get, set" Usage="System.Windows.UIElement.IsManipulationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-810">Ruft einen Wert ab, der angibt, ob Manipulationsereignisse in dieser <see cref="T:System.Windows.UIElement" />-Klasse aktiviert werden, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="c3662-810">Gets or sets a value that indicates whether manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />.</span></span></summary>
        <value><span data-ttu-id="c3662-811"><see langword="true" />, wenn Manipulationsereignisse in dieser <see cref="T:System.Windows.UIElement" />-Klasse aktiviert werden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-811"><see langword="true" /> if manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c3662-812">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-812">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-813">Legen Sie diese Eigenschaft auf "true" fest, wenn die <xref:System.Windows.UIElement> <xref:System.Windows.UIElement.ManipulationStarting> <xref:System.Windows.UIElement.ManipulationStarted> -, <xref:System.Windows.UIElement.ManipulationDelta> -,-,-, <xref:System.Windows.UIElement.ManipulationInertiaStarting> <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> -und- <xref:System.Windows.UIElement.ManipulationCompleted> Ereignisse empfangen soll.</span><span class="sxs-lookup"><span data-stu-id="c3662-813">Set this property to true if you want the <xref:System.Windows.UIElement> to receive the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationStarted>, <xref:System.Windows.UIElement.ManipulationDelta>, <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>, and <xref:System.Windows.UIElement.ManipulationCompleted> events.</span></span> <span data-ttu-id="c3662-814">Weitere Informationen zu Manipulationen finden Sie unter Übersicht über die [Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-814">For more information about manipulations, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  <span data-ttu-id="c3662-815">Ein Beispiel für eine Anwendung, die auf Manipulationen antwortet, finden Sie unter Exemplarische Vorgehensweise [: Erstellen der ersten Fingereingabe Anwendung](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span><span class="sxs-lookup"><span data-stu-id="c3662-815">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-816">Im folgenden Beispiel wird eine Anwendung erstellt, die über ein rotes Rechteck verfügt.</span><span class="sxs-lookup"><span data-stu-id="c3662-816">The following example creates an application that has a red Rectangle.</span></span>  <span data-ttu-id="c3662-817">Die <xref:System.Windows.UIElement.IsManipulationEnabled%2A> -Eigenschaft des Rechtecks wird auf true festgelegt, und das Fenster der Anwendung abonniert die <xref:System.Windows.UIElement.ManipulationStarting> <xref:System.Windows.UIElement.ManipulationDelta> Ereignisse, und <xref:System.Windows.UIElement.ManipulationInertiaStarting> .</span><span class="sxs-lookup"><span data-stu-id="c3662-817">The <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property of the Rectangle is set to true and the application's window subscribes to the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, and <xref:System.Windows.UIElement.ManipulationInertiaStarting> events.</span></span> <span data-ttu-id="c3662-818">Dieses Beispiel ist Teil eines größeren Beispiels in Exemplarische Vorgehensweise [: Erstellen Ihrer ersten Touchscreen-Anwendung](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span><span class="sxs-lookup"><span data-stu-id="c3662-818">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span></span>  
  
 [!code-xaml[BasicManipulation#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml#ui)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsManipulationEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsManipulationEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsManipulationEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsManipulationEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsManipulationEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsManipulationEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsManipulationEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-819">Bezeichnet die <see cref="P:System.Windows.UIElement.IsManipulationEnabled" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-819">Identifies the <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMeasureValid">
      <MemberSignature Language="C#" Value="public bool IsMeasureValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMeasureValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMeasureValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMeasureValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMeasureValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMeasureValid : bool" Usage="System.Windows.UIElement.IsMeasureValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-820">Ruft einen Wert ab, der angibt, ob die aktuelle, vom Layoutmaß zurückgegebene Größe gültig ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-820">Gets a value indicating whether the current size returned by layout measure is valid.</span></span></summary>
        <value><span data-ttu-id="c3662-821"><see langword="true" />, wenn von der Maßübergabe des Layouts ein gültiger und aktueller Wert zurückgegeben wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-821"><see langword="true" /> if the measure pass of layout returned a valid and current value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-822">Sie können erzwingen, dass Messungen und Anordnung für ungültig erklärt werden, indem Sie <xref:System.Windows.UIElement.InvalidateMeasure%2A> für dieses Element aufrufen (oder ein beliebiges übergeordnetes Element in der visuellen Struktur).</span><span class="sxs-lookup"><span data-stu-id="c3662-822">You can force measurement and arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateMeasure%2A> on this element (or any parent element up the visual tree).</span></span> <span data-ttu-id="c3662-823">Dadurch wird das Layout für die asynchrone Neukomposition festgelegt, die zu einem vom Layoutsystem festgelegten Zeitpunkt auftritt.</span><span class="sxs-lookup"><span data-stu-id="c3662-823">This designates the layout for recomposition asynchronously, occurring at a time determined by the layout system.</span></span> <span data-ttu-id="c3662-824">Sie können auch einen sofortigen-Rückruf durchführen <xref:System.Windows.UIElement.UpdateLayout%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-824">Alternatively, you could make an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A>.</span></span> <span data-ttu-id="c3662-825">Sie sollten jedoch nur dann anrufen, <xref:System.Windows.UIElement.UpdateLayout%2A> Wenn es wahrscheinlich ist, dass keine weiteren Invalidierungen ausstehen (eine große Anzahl unnötiger erzwungener Updates hat Leistungs Konsequenzen).</span><span class="sxs-lookup"><span data-stu-id="c3662-825">However, you should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if it is likely that no further invalidations are pending (a large number of unnecessarily forced updates will have performance consequences).</span></span>  
  
 <span data-ttu-id="c3662-826">Wenn den Wert <xref:System.Windows.UIElement.IsMeasureValid%2A> `false` hat, <xref:System.Windows.UIElement.IsArrangeValid%2A> muss auch sein `false` (durch die erzwungene Logik des Layoutprozesses kann die Anordnung nicht gültig sein, ohne dass die Maßeinheit zuerst gültig ist).</span><span class="sxs-lookup"><span data-stu-id="c3662-826">If <xref:System.Windows.UIElement.IsMeasureValid%2A> is `false`, <xref:System.Windows.UIElement.IsArrangeValid%2A> must also be `false` (by the enforced logic of the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptured : bool" Usage="System.Windows.UIElement.IsMouseCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-827">Ruft einen Wert ab, der angibt, ob die Maus für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-827">Gets a value indicating whether the mouse is captured to this element.</span></span>  <span data-ttu-id="c3662-828">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-828">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-829"><see langword="true" />, wenn die Maus für dieses Element erfasst wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-829"><see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c3662-830">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-830">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-831">Der Status der Maus Aufzeichnung bezieht sich auf in-Process-Drag & Drop-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="c3662-831">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-832">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-832">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-833">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-833">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="c3662-834">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-834">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-835">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-835">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c3662-836">Im folgenden Beispiel wird der Maus Erfassungs Zustand basierend darauf, ob die Maus für das-Element bereits aufgezeichnet wurde, ein-oder ausgeschaltet.</span><span class="sxs-lookup"><span data-stu-id="c3662-836">The following example turns the mouse capture state on or off based on whether the mouse is already captured for the element.</span></span>  
  
 <span data-ttu-id="c3662-837">Wenn die Maus Aufzeichnung an einer anderen Stelle ist, wird die Maus Aufzeichnung auf dieses Element festgelegt.</span><span class="sxs-lookup"><span data-stu-id="c3662-837">If mouse capture is elsewhere, the mouse capture is set to that element.</span></span> <span data-ttu-id="c3662-838">Wenn das Element die Maus Aufzeichnung enthielt, wird es durch Aufrufen von <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> mit einer NULL-Eingabe gelöscht.</span><span class="sxs-lookup"><span data-stu-id="c3662-838">If the element had mouse capture, it is cleared by calling <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with a null input.</span></span>  
  
 [!code-csharp[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#ismousecaptured)]
 [!code-vb[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-839">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsMouseCaptured" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-839">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-840">Dieser Member ist ein- [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-840">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-841">Bezeichnet die <see cref="P:System.Windows.UIElement.IsMouseCaptured" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-841">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithin : bool" Usage="System.Windows.UIElement.IsMouseCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-842">Ruft einen Wert ab, der bestimmt, ob die Mausaufzeichnung in diesem Element oder in untergeordneten Elementen in seiner visuellen Struktur enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-842">Gets a value that determines whether mouse capture is held by this element or by child elements in its visual tree.</span></span> <span data-ttu-id="c3662-843">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-843">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-844"><see langword="true" />, wenn dieses Element oder ein darin enthaltenes Element die Mausaufzeichnung enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-844"><see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-845">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-845">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-846">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-846">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="c3662-847">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-847">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-848">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-848">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-849">Tritt ein, wenn der Wert der <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-849">Occurs when the value of the <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-850">Dieser Member ist ein- [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-850">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-851">Bezeichnet die <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-851">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOver : bool" Usage="System.Windows.UIElement.IsMouseDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-852">Ruft einen Wert ab, der angibt, ob die Position des Mauszeigers den Treffertestergebnissen entspricht, für die die Elementzusammensetzung berücksichtigt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-852">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span></span>  <span data-ttu-id="c3662-853">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-853">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-854"><see langword="true" />, wenn sich der Mauszeiger über demselben Elementergebnis wie ein Treffertest befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-854"><see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c3662-855">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-855">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-856">Im Gegensatz zu <xref:System.Windows.UIElement.IsMouseOver%2A> ist diese Eigenschaft nur, `true` Wenn sich der Mauszeiger über dem Literalelement befindet, wie es bei einem Treffer Test der Fall ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-856">Unlike <xref:System.Windows.UIElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element - as it is for a hit test.</span></span> <span data-ttu-id="c3662-857">Wenn sich der Mauszeiger stattdessen über einem untergeordneten Element befindet, insbesondere über Elemente, die Teil der tieferen Vorlage eines Elements und der Zusammensetzung sind, ist diese Eigenschaft `false` .</span><span class="sxs-lookup"><span data-stu-id="c3662-857">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="c3662-858">Wenn Sie nicht wissen, wie ein Steuerelement zusammengesetzt ist (z. b. verwenden Sie diese Eigenschaft in einer benutzerdefinierten Steuerelement Vorlage für ein Steuerelement, das Sie definieren), gibt diese Eigenschaft möglicherweise unerwartete Ergebnisse zurück.</span><span class="sxs-lookup"><span data-stu-id="c3662-858">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="c3662-859">Verwenden Sie in den meisten Szenarien, in denen Sie keine Steuerelemente erstellen, <xref:System.Windows.UIElement.IsMouseOver%2A> stattdessen.</span><span class="sxs-lookup"><span data-stu-id="c3662-859">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="c3662-860">Wenn die Maus von diesem Element aufgezeichnet wird und diese Eigenschaft `true` zum Zeitpunkt der Erfassung ist, wird diese Eigenschaft weiterhin zurückgegeben, `true` bis die Maus Aufzeichnung verloren geht und sich der Zeiger nicht über dessen Begrenzungen befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-860">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-861">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-861">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-862">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-862">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="c3662-863">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-863">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-864">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-864">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-865">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-865">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-866">Dieser Member ist ein- [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-866">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-867">Bezeichnet die <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-867">Identifies the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseOver : bool" Usage="System.Windows.UIElement.IsMouseOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-868">Ruft einen Wert ab, der angibt, ob sich der Mauszeiger über diesem Element (einschließlich der untergeordneten Elemente in der visuellen Struktur) befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-868">Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).</span></span>  <span data-ttu-id="c3662-869">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-869">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-870"><see langword="true" />, wenn sich der Mauszeiger über dem Element oder seinen untergeordneten Elementen befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-870"><see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c3662-871">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-871">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-872">Normalerweise werden Steuerelemente zusammengesetzt, sodass die verschiedenen Elemente innerhalb des Steuer Elements (der visuellen Struktur) den Maus Zustand für das enthaltende Steuerelement melden.</span><span class="sxs-lookup"><span data-stu-id="c3662-872">Typically, controls are composited such that the various elements inside the control (the visual tree) will all report the mouse state for the containing control.</span></span> <span data-ttu-id="c3662-873">Ein Formatvorlagen <xref:System.Windows.Controls.ListBox> Steuerelement meldet z. b <xref:System.Windows.UIElement.IsMouseOver%2A> `true` ., als ob sich die Maus an einer beliebigen Stelle über der Geometrie befindet, einschließlich aller <xref:System.Windows.Controls.ListBoxItem> .</span><span class="sxs-lookup"><span data-stu-id="c3662-873">For example, a <xref:System.Windows.Controls.ListBox> style control will report <xref:System.Windows.UIElement.IsMouseOver%2A> as `true` if the mouse is anywhere over its geometry, including any <xref:System.Windows.Controls.ListBoxItem>.</span></span>  
  
 <span data-ttu-id="c3662-874">Obwohl ein entsprechendes "ismouseoverchanged"-Ereignis nicht vorhanden ist, können mehrere ähnliche Ereignisse verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-874">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="c3662-875">Beispielsweise können Sie <xref:System.Windows.UIElement.MouseEnter> , und behandeln <xref:System.Windows.UIElement.MouseMove> <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> .</span><span class="sxs-lookup"><span data-stu-id="c3662-875">For example, you can handle <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>, and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="c3662-876">Wenn dieses Element die Maus erfasst, bleibt diese Eigenschaft erhalten, `true` bis die Maus Aufzeichnung verloren geht und der Mauszeiger die Elementgrenzen verlässt.</span><span class="sxs-lookup"><span data-stu-id="c3662-876">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
 <span data-ttu-id="c3662-877">Einige Steuerelemente erfassen absichtlich die Maus über bestimmte Aktionen, die anscheinend nicht direkt mit der Maus verbunden sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-877">Some controls deliberately capture the mouse on certain actions that do not appear to directly involve the mouse.</span></span> <span data-ttu-id="c3662-878">Dies kann zu <xref:System.Windows.UIElement.IsMouseOver%2A> sein, `true` Obwohl die Maus nicht anscheinend verschoben wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-878">This can lead to <xref:System.Windows.UIElement.IsMouseOver%2A> being `true` even though the mouse has not apparently moved.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-879">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-879">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-880">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-880">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseOverProperty>|  
|<span data-ttu-id="c3662-881">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-881">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-882">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-882">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c3662-883">Im folgenden Beispiel wird auf diese Eigenschaft als Eigenschaftentyp eines-Teils eines- <xref:System.Windows.Trigger> \<Style.Triggers> Blocks verwiesen.</span><span class="sxs-lookup"><span data-stu-id="c3662-883">The following example references this property as the property type of a <xref:System.Windows.Trigger>, part of a \<Style.Triggers> block.</span></span> <span data-ttu-id="c3662-884">Wenn sich der Mauszeiger über dem Steuerelement befindet, wird der Text des Steuer Elements blau, und der Cursor wird zu einer Hand.</span><span class="sxs-lookup"><span data-stu-id="c3662-884">If the mouse is over the control, the control text turns blue and the cursor becomes a hand.</span></span>  
  
 [!code-xaml[ListViewChkBox#Trigger](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewChkBox/CS/window1.xaml#trigger)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-885">Bezeichnet die <see cref="P:System.Windows.UIElement.IsMouseOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-885">Identifies the <see cref="P:System.Windows.UIElement.IsMouseOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptured : bool" Usage="System.Windows.UIElement.IsStylusCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-886">Ruft einen Wert ab, der angibt, ob der Tablettstift für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-886">Gets a value indicating whether the stylus is captured by this element.</span></span>  <span data-ttu-id="c3662-887">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-887">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-888"><see langword="true" />, wenn der Tablettstift für dieses Element erfasst wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-888"><see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c3662-889">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-889">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-890">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-890">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-891">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-891">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-892">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-892">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-893">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-893">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="c3662-894">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-894">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-895">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-895">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-896">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsStylusCaptured" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-896">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-897">Dieser Member ist ein- [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-897">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-898">Bezeichnet die <see cref="P:System.Windows.UIElement.IsStylusCaptured" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-898">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithin : bool" Usage="System.Windows.UIElement.IsStylusCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-899">Ruft einen Wert ab, der bestimmt, ob die Tablettstifterfassung von diesem Element oder von einem Element innerhalb der Elementgrenzen und dessen visueller Struktur aufgenommen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-899">Gets a value that determines whether stylus capture is held by this element, or an element within the element bounds and its visual tree.</span></span> <span data-ttu-id="c3662-900">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-900">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-901"><see langword="true" />, wenn dieses Element oder ein darin enthaltenes Element die Tablettstifterfassung aufnimmt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-901"><see langword="true" /> if this element or a contained element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c3662-902">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-902">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-903">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-903">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-904">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) und [Eingabe Übersicht](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-904">For more information, see [Touch Input Support in Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-905">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-905">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-906">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-906">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="c3662-907">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-907">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-908">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-908">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="P:System.Windows.UIElement.IsStylusCaptured" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-909">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-909">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-910">Dabei handelt es sich um ein- [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, nicht um ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-910">This is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-911">Bezeichnet die <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-911">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOver : bool" Usage="System.Windows.UIElement.IsStylusDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-912">Ruft einen Wert ab, der angibt, ob die Position des Tablettstifts den Treffertestergebnissen entspricht, für die die Elementzusammensetzung berücksichtigt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-912">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span></span>  <span data-ttu-id="c3662-913">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-913">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-914"><see langword="true" />, wenn sich der Tablettstiftzeiger über demselben Elementergebnis wie ein Treffertest befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-914"><see langword="true" /> if the stylus pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c3662-915">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-915">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-916">Anders als <xref:System.Windows.UIElement.IsStylusOver%2A> ist diese Eigenschaft nur, `true` Wenn sich der Tablettstift über dem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-916">Unlike <xref:System.Windows.UIElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="c3662-917">Wenn sich der Tablettstift stattdessen über einem untergeordneten Element oder über Elemente befindet, die Teil der tieferen Zusammensetzung eines Elements (der visuellen Struktur) sind, ist diese Eigenschaft `false` .</span><span class="sxs-lookup"><span data-stu-id="c3662-917">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be `false`.</span></span>  
  
 <span data-ttu-id="c3662-918">Wenn Sie nicht wissen, wie ein Steuerelement zusammengesetzt ist (z. b. verwenden Sie diese Eigenschaft in einer benutzerdefinierten Steuerelement Vorlage für ein Steuerelement, das Sie definieren), gibt diese Eigenschaft möglicherweise unerwartete Ergebnisse zurück.</span><span class="sxs-lookup"><span data-stu-id="c3662-918">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="c3662-919">Verwenden Sie in den meisten Szenarien, in denen Sie keine Steuerelemente erstellen, <xref:System.Windows.UIElement.IsStylusOver%2A> stattdessen.</span><span class="sxs-lookup"><span data-stu-id="c3662-919">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="c3662-920">Wenn dieses Element die tablettstifterfassung hat und diese Eigenschaft `true` zum Zeitpunkt der Erfassung ist, bleibt diese Eigenschaft, `true` bis die tablettstifterfassung verloren gegangen ist und sich der Tablettstift nicht über dessen Begrenzungen befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-920">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="c3662-921">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-921">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-922">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-922">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-923">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-923">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-924">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-924">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="c3662-925">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-925">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-926">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-926">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-927">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-927">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-928">Dieser Member ist ein- [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-928">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-929">Bezeichnet die <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-929">Identifies the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusOver : bool" Usage="System.Windows.UIElement.IsStylusOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-930">Ruft einen Wert ab, der anzeigt, ob sich der Stiftcursor über diesem Element (einschließlich der untergeordneten visuellen Elemente) befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-930">Gets a value indicating whether the stylus cursor is located over this element (including visual child elements).</span></span>  <span data-ttu-id="c3662-931">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-931">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-932"><see langword="true" />, wenn sich der Stiftcursor über dem Element oder seinen untergeordneten Elementen befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-932"><see langword="true" /> if stylus cursor is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c3662-933">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-933">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-934">Wenn dieses Element die tablettstifterfassung hat, wird diese Eigenschaft weiterhin zurückgegeben, `true` bis die tablettstifterfassung verloren geht und der Zeiger außerhalb der Grenzen liegt.</span><span class="sxs-lookup"><span data-stu-id="c3662-934">If this element has stylus capture, this property will continue to return `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="c3662-935">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-935">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-936">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-936">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-937">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-937">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-938">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-938">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusOverProperty>|  
|<span data-ttu-id="c3662-939">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-939">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-940">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-940">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-941">Bezeichnet die <see cref="P:System.Windows.UIElement.IsStylusOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-941">Identifies the <see cref="P:System.Windows.UIElement.IsStylusOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Windows.UIElement.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-942">Ruft einen Wert ab, der angibt, ob dieses Element auf der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-942">Gets a value indicating whether this element is visible in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  <span data-ttu-id="c3662-943">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-943">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-944"><see langword="true" />, wenn das Element sichtbar ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-944"><see langword="true" /> if the element is visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-945">Die Bestimmung des <xref:System.Windows.UIElement.IsVisible%2A> Werts berücksichtigt alle Faktoren des Layouts.</span><span class="sxs-lookup"><span data-stu-id="c3662-945">Determination of the <xref:System.Windows.UIElement.IsVisible%2A> value takes all factors of layout into account.</span></span> <span data-ttu-id="c3662-946">Im Gegensatz dazu <xref:System.Windows.UIElement.Visibility%2A> gibt, bei dem es sich um eine festleg Bare Eigenschaft handelt, nur die Absicht an, ein Element Programm gesteuert sichtbar oder unsichtbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="c3662-946">In contrast, <xref:System.Windows.UIElement.Visibility%2A>, which is a settable property, only indicates the intention to programmatically make an element visible or invisible.</span></span>  
  
 <span data-ttu-id="c3662-947">Elemente, bei denen <xref:System.Windows.UIElement.IsVisible%2A> `false` nicht an Eingabe Ereignissen (oder Befehlen) teilnimmt, beeinflussen entweder das Measure oder die Anordnungs Überläufen des Layouts nicht, sind nicht für die Fokus verwendbar, nicht in einer Registerkarten Sequenz und werden nicht in Treffer Tests gemeldet.</span><span class="sxs-lookup"><span data-stu-id="c3662-947">Elements where <xref:System.Windows.UIElement.IsVisible%2A> is `false` do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing.</span></span> <span data-ttu-id="c3662-948">Im Gegensatz dazu werden Elemente, bei denen gleich <xref:System.Windows.UIElement.IsEnabled%2A> `false` zeitig an Ereignisse und Befehle beteiligt ist, und Treffer Tests, aber auch nicht als Fokus verwendet.</span><span class="sxs-lookup"><span data-stu-id="c3662-948">In contrast, elements where <xref:System.Windows.UIElement.IsEnabled%2A> is `false` will still participate in events and commands, and hit testing, but are also not focusable.</span></span>  
  
<a name="dependencyPropertyInfo_IsVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-949">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-949">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-950">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-950">Identifier field</span></span>|<xref:System.Windows.UIElement.IsVisibleProperty>|  
|<span data-ttu-id="c3662-951">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-951">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-952">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-952">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-953">Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement.IsVisible" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-953">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsVisible" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-954">Dieses Ereignis wird nicht ausgelöst, wenn das Element nicht durch das Layoutsystem gerendert wird. Dies geschieht aus anderen Gründen als dem Wert der- <xref:System.Windows.UIElement.IsVisible%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-954">This event is not raised if the element is not being rendered by the layout system, for reasons other than the value of the <xref:System.Windows.UIElement.IsVisible%2A> property.</span></span> <span data-ttu-id="c3662-955">Beispielsweise verfügt das-Element möglicherweise nicht über ein zugeordnetes visuelles Element.</span><span class="sxs-lookup"><span data-stu-id="c3662-955">For example, the element might not have an associated visual.</span></span>  
  
 <span data-ttu-id="c3662-956">Dieser Member ist ein- [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-956">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-957">Bezeichnet die <see cref="P:System.Windows.UIElement.IsVisible" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-957">Identifies the <see cref="P:System.Windows.UIElement.IsVisible" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-958">Tritt auf, wenn eine Taste gedrückt wird, während sich der Fokus auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-958">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-959">Die Schlüssel Behandlung interagiert mit anderen Platt Form Features, wie z. b. Befehlszeilen und Textkomposition.</span><span class="sxs-lookup"><span data-stu-id="c3662-959">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="c3662-960">Bei dem <xref:System.Windows.UIElement.KeyDown> Ereignis handelt es sich um ein Texteingabe Ereignis auf niedrigerer Ebene, das bei bestimmten Steuerelementen möglicherweise nicht erwartungsgemäß verhält.</span><span class="sxs-lookup"><span data-stu-id="c3662-960">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="c3662-961">Dies liegt daran, dass einige Steuerelemente eine Steuerelement Komposition oder eine Klassen Behandlung aufweisen, die eine Version der Texteingabe Verarbeitung und zugehöriger Ereignisse auf höherer Ebene bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="c3662-961">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="c3662-962">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.KeyDown> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-962">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.KeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-963">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.KeyDown> werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-963">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-964">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-964">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-965">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-965">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyDownEvent>|  
|<span data-ttu-id="c3662-966">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-966">Routing strategy</span></span>|<span data-ttu-id="c3662-967">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-967">Bubbling</span></span>|  
|<span data-ttu-id="c3662-968">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-968">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="c3662-969">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewKeyDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-969">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="c3662-970"><xref:System.Windows.UIElement.OnKeyDown%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-970">Override <xref:System.Windows.UIElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-971">Identifiziert das <see cref="E:System.Windows.UIElement.KeyDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-971">Identifies the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-972">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-972">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-973">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-973">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-974">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-974">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-975">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-975">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-976">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-976">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-977">Tritt auf, wenn eine Taste losgelassen wird, während sich der Fokus auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-977">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-978">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass  <xref:System.Windows.UIElement.KeyUp> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-978">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.UIElement.KeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-979">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.KeyUp> werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-979">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-980">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-980">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-981">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-981">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyUpEvent>|  
|<span data-ttu-id="c3662-982">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-982">Routing strategy</span></span>|<span data-ttu-id="c3662-983">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-983">Bubbling</span></span>|  
|<span data-ttu-id="c3662-984">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-984">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="c3662-985">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewKeyUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-985">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="c3662-986"><xref:System.Windows.UIElement.OnKeyUp%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-986">Override <xref:System.Windows.UIElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-987">Identifiziert das <see cref="E:System.Windows.UIElement.KeyUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-987">Identifies the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-988">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-988">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-989">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-989">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-990">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-990">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-991">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-991">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-992">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-992">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler LayoutUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LayoutUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LayoutUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LayoutUpdated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LayoutUpdated;" />
      <MemberSignature Language="F#" Value="member this.LayoutUpdated : EventHandler " Usage="member this.LayoutUpdated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-993">Tritt ein, wenn das Layout der verschiedenen visuellen Elemente, die dem aktuellen <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet sind, geändert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-993">Occurs when the layout of the various visual elements associated with the current <see cref="T:System.Windows.Threading.Dispatcher" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-994">Ein Layoutupdate kann als Ergebnis einer Eigenschafts Änderung, einer Fenstergrößen Änderung oder einer expliziten Benutzer Anforderung auftreten.</span><span class="sxs-lookup"><span data-stu-id="c3662-994">A layout update can occur as a result of a property change, a window resize, or an explicit user request.</span></span>  
  
 <span data-ttu-id="c3662-995">Dieser Member ist ein- [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-995">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.RoutedEventHandler " Usage="member this.LostFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-996">Tritt auf, wenn dieses Element den logischen Fokus verliert.</span><span class="sxs-lookup"><span data-stu-id="c3662-996">Occurs when this element loses logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-997">Der logische Fokus unterscheidet sich vom Tastaturfokus, wenn der Fokus absichtlich durch einen Methodenaufruf verloren wird, der vorherige Tastaturfokus jedoch in einem anderen Gültigkeitsbereich vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-997">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="c3662-998">In diesem Szenario behält der Tastaturfokus bei, und das Element, in dem eine <xref:System.Windows.UIElement.Focus%2A> Methode aufgerufen wird, erhält weiterhin den logischen Fokus.</span><span class="sxs-lookup"><span data-stu-id="c3662-998">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="c3662-999">Eine genauere Interpretation dieses Ereignisses besteht darin, dass es ausgelöst wird, wenn der Wert der- <xref:System.Windows.UIElement.IsFocused%2A> Eigenschaft eines Elements in der Route von in geändert wird `true` `false` .</span><span class="sxs-lookup"><span data-stu-id="c3662-999">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="c3662-1000">Da dieses Ereignis bubblingerrouting verwendet, kann das Element, das den Fokus verliert, ein untergeordnetes Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1000">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="c3662-1001">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, das den Fokus erhalten hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-1001">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1002">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1002">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1003">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1003">Identifier field</span></span>|<xref:System.Windows.UIElement.LostFocusEvent>|  
|<span data-ttu-id="c3662-1004">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1004">Routing strategy</span></span>|<span data-ttu-id="c3662-1005">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-1005">Bubbling</span></span>|  
|<span data-ttu-id="c3662-1006">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1006">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="c3662-1007">Es ist kein entsprechendes tunnelingereignis vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1007">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="c3662-1008"><xref:System.Windows.UIElement.OnLostFocus%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1008">Override <xref:System.Windows.UIElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1009">Identifiziert das <see cref="E:System.Windows.UIElement.LostFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1009">Identifies the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1010">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1010">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-1011">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1011">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-1012">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1012">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-1013">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1013">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-1014">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1014">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1015">Tritt auf, wenn sich der Fokus der Tastatur nicht mehr auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1015">Occurs when the keyboard is no longer focused on this element,.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1016">Da dieses Ereignis bubblingerrouting verwendet, kann das Element, das den Fokus verliert, ein untergeordnetes Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1016">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="c3662-1017">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, das den Fokus verloren hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-1017">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="c3662-1018">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.LostKeyboardFocus> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1018">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-1019">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.LostKeyboardFocus> werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-1019">Event handlers that are attached to the <xref:System.Windows.UIElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1020">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1020">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1021">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1021">Identifier field</span></span>|<xref:System.Windows.UIElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="c3662-1022">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1022">Routing strategy</span></span>|<span data-ttu-id="c3662-1023">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-1023">Bubbling</span></span>|  
|<span data-ttu-id="c3662-1024">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1024">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="c3662-1025">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1025">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="c3662-1026"><xref:System.Windows.UIElement.OnLostKeyboardFocus%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1026">Override <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1027">Identifiziert das <see cref="E:System.Windows.UIElement.LostKeyboardFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1027">Identifies the <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1028">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1028">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-1029">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1029">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-1030">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1030">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-1031">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1031">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-1032">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1032">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1033">Tritt auf, wenn dieses Element die Mausauswahl verliert.</span><span class="sxs-lookup"><span data-stu-id="c3662-1033">Occurs when this element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1034">Wenn ein Element die Maus erfasst, empfängt es auch dann Maus Eingaben, wenn sich der Zeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1034">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="c3662-1035">Die Maus wird in der Regel nur während Drag & Drop-Vorgängen aufgezeichnet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1035">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="c3662-1036">Da dieses Ereignis bubblingerrouting verwendet, kann das-Element, das Capture verliert, ein untergeordnetes-Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1036">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="c3662-1037">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das eigentliche Element zu ermitteln, das Capture verloren hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-1037">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="c3662-1038">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.LostMouseCapture> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1038">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-1039">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.LostMouseCapture> werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-1039">Event handlers that are attached to the <xref:System.Windows.UIElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1040">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1040">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1041">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1041">Identifier field</span></span>|<xref:System.Windows.UIElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="c3662-1042">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1042">Routing strategy</span></span>|<span data-ttu-id="c3662-1043">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-1043">Bubbling</span></span>|  
|<span data-ttu-id="c3662-1044">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1044">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="c3662-1045">Es ist kein entsprechendes tunnelingereignis definiert.</span><span class="sxs-lookup"><span data-stu-id="c3662-1045">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="c3662-1046"><xref:System.Windows.UIElement.OnLostMouseCapture%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1046">Override <xref:System.Windows.UIElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1047">Identifiziert das <see cref="E:System.Windows.UIElement.LostMouseCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1047">Identifies the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1048">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1048">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-1049">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1049">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-1050">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1050">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-1051">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1051">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-1052">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1052">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1053">Tritt auf, wenn dieses Element die Stiftauswahl verliert.</span><span class="sxs-lookup"><span data-stu-id="c3662-1053">Occurs when this element loses stylus capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1054">Wenn ein Element den Tablettstift erfasst, empfängt er die Stift Eingabe, auch wenn sich der Zeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1054">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="c3662-1055">Der Tablettstift wird in der Regel nur während Drag & Drop-Vorgängen aufgezeichnet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1055">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="c3662-1056">Da dieses Ereignis bubblingerrouting verwendet, kann das Element, das den Fokus verliert, ein untergeordnetes Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1056">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="c3662-1057">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, das den Fokus verloren hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-1057">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="c3662-1058">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.LostStylusCapture> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1058">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-1059">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.LostStylusCapture> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-1059">Event handlers that are attached to the <xref:System.Windows.UIElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1060">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1060">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1061">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1061">Identifier field</span></span>|<xref:System.Windows.UIElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="c3662-1062">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1062">Routing strategy</span></span>|<span data-ttu-id="c3662-1063">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-1063">Bubbling</span></span>|  
|<span data-ttu-id="c3662-1064">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1064">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="c3662-1065">Es ist kein entsprechendes tunnelingereignis definiert.</span><span class="sxs-lookup"><span data-stu-id="c3662-1065">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="c3662-1066"><xref:System.Windows.UIElement.OnLostStylusCapture%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1066">Override <xref:System.Windows.UIElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1067">Identifiziert das <see cref="E:System.Windows.UIElement.LostStylusCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1067">Identifies the <see cref="E:System.Windows.UIElement.LostStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1068">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1068">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-1069">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1069">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-1070">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1070">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-1071">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1071">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-1072">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1072">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.LostTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.LostTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1073">Tritt ein, wenn dieses Element keine Fingereingaben mehr erfasst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1073">Occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1074">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1074">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1075">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1075">Identifier field</span></span>|<xref:System.Windows.UIElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="c3662-1076">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1076">Routing strategy</span></span>|<span data-ttu-id="c3662-1077">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-1077">Bubbling</span></span>|  
|<span data-ttu-id="c3662-1078">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1078">Delegate</span></span>|<span data-ttu-id="c3662-1079">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1079"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="c3662-1080"><xref:System.Windows.UIElement.OnLostTouchCapture%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1080">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1081">Identifiziert das <see cref="E:System.Windows.UIElement.LostTouchCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1081">Identifies the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationBoundaryFeedback As EventHandler(Of ManipulationBoundaryFeedbackEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^&gt; ^ ManipulationBoundaryFeedback;" />
      <MemberSignature Language="F#" Value="member this.ManipulationBoundaryFeedback : EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; " Usage="member this.ManipulationBoundaryFeedback : System.EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1082">Tritt ein, wenn die Bearbeitung an eine Grenze stößt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1082">Occurs when the manipulation encounters a boundary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_ManipulationBoundaryFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1083">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1083">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1084">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1084">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent>|  
|<span data-ttu-id="c3662-1085">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1085">Routing strategy</span></span>|<span data-ttu-id="c3662-1086">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-1086">Bubbling</span></span>|  
|<span data-ttu-id="c3662-1087">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1087">Delegate</span></span>|<span data-ttu-id="c3662-1088">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1088"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationBoundaryFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationBoundaryFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationBoundaryFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationBoundaryFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1089">Bezeichnet das <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1089">Identifies the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationCompleted As EventHandler(Of ManipulationCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationCompletedEventArgs ^&gt; ^ ManipulationCompleted;" />
      <MemberSignature Language="F#" Value="member this.ManipulationCompleted : EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; " Usage="member this.ManipulationCompleted : System.EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1090">Tritt ein, wenn Bearbeitung und Trägheitsmoment für das <see cref="T:System.Windows.UIElement" />-Objekt abgeschlossen sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-1090">Occurs when a manipulation and inertia on the <see cref="T:System.Windows.UIElement" /> object is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1091">Sie können dieses Ereignis verwenden, um Informationen zur Bearbeitung zu erhalten, wenn es abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-1091">You can use this event to get information about the manipulation when it completes.</span></span>  <span data-ttu-id="c3662-1092">Beispielsweise können Sie die- <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> Eigenschaft verwenden, um den Gesamtbetrag zu bestimmen, um den die Position der Bearbeitung geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-1092">For example, you can use the <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> property to determine the total amount the position of the manipulation changed.</span></span>  
  
 <span data-ttu-id="c3662-1093">Weitere Informationen zu Manipulationen finden Sie unter Übersicht über die [Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-1093">For more information about manipulations, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  <span data-ttu-id="c3662-1094">Ein Beispiel für eine Anwendung, die auf Manipulationen antwortet, finden Sie unter Exemplarische Vorgehensweise [: Erstellen der ersten Fingereingabe Anwendung](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span><span class="sxs-lookup"><span data-stu-id="c3662-1094">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span></span>  
  
<a name="routedEventInfo_ManipulationCompleted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1095">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1095">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1096">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1096">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationCompletedEvent>|  
|<span data-ttu-id="c3662-1097">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1097">Routing strategy</span></span>|<span data-ttu-id="c3662-1098">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-1098">Bubbling</span></span>|  
|<span data-ttu-id="c3662-1099">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1099">Delegate</span></span>|<span data-ttu-id="c3662-1100">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1100"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompletedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationCompletedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationCompletedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationCompletedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationCompletedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationCompletedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationCompletedEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationCompletedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1101">Identifiziert das <see cref="E:System.Windows.UIElement.ManipulationCompleted" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1101">Identifies the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDelta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationDelta" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationDelta As EventHandler(Of ManipulationDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationDeltaEventArgs ^&gt; ^ ManipulationDelta;" />
      <MemberSignature Language="F#" Value="member this.ManipulationDelta : EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; " Usage="member this.ManipulationDelta : System.EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1102">Tritt ein, wenn sich die Position des Eingabegeräts während einer Bearbeitung ändert.</span><span class="sxs-lookup"><span data-stu-id="c3662-1102">Occurs when the input device changes position during a manipulation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1103">Das <xref:System.Windows.UIElement.ManipulationDelta> Ereignis tritt mehrmals auf, wenn der Benutzer während einer Bearbeitung auf den Bildschirm bewegt wird, und wieder, wenn Trägheit auftritt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1103">The <xref:System.Windows.UIElement.ManipulationDelta> event occurs multiple times when the user drags fingers over the screen during a manipulation and again when inertia occurs.</span></span>  <span data-ttu-id="c3662-1104">Mit der-Eigenschaft können Sie <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> überprüfen, ob das Ereignis während der Trägheit auftritt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1104">You can use the <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> property to check whether the event is occurring during inertia.</span></span>  
  
 <span data-ttu-id="c3662-1105">Wenn das-Ereignis auftritt, wird das-Element bei mit <xref:System.Windows.UIElement.ManipulationDelta> Ereignis auftreten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1105">The element on with <xref:System.Windows.UIElement.ManipulationDelta> event occurs is not affected in any way when the event occurs.</span></span>  <span data-ttu-id="c3662-1106">Sie müssen die Logik für das Element bereitstellen, das bearbeitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="c3662-1106">You must provide the logic to the element that is to be manipulated.</span></span>  <span data-ttu-id="c3662-1107">Die <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> Eigenschaften und, die vom Typ sind <xref:System.Windows.Input.ManipulationDelta> , enthalten Daten darüber, wie sich die Position der Manipulationen ändert und als verschieben, Ändern der Größe oder Drehen eines Objekts interpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1107">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> properties, which are of type <xref:System.Windows.Input.ManipulationDelta>, contain data about how the position of the manipulations change and interpreted as moving, resizing, or rotating an object.</span></span>  <span data-ttu-id="c3662-1108">Sie wenden diese Informationen auf das Element an, das bearbeitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="c3662-1108">You apply that information to the element that is to be manipulated.</span></span>  
  
 <span data-ttu-id="c3662-1109">Weitere Informationen zu Manipulationen finden Sie unter Übersicht über die [Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-1109">For more information about manipulations, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  <span data-ttu-id="c3662-1110">Ein Beispiel für eine Anwendung, die auf Manipulationen antwortet, finden Sie unter Exemplarische Vorgehensweise [: Erstellen der ersten Fingereingabe Anwendung](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span><span class="sxs-lookup"><span data-stu-id="c3662-1110">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span></span>  
  
<a name="routedEventInfo_ManipulationDelta"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1111">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1111">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1112">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1112">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationDeltaEvent>|  
|<span data-ttu-id="c3662-1113">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1113">Routing strategy</span></span>|<span data-ttu-id="c3662-1114">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-1114">Bubbling</span></span>|  
|<span data-ttu-id="c3662-1115">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1115">Delegate</span></span>|<span data-ttu-id="c3662-1116">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1116"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c3662-1117">Das folgende Beispiel zeigt einen Ereignishandler für das- <xref:System.Windows.UIElement.ManipulationDelta> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1117">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="c3662-1118">Im Beispiel wird die <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> -Eigenschaft verwendet, um eine zu verschieben, zu ändern und zu ändern <xref:System.Windows.Shapes.Rectangle> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1118">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span>  <span data-ttu-id="c3662-1119">Im Beispiel wird außerdem überprüft, ob das <xref:System.Windows.UIElement.ManipulationDelta> Ereignis während der Trägheit aufgetreten ist und ob das Rechteck den Rand eines Fensters berührt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1119">The example also checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span>  <span data-ttu-id="c3662-1120">Wenn diese Fälle true sind, beendet die Anwendung die Bearbeitung, um zu verhindern, dass das Rechteck den sichtbaren Bereich der Anwendung verlässt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1120">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="c3662-1121">Dieses Beispiel ist Teil eines größeren Beispiels in Exemplarische Vorgehensweise [: Erstellen Ihrer ersten Touchscreen-Anwendung](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span><span class="sxs-lookup"><span data-stu-id="c3662-1121">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDeltaEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationDeltaEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationDeltaEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationDeltaEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationDeltaEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationDeltaEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationDeltaEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationDeltaEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1122">Identifiziert das <see cref="E:System.Windows.UIElement.ManipulationDelta" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1122">Identifies the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationInertiaStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationInertiaStarting As EventHandler(Of ManipulationInertiaStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationInertiaStartingEventArgs ^&gt; ^ ManipulationInertiaStarting;" />
      <MemberSignature Language="F#" Value="member this.ManipulationInertiaStarting : EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; " Usage="member this.ManipulationInertiaStarting : System.EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1123">Tritt ein, wenn das Eingabegerät während der Bearbeitung den Kontakt zum <see cref="T:System.Windows.UIElement" />-Objekt verliert und ein Trägheitsmoment einsetzt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1123">Occurs when the input device loses contact with the <see cref="T:System.Windows.UIElement" /> object during a manipulation and inertia begins.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1124">Das <xref:System.Windows.UIElement.ManipulationInertiaStarting> Ereignis tritt auf, wenn der Benutzer während einer Bearbeitung alle Finger vom Bildschirm aufhebt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1124">The <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs when the user lifts all of the fingers from the screen during a manipulation.</span></span> <span data-ttu-id="c3662-1125">Wenn ein Benutzer z. b. einen <xref:System.Windows.UIElement> über eine Oberfläche auslöst, wird der vom Benutzer berührt, <xref:System.Windows.UIElement> um die Aktion zu starten, den Finger für eine kurze Entfernung auf den Bildschirm zu verschieben und dann das freizugeben <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1125">For example, if a user "throws" a <xref:System.Windows.UIElement> across a surface, the user will touch the <xref:System.Windows.UIElement> to begin the action, move the finger across the screen for a short distance, and then release the <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="c3662-1126">Wenn der Benutzer das Element freigibt, beginnt die Trägheit, und das- <xref:System.Windows.UIElement.ManipulationInertiaStarting> Ereignis tritt auf.</span><span class="sxs-lookup"><span data-stu-id="c3662-1126">When the user releases the element, inertia begins and the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs.</span></span>  <span data-ttu-id="c3662-1127">Der <xref:System.Windows.UIElement> empfängt weiterhin <xref:System.Windows.UIElement.ManipulationDelta> Ereignisse, um anzugeben, dass Trägheit auf dem Element auftritt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1127">The <xref:System.Windows.UIElement> continues to receive <xref:System.Windows.UIElement.ManipulationDelta> events to indicate that inertia is occurring on the element.</span></span>  
  
 <span data-ttu-id="c3662-1128">Sie können dieses Ereignis verwenden, um das Verhalten der Trägheit anzugeben.</span><span class="sxs-lookup"><span data-stu-id="c3662-1128">You can use this event to specify the behavior of the inertia.</span></span>  <span data-ttu-id="c3662-1129">Beispielsweise können Sie die anfängliche Geschwindigkeit festlegen, die beim Beginn der Trägheit verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1129">For example, you can set the initial velocity that is used when inertia begins.</span></span>  <span data-ttu-id="c3662-1130">Sie können auch die Menge der Trägheit angeben, indem Sie die gewünschte Verlangsamung festlegen oder die gewünschte Platzierung festlegen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1130">You can also specify the amount of inertia by setting the desired deceleration or by setting the desired placement.</span></span>  <span data-ttu-id="c3662-1131">Sie können diese Werte für jeden Typ von Manipulation (Übersetzung, Erweiterung oder Drehung) unabhängig voneinander festlegen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1131">You can set these values for each type of manipulation (translation, expansion, or rotation) independently.</span></span>  <span data-ttu-id="c3662-1132">Weitere Informationen finden Sie unter <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1132">For more information, see <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>  
  
 <span data-ttu-id="c3662-1133">Weitere Informationen zu Manipulationen finden Sie unter Übersicht über die [Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-1133">For more information about manipulations, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  <span data-ttu-id="c3662-1134">Ein Beispiel für eine Anwendung, die auf Manipulationen antwortet, finden Sie unter Exemplarische Vorgehensweise [: Erstellen der ersten Fingereingabe Anwendung](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span><span class="sxs-lookup"><span data-stu-id="c3662-1134">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span></span>  
  
<a name="routedEventInfo_ManipulationInertiaStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1135">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1135">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1136">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1136">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationInertiaStartingEvent>|  
|<span data-ttu-id="c3662-1137">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1137">Routing strategy</span></span>|<span data-ttu-id="c3662-1138">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-1138">Bubbling</span></span>|  
|<span data-ttu-id="c3662-1139">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1139">Delegate</span></span>|<span data-ttu-id="c3662-1140">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1140"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c3662-1141">Das folgende Beispiel zeigt den <xref:System.Windows.UIElement.ManipulationInertiaStarting> Ereignishandler und legt die gewünschte Verlangsamung für Übersetzung, Erweiterung und Drehung fest, die während der Trägheit verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1141">The following example shows the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event handler and sets the desired deceleration for translation, expansion, and rotation that is used during inertia.</span></span> <span data-ttu-id="c3662-1142">Dieses Beispiel ist Teil eines größeren Beispiels in Exemplarische Vorgehensweise [: Erstellen Ihrer ersten Touchscreen-Anwendung](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span><span class="sxs-lookup"><span data-stu-id="c3662-1142">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationinertiastarting)]
 [!code-vb[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationinertiastarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationInertiaStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationInertiaStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationInertiaStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationInertiaStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationInertiaStartingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationInertiaStartingEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationInertiaStartingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1143">Identifiziert das <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1143">Identifies the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarted As EventHandler(Of ManipulationStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartedEventArgs ^&gt; ^ ManipulationStarted;" />
      <MemberSignature Language="F#" Value="member this.ManipulationStarted : EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; " Usage="member this.ManipulationStarted : System.EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1144">Tritt ein, wenn ein Eingabegerät mit der Bearbeitung des <see cref="T:System.Windows.UIElement" />-Objekts beginnt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1144">Occurs when an input device begins a manipulation on the <see cref="T:System.Windows.UIElement" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1145">Das <xref:System.Windows.UIElement.ManipulationStarted> Ereignis tritt nach dem- <xref:System.Windows.UIElement.ManipulationStarting> Ereignis auf.</span><span class="sxs-lookup"><span data-stu-id="c3662-1145">The <xref:System.Windows.UIElement.ManipulationStarted> event occurs after the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span>  <span data-ttu-id="c3662-1146">Mit dem können Sie die folgenden Aktionen ausführen <xref:System.Windows.Input.ManipulationStartedEventArgs> :</span><span class="sxs-lookup"><span data-stu-id="c3662-1146">You can do the following with the <xref:System.Windows.Input.ManipulationStartedEventArgs>:</span></span>  
  
-   <span data-ttu-id="c3662-1147">Das Element, zu dem die Position der Manipulation gehört, mithilfe der- <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> Eigenschaft erhalten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1147">Get the element that the manipulation's position is relative to by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> property.</span></span>  
  
-   <span data-ttu-id="c3662-1148">Verwenden Sie die-Eigenschaft, um den Ursprung der Manipulation zu erhalten <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1148">Get the origin of the manipulation by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> property.</span></span>  
  
-   <span data-ttu-id="c3662-1149">Brechen Sie die Bearbeitung, indem Sie die- <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1149">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> method.</span></span>  
  
 <span data-ttu-id="c3662-1150">Weitere Informationen zu Manipulationen finden Sie unter Übersicht über die [Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-1150">For more information about manipulations, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  <span data-ttu-id="c3662-1151">Ein Beispiel für eine Anwendung, die auf Manipulationen antwortet, finden Sie unter Exemplarische Vorgehensweise [: Erstellen der ersten Fingereingabe Anwendung](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span><span class="sxs-lookup"><span data-stu-id="c3662-1151">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span></span>  
  
<a name="routedEventInfo_ManipulationStarted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1152">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1152">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1153">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1153">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartedEvent>|  
|<span data-ttu-id="c3662-1154">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1154">Routing strategy</span></span>|<span data-ttu-id="c3662-1155">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-1155">Bubbling</span></span>|  
|<span data-ttu-id="c3662-1156">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1156">Delegate</span></span>|<span data-ttu-id="c3662-1157">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1157"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationStartedEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationStartedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1158">Identifiziert das <see cref="E:System.Windows.UIElement.ManipulationStarted" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1158">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarting As EventHandler(Of ManipulationStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartingEventArgs ^&gt; ^ ManipulationStarting;" />
      <MemberSignature Language="F#" Value="member this.ManipulationStarting : EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; " Usage="member this.ManipulationStarting : System.EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1159">Tritt bei der ersten Erstellung des Manipulationsprozessors auf.</span><span class="sxs-lookup"><span data-stu-id="c3662-1159">Occurs when the manipulation processor is first created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1160">Das- <xref:System.Windows.UIElement.ManipulationStarting> Ereignis tritt bei einem-Element auf, bei dem die- <xref:System.Windows.UIElement.IsManipulationEnabled%2A> Eigenschaft auf festgelegt ist, `true` Wenn der Benutzer einen Finger eingibt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1160">The <xref:System.Windows.UIElement.ManipulationStarting> event occurs on an element that has the <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property set to `true` when the user puts a finger on it.</span></span> <span data-ttu-id="c3662-1161">In der Standardeinstellung melden nachfolgende Manipulations Ereignisse die Position der Bearbeitung relativ zu dem Element, das <xref:System.Windows.UIElement.IsManipulationEnabled%2A> auf festgelegt hat `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-1161">By default, subsequent manipulation events report the position of the manipulation relative to the element that has <xref:System.Windows.UIElement.IsManipulationEnabled%2A> set to `true`.</span></span>  <span data-ttu-id="c3662-1162">Sie können angeben, dass die Position relativ zu einem anderen Element sein soll, indem Sie die- <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1162">You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.</span></span> <span data-ttu-id="c3662-1163">Beispielsweise können Sie die Manipulation relativ zum übergeordneten Element des-Elements vornehmen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1163">For example, you can make the manipulation relative to the parent of the element.</span></span>  
  
 <span data-ttu-id="c3662-1164">Sie können in einem Ereignishandler auch folgende Aktionen ausführen <xref:System.Windows.UIElement.ManipulationStarting> :</span><span class="sxs-lookup"><span data-stu-id="c3662-1164">You can also do the following in an event handler for <xref:System.Windows.UIElement.ManipulationStarting>:</span></span>  
  
-   <span data-ttu-id="c3662-1165">Geben Sie an, ob der Benutzer mehr als einen Finger zum Durchführen der Manipulationen benötigt, indem Sie die- <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1165">Specify whether the user needs more than one finger to perform the manipulations by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="c3662-1166">Legen Sie fest, welche Arten von Manipulationen aktiviert werden, indem Sie die- <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> Eigenschaft auf eine- <xref:System.Windows.Input.ManipulationModes> Enumeration festlegen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1166">Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> property to a <xref:System.Windows.Input.ManipulationModes> enumeration.</span></span>  
  
-   <span data-ttu-id="c3662-1167">Legen Sie den Mittelpunkt einer Einzel Finger Drehung fest, indem Sie die- <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1167">Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="c3662-1168">Brechen Sie die Bearbeitung, indem Sie die- <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1168">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="c3662-1169">Weitere Informationen zu Manipulationen finden Sie unter Übersicht über die [Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-1169">For more information about manipulations, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  <span data-ttu-id="c3662-1170">Ein Beispiel für eine Anwendung, die auf Manipulationen antwortet, finden Sie unter Exemplarische Vorgehensweise [: Erstellen der ersten Fingereingabe Anwendung](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span><span class="sxs-lookup"><span data-stu-id="c3662-1170">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span></span>  
  
<a name="routedEventInfo_ManipulationStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1171">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1171">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1172">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1172">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartingEvent>|  
|<span data-ttu-id="c3662-1173">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1173">Routing strategy</span></span>|<span data-ttu-id="c3662-1174">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-1174">Bubbling</span></span>|  
|<span data-ttu-id="c3662-1175">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1175">Delegate</span></span>|<span data-ttu-id="c3662-1176">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1176"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c3662-1177">Das folgende Beispiel zeigt den Ereignishandler für das <xref:System.Windows.UIElement.ManipulationStarting> -Ereignis und legt <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> auf das übergeordnete Element fest, das die Manipulations Ereignisse empfängt, sodass die Koordinaten der Bearbeitung relativ zum übergeordneten Element sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-1177">The following example shows the event handler for the <xref:System.Windows.UIElement.ManipulationStarting> event and sets the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> to the parent element that receives the manipulation events so that the coordinates of the manipulation are relative to the parent element.</span></span>  <span data-ttu-id="c3662-1178">Dieses Beispiel ist Teil eines größeren Beispiels in Exemplarische Vorgehensweise [: Erstellen Ihrer ersten Touchscreen-Anwendung](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span><span class="sxs-lookup"><span data-stu-id="c3662-1178">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationstarting)]
 [!code-vb[BasicManipulation#ManipulationStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationstarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationStartingEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationStartingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1179">Identifiziert das <see cref="E:System.Windows.UIElement.ManipulationStarting" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1179">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Measure">
      <MemberSignature Language="C#" Value="public void Measure (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Measure(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Measure (availableSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Measure(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="member this.Measure : System.Windows.Size -&gt; unit" Usage="uIElement.Measure availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="c3662-1180">Der verfügbare Speicherplatz, den ein übergeordnetes Element für ein untergeordnetes Element reservieren kann.</span><span class="sxs-lookup"><span data-stu-id="c3662-1180">The available space that a parent element can allocate a child element.</span></span> <span data-ttu-id="c3662-1181">Ein untergeordnetes Element kann mehr Speicherplatz erfordern, als verfügbar ist. Die angegebene Größe kann zugewiesen werden, wenn für das aktuelle Element im Inhaltsmodell Bildlaufvorgänge möglich sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-1181">A child element can request a larger space than what is available; the provided size might be accommodated if scrolling is possible in the content model for the current element.</span></span></param>
        <summary><span data-ttu-id="c3662-1182">Aktualisiert die <see cref="P:System.Windows.UIElement.DesiredSize" /> eines <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-1182">Updates the <see cref="P:System.Windows.UIElement.DesiredSize" /> of a <see cref="T:System.Windows.UIElement" />.</span></span> <span data-ttu-id="c3662-1183">Übergeordnete Elemente rufen diese Methode aus ihren eigenen <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" />-Implementierungen auf, um eine rekursive Layoutaktualisierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1183">Parent elements call this method from their own <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" /> implementations to form a recursive layout update.</span></span> <span data-ttu-id="c3662-1184">Das Aufrufen dieser Methode stellt die erste Übergabe (die "Maßübergabe") einer Layoutaktualisierung dar.</span><span class="sxs-lookup"><span data-stu-id="c3662-1184">Calling this method constitutes the first pass (the "Measure" pass) of a layout update.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1185">Die Berechnung der layoutpositionierung in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] besteht aus einem <xref:System.Windows.UIElement.Measure%2A> -und einem- <xref:System.Windows.UIElement.Arrange%2A> Rückruf.</span><span class="sxs-lookup"><span data-stu-id="c3662-1185">Computation of layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] is comprised of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="c3662-1186">Während des <xref:System.Windows.UIElement.Measure%2A> Aufrufes bestimmt ein Element seine Größenanforderungen mithilfe einer `availableSize` Eingabe.</span><span class="sxs-lookup"><span data-stu-id="c3662-1186">During the <xref:System.Windows.UIElement.Measure%2A> call, an element determines its size requirements by using an `availableSize` input.</span></span> <span data-ttu-id="c3662-1187">Während des <xref:System.Windows.UIElement.Arrange%2A> Aufrufes wird die Elementgröße abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1187">During the <xref:System.Windows.UIElement.Arrange%2A> call, the element size is finalized.</span></span>  
  
 <span data-ttu-id="c3662-1188">`availableSize` kann eine beliebige Zahl zwischen 0 (null) und unendlich sein.</span><span class="sxs-lookup"><span data-stu-id="c3662-1188">`availableSize` can be any number from zero to infinite.</span></span> <span data-ttu-id="c3662-1189">Elemente, die am Layout teilnehmen, sollten die Mindestanforderung <xref:System.Windows.Size> für eine bestimmte zurückgeben `availableSize` .</span><span class="sxs-lookup"><span data-stu-id="c3662-1189">Elements participating in layout should return the minimum <xref:System.Windows.Size> they require for a given `availableSize`.</span></span>  
  
 <span data-ttu-id="c3662-1190">Wenn ein Layout zum ersten Mal instanziiert wird, empfängt es immer einen- <xref:System.Windows.UIElement.Measure%2A> Rückruf <xref:System.Windows.UIElement.Arrange%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1190">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="c3662-1191">Nach dem ersten Layoutdurchlauf wird jedoch möglicherweise ein- <xref:System.Windows.UIElement.Arrange%2A> Rückruf ohne einen empfangen <xref:System.Windows.UIElement.Measure%2A> . Dies kann vorkommen, wenn eine Eigenschaft, die nur Auswirkungen hat, <xref:System.Windows.UIElement.Arrange%2A> geändert wird (z. b. die Ausrichtung) oder wenn das übergeordnete Element einen <xref:System.Windows.UIElement.Arrange%2A> ohne einen empfängt <xref:System.Windows.UIElement.Measure%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1191">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="c3662-1192">Durch einen-Befehl <xref:System.Windows.UIElement.Measure%2A> wird ein-Befehl automatisch ungültig <xref:System.Windows.UIElement.Arrange%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1192">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="c3662-1193">Layout-Aktualisierungen erfolgen asynchron, sodass der Haupt Thread nicht auf jede mögliche Layoutänderung wartet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1193">Layout updates happen asynchronously, such that the main thread is not waiting for every possible layout change.</span></span> <span data-ttu-id="c3662-1194">Das Abfragen eines Elements über die Code Behind-Überprüfung von Eigenschafts Werten kann nicht sofort Änderungen an Eigenschaften widerspiegeln, die mit der Größenanpassung oder den Layoutmerkmalen interagieren ( <xref:System.Windows.FrameworkElement.Width%2A> z. b. die-Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="c3662-1194">Querying an element via code-behind checking of property values may not immediately reflect changes to properties that interact with the sizing or layout characteristics (the <xref:System.Windows.FrameworkElement.Width%2A> property, for example).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c3662-1195">Layoutaktualisierungen können mithilfe der-Methode erzwungen werden <xref:System.Windows.UIElement.UpdateLayout%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1195">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method.</span></span> <span data-ttu-id="c3662-1196">Das Aufrufen dieser Methode ist jedoch in der Regel unnötig und kann zu einer schlechten Leistung führen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1196">However, calling this method is usually unnecessary and can cause poor performance.</span></span>  
  
 <span data-ttu-id="c3662-1197">Das Layoutsystem speichert zwei separate Warteschlangen mit ungültigen Layouts, eine für <xref:System.Windows.UIElement.Measure%2A> und eine für <xref:System.Windows.UIElement.Arrange%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1197">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="c3662-1198">Die layoutwarteschlange wird basierend auf der Reihenfolge der Elemente in der visuellen Struktur des Elements, das das Layout ausführt, sortiert. Elemente oberhalb der Struktur befinden sich am Anfang der Warteschlange, um redundante Layouts zu vermeiden, die durch wiederholte Änderungen der übergeordneten Elemente verursacht werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1198">The layout queue is sorted based upon the order of elements in the visual tree of the element performing layout; elements higher in the tree are at the top of the queue, to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="c3662-1199">Doppelte Einträge werden automatisch aus der Warteschlange entfernt, und Elemente werden automatisch aus der Warteschlange entfernt, wenn Sie bereits über das Layout überprüft wurden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1199">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already layout-validated.</span></span>  
  
 <span data-ttu-id="c3662-1200">Beim Aktualisieren des Layouts <xref:System.Windows.UIElement.Measure%2A> wird die Warteschlange zuerst geleert, gefolgt von der <xref:System.Windows.UIElement.Arrange%2A> Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="c3662-1200">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="c3662-1201">Ein Element in der <xref:System.Windows.UIElement.Arrange%2A> Warteschlange wird nie angeordnet, wenn ein Element in der <xref:System.Windows.UIElement.Measure%2A> Warteschlange vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-1201">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Size MeasureCore (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Size MeasureCore(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MeasureCore (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Size MeasureCore(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="abstract member MeasureCore : System.Windows.Size -&gt; System.Windows.Size&#xA;override this.MeasureCore : System.Windows.Size -&gt; System.Windows.Size" Usage="uIElement.MeasureCore availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="c3662-1202">Die verfügbare Größe, die das übergeordnete Element für das untergeordnete Element reservieren kann.</span><span class="sxs-lookup"><span data-stu-id="c3662-1202">The available size that the parent element can allocate for the child.</span></span></param>
        <summary><span data-ttu-id="c3662-1203">Stellt beim Überschreiben in einer abgeleiteten Klasse die Maßlogik für das ordnungsgemäße Festlegen der Größe dieses Elements bereit, wobei die Größe des Inhalts sämtlicher untergeordneter Elemente berücksichtigt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1203">When overridden in a derived class, provides measurement logic for sizing this element properly, with consideration of the size of any child element content.</span></span></summary>
        <returns><span data-ttu-id="c3662-1204">Die gewünschte Größe dieses Elements im Layout.</span><span class="sxs-lookup"><span data-stu-id="c3662-1204">The desired size of this element in layout.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1205">Es ist eher üblich, ein Element von <xref:System.Windows.FrameworkElement> anstelle von abzuleiten <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1205">It is more common to derive an element from <xref:System.Windows.FrameworkElement> rather than <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="c3662-1206">Wenn Sie von ableiten <xref:System.Windows.FrameworkElement> , beachten Sie, dass die-Methode durch eine Überschreibung von <xref:System.Windows.UIElement.MeasureCore%2A> auf versiegelt wird <xref:System.Windows.FrameworkElement> <xref:System.Windows.UIElement.MeasureCore%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1206">If you are deriving from <xref:System.Windows.FrameworkElement>, note that an override of <xref:System.Windows.UIElement.MeasureCore%2A> on <xref:System.Windows.FrameworkElement> seals the <xref:System.Windows.UIElement.MeasureCore%2A> method.</span></span> <span data-ttu-id="c3662-1207">Daher überschreiben Sie nur die <xref:System.Windows.UIElement.MeasureCore%2A> Möglichkeit, layoutmeasurenschaften zu ändern, wenn Sie von <xref:System.Windows.UIElement> durch eine Vererbung von abgeleitet werden, die nicht einschließt <xref:System.Windows.FrameworkElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1207">Therefore, you only override <xref:System.Windows.UIElement.MeasureCore%2A> as a means to alter layout measure characteristics if you derive from <xref:System.Windows.UIElement> through an inheritance that does not include <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="c3662-1208">Dies kann der Fall sein, wenn Sie versuchen, eine eigene Implementierung auf der [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Kernebene zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1208">This might be the case if you are attempting to build your own implementation on the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] core-level.</span></span> <span data-ttu-id="c3662-1209">Andernfalls <xref:System.Windows.FrameworkElement> ist die Implementierungs Vorlage für das Measure-Verhalten die Implementierung von, wenn Sie von ableiten <xref:System.Windows.FrameworkElement> . <xref:System.Windows.FrameworkElement.MeasureOverride%2A></span><span class="sxs-lookup"><span data-stu-id="c3662-1209">Otherwise, if you are deriving from <xref:System.Windows.FrameworkElement>, then the implementation template for Measure behavior is the <xref:System.Windows.FrameworkElement> implementation of .<xref:System.Windows.FrameworkElement.MeasureOverride%2A>.</span></span>  
  
 <span data-ttu-id="c3662-1210">Ein übergeordnetes Element mit untergeordneten Elementen muss für jedes untergeordnete Element aufgerufen werden <xref:System.Windows.UIElement.Measure%2A> . andernfalls werden diese untergeordneten Elemente nicht vergrößert oder angeordnet und werden aus dem Layout entfernt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1210">A parent element with child elements must call <xref:System.Windows.UIElement.Measure%2A> on each child, otherwise these child elements are not sized or arranged and will effectively disappear from layout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-1211">Eine typische Überschreibung von <xref:System.Windows.UIElement.MeasureCore%2A> folgt diesem ungefähren Muster (es gibt keine integrierte Auflistung mit dem Namen `VisualChildren` ; `VisualChildren` ist ein Platzhalter, der die untergeordnete Auflistung darstellt, die Ihr Element verwaltet).</span><span class="sxs-lookup"><span data-stu-id="c3662-1211">A typical override of <xref:System.Windows.UIElement.MeasureCore%2A> follows this approximate pattern (there is not a built-in collection called `VisualChildren`; `VisualChildren` is a  placeholder that represents whatever child collection your element maintains).</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementmeasureoverride)]
 [!code-vb[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementmeasureoverride)]  
  
-   <span data-ttu-id="c3662-1212">Sie müssen <xref:System.Windows.UIElement.Measure%2A> für jedes untergeordnete Element aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1212">You must call <xref:System.Windows.UIElement.Measure%2A> on each child element.</span></span>  
  
-   <span data-ttu-id="c3662-1213">Im Allgemeinen sollte die-Implementierung Mess Informationen zwischen den <xref:System.Windows.UIElement.MeasureCore%2A> -und- <xref:System.Windows.UIElement.ArrangeCore%2A> Methoden aufrufen im gleichen-Element Zwischenspeichern.</span><span class="sxs-lookup"><span data-stu-id="c3662-1213">Generally, your implementation should cache measurement information between the <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> method calls in the same element.</span></span>  
  
-   <span data-ttu-id="c3662-1214">Das Aufrufen von Basis Implementierungen von <xref:System.Windows.UIElement.MeasureCore%2A> ist nicht erforderlich, kann jedoch sinnvoll sein, wenn die Basis Implementierung eine gewünschte Layoutfunktion bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1214">Calling base implementations of <xref:System.Windows.UIElement.MeasureCore%2A> is not required, but might be appropriate if the base implementation provides a desired layout capability.</span></span>  
  
-   <span data-ttu-id="c3662-1215">Aufrufe von <xref:System.Windows.UIElement.Measure%2A> für untergeordnete Elemente sollten entweder das gleiche `availableSize` wie das übergeordnete Element oder eine Teilmenge des Bereichs, abhängig vom Layouttyp, den das übergeordnete Element unterstützt, übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1215">Calls to <xref:System.Windows.UIElement.Measure%2A> on child elements should pass either the same `availableSize` as the parent, or a subset of the area, depending on the type of layout the parent element supports.</span></span> <span data-ttu-id="c3662-1216">Beispielsweise ist es zulässig, den Bereich für einen Element spezifischen Rahmen, eine Bild Lauf Leiste oder ein benutzerdefiniertes Steuerelement zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1216">For example, it would be valid to remove the area for an element-specific border or padding, a scrollbar, or a custom control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c3662-1217">Implementierungen müssen einen für bereitgestellten Wert verarbeiten können <paramref name="availableSize" /> , der unendlich ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-1217">Implementations must be able to process a value provided for <paramref name="availableSize" /> that is infinite.</span></span> <span data-ttu-id="c3662-1218">Ein unendlicher Wert gibt keine angeforderten Einschränkungen an und schränkt die Maßeinheit für das übergeordnete Element durch rekursive Measure-Aufrufe ein.</span><span class="sxs-lookup"><span data-stu-id="c3662-1218">An infinite value indicates no requested constraints, and effectively defers measurement choice to the parent element, through recursive Measure calls.</span></span>  
  
<span data-ttu-id="c3662-1219">Implementierungen können den für bereitgestellten Wert <paramref name="availableSize" /> als weiche Einschränkung in Erwägung gezogen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1219">Implementations can consider the value provided for <paramref name="availableSize" /> to be a soft constraint.</span></span> <span data-ttu-id="c3662-1220">Das untergeordnete-Element kann eine größere Größe angeben, auch wenn andere Aspekte des Anwendungs Codes die aktuelle tatsächliche Größe des übergeordneten Elements ermitteln konnten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1220">The child element might specify a larger size, even if other aspects of application code were able to determine the current actual size of the parent element.</span></span> <span data-ttu-id="c3662-1221">Bei der Anforderung für große Größe handelt es sich um eine Konvention, die angibt, dass das untergeordnete Element abfragt, ob das übergeordnete Element das Scrollen von Inhalten in einem Inhalts Anzeigebereich unterstützt</span><span class="sxs-lookup"><span data-stu-id="c3662-1221">The large size request is a convention that indicates that the child element is querying whether your parent element can support content scrolling within a content display region.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1222">Tritt auf, wenn eine Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1222">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1223">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.MouseDown> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1223">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-1224">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.MouseDown> werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-1224">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-1225">Das- <xref:System.Windows.UIElement.MouseDown> Ereignis wird häufig in Verbindung mit <xref:System.Windows.UIElement.MouseLeftButtonDown> oder ausgelöst <xref:System.Windows.UIElement.MouseRightButtonDown> , was einem Drücken einer der beiden Standard Maustasten entspricht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1225">The <xref:System.Windows.UIElement.MouseDown> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="c3662-1226"><xref:System.Windows.UIElement.MouseLeftButtonDown> und <xref:System.Windows.UIElement.MouseRightButtonDown> sind auch Routing Ereignisse, aber es handelt sich um direkte Routing Ereignisse, und das entsprechende Schaltflächen spezifische Ereignis wird ausgelöst, wenn das <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignis dieses Element entlang der Ereignis Route erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1226"><xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="c3662-1227">Siehe Hinweise für <xref:System.Windows.UIElement.MouseLeftButtonDown> oder <xref:System.Windows.UIElement.MouseRightButtonDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1227">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c3662-1228">Einige Steuerelemente verfügen möglicherweise über eine inhärente Klassen Behandlung für Maustasten Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="c3662-1228">Some controls might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="c3662-1229">Das Ereignis mit der linken Maustaste auf das Ereignis ist das wahrscheinlichste Ereignis, um eine Klassen Behandlung in einem-Steuerelement zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1229">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="c3662-1230">Die Klassen Behandlung markiert häufig das zugrunde liegende <xref:System.Windows.Input.Mouse> Klassen Ereignis als behandelt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1230">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="c3662-1231">Wenn das Ereignis als behandelt markiert ist, werden andere Instanzhandler, die diesem Element zugeordnet sind, normalerweise nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1231">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="c3662-1232">Alle anderen Klassen-oder Instanzhandler, die an Elemente in der Blasen Richtung an den Stamm in der UI-Struktur angefügt werden, werden normalerweise nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1232">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="c3662-1233">Sie können das Problem, das in den vorangehenden Ereignissen "wichtig" und "empfangen" angezeigt wird, <xref:System.Windows.UIElement.MouseDown> auf eine abgeleitete Klasse, die über eine Klassen Behandlung verfügt, mit einer der folgenden Lösungen beheben:</span><span class="sxs-lookup"><span data-stu-id="c3662-1233">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="c3662-1234">Fügen Sie Handler für das- <xref:System.Windows.UIElement.PreviewMouseDown> Ereignis an, das von den-Steuerelementen nicht als behandelt markiert ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-1234">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="c3662-1235">Da es sich hierbei um ein Vorschau Ereignis handelt, beginnt die Route im Stammverzeichnis und wird zum-Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="c3662-1235">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="c3662-1236">Registrieren Sie einen Handler für das Steuerelement, indem <xref:System.Windows.UIElement.AddHandler%2A> Sie aufrufen und die Signatur Option auswählen, mit der Handler Ereignisse überwachen können, auch wenn Sie in den Routing Ereignisdaten bereits als behandelt markiert sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-1236">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1237">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1237">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1238">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1238">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseDownEvent>|  
|<span data-ttu-id="c3662-1239">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1239">Routing strategy</span></span>|<span data-ttu-id="c3662-1240">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-1240">Bubbling</span></span>|  
|<span data-ttu-id="c3662-1241">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1241">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-1242">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewMouseDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1242">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="c3662-1243"><xref:System.Windows.UIElement.OnMouseDown%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1243">Override <xref:System.Windows.UIElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1244">Identifiziert das <see cref="E:System.Windows.UIElement.MouseDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1244">Identifies the <see cref="E:System.Windows.UIElement.MouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1245">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1245">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-1246">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1246">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-1247">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1247">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-1248">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1248">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-1249">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1249">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Input.MouseEventHandler " Usage="member this.MouseEnter : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1250">Tritt auf, wenn der Mauszeiger in den Bereich dieses Elements eintritt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1250">Occurs when the mouse pointer enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1251"><xref:System.Windows.UIElement.MouseEnter> ist ein Routing [Ereignis](/dotnet/framework/wpf/advanced/routed-events-overview) , das die Routing Strategie für die direkte Ereignis Behandlung verwendet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1251"><xref:System.Windows.UIElement.MouseEnter> is a [routed event](/dotnet/framework/wpf/advanced/routed-events-overview) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="c3662-1252">Direkt geroutete Ereignisse werden nicht entlang einer Route ausgelöst. Stattdessen werden Sie im selben Element behandelt, in dem Sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1252">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="c3662-1253">Allerdings ermöglichen Sie andere Aspekte des Routing Ereignis Verhaltens, z. b. Ereignis Trigger in Stilen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1253">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="c3662-1254">Obwohl <xref:System.Windows.UIElement.MouseEnter> nachverfolgt, wenn der Mauszeiger in die Grenzen eines Elements eintritt, meldet dieses Ereignis eher, dass sich der <xref:System.Windows.UIElement.IsMouseOver%2A> Eigenschafts Wert von `false` in `true` in diesem Element geändert hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-1254">Although <xref:System.Windows.UIElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="c3662-1255">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.MouseEnter> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1255">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-1256">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.MouseEnter> werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-1256">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-1257">Eine <xref:System.Windows.Controls.Button> (oder eine beliebige <xref:System.Windows.Controls.Primitives.ButtonBase> abgeleitete Klasse) verfügt über eine native Behandlung eines <xref:System.Windows.UIElement.KeyDown> -Ereignisses, wenn die Schaltfläche den Fokus besitzt, und die gedrückte Taste ist die Leertaste.</span><span class="sxs-lookup"><span data-stu-id="c3662-1257">A <xref:System.Windows.Controls.Button> (or any <xref:System.Windows.Controls.Primitives.ButtonBase> derived class) has native handling for a <xref:System.Windows.UIElement.KeyDown> event when the button has focus, and the pressed key is the space bar.</span></span> <span data-ttu-id="c3662-1258">Die native Behandlung löst das <xref:System.Windows.Controls.Primitives.ButtonBase.Click> -Ereignis mit der Schaltfläche als Quelle aus und erfasst auch die Maus, auch wenn der Mauszeiger nicht bewegt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1258">The native handling raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event with the button as the source, and also captures the mouse, even though the mouse pointer does not appear to move.</span></span> <span data-ttu-id="c3662-1259">Aufgrund der Maus Aufzeichnung <xref:System.Windows.UIElement.MouseEnter> wird auch ein-Ereignis mit der Schaltfläche als Quelle ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1259">As a result of the mouse capture, a <xref:System.Windows.UIElement.MouseEnter> event is also raised with the button as the source.</span></span> <span data-ttu-id="c3662-1260">Im Allgemeinen gilt: Wenn ein Element die Maus erfasst, <xref:System.Windows.UIElement.MouseEnter> wird ausgelöst, sowie <xref:System.Windows.UIElement.GotMouseCapture> und möglicherweise andere Steuerelement spezifische Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="c3662-1260">In general, if an element captures the mouse, then <xref:System.Windows.UIElement.MouseEnter> is raised, as well as <xref:System.Windows.UIElement.GotMouseCapture> and possibly other control-specific events.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1261">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1261">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1262">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1262">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseEnterEvent>|  
|<span data-ttu-id="c3662-1263">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1263">Routing strategy</span></span>|<span data-ttu-id="c3662-1264">Direkt</span><span class="sxs-lookup"><span data-stu-id="c3662-1264">Direct</span></span>|  
|<span data-ttu-id="c3662-1265">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1265">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="c3662-1266"><xref:System.Windows.UIElement.OnMouseEnter%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1266">Override <xref:System.Windows.UIElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1267">Identifiziert das <see cref="E:System.Windows.UIElement.MouseEnter" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1267">Identifies the <see cref="E:System.Windows.UIElement.MouseEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1268">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1268">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-1269">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1269">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-1270">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1270">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-1271">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1271">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-1272">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1272">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Input.MouseEventHandler " Usage="member this.MouseLeave : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1273">Tritt auf, wenn der Mauszeiger den Bereich dieses Elements verlässt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1273">Occurs when the mouse pointer leaves the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1274"><xref:System.Windows.UIElement.MouseLeave> ist ein Routing [Ereignis](/dotnet/framework/wpf/advanced/routed-events-overview) , das die Routing Strategie für die direkte Ereignis Behandlung verwendet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1274"><xref:System.Windows.UIElement.MouseLeave> is a [routed event](/dotnet/framework/wpf/advanced/routed-events-overview) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="c3662-1275">Direkt geroutete Ereignisse werden nicht entlang einer Route ausgelöst. Stattdessen werden Sie im selben Element behandelt, in dem Sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1275">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="c3662-1276">Allerdings ermöglichen Sie andere Aspekte des Routing Ereignis Verhaltens, z. b. Ereignis Trigger in Stilen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1276">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="c3662-1277">Obwohl <xref:System.Windows.UIElement.MouseLeave> nachverfolgt, wenn die Maus ein Element verlässt, meldet dieses Ereignis eher, dass sich der <xref:System.Windows.UIElement.IsMouseOver%2A> Eigenschafts Wert von `true` in `false` in diesem Element geändert hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-1277">Although <xref:System.Windows.UIElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="c3662-1278">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.MouseLeave> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1278">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-1279">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.MouseLeave> werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-1279">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1280">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1280">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1281">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1281">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeaveEvent>|  
|<span data-ttu-id="c3662-1282">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1282">Routing strategy</span></span>|<span data-ttu-id="c3662-1283">Direkt</span><span class="sxs-lookup"><span data-stu-id="c3662-1283">Direct</span></span>|  
|<span data-ttu-id="c3662-1284">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1284">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="c3662-1285"><xref:System.Windows.UIElement.OnMouseLeave%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1285">Override <xref:System.Windows.UIElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1286">Identifiziert das <see cref="E:System.Windows.UIElement.MouseLeave" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1286">Identifies the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1287">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1287">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-1288">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1288">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-1289">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1289">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-1290">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1290">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-1291">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1291">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1292">Tritt auf, wenn die linke Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1292">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1293">Obwohl dieses Routing [Ereignis](/dotnet/framework/wpf/advanced/routed-events-overview) einer bubblingerroute durch eine Elementstruktur folgt, ist es tatsächlich ein direktes Routing Ereignis, das von jedem Element in der Elementstruktur ausgelöst und erneut ausgeführt wird <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1293">Although this [routed event](/dotnet/framework/wpf/advanced/routed-events-overview) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="c3662-1294">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden Ereignisses melden, bei dem es sich um <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1294">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="c3662-1295">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="c3662-1295">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="c3662-1296">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit aufgerufen wird, wobei Ereignisse behandelt werden, die <xref:System.Windows.UIElement.AddHandler%2A> bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="c3662-1296">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="c3662-1297">Wenn Sie <xref:System.Windows.UIElement.MouseLeftButtonDown> behandelt markieren, markieren Sie im Grunde <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> alle weiteren Listener entlang der Route und alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="c3662-1297">If you mark <xref:System.Windows.UIElement.MouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="c3662-1298">Dies schließt möglicherweise Klassen Handler-generierte Ereignisse ein, z <xref:System.Windows.Controls.Control.MouseDoubleClick> . b..</span><span class="sxs-lookup"><span data-stu-id="c3662-1298">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="c3662-1299">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse <xref:System.Windows.UIElement> ) als Maus-"Dienst" (mit der von der-Klasse bereitgestellten Dienst Definition <xref:System.Windows.Input.Mouse> ) vorstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1299">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="c3662-1300">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1300">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="c3662-1301">Für erweiterte Szenarien, wie z. b. das Überprüfen auf Zustände von nicht standardmäßigen Schaltflächen, müssen Sie möglicherweise die APIs für die-Klasse und nicht für die in der- <xref:System.Windows.Input.Mouse> Klasse verwenden <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1301">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c3662-1302">Einige Steuerelement Klassen verfügen möglicherweise über eine inhärente Klassen Behandlung für Maustasten Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="c3662-1302">Some control classes might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="c3662-1303">Das Ereignis mit der linken Maustaste auf das Ereignis ist das wahrscheinlichste Ereignis, um eine Klassen Behandlung in einem-Steuerelement zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1303">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="c3662-1304">Die Klassen Behandlung markiert häufig das zugrunde liegende <xref:System.Windows.Input.Mouse> Klassen Ereignis als behandelt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1304">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="c3662-1305">Wenn das Ereignis als behandelt markiert ist, werden andere Instanzhandler, die diesem Element zugeordnet sind, normalerweise nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1305">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="c3662-1306">Alle anderen Klassen-oder Instanzhandler, die an Elemente in der Blasen Richtung an den Stamm in der UI-Struktur angefügt werden, werden normalerweise nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1306">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="c3662-1307">Sie können das Problem, das in den vorangehenden Ereignissen "wichtig" und "empfangen" angezeigt wird, <xref:System.Windows.UIElement.MouseLeftButtonDown> auf eine abgeleitete Klasse, die über eine Klassen Behandlung verfügt, mit einer der folgenden Lösungen beheben:</span><span class="sxs-lookup"><span data-stu-id="c3662-1307">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="c3662-1308">Fügen Sie Handler für das- <xref:System.Windows.UIElement.PreviewMouseDown> Ereignis an, das von den-Steuerelementen nicht als behandelt markiert ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-1308">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="c3662-1309">Da es sich hierbei um ein Vorschau Ereignis handelt, beginnt die Route im Stammverzeichnis und wird zum-Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="c3662-1309">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="c3662-1310">Registrieren Sie einen Handler für das Steuerelement, indem <xref:System.Windows.UIElement.AddHandler%2A> Sie aufrufen und die Signatur Option auswählen, mit der Handler Ereignisse überwachen können, auch wenn Sie in den Routing Ereignisdaten bereits als behandelt markiert sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-1310">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1311">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1311">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1312">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1312">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="c3662-1313">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1313">Routing strategy</span></span>|<span data-ttu-id="c3662-1314">Direkt</span><span class="sxs-lookup"><span data-stu-id="c3662-1314">Direct</span></span>|  
|<span data-ttu-id="c3662-1315">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1315">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-1316"><xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1316">Override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1317">Identifiziert das <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1317">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1318">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1318">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-1319">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1319">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-1320">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1320">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-1321">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1321">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-1322">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1322">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1323">Tritt auf, wenn die linke Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1323">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1324">Obwohl dieses Routing [Ereignis](/dotnet/framework/wpf/advanced/routed-events-overview) einer bubblingerroute durch eine Elementstruktur folgt, ist es tatsächlich ein direktes Routing Ereignis, das von jedem Element in der Elementstruktur ausgelöst und erneut ausgeführt wird <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1324">Although this [routed event](/dotnet/framework/wpf/advanced/routed-events-overview) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="c3662-1325">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden Ereignisses melden, bei dem es sich um <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1325">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="c3662-1326">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="c3662-1326">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="c3662-1327">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit aufgerufen wird, wobei Ereignisse behandelt werden, die <xref:System.Windows.UIElement.AddHandler%2A> bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="c3662-1327">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="c3662-1328">Wenn Sie <xref:System.Windows.UIElement.MouseLeftButtonUp> behandelt markieren, markieren Sie im Grunde <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> alle weiteren Listener entlang der Route und alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="c3662-1328">If you mark <xref:System.Windows.UIElement.MouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="c3662-1329">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse <xref:System.Windows.UIElement> ) als Maus-"Dienst" (mit der von der-Klasse bereitgestellten Dienst Definition <xref:System.Windows.Input.Mouse> ) vorstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1329">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="c3662-1330">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1330">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="c3662-1331">Für erweiterte Szenarien, wie z. b. das Überprüfen auf Zustände von nicht standardmäßigen Schaltflächen, müssen Sie möglicherweise die APIs für die-Klasse und nicht für die in der- <xref:System.Windows.Input.Mouse> Klasse verwenden <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1331">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1332">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1332">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1333">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1333">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="c3662-1334">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1334">Routing strategy</span></span>|<span data-ttu-id="c3662-1335">Direkt</span><span class="sxs-lookup"><span data-stu-id="c3662-1335">Direct</span></span>|  
|<span data-ttu-id="c3662-1336">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1336">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-1337"><xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1337">Override <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1338">Identifiziert das <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1338">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1339">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1339">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-1340">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1340">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-1341">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1341">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-1342">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1342">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-1343">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1343">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1344">Tritt auf, wenn der Mauszeiger bewegt wird, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1344">Occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1345">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.MouseMove> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1345">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-1346">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.MouseMove> werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-1346">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1347">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1347">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1348">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1348">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseMoveEvent>|  
|<span data-ttu-id="c3662-1349">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1349">Routing strategy</span></span>|<span data-ttu-id="c3662-1350">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-1350">Bubbling</span></span>|  
|<span data-ttu-id="c3662-1351">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1351">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="c3662-1352">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewMouseMove> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1352">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="c3662-1353"><xref:System.Windows.UIElement.OnMouseMove%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1353">Override <xref:System.Windows.UIElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1354">Identifiziert das <see cref="E:System.Windows.UIElement.MouseMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1354">Identifies the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1355">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1355">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-1356">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1356">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-1357">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1357">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-1358">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1358">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-1359">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1359">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1360">Tritt auf, wenn die rechte Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1360">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1361">Obwohl dieses Routing [Ereignis](/dotnet/framework/wpf/advanced/routed-events-overview) einer bubblingerroute durch eine Elementstruktur folgt, ist es tatsächlich ein direktes Routing Ereignis, das von jedem Element in der Elementstruktur ausgelöst und erneut ausgeführt wird <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1361">Although this [routed event](/dotnet/framework/wpf/advanced/routed-events-overview) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="c3662-1362">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden Ereignisses melden, bei dem es sich um <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1362">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="c3662-1363">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="c3662-1363">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="c3662-1364">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit aufgerufen wird, wobei Ereignisse behandelt werden, die <xref:System.Windows.UIElement.AddHandler%2A> bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="c3662-1364">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="c3662-1365">Wenn Sie <xref:System.Windows.UIElement.MouseRightButtonDown> behandelt markieren, markieren Sie im Grunde <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> alle weiteren Listener entlang der Route und alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="c3662-1365">If you mark <xref:System.Windows.UIElement.MouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="c3662-1366">Dies schließt möglicherweise Klassen Handler-generierte Ereignisse ein, z <xref:System.Windows.Controls.Control.MouseDoubleClick> . b..</span><span class="sxs-lookup"><span data-stu-id="c3662-1366">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="c3662-1367">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse <xref:System.Windows.UIElement> ) als Maus-"Dienst" (mit der von der-Klasse bereitgestellten Dienst Definition <xref:System.Windows.Input.Mouse> ) vorstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1367">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="c3662-1368">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1368">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="c3662-1369">Für erweiterte Szenarien, wie z. b. das Überprüfen auf Zustände von nicht standardmäßigen Schaltflächen, müssen Sie möglicherweise die APIs für die-Klasse und nicht für die in der- <xref:System.Windows.Input.Mouse> Klasse verwenden <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1369">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="c3662-1370">Die Mausereignisse mit der rechten Maustaste verfügen häufig über systemeigene Behandlung in Anwendungsszenarien.</span><span class="sxs-lookup"><span data-stu-id="c3662-1370">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="c3662-1371">Beispielsweise kann mit der rechten Maustaste ein Kontextmenü angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1371">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="c3662-1372">Siehe [Übersicht über ContextMenu](/dotnet/framework/wpf/controls/contextmenu-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-1372">See [ContextMenu Overview](/dotnet/framework/wpf/controls/contextmenu-overview).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1373">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1373">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1374">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1374">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="c3662-1375">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1375">Routing strategy</span></span>|<span data-ttu-id="c3662-1376">Direkt</span><span class="sxs-lookup"><span data-stu-id="c3662-1376">Direct</span></span>|  
|<span data-ttu-id="c3662-1377">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1377">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-1378"><xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1378">Override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1379">Identifiziert das <see cref="E:System.Windows.UIElement.MouseRightButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1379">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1380">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1380">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-1381">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1381">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-1382">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1382">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-1383">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1383">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-1384">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1384">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1385">Tritt auf, wenn die rechte Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1385">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1386">Obwohl dieses Routing [Ereignis](/dotnet/framework/wpf/advanced/routed-events-overview) einer bubblingerroute durch eine Elementstruktur folgt, ist es tatsächlich ein direktes Routing Ereignis, das von jedem Element in der Elementstruktur ausgelöst und erneut ausgeführt wird <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1386">Although this [routed event](/dotnet/framework/wpf/advanced/routed-events-overview) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="c3662-1387">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden Ereignisses melden, bei dem es sich um <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1387">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="c3662-1388">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="c3662-1388">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="c3662-1389">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit aufgerufen wird, wobei Ereignisse behandelt werden, die <xref:System.Windows.UIElement.AddHandler%2A> bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="c3662-1389">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="c3662-1390">Wenn Sie <xref:System.Windows.UIElement.MouseRightButtonUp> behandelt markieren, markieren Sie im Grunde <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> alle weiteren Listener entlang der Route und alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="c3662-1390">If you mark <xref:System.Windows.UIElement.MouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="c3662-1391">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse <xref:System.Windows.UIElement> ) als Maus-"Dienst" (mit der von der-Klasse bereitgestellten Dienst Definition <xref:System.Windows.Input.Mouse> ) vorstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1391">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="c3662-1392">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1392">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="c3662-1393">Für erweiterte Szenarien, wie z. b. das Überprüfen auf Zustände von nicht standardmäßigen Schaltflächen, müssen Sie möglicherweise die APIs für die-Klasse und nicht für die in der- <xref:System.Windows.Input.Mouse> Klasse verwenden <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1393">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1394">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1394">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1395">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1395">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="c3662-1396">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1396">Routing strategy</span></span>|<span data-ttu-id="c3662-1397">Direkt</span><span class="sxs-lookup"><span data-stu-id="c3662-1397">Direct</span></span>|  
|<span data-ttu-id="c3662-1398">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1398">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-1399"><xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1399">Override <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1400">Identifiziert das <see cref="E:System.Windows.UIElement.MouseRightButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1400">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1401">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1401">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-1402">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1402">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-1403">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1403">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-1404">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1404">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-1405">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1405">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1406">Tritt auf, wenn eine Maustaste über diesem Element losgelassen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1406">Occurs when any mouse button is released over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1407">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.MouseUp> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1407">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-1408">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.MouseUp> werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-1408">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-1409">Das- <xref:System.Windows.UIElement.MouseUp> Ereignis wird häufig mit oder ausgelöst <xref:System.Windows.UIElement.MouseLeftButtonUp> <xref:System.Windows.UIElement.MouseRightButtonUp> , das einem Release von einer der beiden Standard-Maustasten entspricht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1409">The <xref:System.Windows.UIElement.MouseUp> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="c3662-1410"><xref:System.Windows.UIElement.MouseLeftButtonUp> und <xref:System.Windows.UIElement.MouseRightButtonUp> sind auch Routing Ereignisse, aber es handelt sich um direkte Routing Ereignisse, und das entsprechende Schaltflächen spezifische Ereignis wird ausgelöst, wenn das <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignis dieses Element entlang der Ereignis Route erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1410"><xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="c3662-1411">Siehe Hinweise für <xref:System.Windows.UIElement.MouseLeftButtonUp> oder <xref:System.Windows.UIElement.MouseRightButtonUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1411">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1412">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1412">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1413">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1413">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseUpEvent>|  
|<span data-ttu-id="c3662-1414">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1414">Routing strategy</span></span>|<span data-ttu-id="c3662-1415">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-1415">Bubbling</span></span>|  
|<span data-ttu-id="c3662-1416">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1416">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-1417">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewMouseUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1417">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="c3662-1418"><xref:System.Windows.UIElement.OnMouseUp%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1418">Override <xref:System.Windows.UIElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1419">Identifiziert das <see cref="E:System.Windows.UIElement.MouseUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1419">Identifies the <see cref="E:System.Windows.UIElement.MouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1420">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1420">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-1421">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1421">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-1422">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1422">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-1423">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1423">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-1424">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1424">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1425">Tritt auf, wenn der Benutzer das Mausrad dreht, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1425">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1426">Der Fokus oder die Maus Erfassung haben Vorrang vor der Position des Mauszeigers. Wenn Sie das <xref:System.Windows.UIElement.MouseWheel> Ereignis von einem fokussierten oder erfassten Element erhalten, kann der Mauszeiger daher tatsächlich über einem anderen Element sein.</span><span class="sxs-lookup"><span data-stu-id="c3662-1426">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.UIElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="c3662-1427">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.MouseWheel> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1427">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseWheel> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-1428">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.MouseWheel> werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-1428">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-1429">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-1429">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-1430">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-1430">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseWheelEvent>|  
|<span data-ttu-id="c3662-1431">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-1431">Routing strategy</span></span>|<span data-ttu-id="c3662-1432">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-1432">Bubbling</span></span>|  
|<span data-ttu-id="c3662-1433">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-1433">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="c3662-1434">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewMouseWheel> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1434">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="c3662-1435"><xref:System.Windows.UIElement.OnMouseWheel%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1435">Override <xref:System.Windows.UIElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-1436">Identifiziert das <see cref="E:System.Windows.UIElement.MouseWheel" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1436">Identifies the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1437">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1437">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-1438">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1438">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-1439">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1439">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-1440">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1440">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-1441">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-1441">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="uIElement.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="c3662-1442">Eine Durchlaufanforderung, die eine Eigenschaft enthält, die entweder einen Modus zum Durchlaufen in der vorliegenden Aktivierreihenfolge oder eine Richtung zum visuellen Verschieben angibt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1442">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span></span></param>
        <summary><span data-ttu-id="c3662-1443">Versucht, den Fokus von diesem Element auf ein anderes Element zu verschieben.</span><span class="sxs-lookup"><span data-stu-id="c3662-1443">Attempts to move focus from this element to another element.</span></span> <span data-ttu-id="c3662-1444">Die Richtung, in der der Fokus verschoben wird, wird durch eine Führungsrichtung angegeben, die innerhalb der Organisation des visuellen übergeordneten Elements für dieses Element interpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1444">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span></span></summary>
        <returns><span data-ttu-id="c3662-1445"><see langword="true" />, wenn der angeforderte Durchlauf ausgeführt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-1445"><see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1446">Stellen Sie sicher, dass Sie den Rückgabewert dieser Methode überprüfen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1446">Make sure you check the return value of this method.</span></span> <span data-ttu-id="c3662-1447">Der Rückgabewert `false` kann zurückgegeben werden, wenn die Traversierung in einem Tabstopp ausgeführt wird, der durch die Komposition eines Steuer Elements definiert ist, und die Traversale Anforderung nicht zum Umbruch aufgefordert wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-1447">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit&#xA;override this.OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit" Usage="uIElement.OnAccessKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1448">Die Ereignisdaten für das Tastenkombinationsereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1448">The event data to the access key event.</span></span> <span data-ttu-id="c3662-1449">In den Ereignisdaten wird gemeldet, welche Taste aufgerufen wurde. Zudem wird angegeben, ob das <see cref="T:System.Windows.Input.AccessKeyManager" />-Objekt, das das Senden dieser Ereignisse steuert, den Aufruf dieser Tastenkombination auch an andere Elemente gesendet hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-1449">The event data reports which key was invoked, and indicate whether the <see cref="T:System.Windows.Input.AccessKeyManager" /> object that controls the sending of these events also sent this access key invocation to other elements.</span></span></param>
        <summary><span data-ttu-id="c3662-1450">Stellt die Klassenbehandlung für eine Situation bereit, in der eine Tastenkombination mit Bedeutung für dieses Element aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1450">Provides class handling for when an access key that is meaningful for this element is invoked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1451">Es gibt kein tatsächliches AccessKey-Ereignis in der- <xref:System.Windows.UIElement> Klasse oder an einem anderen Ort, für das Sie Handler anordnen oder anfügen können.</span><span class="sxs-lookup"><span data-stu-id="c3662-1451">There is no actual AccessKey event in the <xref:System.Windows.UIElement> class, or elsewhere, which you can raise or attach handlers for.</span></span> <span data-ttu-id="c3662-1452">Stattdessen stammt das Ereignis über eine dedizierte Manager-Klasse, <xref:System.Windows.Input.AccessKeyManager> die alle Eingaben nach verarbeitet, um nach Zugriffs Schlüsseln zu suchen, die auf das gesamte Eingabe Modell anwendbar sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-1452">Instead, the event is originated via a dedicated manager class, <xref:System.Windows.Input.AccessKeyManager>, which post-processes all input to search for access keys that are applicable to the entire input model.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c3662-1453">Die Standard Implementierung dieser Methode in <see cref="T:System.Windows.UIElement" /> legt den Tastaturfokus auf dieses Element fest (durch Aufrufen von <see cref="M:System.Windows.UIElement.Focus" /> ).</span><span class="sxs-lookup"><span data-stu-id="c3662-1453">The default implementation of this method in <see cref="T:System.Windows.UIElement" /> sets keyboard focus to this element (by calling <see cref="M:System.Windows.UIElement.Focus" />).</span></span> <span data-ttu-id="c3662-1454">Implementierungen sollten dieses Verhalten fortsetzen, wenn Sie für den Einsatz geeignet sind, da es sich um ein erwartetes Verhalten für Barrierefreiheits Szenarien handelt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1454">Implementations should perpetuate this behavior if they are focusable, because it is an expected behavior for accessibility scenarios.</span></span> <span data-ttu-id="c3662-1455">Beachten Sie, dass die Basis Implementierung nichts mit den bestandenen Ereignisdaten ausführt und kein weiteres Ereignis auslöst. der Fokus wird lediglich festgelegt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1455">Note that the base implementation does nothing with the passed event data and raises no further event; it just sets the focus.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnChildDesiredSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChildDesiredSizeChanged (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChildDesiredSizeChanged(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChildDesiredSizeChanged (child As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChildDesiredSizeChanged(System::Windows::UIElement ^ child);" />
      <MemberSignature Language="F#" Value="abstract member OnChildDesiredSizeChanged : System.Windows.UIElement -&gt; unit&#xA;override this.OnChildDesiredSizeChanged : System.Windows.UIElement -&gt; unit" Usage="uIElement.OnChildDesiredSizeChanged child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="c3662-1456">Das untergeordnete Element, dessen Größe geändert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1456">The child element that is being resized.</span></span></param>
        <summary><span data-ttu-id="c3662-1457">Unterstützt das Layoutverhalten beim Ändern der Größe eines untergeordneten Elements.</span><span class="sxs-lookup"><span data-stu-id="c3662-1457">Supports layout behavior when a child element is resized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1458">Diese Methode wird in der Regel nicht von Ihrem Anwendungscode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1458">This method is typically not called by your application code.</span></span> <span data-ttu-id="c3662-1459">Sie wird verfügbar gemacht, damit abgeleitete Element Klassen weitere Überprüfungen auf Ihren eigenen, möglicherweise ungültigen Layoutzustand vornehmen können.</span><span class="sxs-lookup"><span data-stu-id="c3662-1459">It is exposed so that derived element classes can make further checks on their own possibly invalid layout state.</span></span> <span data-ttu-id="c3662-1460">Klassen können auch versuchen, Optimierungen durchführen zu können, um die Verarbeitungszeit für einen Layoutdurchlauf basierend auf Größenänderungen an untergeordneten Elementen zu minimieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1460">Classes could also attempt optimizations to minimize the processing time for a layout pass based on size changes to child elements.</span></span> <span data-ttu-id="c3662-1461">Eine von abgeleitete Element Klasse, die implementiert, <xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> ist das- <xref:System.Windows.Controls.Grid> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="c3662-1461">An example derived element class that implements <xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> is the <xref:System.Windows.Controls.Grid> control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c3662-1462">Die- <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> Methode verfügt über die Standard Implementierung von, die <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> für sich selbst aufrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1462">The <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> method has the default implementation of calling <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> on itself.</span></span> <span data-ttu-id="c3662-1463">Eine typische Implementierung wäre: führen Sie eine beliebige Optimierung durch, die von Ihrem eigenen Element unterstützt wird, und nennen Sie dann in der Regel <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> die Basis aus mindestens einer der codebranches (der, der den Status "geändert" gemäß ihrer eigenen Measure-cachinglogik angibt).</span><span class="sxs-lookup"><span data-stu-id="c3662-1463">A typical implementation would be: do whatever optimization your own element supports, and then typically call base <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> from at least one of the code branches (the one that indicated "dirty" state per your own measure caching logic).</span></span>  
  
<span data-ttu-id="c3662-1464">Diese Methode wird nur bei der Layoutverarbeitung aufgerufen, wenn es sich um das untergeordnete Element handelt, das die Größenänderungen verursacht hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-1464">This method is only called in the layout processing if it was the child itself that originated the size changes.</span></span> <span data-ttu-id="c3662-1465">Andernfalls, wenn das übergeordnete Element <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> gemäß den layoutsystemregeln den Durchlauf initiiert, wird das Layout bereits vom übergeordneten Element neu berechnet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1465">Otherwise, if the parent element initiates the <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> pass, according to the layout system rules, the parent is recalculating layout already.</span></span> <span data-ttu-id="c3662-1466">Das Layoutsystem verarbeitet das Layout in der Reihenfolge, in der das untergeordnete Element übergeordnet ist, d. h., es ist kein zurück zur übergeordneten Elementgröße aus den layoutaufrufen</span><span class="sxs-lookup"><span data-stu-id="c3662-1466">The layout system processes layout in the order of child-to-parent, so no return to parent element sizing from the child element layout calls is necessary.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer&#xA;override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="uIElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3662-1467">Gibt klassenspezifische <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />-Implementierungen für die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]-Infrastruktur zurück.</span><span class="sxs-lookup"><span data-stu-id="c3662-1467">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns><span data-ttu-id="c3662-1468">Die typspezifische <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1468">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c3662-1469">Bei der Implementierung dieser Methode wird in der Regel der Konstruktor einer bestimmten <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> Implementierung aufgerufen und als Rückgabewert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="c3662-1469">The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.</span></span>  
  
<span data-ttu-id="c3662-1470">Alle <see cref="T:System.Windows.UIElement" /> abgeleiteten Klassen sollten diese Methode implementieren, um Ihre eigenen spezifischen <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> Implementierungen für die Infrastruktur bereitzustellen [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="c3662-1470">All <see cref="T:System.Windows.UIElement" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span> <span data-ttu-id="c3662-1471">Ausführliche Informationen zur Implementierung dieses Musters finden Sie unter <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1471">For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1472">Das <see cref="T:System.Windows.DragEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1472">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1473">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragEnter" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1473">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1474">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1474">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1475">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1475">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1476">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1476">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1477">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1477">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1478">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1478">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1479">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1479">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1480">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1480">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1481">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1481">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1482">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1482">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1483">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1483">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1484">Das <see cref="T:System.Windows.DragEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1484">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1485">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragLeave" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1485">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1486">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1486">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1487">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1487">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1488">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1488">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1489">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1489">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1490">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1490">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1491">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1491">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1492">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1492">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1493">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1493">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1494">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1494">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1495">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1495">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1496">Das <see cref="T:System.Windows.DragEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1496">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1497">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragOver" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1497">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1498">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1498">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1499">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1499">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1500">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1500">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1501">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1501">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1502">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1502">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1503">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1503">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1504">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1504">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1505">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1505">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1506">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1506">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1507">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1507">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1508">Das <see cref="T:System.Windows.DragEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1508">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1509">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragEnter" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1509">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1510">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1510">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1511">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1511">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1512">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1512">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1513">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1513">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1514">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1514">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1515">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1515">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1516">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1516">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1517">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1517">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1518">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1518">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1519">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1519">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1520">Das <see cref="T:System.Windows.GiveFeedbackEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1520">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1521">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.GiveFeedback" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1521">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1522">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1522">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1523">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1523">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1524">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1524">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1525">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1525">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1526">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1526">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1527">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1527">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1528">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1528">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1529">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1529">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1530">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1530">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1531">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1531">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1532">Ein <see cref="T:System.Windows.RoutedEventArgs" />, das Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1532">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="c3662-1533">Diese Ereignisdaten müssen den Bezeichner für das <see cref="E:System.Windows.UIElement.GotFocus" />-Ereignis enthalten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1533">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="c3662-1534">Löst das <see cref="E:System.Windows.UIElement.GotFocus" />-Routingereignis mithilfe der bereitgestellten Ereignisdaten aus.</span><span class="sxs-lookup"><span data-stu-id="c3662-1534">Raises the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event by using the event data provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1535">Diese Methode, obwohl virtuell, verfügt über eine Standard Implementierung, die das-Ereignis auslöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1535">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="c3662-1536">Diese on \*-Methoden Implementierung dient dazu, das-Ereignis zu erhöhen, und dieselbe Methoden Implementierung wird intern aufgerufen, um das-Ereignis zu erhöhen, wenn sich der <xref:System.Windows.UIElement.IsFocused%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="c3662-1536">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="c3662-1537">Die- <xref:System.Windows.UIElement.OnGotFocus%2A> Implementierung unterscheidet sich von einigen anderen [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] on \*-Implementierungen, die nur eine bequeme Möglichkeit zum Hinzufügen einer Klassen Behandlung für dieses Ereignis bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1537">The <xref:System.Windows.UIElement.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c3662-1538">Wenn Sie nicht über eine absichtliche und ungewöhnliche Notwendigkeit verfügen, die Fokus Ereignisse nicht zu erhöhen, stellen Sie sicher, dass die Implementierung die Basis Implementierung aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1538">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="c3662-1539">Andernfalls wird das- <see cref="E:System.Windows.UIElement.GotFocus" /> Ereignis nicht bei normalen Benutzer Vorgängen ausgelöst, bei denen normalerweise der Fokus auf dieses Element festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1539">Otherwise, the <see cref="E:System.Windows.UIElement.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="c3662-1540">Wenn Sie nicht beabsichtigen, das Element zu verwenden, können Sie verhindern, dass das Element in den Fokus verwendet wird, indem Sie <see cref="P:System.Windows.UIElement.Focusable" /> auf festlegen <see langword="false" /> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1540">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</span></span></para></block>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1541">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1541">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1542">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1542">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1543">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1543">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1544">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1544">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1545">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1545">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1546">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1546">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1547">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1547">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1548">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1548">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1549">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1549">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1550">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1550">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1551">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1551">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1552">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1552">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnGotMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1553">Das <see cref="T:System.Windows.Input.MouseEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1553">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1554">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1554">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1555">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1555">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1556">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1556">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1557">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1557">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1558">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1558">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1559">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1559">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1560">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1560">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1561">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1561">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1562">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1562">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1563">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1563">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1564">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1564">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnGotStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1565">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1565">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1566">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1566">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1567">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1567">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1568">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1568">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1569">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1569">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1570">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1570">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1571">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1571">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1572">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1572">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1573">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1573">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1574">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1574">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1575">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1575">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1576">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1576">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnGotTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1577">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1577">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1578">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.GotTouchCapture" />-Routingereignis bereit, das eintritt, wenn eine Berührung für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1578">Provides class handling for the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1579">Die- <xref:System.Windows.UIElement.OnGotTouchCapture%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1579">The <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-1580"><xref:System.Windows.UIElement.OnGotTouchCapture%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.GotTouchCapture> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1580">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.GotTouchCapture> event.</span></span> <span data-ttu-id="c3662-1581">Stellen Sie sicher, dass Sie die-Methode der Basisklasse aufzurufen <xref:System.Windows.UIElement.OnGotTouchCapture%2A> , damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1581">Be sure to call the base class' <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsKeyboardFocusedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1582">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1582">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1583">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1583">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="c3662-1584">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1584">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1585">Diese virtuelle Methode wird ausgelöst, wenn sich der Wert der <xref:System.Windows.UIElement.IsKeyboardFocused%2A> Abhängigkeits Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="c3662-1585">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="c3662-1586">Die virtuelle Methode wird zuerst ausgelöst und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1586">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="c3662-1587">Anschließend wird das- <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1587">Then the <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="c3662-1588">Beachten Sie, dass das  <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> Ereignis kein Routing Ereignis ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-1588">Notice that the  <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="c3662-1589">Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1589">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="c3662-1590">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1590">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1591">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1591">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="c3662-1592">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1592">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1593">Ein <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1593">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1594">Wird aufgerufen, kurz bevor das <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />-Ereignis von diesem Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1594">Invoked just before the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span></span> <span data-ttu-id="c3662-1595">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1595">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1596">Diese virtuelle Methode wird ausgelöst, wenn sich der Wert der <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> Abhängigkeits Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="c3662-1596">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> dependency property changes.</span></span> <span data-ttu-id="c3662-1597">Die virtuelle Methode wird zuerst ausgelöst und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1597">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="c3662-1598">Anschließend wird das- <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1598">Then the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="c3662-1599">Beachten Sie, dass das <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> Ereignis kein Routing Ereignis ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-1599">Notice that the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="c3662-1600">Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1600">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="c3662-1601">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1601">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1602">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1602">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="c3662-1603">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1603">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1604">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1604">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1605">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1605">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="c3662-1606">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1606">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1607">Diese virtuelle Methode wird ausgelöst, wenn der Wert der- <xref:System.Windows.UIElement.IsMouseCaptured%2A> Abhängigkeits Eigenschaft ihren Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="c3662-1607">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="c3662-1608">Die virtuelle Methode wird zuerst ausgelöst und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1608">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="c3662-1609">Anschließend wird das- <xref:System.Windows.UIElement.IsMouseCapturedChanged> Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1609">Then the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="c3662-1610">Beachten Sie, dass das <xref:System.Windows.UIElement.IsMouseCapturedChanged> Ereignis kein Routing Ereignis ist. Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1610">Notice that the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is not a routed event; Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="c3662-1611">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1611">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1612">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1612">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="c3662-1613">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1613">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsMouseCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1614">Ein <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1614">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1615">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1615">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="c3662-1616">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1616">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c3662-1617">Diese virtuelle Methode wird ausgelöst, wenn der Wert der- <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> Abhängigkeits Eigenschaft ihren Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="c3662-1617">This virtual method is raised when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property changes its value.</span></span> <span data-ttu-id="c3662-1618">Die virtuelle Methode wird zuerst ausgelöst und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1618">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="c3662-1619">Anschließend wird das- <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1619">Then the <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span></span> <span data-ttu-id="c3662-1620">Beachten Sie, dass das Ereignis kein Routing Ereignis ist. Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1620">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span></span>  
  
<span data-ttu-id="c3662-1621">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1621">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1622">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1622">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="c3662-1623">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1623">You may call base either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsMouseDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1624">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1624">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1625">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1625">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="c3662-1626">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1626">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1627">Diese virtuelle Methode wird ausgelöst, wenn der Wert der- <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> Abhängigkeits Eigenschaft ihren Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="c3662-1627">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="c3662-1628">Die virtuelle Methode wird zuerst ausgelöst und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1628">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="c3662-1629">Anschließend wird das- <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1629">Then the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="c3662-1630">Beachten Sie, dass das <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> Ereignis kein Routing Ereignis ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-1630">Notice that the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="c3662-1631">Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1631">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="c3662-1632">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1632">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1633">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1633">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="c3662-1634">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1634">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsStylusCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1635">Ein <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1635">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1636">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1636">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="c3662-1637">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1637">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1638">Diese virtuelle Methode wird ausgelöst, wenn der Wert der- <xref:System.Windows.UIElement.IsStylusCaptured%2A> Abhängigkeits Eigenschaft ihren Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="c3662-1638">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="c3662-1639">Die virtuelle Methode wird zuerst ausgelöst und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1639">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="c3662-1640">Anschließend wird das- <xref:System.Windows.UIElement.IsStylusCapturedChanged> Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1640">Then the <xref:System.Windows.UIElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="c3662-1641">Beachten Sie, dass das Ereignis kein Routing Ereignis ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-1641">Notice that the event is not a routed event.</span></span> <span data-ttu-id="c3662-1642">Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1642">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="c3662-1643">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1643">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1644">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1644">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="c3662-1645">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1645">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsStylusCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1646">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1646">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1647">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1647">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="c3662-1648">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1648">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1649">Diese virtuelle Methode wird ausgelöst, wenn der Wert der- <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> Abhängigkeits Eigenschaft ihren Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="c3662-1649">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="c3662-1650">Die virtuelle Methode wird zuerst ausgelöst und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1650">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="c3662-1651">Anschließend wird das- <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1651">Then the <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="c3662-1652">Beachten Sie, dass das Ereignis kein Routing Ereignis ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-1652">Notice that the event is not a routed event.</span></span> <span data-ttu-id="c3662-1653">Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1653">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="c3662-1654">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1654">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1655">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1655">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="c3662-1656">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1656">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsStylusDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1657">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1657">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1658">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1658">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="c3662-1659">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1659">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1660">Diese virtuelle Methode wird ausgelöst, wenn der Wert der- <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> Abhängigkeits Eigenschaft ihren Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="c3662-1660">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="c3662-1661">Die virtuelle Methode wird zuerst ausgelöst und kann die Ereignisdaten bei Bedarf bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1661">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="c3662-1662">Anschließend wird das- <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> Ereignis mit derselben Ereignisdaten Instanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1662">Then the <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="c3662-1663">Beachten Sie, dass das Ereignis kein Routing Ereignis ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-1663">Notice that the event is not a routed event.</span></span> <span data-ttu-id="c3662-1664">Daher können Sie Sie nicht im-Klassen Handler als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1664">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="c3662-1665">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1665">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1666">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1666">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="c3662-1667">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1667">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1668">Das <see cref="T:System.Windows.Input.KeyEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1668">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1669">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.KeyDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1669">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1670">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1670">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1671">Keystrokes werden von einem dedizierten Eingabe-Manager behandelt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1671">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="c3662-1672">Andere Programmierfunktionen, die auf Tastatureingaben basieren (z. b. Eingabe-und Befehls Bindungen), können den Tastatur Schlag verarbeiten, bevor er als allgemeine Tastatureingaben verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1672">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="c3662-1673">Wenn diese Eingabe System Features das Ereignis als behandelt markieren, <xref:System.Windows.UIElement.OnKeyDown%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1673">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="c3662-1674">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1674">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1675">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1675">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1676">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1676">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1677">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1677">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1678">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1678">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1679">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1679">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1680">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1680">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1681">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1681">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1682">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1682">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1683">Das <see cref="T:System.Windows.Input.KeyEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1683">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1684">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.KeyUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1684">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1685">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1685">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1686">Keystrokes werden von einem dedizierten Eingabe-Manager behandelt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1686">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="c3662-1687">Andere Programmierfunktionen, die auf Tastatureingaben basieren (z. b. Eingabe-und Befehls Bindungen), können den Tastatur Schlag verarbeiten, bevor er als allgemeine Tastatureingaben verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1687">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="c3662-1688">Wenn diese Eingabe System Features das Ereignis als behandelt markieren, <xref:System.Windows.UIElement.OnKeyUp%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1688">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="c3662-1689">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1689">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1690">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1690">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1691">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1691">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1692">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1692">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1693">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1693">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1694">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1694">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1695">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1695">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1696">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1696">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1697">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1697">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1698">Ein <see cref="T:System.Windows.RoutedEventArgs" />, das Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1698">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="c3662-1699">Diese Ereignisdaten müssen den Bezeichner für das <see cref="E:System.Windows.UIElement.LostFocus" />-Ereignis enthalten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1699">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="c3662-1700">Löst das <see cref="E:System.Windows.UIElement.LostFocus" />- Routingereignis mithilfe der bereitgestellten Ereignisdaten aus.</span><span class="sxs-lookup"><span data-stu-id="c3662-1700">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event by using the event data that is provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1701">Diese Methode, obwohl virtuell, verfügt über eine Standard Implementierung, die das-Ereignis auslöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-1701">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="c3662-1702">Diese on \*-Methoden Implementierung dient dazu, das-Ereignis zu erhöhen, und dieselbe Methoden Implementierung wird intern aufgerufen, um das-Ereignis zu erhöhen, wenn sich der <xref:System.Windows.UIElement.IsFocused%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="c3662-1702">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="c3662-1703">Diese Implementierung unterscheidet sich von einigen anderen [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] on \*-Implementierungen, die nur eine bequeme Möglichkeit zum Hinzufügen einer Klassen Behandlung für dieses Ereignis bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1703">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c3662-1704">Wenn Sie nicht über eine absichtliche und ungewöhnliche Notwendigkeit verfügen, die Fokus Ereignisse nicht zu erhöhen, stellen Sie sicher, dass die Implementierung die Basis Implementierung aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1704">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="c3662-1705">Andernfalls wird das- <see cref="E:System.Windows.UIElement.LostFocus" /> Ereignis nicht bei normalen Benutzer Vorgängen ausgelöst, bei denen normalerweise der Fokus auf dieses Element festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1705">Otherwise, the <see cref="E:System.Windows.UIElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="c3662-1706">Wenn Sie nicht beabsichtigen, das Element zu verwenden, können Sie verhindern, dass das Element in den Fokus verwendet wird, indem Sie <see cref="P:System.Windows.UIElement.Focusable" /> auf festlegen <see langword="false" /> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1706">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1707">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />-Objekt, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1707">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1708">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1708">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1709">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1709">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1710">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1710">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1711">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1711">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1712">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1712">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1713">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1713">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1714">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1714">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1715">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1715">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1716">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1716">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1717">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1717">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1718">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1718">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1719">Das <see cref="T:System.Windows.Input.MouseEventArgs" />-Objekt, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1719">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1720">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1720">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1721">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1721">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1722">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1722">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1723">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1723">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1724">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1724">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1725">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1725">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1726">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1726">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1727">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1727">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1728">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1728">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1729">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1729">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1730">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1730">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnLostStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1731">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Objekt, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1731">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1732">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1732">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1733">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1733">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1734">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1734">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1735">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1735">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1736">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1736">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1737">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1737">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1738">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1738">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1739">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1739">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1740">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1740">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1741">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1741">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1742">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1742">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnLostTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1743">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1743">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1744">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.LostTouchCapture" />-Routingereignis bereit, das auftritt, wenn in diesem Element die Fingereingabenerfassung verloren geht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1744">Provides class handling for the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1745">Die- <xref:System.Windows.UIElement.OnLostTouchCapture%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1745">The <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-1746"><xref:System.Windows.UIElement.OnLostTouchCapture%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.LostTouchCapture> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1746">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.LostTouchCapture> event.</span></span> <span data-ttu-id="c3662-1747">Stellen Sie sicher, dass Sie die-Methode der Basisklasse aufzurufen <xref:System.Windows.UIElement.OnLostTouchCapture%2A> , damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1747">Be sure to call the base class' <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationBoundaryFeedback(class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationBoundaryFeedback (e As ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationBoundaryFeedback(System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit&#xA;override this.OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit" Usage="uIElement.OnManipulationBoundaryFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1748">Die Daten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1748">The data for the event.</span></span></param>
        <summary><span data-ttu-id="c3662-1749">Wird aufgerufen, wenn das <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />-Ereignis eintritt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1749">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1750">Die- <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1750">The <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-1751"><xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1751">Override <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event.</span></span> <span data-ttu-id="c3662-1752">Stellen Sie sicher, dass Sie die- <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> Methode der Basisklasse aufzurufen, damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1752">Be sure to call the <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationCompleted (System.Windows.Input.ManipulationCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationCompleted(class System.Windows.Input.ManipulationCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationCompleted (e As ManipulationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationCompleted(System::Windows::Input::ManipulationCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationCompleted : System.Windows.Input.ManipulationCompletedEventArgs -&gt; unit&#xA;override this.OnManipulationCompleted : System.Windows.Input.ManipulationCompletedEventArgs -&gt; unit" Usage="uIElement.OnManipulationCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationCompletedEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1753">Die Daten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1753">The data for the event.</span></span></param>
        <summary><span data-ttu-id="c3662-1754">Wird aufgerufen, wenn das <see cref="E:System.Windows.UIElement.ManipulationCompleted" />-Ereignis eintritt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1754">Called when the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1755">Die- <xref:System.Windows.UIElement.OnManipulationCompleted%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1755">The <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-1756"><xref:System.Windows.UIElement.OnManipulationCompleted%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.ManipulationCompleted> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1756">Override <xref:System.Windows.UIElement.OnManipulationCompleted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationCompleted> event.</span></span> <span data-ttu-id="c3662-1757">Stellen Sie sicher, dass Sie die- <xref:System.Windows.UIElement.OnManipulationCompleted%2A> Methode der Basisklasse aufzurufen, damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1757">Be sure to call the <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationDelta">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationDelta (System.Windows.Input.ManipulationDeltaEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationDelta(class System.Windows.Input.ManipulationDeltaEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationDelta (e As ManipulationDeltaEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationDelta(System::Windows::Input::ManipulationDeltaEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationDelta : System.Windows.Input.ManipulationDeltaEventArgs -&gt; unit&#xA;override this.OnManipulationDelta : System.Windows.Input.ManipulationDeltaEventArgs -&gt; unit" Usage="uIElement.OnManipulationDelta e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationDeltaEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1758">Die Daten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1758">The data for the event.</span></span></param>
        <summary><span data-ttu-id="c3662-1759">Wird aufgerufen, wenn das <see cref="E:System.Windows.UIElement.ManipulationDelta" />-Ereignis eintritt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1759">Called when the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1760">Die- <xref:System.Windows.UIElement.OnManipulationDelta%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1760">The <xref:System.Windows.UIElement.OnManipulationDelta%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-1761"><xref:System.Windows.UIElement.OnManipulationDelta%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.ManipulationDelta> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1761">Override <xref:System.Windows.UIElement.OnManipulationDelta%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="c3662-1762">Stellen Sie sicher, dass Sie die- <xref:System.Windows.UIElement.OnManipulationDelta%2A> Methode der Basisklasse aufzurufen, damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1762">Be sure to call the <xref:System.Windows.UIElement.OnManipulationDelta%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationInertiaStarting (System.Windows.Input.ManipulationInertiaStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationInertiaStarting(class System.Windows.Input.ManipulationInertiaStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationInertiaStarting (e As ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationInertiaStarting(System::Windows::Input::ManipulationInertiaStartingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationInertiaStarting : System.Windows.Input.ManipulationInertiaStartingEventArgs -&gt; unit&#xA;override this.OnManipulationInertiaStarting : System.Windows.Input.ManipulationInertiaStartingEventArgs -&gt; unit" Usage="uIElement.OnManipulationInertiaStarting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationInertiaStartingEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1763">Die Daten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1763">The data for the event.</span></span></param>
        <summary><span data-ttu-id="c3662-1764">Wird aufgerufen, wenn das <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" />-Ereignis eintritt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1764">Called when the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1765">Die- <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1765">The <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-1766"><xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.ManipulationInertiaStarting> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1766">Override <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event.</span></span> <span data-ttu-id="c3662-1767">Stellen Sie sicher, dass Sie die- <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> Methode der Basisklasse aufzurufen, damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1767">Be sure to call the <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarted (System.Windows.Input.ManipulationStartedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarted(class System.Windows.Input.ManipulationStartedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarted (e As ManipulationStartedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarted(System::Windows::Input::ManipulationStartedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationStarted : System.Windows.Input.ManipulationStartedEventArgs -&gt; unit&#xA;override this.OnManipulationStarted : System.Windows.Input.ManipulationStartedEventArgs -&gt; unit" Usage="uIElement.OnManipulationStarted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartedEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1768">Die Daten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1768">The data for the event.</span></span></param>
        <summary><span data-ttu-id="c3662-1769">Wird aufgerufen, wenn das <see cref="E:System.Windows.UIElement.ManipulationStarted" />-Ereignis eintritt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1769">Called when the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1770">Die- <xref:System.Windows.UIElement.OnManipulationStarted%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1770">The <xref:System.Windows.UIElement.OnManipulationStarted%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-1771"><xref:System.Windows.UIElement.OnManipulationStarted%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.ManipulationStarted> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1771">Override <xref:System.Windows.UIElement.OnManipulationStarted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarted> event.</span></span> <span data-ttu-id="c3662-1772">Stellen Sie sicher, dass Sie die- <xref:System.Windows.UIElement.OnManipulationStarted%2A> Methode der Basisklasse aufzurufen, damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1772">Be sure to call the <xref:System.Windows.UIElement.OnManipulationStarted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarting (System.Windows.Input.ManipulationStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarting(class System.Windows.Input.ManipulationStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarting (e As ManipulationStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarting(System::Windows::Input::ManipulationStartingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationStarting : System.Windows.Input.ManipulationStartingEventArgs -&gt; unit&#xA;override this.OnManipulationStarting : System.Windows.Input.ManipulationStartingEventArgs -&gt; unit" Usage="uIElement.OnManipulationStarting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartingEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1773">Ein <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1773">A <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1774">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.ManipulationStarting" />-Routingereignis bereit, das beim ersten Erstellen des Manipulationsprozessors eintritt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1774">Provides class handling for the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event that occurs when the manipulation processor is first created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1775">Die- <xref:System.Windows.UIElement.OnManipulationStarting%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1775">The <xref:System.Windows.UIElement.OnManipulationStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-1776"><xref:System.Windows.UIElement.OnManipulationStarting%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.ManipulationStarting> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1776">Override <xref:System.Windows.UIElement.OnManipulationStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span> <span data-ttu-id="c3662-1777">Stellen Sie sicher, dass Sie die-Methode der Basisklasse aufzurufen <xref:System.Windows.UIElement.OnManipulationStarting%2A> , damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1777">Be sure to call the base class' <xref:System.Windows.UIElement.OnManipulationStarting%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1778">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1778">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="c3662-1779">Diese Ereignisdaten melden Details zur Maustaste, die gedrückt wurde, und zum behandelten Zustand.</span><span class="sxs-lookup"><span data-stu-id="c3662-1779">This event data reports details about the mouse button that was pressed and the handled state.</span></span></param>
        <summary><span data-ttu-id="c3662-1780">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1780">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1781">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1781">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1782">MouseButton-Aktionen werden auch von einem dedizierten Eingabe-Manager behandelt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1782">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="c3662-1783">Andere Programmierfunktionen, die auf MouseButton-Aktionen (z. b. Eingabe-und Befehls Bindungen) basieren, können Handler für die Aktion aufrufen, bevor Sie als allgemeine MouseButton-Aktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1783">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="c3662-1784">Wenn diese Eingabe System Features das <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignis als behandelt markieren, <xref:System.Windows.UIElement.OnMouseDown%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1784">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="c3662-1785">Wenn Sie diesen Klassen Handler verwenden, um das Ereignis als behandelt zu markieren, haben Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement.MouseLeftButtonDown> und <xref:System.Windows.UIElement.MouseRightButtonDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1785">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="c3662-1786">Jedes dieser Ereignisse kann für das empfangende Element ausgelöst werden, wenn <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1786">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="c3662-1787">Wenn Sie dieses Ereignis als behandelt in der Klassen Behandlung markieren, werden subevents weiterhin ausgelöst. Allerdings übergeben Sie den behandelten Zustand in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1787">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="c3662-1788">Wenn das Ereignis in der Klassen Behandlung behandelt wird, werden Instanzhandler für die untergeordneten Ereignisse nicht aufgerufen, es sei denn, Sie verwenden explizit mit, um <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> `handledEventsToo` `true` Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1788">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="c3662-1789">Klassen Handler werden auch dann nicht aufgerufen, wenn diese Klassen Handler mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur von registriert wurden `handledEventsToo` `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-1789">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="c3662-1790">Durch die Behandlung von <xref:System.Windows.UIElement.OnMouseDown%2A> Stellen Sie fest, dass die Klassen Behandlung alle möglichen Aktionen bei der MouseButton-unter Führung berücksichtigt hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-1790">By handling <xref:System.Windows.UIElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="c3662-1791">Dieses Verhalten ist möglicherweise nicht erwünscht. Verwenden Sie daher Vorsicht, wenn Sie diese virtuelle Methode verwenden, um Ereignisse als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1791">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="c3662-1792">Jedes der Schaltflächen spezifischen direkten Ereignisse verfügt auch über eine Virtual On \*-Methode. Beachten Sie, ob das Überschreiben dieser Schaltflächen spezifischen Klassen Handler besser geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-1792">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="c3662-1793">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1793">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1794">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1794">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1795">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1795">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1796">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1796">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1797">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1797">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1798">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1798">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1799">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1799">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1800">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1800">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1801">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1801">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1802">Das <see cref="T:System.Windows.Input.MouseEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1802">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1803">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Mouse.MouseEnter" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1803">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span></span> <span data-ttu-id="c3662-1804">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1804">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1805">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1805">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1806">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1806">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="c3662-1807">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1807">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="c3662-1808">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1808">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1809">In diesem Fall handelt es sich bei dem entsprechenden Ereignis um ein Routing Ereignis mit einer direkten Routing Strategie.</span><span class="sxs-lookup"><span data-stu-id="c3662-1809">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="c3662-1810">Das Markieren des Ereignisses als behandelt ist immer noch nützlich, um zu verhindern, dass typische Instanzhandler (die nicht angeben `handledEventsToo` ) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1810">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1811">Das <see cref="T:System.Windows.Input.MouseEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1811">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1812">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Mouse.MouseLeave" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1812">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span></span> <span data-ttu-id="c3662-1813">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1813">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1814">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1814">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1815">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1815">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="c3662-1816">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1816">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="c3662-1817">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1817">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1818">In diesem Fall handelt es sich bei dem entsprechenden Ereignis um ein Routing Ereignis mit einer direkten Routing Strategie.</span><span class="sxs-lookup"><span data-stu-id="c3662-1818">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="c3662-1819">Das Markieren des Ereignisses als behandelt ist immer noch nützlich, um zu verhindern, dass typische Instanzhandler (die nicht angeben `handledEventsToo` ) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1819">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1820">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1820">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="c3662-1821">Die Ereignisdaten melden, dass die linke Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-1821">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="c3662-1822">Wird aufgerufen, wenn ein nicht behandeltes geroutetes <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1822">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event is raised on this element.</span></span> <span data-ttu-id="c3662-1823">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1823">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1824">Das <xref:System.Windows.UIElement.MouseLeftButtonDown> Ereignis scheint eine bubblingerroute zu reisen, aber es erfolgt indirekt auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="c3662-1824">The <xref:System.Windows.UIElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="c3662-1825"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Blasen geroutet ist, und jede <xref:System.Windows.UIElement> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis zu erhöhen <xref:System.Windows.UIElement.MouseLeftButtonDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1825"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="c3662-1826">Obwohl Sie das <xref:System.Windows.UIElement.MouseLeftButtonDown> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente entlang der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1826">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="c3662-1827">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die nicht angegeben wurden `handledEventsToo` ) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1827">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="c3662-1828">Die Standard Implementierung der allgemeinen Maus Ereignis Behandlung in <xref:System.Windows.UIElement> lauscht <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1828">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="c3662-1829">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1829">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="c3662-1830">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1830">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c3662-1831">Sie können das Verhalten der Maus Behandlung von nicht ändern, indem Sie überschreiben <xref:System.Windows.UIElement> <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1831">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="c3662-1832">Alternativ können Sie diese Methode überschreiben, um die Ereignis Behandlung für einen bestimmten Maus Zustand zu ändern.</span><span class="sxs-lookup"><span data-stu-id="c3662-1832">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="c3662-1833">Ob Sie die Basis Implementierung aufzurufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="c3662-1833">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="c3662-1834">Wenn Sie die Basis nicht aufrufen, wird die Standardeingabe Behandlung für dieses Maus Ereignis für Vorgänger Klassen deaktiviert, die ebenfalls den Aufruf von erwarten <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1834">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="c3662-1835">Beispielsweise können Sie <xref:System.Windows.Controls.Button> in der abgeleiteten Klasse ableiten und überschreiben, <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> ohne die Basis Implementierung aufrufen zu müssen; diese außer Kraft Setzung deaktiviert jedoch das- <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1835">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1836">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1836">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="c3662-1837">Die Ereignisdaten melden, dass die linke Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-1837">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="c3662-1838">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1838">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1839">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1839">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1840">Das <xref:System.Windows.UIElement.MouseLeftButtonUp> Ereignis scheint eine bubblingerroute zu reisen, aber es erfolgt indirekt auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="c3662-1840">The <xref:System.Windows.UIElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="c3662-1841"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Blasen geroutet ist, und jede <xref:System.Windows.UIElement> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis zu erhöhen <xref:System.Windows.UIElement.MouseLeftButtonUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1841"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="c3662-1842">Obwohl Sie das <xref:System.Windows.UIElement.MouseLeftButtonUp> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente entlang der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1842">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="c3662-1843">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die nicht angegeben wurden `handledEventsToo` ) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1843">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="c3662-1844">Die Standard Implementierung der allgemeinen Maus Ereignis Behandlung in <xref:System.Windows.UIElement> lauscht <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1844">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="c3662-1845">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1845">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="c3662-1846">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1846">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c3662-1847">Sie können das Verhalten der Maus Behandlung von nicht ändern, indem Sie überschreiben <xref:System.Windows.UIElement> <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1847">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1848">Das <see cref="T:System.Windows.Input.MouseEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1848">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1849">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1849">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1850">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1850">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1851">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1851">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1852">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1852">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1853">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1853">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1854">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1854">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1855">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1855">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1856">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1856">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1857">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1857">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1858">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1858">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1859">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1859">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1860">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1860">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="c3662-1861">Die Ereignisdaten melden, dass die rechte Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-1861">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="c3662-1862">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.MouseRightButtonDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1862">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1863">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1863">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1864">Das <xref:System.Windows.UIElement.MouseRightButtonDown> Ereignis scheint eine bubblingerroute zu reisen, aber es erfolgt indirekt auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="c3662-1864">The <xref:System.Windows.UIElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="c3662-1865"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Blasen geroutet ist, und jede <xref:System.Windows.UIElement> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis zu erhöhen <xref:System.Windows.UIElement.MouseRightButtonDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1865"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="c3662-1866">Obwohl Sie das <xref:System.Windows.UIElement.MouseRightButtonDown> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente entlang der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1866">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="c3662-1867">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die nicht angegeben wurden `handledEventsToo` ) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1867">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="c3662-1868">Die Standard Implementierung der allgemeinen Maus Ereignis Behandlung in <xref:System.Windows.UIElement> lauscht <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1868">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="c3662-1869">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1869">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="c3662-1870">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1870">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c3662-1871">Sie können das Verhalten der Maus Behandlung von nicht ändern, indem Sie überschreiben <xref:System.Windows.UIElement> <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1871">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="c3662-1872">Alternativ können Sie diese Methode überschreiben, um die Ereignis Behandlung für einen bestimmten Maus Zustand zu ändern.</span><span class="sxs-lookup"><span data-stu-id="c3662-1872">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="c3662-1873">Ob Sie die Basis Implementierung aufzurufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="c3662-1873">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="c3662-1874">Wenn Sie die Basis nicht aufrufen, wird die Standardeingabe Behandlung für dieses Maus Ereignis für Vorgänger Klassen deaktiviert, die ebenfalls den Aufruf von erwarten <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1874">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="c3662-1875">Beispielsweise können Sie <xref:System.Windows.Controls.Control> <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> in der abgeleiteten Klasse ableiten und überschreiben, ohne die Basis zu aufrufen. diese außer Kraft Setzung deaktiviert jedoch die Kontextmenü Dienste auf dem Steuerelement, die Teil des <xref:System.Windows.Controls.Control> Standard Verhaltens sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-1875">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1876">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1876">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="c3662-1877">Die Ereignisdaten melden, dass die rechte Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-1877">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="c3662-1878">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.MouseRightButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1878">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1879">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1879">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1880">Das <xref:System.Windows.UIElement.MouseRightButtonUp> Ereignis scheint eine bubblingerroute zu reisen, aber es erfolgt indirekt auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="c3662-1880">The <xref:System.Windows.UIElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="c3662-1881"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Blasen geroutet ist, und jede <xref:System.Windows.UIElement> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis zu erhöhen <xref:System.Windows.UIElement.MouseRightButtonUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1881"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="c3662-1882">Obwohl Sie das <xref:System.Windows.UIElement.MouseRightButtonUp> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente entlang der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="c3662-1882">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="c3662-1883">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die nicht angegeben wurden `handledEventsToo` ) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1883">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="c3662-1884">Die Standard Implementierung der allgemeinen Maus Ereignis Behandlung in <xref:System.Windows.UIElement> lauscht <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1884">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="c3662-1885">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1885">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="c3662-1886">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1886">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c3662-1887">Sie können das Verhalten der Maus Behandlung von nicht ändern, indem Sie überschreiben <xref:System.Windows.UIElement> <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1887">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1888">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1888">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="c3662-1889">Die Ereignisdaten melden, dass die Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-1889">The event data reports that the mouse button was released.</span></span></param>
        <summary><span data-ttu-id="c3662-1890">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.Input.Mouse.MouseUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1890">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1891">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1891">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1892">MouseButton-Aktionen werden auch von einem dedizierten Eingabe-Manager behandelt.</span><span class="sxs-lookup"><span data-stu-id="c3662-1892">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="c3662-1893">Andere Programmierfunktionen, die auf MouseButton-Aktionen (z. b. Eingabe-und Befehls Bindungen) basieren, können Handler für die Aktion aufrufen, bevor Sie als allgemeine MouseButton-Aktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1893">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="c3662-1894">Wenn diese Eingabe System Features das <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignis als behandelt markieren, <xref:System.Windows.UIElement.OnMouseUp%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1894">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="c3662-1895">Wenn Sie diesen Klassen Handler verwenden, um das Ereignis als behandelt zu markieren, haben Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement.MouseLeftButtonUp> und <xref:System.Windows.UIElement.MouseRightButtonUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-1895">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="c3662-1896">Beide Ereignisse werden möglicherweise für das empfangende Element ausgelöst, wenn <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1896">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="c3662-1897">Wenn Sie dieses Ereignis als behandelt in der Klassen Behandlung markieren, werden subevents weiterhin ausgelöst. Allerdings übergeben Sie den behandelten Zustand in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="c3662-1897">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="c3662-1898">Wenn das Ereignis in der Klassen Behandlung behandelt wird, werden Instanzhandler für die untergeordneten Ereignisse nicht aufgerufen, es sei denn, Sie verwenden explizit mit, um <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> `handledEventsToo` `true` Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1898">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="c3662-1899">Klassen Handler werden auch dann nicht aufgerufen, wenn diese Klassen Handler mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur von registriert wurden `handledEventsToo` `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-1899">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="c3662-1900">Durch die Behandlung von <xref:System.Windows.UIElement.OnMouseUp%2A> Stellen Sie fest, dass die Klassen Behandlung alle möglichen Aktionen für die mouseschalt Fläche aufgerechnet hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-1900">By handling <xref:System.Windows.UIElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="c3662-1901">Dieses Verhalten ist möglicherweise nicht erwünscht. Verwenden Sie daher Vorsicht, wenn Sie diese virtuelle Methode verwenden, um Ereignisse als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1901">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="c3662-1902">Jedes der Schaltflächen spezifischen direkten Ereignisse verfügt auch über eine Virtual On \*-Methode. Beachten Sie, ob das Überschreiben dieser Schaltflächen spezifischen Klassen Handler besser geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-1902">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="c3662-1903">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1903">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1904">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1904">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1905">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1905">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1906">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1906">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1907">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1907">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1908">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1908">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1909">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1909">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1910">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1910">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1911">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1911">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1912">Das <see cref="T:System.Windows.Input.MouseWheelEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1912">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1913">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseWheel" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1913">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1914">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1914">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1915">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1915">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1916">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1916">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1917">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1917">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1918">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1918">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1919">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1919">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1920">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1920">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1921">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1921">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1922">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1922">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1923">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1923">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1924">Das <see cref="T:System.Windows.DragEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1924">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1925">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDragEnter" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1925">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1926">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1926">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1927">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1927">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1928">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1928">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1929">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1929">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1930">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1930">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1931">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1931">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1932">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1932">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1933">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1933">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1934">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1934">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1935">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1935">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-1936">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1936">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1937">Das <see cref="T:System.Windows.DragEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1937">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1938">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDragLeave" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1938">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1939">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1939">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1940">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1940">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1941">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1941">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1942">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1942">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1943">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1943">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1944">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1944">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1945">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1945">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1946">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1946">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1947">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1947">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1948">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1948">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-1949">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1949">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1950">Das <see cref="T:System.Windows.DragEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1950">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1951">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDragOver" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1951">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1952">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1952">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1953">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1953">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1954">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1954">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1955">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1955">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1956">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1956">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1957">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1957">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1958">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1958">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1959">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1959">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1960">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1960">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1961">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1961">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-1962">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1962">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1963">Das <see cref="T:System.Windows.DragEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1963">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1964">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDrop" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1964">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1965">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1965">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1966">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1966">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1967">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1967">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1968">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1968">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1969">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1969">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1970">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1970">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1971">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1971">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1972">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1972">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1973">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1973">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1974">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1974">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-1975">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1975">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement.OnPreviewGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1976">Das <see cref="T:System.Windows.GiveFeedbackEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1976">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1977">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1977">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1978">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1978">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1979">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1979">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1980">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1980">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1981">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1981">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1982">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1982">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1983">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1983">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1984">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1984">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1985">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1985">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1986">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1986">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-1987">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-1987">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-1988">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-1988">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnPreviewGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-1989">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-1989">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-1990">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-1990">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-1991">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1991">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-1992">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-1992">This method has no default implementation.</span></span> <span data-ttu-id="c3662-1993">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1993">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-1994">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1994">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-1995">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-1995">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-1996">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-1996">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-1997">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1997">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-1998">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-1998">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-1999">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-1999">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2000">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2000">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2001">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2001">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2002">Das <see cref="T:System.Windows.Input.KeyEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2002">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2003">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2003">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2004">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2004">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2005">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2005">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2006">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2006">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2007">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2007">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2008">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2008">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2009">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2009">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2010">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2010">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2011">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2011">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2012">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2012">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2013">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2013">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2014">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2014">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnPreviewKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2015">Das <see cref="T:System.Windows.Input.KeyEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2015">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2016">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2016">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2017">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2017">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2018">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2018">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2019">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2019">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2020">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2020">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2021">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2021">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2022">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2022">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2023">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2023">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2024">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2024">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2025">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2025">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2026">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2026">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2027">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2027">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnPreviewLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2028">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2028">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2029">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2029">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2030">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2030">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2031">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2031">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2032">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2032">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2033">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2033">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2034">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2034">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2035">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2035">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2036">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2036">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2037">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2037">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2038">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2038">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2039">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2039">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2040">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2040">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2041">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2041">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="c3662-2042">Die Ereignisdaten melden, dass eine oder mehrere Maustasten gedrückt wurden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2042">The event data reports that one or more mouse buttons were pressed.</span></span></param>
        <summary><span data-ttu-id="c3662-2043">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2043">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2044">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2044">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2045">MouseButton-Aktionen werden auch von einem dedizierten Eingabe-Manager behandelt.</span><span class="sxs-lookup"><span data-stu-id="c3662-2045">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="c3662-2046">Andere Programmierfunktionen, die auf MouseButton-Aktionen (z. b. Eingabe-und Befehls Bindungen) basieren, können Handler für die Aktion aufrufen, bevor Sie als allgemeine MouseButton-Aktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2046">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="c3662-2047">Wenn diese Eingabe System Features das <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignis als behandelt markieren, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2047">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="c3662-2048">Wenn Sie diesen Klassen Handler verwenden, um das Ereignis als behandelt zu markieren, haben Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> und <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2048">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="c3662-2049">Jedes dieser Ereignisse kann für das empfangende Element ausgelöst werden, wenn <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2049">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="c3662-2050">Wenn Sie dieses Ereignis als behandelt in der Klassen Behandlung markieren, werden subevents weiterhin ausgelöst. Allerdings übergeben Sie den behandelten Zustand in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="c3662-2050">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="c3662-2051">Wenn das Ereignis in der Klassen Behandlung behandelt wird, werden Instanzhandler für die untergeordneten Ereignisse nicht aufgerufen, es sei denn, Sie verwenden explizit mit, um <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> `handledEventsToo` `true` Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2051">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="c3662-2052">Klassen Handler werden auch dann nicht aufgerufen, wenn diese Klassen Handler mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur von registriert wurden `handledEventsToo` `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-2052">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="c3662-2053">Durch die Behandlung von <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> Stellen Sie fest, dass die Klassen Behandlung alle möglichen Aktionen bei der MouseButton-unter Führung berücksichtigt hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-2053">By handling <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="c3662-2054">Dieses Verhalten ist möglicherweise nicht erwünscht. Verwenden Sie daher Vorsicht, wenn Sie diese virtuelle Methode verwenden, um Ereignisse als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2054">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="c3662-2055">Jedes der Schaltflächen spezifischen direkten Ereignisse verfügt auch über eine Virtual On \*-Methode. Beachten Sie, ob das Überschreiben dieser Schaltflächen spezifischen Klassen Handler besser geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-2055">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="c3662-2056">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2056">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2057">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2057">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2058">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2058">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2059">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2059">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2060">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2060">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2061">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2061">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2062">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2062">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2063">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2063">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2064">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2064">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2065">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2065">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2066">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2066">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="c3662-2067">Die Ereignisdaten melden, dass die linke Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-2067">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="c3662-2068">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2068">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2069">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2069">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2070">Das <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> Ereignis scheint eine tunnelingroute zu übertragen, wird jedoch auf indirekte Weise durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2070">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="c3662-2071"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Tunnel geroutet ist, und jede <xref:System.Windows.UIElement> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis zu erhöhen <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2071"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="c3662-2072">Obwohl Sie das <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente entlang der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2072">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="c3662-2073">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die nicht angegeben wurden `handledEventsToo` ) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2073">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="c3662-2074">Die Standard Implementierung der allgemeinen Maus Ereignis Behandlung in <xref:System.Windows.UIElement> lauscht <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2074">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="c3662-2075">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2075">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="c3662-2076">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2076">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c3662-2077">Sie können das Verhalten der Maus Behandlung von nicht ändern, indem Sie überschreiben <xref:System.Windows.UIElement> <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2077">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="c3662-2078">Alternativ können Sie diese Methode überschreiben, um die Ereignis Behandlung für einen bestimmten Maus Zustand zu ändern.</span><span class="sxs-lookup"><span data-stu-id="c3662-2078">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="c3662-2079">Ob Sie die Basis Implementierung aufzurufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="c3662-2079">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="c3662-2080">Wenn Sie die Basis nicht aufrufen, wird die Standardeingabe Behandlung für dieses Maus Ereignis für Vorgänger Klassen deaktiviert, die ebenfalls den Aufruf von erwarten <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2080">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="c3662-2081">Beispielsweise können Sie <xref:System.Windows.Controls.Button> in der abgeleiteten Klasse ableiten und überschreiben, <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> ohne die Basis Implementierung aufrufen zu müssen; diese außer Kraft Setzung deaktiviert jedoch das- <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2081">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2082">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2082">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="c3662-2083">Die Ereignisdaten melden, dass die linke Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-2083">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="c3662-2084">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2084">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2085">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2085">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2086">Das <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> Ereignis scheint eine tunnelingroute zu übertragen, wird jedoch auf indirekte Weise durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2086">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="c3662-2087"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Tunnel geroutet ist, und jede <xref:System.Windows.UIElement> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis zu erhöhen <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2087"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="c3662-2088">Obwohl Sie das <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente entlang der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2088">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="c3662-2089">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die nicht angegeben wurden `handledEventsToo` ) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2089">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="c3662-2090">Die Standard Implementierung der allgemeinen Maus Ereignis Behandlung in <xref:System.Windows.UIElement> lauscht <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2090">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="c3662-2091">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2091">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="c3662-2092">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2092">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c3662-2093">Sie können das Verhalten der Maus Behandlung von nicht ändern, indem Sie überschreiben <xref:System.Windows.UIElement> <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2093">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2094">Das <see cref="T:System.Windows.Input.MouseEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2094">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2095">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2095">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2096">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2096">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2097">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2097">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2098">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2098">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2099">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2099">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2100">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2100">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2101">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2101">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2102">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2102">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2103">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2103">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2104">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2104">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2105">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2105">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2106">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2106">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2107">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2107">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="c3662-2108">Die Ereignisdaten melden, dass die rechte Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-2108">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="c3662-2109">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2109">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2110">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2110">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2111">Das <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> Ereignis scheint eine tunnelingroute zu übertragen, wird jedoch auf indirekte Weise durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2111">The <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="c3662-2112"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Tunnel geroutet ist, und jede <xref:System.Windows.UIElement> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis zu erhöhen <xref:System.Windows.UIElement.MouseRightButtonDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2112"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="c3662-2113">Obwohl Sie das <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente entlang der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2113">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="c3662-2114">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die nicht angegeben wurden `handledEventsToo` ) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2114">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="c3662-2115">Die Standard Implementierung der allgemeinen Maus Ereignis Behandlung in <xref:System.Windows.UIElement> lauscht <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2115">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="c3662-2116">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2116">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="c3662-2117">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2117">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c3662-2118">Sie können das Verhalten der Maus Behandlung von nicht ändern, indem Sie überschreiben <xref:System.Windows.UIElement> <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2118">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="c3662-2119">Alternativ können Sie diese Methode überschreiben, um die Ereignis Behandlung für einen bestimmten Maus Zustand zu ändern.</span><span class="sxs-lookup"><span data-stu-id="c3662-2119">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="c3662-2120">Ob Sie die Basis Implementierung aufzurufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="c3662-2120">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="c3662-2121">Wenn Sie die Basis nicht aufrufen, wird die Standardeingabe Behandlung für dieses Maus Ereignis für Vorgänger Klassen deaktiviert, die ebenfalls den Aufruf von erwarten <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2121">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="c3662-2122">Beispielsweise können Sie <xref:System.Windows.Controls.Control> <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> in der abgeleiteten Klasse ableiten und überschreiben, ohne die Basis zu aufrufen. diese außer Kraft Setzung deaktiviert jedoch die Kontextmenü Dienste auf dem Steuerelement, die Teil des <xref:System.Windows.Controls.Control> Standard Verhaltens sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-2122">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2123">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2123">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="c3662-2124">Die Ereignisdaten melden, dass die rechte Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-2124">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="c3662-2125">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2125">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2126">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2126">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2127">Das <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> Ereignis scheint eine tunnelingroute zu übertragen, wird jedoch auf indirekte Weise durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2127">The <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="c3662-2128"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> ist das zugrunde liegende Ereignis, das Tunnel geroutet ist, und jede <xref:System.Windows.UIElement> entlang der Ereignis Route verwendet identische Behandlung, um das direkte Routing Ereignis zu erhöhen <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2128"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="c3662-2129">Obwohl Sie das <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> Ereignis für die Zwecke dieses Elements als behandelt markieren können, wird der behandelte Zustand nicht an andere Elemente entlang der Ereignis Route weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2129">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="c3662-2130">Möglicherweise möchten Sie jedoch das Ereignis als behandelt markieren, um zu verhindern, dass allgemeine Instanzhandler (die nicht angegeben wurden `handledEventsToo` ) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2130">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="c3662-2131">Die Standard Implementierung der allgemeinen Maus Ereignis Behandlung in <xref:System.Windows.UIElement> lauscht <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> und konvertiert sie in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2131">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="c3662-2132">Wenn Sie diese Logik außer Kraft setzen möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2132">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="c3662-2133">Registrieren Sie im statischen Konstruktor ihrer abgeleiteten Klasse einen alternativen Klassen Handler für <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2133">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c3662-2134">Sie können das Verhalten der Maus Behandlung von nicht ändern, indem Sie überschreiben <xref:System.Windows.UIElement> <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2134">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2135">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2135">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="c3662-2136">Die Ereignisdaten melden, dass eine oder mehrere Maustasten losgelassen wurden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2136">The event data reports that one or more mouse buttons were released.</span></span></param>
        <summary><span data-ttu-id="c3662-2137">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2137">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2138">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2138">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2139">MouseButton-Aktionen werden auch von einem dedizierten Eingabe-Manager behandelt.</span><span class="sxs-lookup"><span data-stu-id="c3662-2139">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="c3662-2140">Andere Programmierfunktionen, die auf MouseButton-Aktionen (z. b. Eingabe-und Befehls Bindungen) basieren, können Handler für die Aktion aufrufen, bevor Sie als allgemeine MouseButton-Aktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2140">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="c3662-2141">Wenn diese Eingabe System Features das <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignis als behandelt markieren, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2141">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="c3662-2142">Wenn Sie diesen Klassen Handler verwenden, um das Ereignis als behandelt zu markieren, haben Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> und <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2142">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="c3662-2143">Beide Ereignisse werden möglicherweise für das empfangende Element ausgelöst, wenn <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2143">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="c3662-2144">Wenn Sie dieses Ereignis als behandelt in der Klassen Behandlung markieren, werden subevents weiterhin ausgelöst. Allerdings übergeben Sie den behandelten Zustand in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="c3662-2144">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="c3662-2145">Wenn das Ereignis in der Klassen Behandlung behandelt wird, werden Instanzhandler für die untergeordneten Ereignisse nicht aufgerufen, es sei denn, Sie verwenden explizit mit, um <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> `handledEventsToo` `true` Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2145">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="c3662-2146">Klassen Handler werden auch dann nicht aufgerufen, wenn diese Klassen Handler mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur von registriert wurden `handledEventsToo` `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-2146">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="c3662-2147">Durch die Behandlung von <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> Stellen Sie fest, dass die Klassen Behandlung alle möglichen Aktionen für die mouseschalt Fläche aufgerechnet hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-2147">By handling <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="c3662-2148">Dieses Verhalten ist möglicherweise nicht erwünscht. Verwenden Sie daher Vorsicht, wenn Sie diese virtuelle Methode verwenden, um Ereignisse als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2148">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="c3662-2149">Jedes der Schaltflächen spezifischen direkten Ereignisse verfügt auch über eine Virtual On \*-Methode. Beachten Sie, ob das Überschreiben dieser Schaltflächen spezifischen Klassen Handler besser geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-2149">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="c3662-2150">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2150">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2151">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2151">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2152">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2152">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2153">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2153">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2154">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2154">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2155">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2155">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2156">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2156">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2157">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2157">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2158">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2158">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2159">Das <see cref="T:System.Windows.Input.MouseWheelEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2159">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2160">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2160">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2161">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2161">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2162">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2162">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2163">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2163">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2164">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2164">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2165">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2165">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2166">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2166">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2167">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2167">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2168">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2168">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2169">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2169">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2170">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2170">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2171">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2171">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement.OnPreviewQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2172">Das <see cref="T:System.Windows.QueryContinueDragEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2172">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2173">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2173">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2174">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2174">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2175">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2175">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2176">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2176">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2177">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2177">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2178">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2178">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2179">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2179">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2180">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2180">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2181">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2181">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2182">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2182">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2183">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2183">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2184">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2184">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2185">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2185">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2186">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2186">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2187">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2187">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2188">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2188">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2189">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2189">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2190">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2190">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2191">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2191">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2192">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2192">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2193">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2193">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2194">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2194">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2195">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2195">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2196">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2196">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2197">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2197">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2198">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2198">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2199">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2199">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2200">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2200">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2201">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2201">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2202">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2202">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2203">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2203">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2204">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2204">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2205">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2205">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2206">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2206">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2207">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2207">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2208">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2208">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2209">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2209">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2210">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2210">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2211">Das <see cref="T:System.Windows.Input.StylusDownEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2211">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2212">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2212">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2213">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2213">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2214">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2214">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2215">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2215">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2216">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2216">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2217">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2217">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2218">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2218">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2219">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2219">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2220">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2220">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2221">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2221">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2222">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2222">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2223">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2223">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2224">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2224">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2225">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2225">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2226">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2226">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2227">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2227">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2228">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2228">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2229">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2229">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2230">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2230">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2231">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2231">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2232">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2232">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2233">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2233">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2234">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2234">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2235">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2235">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2236">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2236">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2237">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2237">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2238">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2238">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2239">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2239">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2240">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2240">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2241">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2241">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2242">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2242">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2243">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2243">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2244">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2244">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2245">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2245">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2246">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2246">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2247">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2247">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2248">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2248">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2249">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2249">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2250">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2250">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2251">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2251">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2252">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2252">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2253">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2253">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2254">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2254">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2255">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2255">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2256">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2256">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2257">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2257">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2258">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2258">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2259">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2259">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2260">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2260">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2261">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2261">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2262">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2262">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2263">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2263">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2264">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2264">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2265">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2265">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2266">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2266">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2267">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2267">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2268">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2268">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2269">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2269">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2270">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2270">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2271">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2271">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2272">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2272">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2273">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2273">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2274">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2274">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2275">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2275">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2276">Das <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2276">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2277">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2277">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2278">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2278">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2279">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2279">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2280">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2280">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2281">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2281">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2282">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2282">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2283">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2283">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2284">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2284">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2285">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2285">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2286">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2286">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2287">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2287">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2288">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2288">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2289">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2289">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2290">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2290">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2291">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2291">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2292">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2292">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2293">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2293">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2294">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2294">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2295">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2295">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2296">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2296">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2297">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2297">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2298">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2298">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2299">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2299">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2300">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2300">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2301">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2301">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement.OnPreviewTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2302">Das <see cref="T:System.Windows.Input.TextCompositionEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2302">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2303">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2303">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2304">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2304">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2305">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2305">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2306">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2306">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2307">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2307">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2308">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2308">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2309">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2309">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2310">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2310">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2311">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2311">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2312">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2312">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2313">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2313">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="c3662-2314">Ein anderes Szenario, das speziell für Vorschau Ereignisse gilt, besteht darin, diese behandelt zu markieren, sodass die entsprechenden bubblingerklassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2314">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.UIElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnPreviewTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2315">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2315">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2316">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.PreviewTouchDown" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe in diesem Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2316">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2317">Die- <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2317">The <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-2318"><xref:System.Windows.UIElement.OnPreviewTouchDown%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.PreviewTouchDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2318">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="c3662-2319">Stellen Sie sicher, dass Sie die-Methode der Basisklasse aufzurufen <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> , damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2319">Be sure to call the base class' <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnPreviewTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2320">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2320">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2321">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.PreviewTouchMove" />-Routingereignis bereit, das auftritt, wenn sich eine Fingereingabe innerhalb dieses Elements bewegt.</span><span class="sxs-lookup"><span data-stu-id="c3662-2321">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2322">Die- <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2322">The <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-2323"><xref:System.Windows.UIElement.OnPreviewTouchMove%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.PreviewTouchMove> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2323">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="c3662-2324">Stellen Sie sicher, dass Sie die-Methode der Basisklasse aufzurufen <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> , damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2324">Be sure to call the base class' <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnPreviewTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2325">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2325">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2326">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.PreviewTouchUp" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe innerhalb dieses Elements freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2326">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2327">Die- <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2327">The <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-2328"><xref:System.Windows.UIElement.OnPreviewTouchUp%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.PreviewTouchUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2328">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="c3662-2329">Stellen Sie sicher, dass Sie die-Methode der Basisklasse aufzurufen <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> , damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2329">Be sure to call the base class' <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2330">Das <see cref="T:System.Windows.QueryContinueDragEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2330">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2331">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.QueryContinueDrag" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2331">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2332">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2332">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2333">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2333">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2334">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2334">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2335">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2335">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2336">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2336">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2337">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2337">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2338">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2338">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2339">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2339">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2340">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2340">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2341">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2341">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit&#xA;override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="uIElement.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2342">Das <see cref="T:System.Windows.Input.QueryCursorEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2342">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2343">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.QueryCursor" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2343">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2344">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2344">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2345">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2345">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2346">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2346">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2347">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2347">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2348">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2348">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2349">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2349">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2350">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2350">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2351">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2351">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2352">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2352">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2353">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2353">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnRender">
      <MemberSignature Language="C#" Value="protected virtual void OnRender (System.Windows.Media.DrawingContext drawingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRender(class System.Windows.Media.DrawingContext drawingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRender (drawingContext As DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRender(System::Windows::Media::DrawingContext ^ drawingContext);" />
      <MemberSignature Language="F#" Value="abstract member OnRender : System.Windows.Media.DrawingContext -&gt; unit&#xA;override this.OnRender : System.Windows.Media.DrawingContext -&gt; unit" Usage="uIElement.OnRender drawingContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="drawingContext"><span data-ttu-id="c3662-2354">Die Zeichnungsanweisungen für ein bestimmtes Element.</span><span class="sxs-lookup"><span data-stu-id="c3662-2354">The drawing instructions for a specific element.</span></span> <span data-ttu-id="c3662-2355">Dieser Kontext wird für das Layoutsystem bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="c3662-2355">This context is provided to the layout system.</span></span></param>
        <summary><span data-ttu-id="c3662-2356">Beteiligt sich beim Überschreiben in einer abgeleiteten Klasse an Rendervorgängen, die vom Layoutsystem gesteuert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2356">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span></span> <span data-ttu-id="c3662-2357">Die Renderinganweisungen für dieses Element werden beim Aufrufen dieser Methode nicht direkt verwendet, sondern stattdessen für spätere asynchrone Layout- und Zeichnungsvorgänge beibehalten.</span><span class="sxs-lookup"><span data-stu-id="c3662-2357">The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2358">Diese Methode hat keine Standard Implementierung in der- <xref:System.Windows.UIElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c3662-2358">This method has no default implementation in the <xref:System.Windows.UIElement> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-2359">Das folgende Codebeispiel zeigt eine mögliche Implementierung für eine von einem Panel abgeleitete Klasse.</span><span class="sxs-lookup"><span data-stu-id="c3662-2359">The following code example shows a possible implementation for a panel derived class.</span></span>  
  
 [!code-csharp[LightWeightCustomPanel#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LightWeightCustomPanel/CSharp/OffsetPanel.cs#1)]
 [!code-vb[LightWeightCustomPanel#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/LightWeightCustomPanel/visualbasic/offsetpanel.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c3662-2360">Die- <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> Methode kann überschrieben werden, um weitere grafische Elemente (die zuvor nicht in einer logischen Struktur definiert sind) einem gerenderten Element hinzuzufügen, z. b. Effekte oder Adorner.</span><span class="sxs-lookup"><span data-stu-id="c3662-2360">The <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> method can be overridden to add further graphical elements (not previously defined in a logical tree) to a rendered element, such as effects or adorners.</span></span> <span data-ttu-id="c3662-2361">Ein- <see cref="T:System.Windows.Media.DrawingContext" /> Objekt wird als Argument übermittelt, das Methoden zum Zeichnen von Formen, Text, Bildern oder Videos bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="c3662-2361">A <see cref="T:System.Windows.Media.DrawingContext" /> object is passed as an argument, which provides methods for drawing shapes, text, images or videos.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRenderSizeChanged (System.Windows.SizeChangedInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRenderSizeChanged (info As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ info);" />
      <MemberSignature Language="F#" Value="abstract member OnRenderSizeChanged : System.Windows.SizeChangedInfo -&gt; unit&#xA;override this.OnRenderSizeChanged : System.Windows.SizeChangedInfo -&gt; unit" Usage="uIElement.OnRenderSizeChanged info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="c3662-2362">Die Paketparameter (<see cref="T:System.Windows.SizeChangedInfo" />), die sowohl alte wie neue Größen umfassen als auch die Dimension, die sich tatsächlich ändert.</span><span class="sxs-lookup"><span data-stu-id="c3662-2362">The packaged parameters (<see cref="T:System.Windows.SizeChangedInfo" />), which includes old and new sizes, and which dimension actually changes.</span></span></param>
        <summary><span data-ttu-id="c3662-2363">Beteiligt sich beim Überschreiben in einer abgeleiteten Klasse an Rendervorgängen, die vom Layoutsystem gesteuert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2363">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span></span> <span data-ttu-id="c3662-2364">Diese Methode wird nach der Aktualisierung des Layouts und vor dem Rendern aufgerufen, wenn sich die <see cref="P:System.Windows.UIElement.RenderSize" /> des Elements aufgrund einer Layoutaktualisierung geändert hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-2364">This method is invoked after layout update, and before rendering, if the element's <see cref="P:System.Windows.UIElement.RenderSize" /> has changed as a result of layout update.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2365">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2365">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2366">Ein typisches Element auf WPF-Frameworkebene verwendet die Überschreibungs Implementierung von <xref:System.Windows.FrameworkElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2366">A typical WPF framework-level element uses the override implementation from <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="c3662-2367">Die <xref:System.Windows.FrameworkElement> -Implementierung macht die <xref:System.Windows.FrameworkElement.Width%2A> -Eigenschaft und die-Eigenschaft ungültig <xref:System.Windows.FrameworkElement.Height%2A> und behandelt die Grundlagen der erneuten Erstellung des Layouts.</span><span class="sxs-lookup"><span data-stu-id="c3662-2367">The <xref:System.Windows.FrameworkElement> implementation invalidates the <xref:System.Windows.FrameworkElement.Width%2A> and <xref:System.Windows.FrameworkElement.Height%2A> properties and handles the basics of remaking the layout.</span></span> <span data-ttu-id="c3662-2368"><xref:System.Windows.UIElement.OnRenderSizeChanged%2A>Wenn Sie auf der Ebene überschreiben <xref:System.Windows.UIElement> , bedeutet dies, dass die Implementierung des-Elements die Implementierung der WPF-Frameworkebene absichtlich nicht verwendet. Daher muss das-Element die Layoutlogik direkt verarbeiten, in der Regel durch Schreiben eines Ersetzungs Layouts</span><span class="sxs-lookup"><span data-stu-id="c3662-2368">Overriding <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> at the <xref:System.Windows.UIElement> level implies that your element implementation is deliberately not using the WPF framework-level implementation, and therefore your element must handle layout logic more directly, typically by writing a replacement layout system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2369">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2369">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2370">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2370">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2371">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2371">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2372">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2372">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2373">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2373">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2374">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2374">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2375">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2375">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2376">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2376">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2377">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2377">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2378">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2378">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2379">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2379">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2380">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2380">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2381">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2381">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2382">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2382">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2383">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2383">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2384">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2384">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2385">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2385">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2386">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2386">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2387">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2387">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2388">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2388">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2389">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2389">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2390">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2390">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2391">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2391">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2392">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2392">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement.OnStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2393">Das <see cref="T:System.Windows.Input.StylusDownEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2393">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2394">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2394">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2395">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2395">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2396">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2396">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2397">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2397">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2398">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2398">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2399">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2399">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2400">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2400">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2401">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2401">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2402">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2402">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2403">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2403">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2404">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2404">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2405">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2405">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2406">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Stylus.StylusEnter" />-Ereignis von diesem Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2406">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span></span> <span data-ttu-id="c3662-2407">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2407">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2408">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2408">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2409">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2409">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="c3662-2410">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2410">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="c3662-2411">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster für \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2411">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2412">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2412">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2413">Das Markieren des Ereignisses als behandelt ist immer noch nützlich, um zu verhindern, dass typische Instanzhandler (die nicht angeben `handledEventsToo` ) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2413">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2414">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2414">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2415">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2415">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2416">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2416">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2417">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2417">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2418">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2418">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2419">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2419">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2420">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2420">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2421">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2421">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2422">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2422">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2423">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2423">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2424">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2424">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2425">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2425">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2426">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2426">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2427">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusInRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2427">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2428">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2428">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2429">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2429">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2430">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2430">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2431">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2431">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2432">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2432">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2433">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2433">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2434">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2434">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2435">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2435">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2436">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2436">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2437">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2437">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2438">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2438">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2439">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Stylus.StylusLeave" />-Ereignis von diesem Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2439">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span></span> <span data-ttu-id="c3662-2440">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2440">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2441">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2441">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2442">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2442">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="c3662-2443">Abhängig von Ihren Anforderungen können Sie die Basis entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2443">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="c3662-2444">Der Zweck dieser Methode ähnelt dem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster für \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2444">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2445">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2445">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2446">Das Markieren des Ereignisses als behandelt ist immer noch nützlich, um zu verhindern, dass typische Instanzhandler (die nicht angeben `handledEventsToo` ) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2446">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2447">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2447">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2448">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2448">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2449">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2449">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2450">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2450">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2451">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2451">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2452">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2452">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2453">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2453">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2454">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2454">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2455">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2455">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2456">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2456">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2457">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2457">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2458">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2458">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2459">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2459">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2460">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2460">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2461">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2461">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2462">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2462">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2463">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2463">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2464">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2464">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2465">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2465">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2466">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2466">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2467">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2467">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2468">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2468">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2469">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2469">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2470">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2470">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement.OnStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2471">Das <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2471">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2472">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2472">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2473">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2473">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2474">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2474">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2475">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2475">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2476">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2476">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2477">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2477">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2478">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2478">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2479">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2479">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2480">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2480">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2481">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2481">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2482">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2482">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2483">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2483">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2484">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2484">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2485">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2485">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2486">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2486">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2487">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2487">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2488">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2488">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2489">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2489">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2490">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2490">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2491">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2491">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2492">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2492">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2493">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2493">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2494">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2494">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2495">Das <see cref="T:System.Windows.Input.TextCompositionEventArgs" />-Element, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2495">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2496">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2496">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="c3662-2497">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2497">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2498">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2498">This method has no default implementation.</span></span> <span data-ttu-id="c3662-2499">Da diese Methode von einer Zwischenklasse in der Vererbung implementiert werden kann, wird empfohlen, dass Sie die Basis Implementierung in der Implementierung von aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2499">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="c3662-2500">Der Zweck dieser Methode ähnelt dem- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Diese Methode bietet die Möglichkeit, das übereinstimmende Ereignis aus abgeleiteten Klassen zu behandeln, indem ein Klassen Handler anstelle eines Instanzhandlers eingerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2500">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="c3662-2501">In diesem Fall ist das Übereinstimmungs Ereignis ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2501">In this case the matching event is a routed event.</span></span> <span data-ttu-id="c3662-2502">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da ein-Routing Ereignis durch ein untergeordnetes-Element ausgelöst werden kann. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2502">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="c3662-2503">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignisdaten untersuchen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2503">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="c3662-2504">In den meisten Fällen sollte nicht versucht werden, das Ereignis erneut auszuführen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2504">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="c3662-2505">Durch das Überschreiben dieser Methode oder durch das Registrieren von Klassen Handlern mit <xref:System.Windows.EventManager.RegisterClassHandler%2A> können abgeleitete Klassen von <xref:System.Windows.UIElement> private Klassenhandlermethoden aufzurufen, wenn das Ereignis entlang der Ereignis Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2505">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="c3662-2506">Ein Szenario, in dem die Klassen Behandlung angebracht ist, besteht darin, die Ereignisdaten zu bearbeiten und das Routing Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2506">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2507">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2507">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2508">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.TouchDown" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe innerhalb dieses Elements erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2508">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2509">Die- <xref:System.Windows.UIElement.OnTouchDown%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2509">The <xref:System.Windows.UIElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-2510"><xref:System.Windows.UIElement.OnTouchDown%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.TouchDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2510">Override <xref:System.Windows.UIElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchDown> event.</span></span> <span data-ttu-id="c3662-2511">Stellen Sie sicher, dass Sie die-Methode der Basisklasse aufzurufen <xref:System.Windows.UIElement.OnTouchDown%2A> , damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2511">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2512">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2512">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2513">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.TouchEnter" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe von außerhalb der Grenzen dieses Elements nach innen verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2513">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2514">Die- <xref:System.Windows.UIElement.OnTouchEnter%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2514">The <xref:System.Windows.UIElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-2515"><xref:System.Windows.UIElement.OnTouchEnter%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.TouchEnter> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2515">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchEnter> event.</span></span> <span data-ttu-id="c3662-2516">Stellen Sie sicher, dass Sie die-Methode der Basisklasse aufzurufen <xref:System.Windows.UIElement.OnTouchEnter%2A> , damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2516">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2517">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2517">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2518">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.TouchLeave" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe in <see cref="T:System.Windows.UIElement" /> von innerhalb der Grenzen nach außen verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2518">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this <see cref="T:System.Windows.UIElement" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2519">Die- <xref:System.Windows.UIElement.OnTouchLeave%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2519">The <xref:System.Windows.UIElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-2520"><xref:System.Windows.UIElement.OnTouchLeave%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.TouchLeave> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2520">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchLeave> event.</span></span> <span data-ttu-id="c3662-2521">Stellen Sie sicher, dass Sie die-Methode der Basisklasse aufzurufen <xref:System.Windows.UIElement.OnTouchLeave%2A> , damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2521">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2522">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2522">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2523">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.TouchMove" />-Routingereignis bereit, das auftritt, wenn sich eine Fingereingabe innerhalb dieses Elements bewegt.</span><span class="sxs-lookup"><span data-stu-id="c3662-2523">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2524">Die- <xref:System.Windows.UIElement.OnTouchMove%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2524">The <xref:System.Windows.UIElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-2525"><xref:System.Windows.UIElement.OnTouchMove%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.TouchMove> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2525">Override <xref:System.Windows.UIElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchMove> event.</span></span> <span data-ttu-id="c3662-2526">Stellen Sie sicher, dass Sie die-Methode der Basisklasse aufzurufen <xref:System.Windows.UIElement.OnTouchMove%2A> , damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2526">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-2527">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2527">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c3662-2528">Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement.TouchUp" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe innerhalb dieses Elements freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2528">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2529">Die- <xref:System.Windows.UIElement.OnTouchUp%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c3662-2529">The <xref:System.Windows.UIElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="c3662-2530"><xref:System.Windows.UIElement.OnTouchUp%2A>Überschreiben in einer abgeleiteten Klasse, um das-Ereignis zu behandeln <xref:System.Windows.UIElement.TouchUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2530">Override <xref:System.Windows.UIElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchUp> event.</span></span> <span data-ttu-id="c3662-2531">Stellen Sie sicher, dass Sie die-Methode der Basisklasse aufzurufen <xref:System.Windows.UIElement.OnTouchUp%2A> , damit Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2531">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="uIElement.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="c3662-2532">Das bisherige übergeordnete Element.</span><span class="sxs-lookup"><span data-stu-id="c3662-2532">The previous parent.</span></span> <span data-ttu-id="c3662-2533">Dieses wird u. U. mit dem Wert <see langword="null" /> bereitgestellt, wenn für das <see cref="T:System.Windows.DependencyObject" /> zuvor kein übergeordnetes Element vorhanden war.</span><span class="sxs-lookup"><span data-stu-id="c3662-2533">This may be provided as <see langword="null" /> if the <see cref="T:System.Windows.DependencyObject" /> did not have a parent element previously.</span></span></param>
        <summary><span data-ttu-id="c3662-2534">Wird aufgerufen, wenn das übergeordnete Element dieses <see cref="T:System.Windows.UIElement" /> eine Änderung an seinem zugrunde liegenden visuellen übergeordneten Element meldet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2534">Invoked when the parent element of this <see cref="T:System.Windows.UIElement" /> reports a change to its underlying visual parent.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c3662-2535">Wenn Sie diese Methode überschreiben, wird immer die Basis Implementierung aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2535">If you override this method, always call the base implementation.</span></span> <span data-ttu-id="c3662-2536">Die Standard-Basis Implementierung führt einen internen Wartungs Vorgang für einen umgekehrten vererbten Eigenschafts Status durch.</span><span class="sxs-lookup"><span data-stu-id="c3662-2536">The default base implementation performs some internal maintenance of reverse-inherited property state.</span></span> <span data-ttu-id="c3662-2537">Wenn Sie die Basis Implementierung nicht aufzurufen, wird dieser Zustand ungültig.</span><span class="sxs-lookup"><span data-stu-id="c3662-2537">Failing to call the base implementation will invalidate this state.</span></span>  
  
<span data-ttu-id="c3662-2538">Diese Methode überschreibt <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-2538">This method overrides <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span></span> <span data-ttu-id="c3662-2539"><see cref="T:System.Windows.FrameworkElement" /> und <see cref="T:System.Windows.Window" /> beide überschreiben auch die <see cref="T:System.Windows.UIElement" /> Implementierung von <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" /> und <see cref="T:System.Windows.Window" /> versiegelt Sie.</span><span class="sxs-lookup"><span data-stu-id="c3662-2539"><see cref="T:System.Windows.FrameworkElement" /> and <see cref="T:System.Windows.Window" /> both also override the <see cref="T:System.Windows.UIElement" /> implementation of <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />, and <see cref="T:System.Windows.Window" /> seals it.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Opacity : double with get, set" Usage="System.Windows.UIElement.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2540">Ruft den Deckkraftfaktor ab oder legt ihn fest, der auf das gesamte <see cref="T:System.Windows.UIElement" /> angewendet wird, wenn es in der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2540">Gets or sets the opacity factor applied to the entire <see cref="T:System.Windows.UIElement" /> when it is rendered in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  <span data-ttu-id="c3662-2541">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2541">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-2542">Der Deckkraftfaktor.</span><span class="sxs-lookup"><span data-stu-id="c3662-2542">The opacity factor.</span></span> <span data-ttu-id="c3662-2543">Die Standarddeckkraft ist 1,0.</span><span class="sxs-lookup"><span data-stu-id="c3662-2543">Default opacity is 1.0.</span></span> <span data-ttu-id="c3662-2544">Erwartete Werte liegen zwischen 0,0 und 1,0.</span><span class="sxs-lookup"><span data-stu-id="c3662-2544">Expected values are between 0.0 and 1.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2545">Der Standardwert 1,0 ist der Standardwert, der von den anfänglichen Metadaten dieser Abhängigkeits Eigenschaft für die-Klasse bereitgestellt wird <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2545">The 1.0 default value is the default provided by the initial metadata of this dependency property on the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="c3662-2546">Andere abgeleitete Klassen können diesen Standardwert potenziell ändern, indem Sie die Metadaten innerhalb Ihres Klassenkonstruktors überschreiben.</span><span class="sxs-lookup"><span data-stu-id="c3662-2546">Other derived classes may potentially change this default value by overriding the metadata from within their class constructor.</span></span>  
  
 <span data-ttu-id="c3662-2547">Der Wert von wird <xref:System.Windows.UIElement.Opacity%2A> nicht auf das tatsächliche Layout angewendet, es sei denn, das-Element ist ebenfalls sichtbar ( <xref:System.Windows.UIElement.IsVisible%2A> ist `true` ).</span><span class="sxs-lookup"><span data-stu-id="c3662-2547">The value of <xref:System.Windows.UIElement.Opacity%2A> won't be applied to actual layout unless the element is also visible (<xref:System.Windows.UIElement.IsVisible%2A> is `true`).</span></span>  
  
 <span data-ttu-id="c3662-2548"><xref:System.Windows.UIElement.Opacity%2A> wird von übergeordneten Elementen auf der Elementstruktur auf untergeordnete Elemente angewendet, aber die sichtbaren Auswirkungen der geschiesteten Deckkraft Einstellungen werden im Eigenschafts Wert einzelner untergeordneter Elemente nicht angegeben.</span><span class="sxs-lookup"><span data-stu-id="c3662-2548"><xref:System.Windows.UIElement.Opacity%2A> is applied from parent elements on down the element tree to child elements, but the visible effects of the nested opacity settings aren't indicated in the property value of individual child elements.</span></span> <span data-ttu-id="c3662-2549">Wenn eine Liste beispielsweise eine Deckkraft von 50% (0,5) aufweist und für eines ihrer Listenelemente eine eigene Deckkraft auf 20% (0,2) festgelegt ist, wird die sichtbare Deckkraft für das Listenelement so gerendert, als ob es 10% (0,1) wäre, aber der Eigenschafts Wert der list item- <xref:System.Windows.UIElement.Opacity%2A> Eigenschaft wäre bei der Abfrage weiterhin 0,2.</span><span class="sxs-lookup"><span data-stu-id="c3662-2549">For instance, if a list has a 50% (0.5) opacity and one of its list items has its own opacity set to 20% (0.2), the net visible opacity for that list item will be rendered as if it were 10% (0.1), but the property value of the list item <xref:System.Windows.UIElement.Opacity%2A> property would still be 0.2 when queried.</span></span>  
  
 <span data-ttu-id="c3662-2550">Selbst wenn die deklarierte oder ausgewertete Deckkraft gleich 0 ist, ist ein Element weiterhin an Eingabe Ereignissen und Befehlen beteiligt und kann möglicherweise als schwer zu verwendbar sein.</span><span class="sxs-lookup"><span data-stu-id="c3662-2550">Even if the declared or evaluated opacity is 0, an element still participates in input events and commands, and is potentially focusable.</span></span> <span data-ttu-id="c3662-2551">Dieser Aspekt kann nützlich sein. Sie können z. b. ein Opacity-Zero-Objekt (z. b. eine Form) zum Maskieren von zugrunde liegenden Objekten mit transparenten Elementen verwenden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2551">This aspect can be useful, for instance you can use an opacity-zero object (such as a shape) for masking underlying objects with transparent elements.</span></span> <span data-ttu-id="c3662-2552">Das Opacity-Zero-Objekt kann dann die gesamte Eingabe Ereignisverarbeitung für einen zugrunde liegenden Bereich verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="c3662-2552">The opacity-zero object can then handle all the input event processing for an underlying area.</span></span> <span data-ttu-id="c3662-2553">Allerdings `Background` sollte das oder `Fill` des Objekts oder der Form auf einen Wert festgelegt werden, selbst wenn es ist. <xref:System.Windows.Media.Brushes.Transparent%2A> andernfalls werden Treffer Tests nicht aktiviert, und es werden keine Ereignisse empfangen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2553">However, the `Background` or `Fill` of the object or shape should be set to a value, even if it is <xref:System.Windows.Media.Brushes.Transparent%2A>, otherwise hit testing is not enabled, and no events are received.</span></span>  
  
<a name="dependencyPropertyInfo_Opacity"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-2554">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-2554">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2555">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2555">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityProperty>|  
|<span data-ttu-id="c3662-2556">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-2556">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-2557">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-2557">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.OpacityMask" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMask">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush OpacityMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush OpacityMask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.OpacityMask" />
      <MemberSignature Language="VB.NET" Value="Public Property OpacityMask As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ OpacityMask { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OpacityMask : System.Windows.Media.Brush with get, set" Usage="System.Windows.UIElement.OpacityMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2558">Ruft eine Deckkraftmaske als <see cref="T:System.Windows.Media.Brush" />-Implementierung ab, die auf alle Alphakanalmasken für den gerenderten Inhalt dieses Elements angewendet wird, oder legt diese Maske fest.</span><span class="sxs-lookup"><span data-stu-id="c3662-2558">Gets or sets an opacity mask, as a <see cref="T:System.Windows.Media.Brush" /> implementation that is applied to any alpha-channel masking for the rendered content of this element.</span></span>  <span data-ttu-id="c3662-2559">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2559">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-2560">Der für die Deckkraftmaskierung zu verwendende Pinsel.</span><span class="sxs-lookup"><span data-stu-id="c3662-2560">The brush to use for opacity masking.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2561">Diese Eigenschaft verwendet nur den Alphakanal Wert für die angegebene <xref:System.Windows.Media.Brush> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2561">This property only uses whatever the alpha channel value is for the supplied <xref:System.Windows.Media.Brush>.</span></span> <span data-ttu-id="c3662-2562">Die anderen Kanäle des <xref:System.Windows.Media.Brush> gerenderten Inhalts (rot, grün oder blau) werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="c3662-2562">The other channels of the <xref:System.Windows.Media.Brush>'s rendered content (Red, Green, or Blue) are ignored.</span></span>  
  
 <span data-ttu-id="c3662-2563">Der wichtigste <xref:System.Windows.Media.Brush> zu diesem Zweck ist eine <xref:System.Windows.Media.ImageBrush> , die für eine Vielzahl von Foto Maskierungs Techniken verwendet werden kann, z. b. eine Vignette.</span><span class="sxs-lookup"><span data-stu-id="c3662-2563">The most typical <xref:System.Windows.Media.Brush> for this purpose is an <xref:System.Windows.Media.ImageBrush>, which can be used for a variety of photo masking techniques such as a vignette.</span></span> <span data-ttu-id="c3662-2564">Es können jedoch alle definierten <xref:System.Windows.Media.Brush> (z <xref:System.Windows.Media.LinearGradientBrush> . b.) verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2564">But any defined <xref:System.Windows.Media.Brush> (such as <xref:System.Windows.Media.LinearGradientBrush>) can be used.</span></span>  
  
 <span data-ttu-id="c3662-2565">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] kann dieser Eigenschafts Wert eine Inline Syntax verwenden, die für jede Implementierung der <xref:System.Windows.Media.Brush> abstrakten Klasse spezifisch ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-2565">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property value can use an inline syntax that is specific to each implementation of the <xref:System.Windows.Media.Brush> abstract class.</span></span> <span data-ttu-id="c3662-2566">Weitere Informationen finden Sie unter [Übersicht über das Zeichnen mit voll Tonfarben und Farbverläufen](/dotnet/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-2566">For more information, see [Painting with Solid Colors and Gradients Overview](/dotnet/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview).</span></span>  
  
<a name="dependencyPropertyInfo_OpacityMask"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-2567">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-2567">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2568">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2568">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityMaskProperty>|  
|<span data-ttu-id="c3662-2569">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-2569">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-2570">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-2570">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c3662-2571">Das folgende Markup Beispiel zeigt eine <xref:System.Windows.Media.ImageBrush> auf eine andere angewendete Deck Kraft Maske <xref:System.Windows.Controls.Image> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2571">The following markup example shows an <xref:System.Windows.Media.ImageBrush> opacity mask applied to another <xref:System.Windows.Controls.Image>.</span></span>  
  
 [!code-xaml[OpacityMasksSnippet#UIElementOpacityMask](~/samples/snippets/csharp/VS_Snippets_Wpf/OpacityMasksSnippet/CS/ImageBrushExample.xaml#uielementopacitymask)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Opacity" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMaskProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityMaskProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityMaskProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityMaskProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityMaskProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityMaskProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpacityMaskProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.OpacityMaskProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2572">Bezeichnet die <see cref="P:System.Windows.UIElement.OpacityMask" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2572">Identifies the <see cref="P:System.Windows.UIElement.OpacityMask" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpacityProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.OpacityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2573">Bezeichnet die <see cref="P:System.Windows.UIElement.Opacity" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-2573">Identifies the <see cref="P:System.Windows.UIElement.Opacity" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistId">
      <MemberSignature Language="C#" Value="public int PersistId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PersistId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.PersistId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PersistId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PersistId : int" Usage="System.Windows.UIElement.PersistId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2574">Ruft einen Wert ab, der dieses Element eindeutig angibt.</span><span class="sxs-lookup"><span data-stu-id="c3662-2574">Gets a value that uniquely identifies this element.</span></span></summary>
        <value><span data-ttu-id="c3662-2575">Der eindeutige Bezeichner für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="c3662-2575">The unique identifier for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2576"><xref:System.Windows.UIElement.PersistId%2A> identifiziert jedes Element eindeutig.</span><span class="sxs-lookup"><span data-stu-id="c3662-2576"><xref:System.Windows.UIElement.PersistId%2A> uniquely identifies each element.</span></span> <span data-ttu-id="c3662-2577">Ein Element behält <xref:System.Windows.UIElement.PersistId%2A> jedes Mal bei, wenn das gleiche [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] geladen wird (einschließlich binärer Darstellungen).</span><span class="sxs-lookup"><span data-stu-id="c3662-2577">An element keeps the same <xref:System.Windows.UIElement.PersistId%2A> every time the same [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] is loaded (including binary representations).</span></span> <span data-ttu-id="c3662-2578">Dieser Bezeichner wird für interne Lade-, Verarbeitungs-und Serialisierungsanforderungen verwendet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2578">This identifier is used for internal loading, parsing and serialization requirements.</span></span> <span data-ttu-id="c3662-2579">Sie ist nicht für die Verwendung durch den Anwendungscode vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2579">It is not intended to be used by your application code.</span></span>  
  
 <span data-ttu-id="c3662-2580">Diese Eigenschaft hat keine Beziehung zum <xref:System.Object.GetHashCode%2A> Ergebnis für eine bestimmte Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2580">This property has no relationship to the <xref:System.Object.GetHashCode%2A> result for any given instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject&#xA;override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="uIElement.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="c3662-2581">Die Richtung des angeforderten Fokusdurchlaufs.</span><span class="sxs-lookup"><span data-stu-id="c3662-2581">The direction of the requested focus traversal.</span></span></param>
        <summary><span data-ttu-id="c3662-2582">Gibt beim Überschreiben in einer abgeleiteten Klasse das Element zurück, das den Fokus für eine bestimmte Richtung des Fokusdurchlaufs empfängt, ohne dass der Fokus tatsächlich auf das betreffende Element verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2582">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span></span></summary>
        <returns><span data-ttu-id="c3662-2583">Das Element, das den Fokus erhält, wenn <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> tatsächlich aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2583">The element that would have received focus if <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2584">Die Standard Implementierung dieser Methode in dieser Klasse ist unvollständig und gibt immer zurück `null` .</span><span class="sxs-lookup"><span data-stu-id="c3662-2584">The default implementation of this method in this class is incomplete, and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragEnter : System.Windows.DragEventHandler " Usage="member this.PreviewDragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2585">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Ziel meldet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2585">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2586">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewDragEnter> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2586">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2587">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewDragEnter> werden an das zugrunde liegende <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2587">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2588">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2588">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2589">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2589">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="c3662-2590">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2590">Routing strategy</span></span>|<span data-ttu-id="c3662-2591">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2591">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2592">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2592">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="c3662-2593">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.DragEnter> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2593">The corresponding bubbling event is <xref:System.Windows.UIElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="c3662-2594"><xref:System.Windows.UIElement.OnPreviewDragEnter%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2594">Override <xref:System.Windows.UIElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2595">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewDragEnter" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2595">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2596">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2596">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2597">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2597">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2598">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2598">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2599">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2599">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2600">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2600">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragLeave : System.Windows.DragEventHandler " Usage="member this.PreviewDragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2601">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Quelle meldet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2601">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2602">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewDragLeave> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2602">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2603">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewDragLeave> werden an das zugrunde liegende <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2603">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2604">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2604">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2605">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2605">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="c3662-2606">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2606">Routing strategy</span></span>|<span data-ttu-id="c3662-2607">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2607">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2608">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2608">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="c3662-2609">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.DragLeave> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2609">The corresponding bubbling event is <xref:System.Windows.UIElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="c3662-2610"><xref:System.Windows.UIElement.OnPreviewDragLeave%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2610">Override <xref:System.Windows.UIElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2611">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewDragLeave" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2611">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2612">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2612">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2613">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2613">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2614">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2614">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2615">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2615">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2616">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2616">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragOver : System.Windows.DragEventHandler " Usage="member this.PreviewDragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2617">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als potenzielles Drop-Ziel meldet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2617">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2618">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewDragOver> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2618">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2619">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewDragOver> werden an das zugrunde liegende <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2619">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2620">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2620">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2621">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2621">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragOverEvent>|  
|<span data-ttu-id="c3662-2622">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2622">Routing strategy</span></span>|<span data-ttu-id="c3662-2623">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2623">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2624">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2624">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="c3662-2625">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.DragOver> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2625">The corresponding bubbling event is <xref:System.Windows.UIElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="c3662-2626"><xref:System.Windows.UIElement.OnPreviewDragOver%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2626">Override <xref:System.Windows.UIElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2627">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewDragOver" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2627">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2628">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2628">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2629">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2629">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2630">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2630">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2631">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2631">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2632">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2632">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberSignature Language="F#" Value="member this.PreviewDrop : System.Windows.DragEventHandler " Usage="member this.PreviewDrop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2633">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Ablageereignis meldet, das dieses Element als Ablageziel aufweist.</span><span class="sxs-lookup"><span data-stu-id="c3662-2633">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2634">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewDrop> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2634">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDrop> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2635">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewDrop> werden an das zugrunde liegende <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2635">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2636">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2636">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2637">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2637">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDropEvent>|  
|<span data-ttu-id="c3662-2638">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2638">Routing strategy</span></span>|<span data-ttu-id="c3662-2639">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2639">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2640">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2640">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="c3662-2641">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.Drop> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2641">The corresponding bubbling event is <xref:System.Windows.UIElement.Drop>.</span></span>  
  
-   <span data-ttu-id="c3662-2642"><xref:System.Windows.UIElement.OnPreviewDrop%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2642">Override <xref:System.Windows.UIElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2643">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewDrop" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2643">Identifies the <see cref="E:System.Windows.UIElement.PreviewDrop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2644">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2644">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2645">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2645">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2646">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2646">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2647">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2647">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2648">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2648">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2649">Tritt auf, wenn ein Drag &amp;amp; Drop-Vorgang gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2649">Occurs when a drag-and-drop operation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2650">Das- <xref:System.Windows.UIElement.PreviewGiveFeedback> Ereignis ermöglicht der Quelle eines Drag-Ereignisses, die Darstellung des Mauszeigers zu ändern, um dem Benutzer visuelles Feedback während eines Drag & Drop-Vorgangs zu geben.</span><span class="sxs-lookup"><span data-stu-id="c3662-2650">The <xref:System.Windows.UIElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="c3662-2651">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewGiveFeedback> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2651">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2652">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewGiveFeedback> werden an das zugrunde liegende <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2652">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2653">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2653">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2654">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2654">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="c3662-2655">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2655">Routing strategy</span></span>|<span data-ttu-id="c3662-2656">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2656">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2657">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2657">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="c3662-2658">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.GiveFeedback> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2658">The corresponding bubbling event is <xref:System.Windows.UIElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="c3662-2659"><xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2659">Override <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2660">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2660">Identifies the <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2661">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2661">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2662">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2662">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2663">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2663">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2664">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2664">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2665">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2665">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2666">Tritt auf, wenn sich der Fokus der Tastatur auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2666">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2667">Da dieses Ereignis tunnelingrouting verwendet, kann das Element, das den Fokus besitzt, anstelle des Elements, an das der Ereignishandler angefügt ist, ein untergeordnetes Element sein.</span><span class="sxs-lookup"><span data-stu-id="c3662-2667">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="c3662-2668">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, das den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="c3662-2668">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="c3662-2669">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2669">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2670">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2670">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2671">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2671">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2672">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2672">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="c3662-2673">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2673">Routing strategy</span></span>|<span data-ttu-id="c3662-2674">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2674">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2675">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2675">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="c3662-2676">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.GotKeyboardFocus> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2676">The corresponding bubbling event is <xref:System.Windows.UIElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="c3662-2677"><xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2677">Override <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2678">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2678">Identifies the <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2679">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2679">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2680">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2680">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2681">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2681">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2682">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2682">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2683">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2683">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2684">Tritt auf, wenn eine Taste gedrückt wird, während sich der Fokus auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2684">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2685">Die Schlüssel Behandlung interagiert mit anderen Platt Form Features, wie z. b. Befehlszeilen und Textkomposition.</span><span class="sxs-lookup"><span data-stu-id="c3662-2685">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="c3662-2686">Bei dem <xref:System.Windows.UIElement.KeyDown> Ereignis handelt es sich um ein Texteingabe Ereignis auf niedrigerer Ebene, das bei bestimmten Steuerelementen möglicherweise nicht erwartungsgemäß verhält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2686">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="c3662-2687">Dies liegt daran, dass einige Steuerelemente eine Steuerelement Komposition oder eine Klassen Behandlung aufweisen, die eine Version der Texteingabe Verarbeitung und zugehöriger Ereignisse auf höherer Ebene bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="c3662-2687">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="c3662-2688">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewKeyDown> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2688">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2689">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewKeyDown> werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2689">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2690">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2690">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2691">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2691">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="c3662-2692">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2692">Routing strategy</span></span>|<span data-ttu-id="c3662-2693">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2693">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2694">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2694">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="c3662-2695">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.KeyDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2695">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="c3662-2696"><xref:System.Windows.UIElement.OnPreviewKeyDown%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2696">Override <xref:System.Windows.UIElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2697">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewKeyDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2697">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2698">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2698">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2699">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2699">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2700">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2700">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2701">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2701">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2702">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2702">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2703">Tritt auf, wenn eine Taste losgelassen wird, während sich der Fokus auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2703">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2704">Die Schlüssel Behandlung interagiert mit anderen Platt Form Features, wie z. b. Befehlszeilen und Textkomposition.</span><span class="sxs-lookup"><span data-stu-id="c3662-2704">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="c3662-2705">Bei dem <xref:System.Windows.UIElement.KeyUp> Ereignis handelt es sich um ein Texteingabe Ereignis auf niedrigerer Ebene, das bei bestimmten Steuerelementen möglicherweise nicht erwartungsgemäß verhält.</span><span class="sxs-lookup"><span data-stu-id="c3662-2705">The <xref:System.Windows.UIElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="c3662-2706">Dies liegt daran, dass einige Steuerelemente eine Steuerelement Komposition oder eine Klassen Behandlung aufweisen, die eine Version der Texteingabe Verarbeitung und zugehöriger Ereignisse auf höherer Ebene bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="c3662-2706">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="c3662-2707">Weitere Informationen finden Sie in der Dokumentation zu den einzelnen Steuerelementen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2707">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="c3662-2708">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewKeyUp> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2708">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2709">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewKeyUp> werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2709">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2710">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2710">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2711">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2711">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="c3662-2712">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2712">Routing strategy</span></span>|<span data-ttu-id="c3662-2713">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2713">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2714">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2714">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="c3662-2715">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.KeyUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2715">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="c3662-2716"><xref:System.Windows.UIElement.OnPreviewKeyUp%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2716">Override <xref:System.Windows.UIElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2717">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewKeyUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2717">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2718">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2718">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2719">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2719">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2720">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2720">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2721">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2721">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2722">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2722">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2723">Tritt auf, wenn sich der Fokus der Tastatur nicht mehr auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2723">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2724">Da dieses Ereignis tunnelingrouting verwendet, kann das Element, das den Fokus verliert, ein untergeordnetes Element anstelle des-Elements sein, an das der Ereignishandler tatsächlich angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2724">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="c3662-2725">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, das den Fokus verloren hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-2725">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="c3662-2726">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2726">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2727">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> werden an das zugrunde liegende <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2727">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2728">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2728">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2729">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2729">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="c3662-2730">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2730">Routing strategy</span></span>|<span data-ttu-id="c3662-2731">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2731">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2732">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2732">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="c3662-2733">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.LostKeyboardFocus> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2733">The corresponding bubbling event is <xref:System.Windows.UIElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="c3662-2734"><xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2734">Override <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2735">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2735">Identifies the <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2736">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2736">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2737">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2737">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2738">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2738">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2739">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2739">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2740">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2740">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2741">Tritt auf, wenn eine Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2741">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2742">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewMouseDown> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2742">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2743">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewMouseDown> werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2743">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-2744">Das- <xref:System.Windows.UIElement.PreviewMouseDown> Ereignis wird häufig in Verbindung mit <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> oder ausgelöst <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> , was einem Drücken einer der beiden Standard Maustasten entspricht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2744">The <xref:System.Windows.UIElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="c3662-2745"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> und <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> sind auch Routing Ereignisse, aber es handelt sich um direkte Routing Ereignisse, und das entsprechende Schaltflächen spezifische Ereignis wird ausgelöst, wenn das <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignis dieses Element entlang der Ereignis Route erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2745"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="c3662-2746">Siehe Hinweise für <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> oder <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2746">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2747">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2747">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2748">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2748">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="c3662-2749">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2749">Routing strategy</span></span>|<span data-ttu-id="c3662-2750">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2750">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2751">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2751">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-2752">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2752">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="c3662-2753"><xref:System.Windows.UIElement.OnPreviewMouseDown%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2753">Override <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2754">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2754">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2755">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2755">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2756">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2756">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2757">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2757">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2758">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2758">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2759">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2759">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2760">Tritt auf, wenn die linke Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2760">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2761">Obwohl dieses Routing [Ereignis](/dotnet/framework/wpf/advanced/routed-events-overview) einer tunnelingroute durch eine Elementstruktur folgt, ist es tatsächlich ein direktes Routing Ereignis, das durch die einzelnen Elemente in der Elementstruktur ausgelöst und erneut ausgeführt wird <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2761">Although this [routed event](/dotnet/framework/wpf/advanced/routed-events-overview) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="c3662-2762">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden Ereignisses melden, bei dem es sich um <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2762">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="c3662-2763">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="c3662-2763">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="c3662-2764">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit aufgerufen wird, wobei Ereignisse behandelt werden, die <xref:System.Windows.UIElement.AddHandler%2A> bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="c3662-2764">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="c3662-2765">Wenn Sie <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> behandelt markieren, markieren Sie im Grunde <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> alle weiteren Listener entlang der Route und alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="c3662-2765">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="c3662-2766">Dies schließt möglicherweise Klassen Handler-generierte Ereignisse ein, z <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> . b..</span><span class="sxs-lookup"><span data-stu-id="c3662-2766">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="c3662-2767">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse <xref:System.Windows.UIElement> ) als Maus-"Dienst" (mit der von der-Klasse bereitgestellten Dienst Definition <xref:System.Windows.Input.Mouse> ) vorstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2767">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="c3662-2768">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2768">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="c3662-2769">Für erweiterte Szenarien, wie z. b. das Überprüfen auf Zustände von nicht standardmäßigen Schaltflächen, müssen Sie möglicherweise die APIs für die-Klasse und nicht für die in der- <xref:System.Windows.Input.Mouse> Klasse verwenden <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2769">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2770">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2770">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2771">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2771">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="c3662-2772">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2772">Routing strategy</span></span>|<span data-ttu-id="c3662-2773">Direkt</span><span class="sxs-lookup"><span data-stu-id="c3662-2773">Direct</span></span>|  
|<span data-ttu-id="c3662-2774">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2774">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-2775"><xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2775">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2776">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2776">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2777">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2777">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2778">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2778">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2779">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2779">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2780">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2780">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2781">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2781">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2782">Tritt auf, wenn die linke Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2782">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2783">Obwohl dieses Routing [Ereignis](/dotnet/framework/wpf/advanced/routed-events-overview) einer tunnelingroute durch eine Elementstruktur folgt, ist es tatsächlich ein direktes Routing Ereignis, das durch die einzelnen Elemente in der Elementstruktur ausgelöst und erneut ausgeführt wird <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2783">Although this [routed event](/dotnet/framework/wpf/advanced/routed-events-overview) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="c3662-2784">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden Ereignisses melden, bei dem es sich um <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2784">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="c3662-2785">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="c3662-2785">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="c3662-2786">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit aufgerufen wird, wobei Ereignisse behandelt werden, die <xref:System.Windows.UIElement.AddHandler%2A> bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="c3662-2786">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="c3662-2787">Wenn Sie <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> behandelt markieren, markieren Sie im Grunde <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> alle weiteren Listener entlang der Route und alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="c3662-2787">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="c3662-2788">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse <xref:System.Windows.UIElement> ) als Maus-"Dienst" (mit der von der-Klasse bereitgestellten Dienst Definition <xref:System.Windows.Input.Mouse> ) vorstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2788">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="c3662-2789">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2789">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="c3662-2790">Für erweiterte Szenarien, wie z. b. das Überprüfen auf Zustände von nicht standardmäßigen Schaltflächen, müssen Sie möglicherweise die APIs für die-Klasse und nicht für die in der- <xref:System.Windows.Input.Mouse> Klasse verwenden <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2790">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2791">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2791">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2792">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2792">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="c3662-2793">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2793">Routing strategy</span></span>|<span data-ttu-id="c3662-2794">Direkt</span><span class="sxs-lookup"><span data-stu-id="c3662-2794">Direct</span></span>|  
|<span data-ttu-id="c3662-2795">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2795">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-2796"><xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2796">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2797">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2797">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2798">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2798">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2799">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2799">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2800">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2800">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2801">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2801">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2802">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2802">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2803">Tritt auf, wenn der Mauszeiger bewegt wird, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2803">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2804">Dieses Ereignis tritt auf, wenn der Mauszeiger zuerst in die Element Begrenzungen wechselt, und auch wenn der Mauszeiger bewegt wird, während er sich noch innerhalb der Element Begrenzungen befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2804">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="c3662-2805">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewMouseMove> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2805">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2806">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewMouseMove> werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2806">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2807">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2807">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2808">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2808">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="c3662-2809">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2809">Routing strategy</span></span>|<span data-ttu-id="c3662-2810">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2810">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2811">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2811">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="c3662-2812">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.MouseMove> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2812">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="c3662-2813"><xref:System.Windows.UIElement.OnPreviewMouseMove%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2813">Override <xref:System.Windows.UIElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2814">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2814">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2815">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2815">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2816">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2816">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2817">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2817">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2818">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2818">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2819">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2819">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2820">Tritt auf, wenn die rechte Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2820">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2821">Obwohl dieses Routing [Ereignis](/dotnet/framework/wpf/advanced/routed-events-overview) einer tunnelingroute durch eine Elementstruktur folgt, ist es tatsächlich ein direktes Routing Ereignis, das durch die einzelnen Elemente in der Elementstruktur ausgelöst und erneut ausgeführt wird <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2821">Although this [routed event](/dotnet/framework/wpf/advanced/routed-events-overview) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="c3662-2822">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden Ereignisses melden, bei dem es sich um <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2822">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="c3662-2823">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="c3662-2823">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="c3662-2824">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit aufgerufen wird, wobei Ereignisse behandelt werden, die <xref:System.Windows.UIElement.AddHandler%2A> bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="c3662-2824">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="c3662-2825">Wenn Sie <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> behandelt markieren, markieren Sie im Grunde <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> alle weiteren Listener entlang der Route und alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="c3662-2825">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="c3662-2826">Dies schließt möglicherweise Klassen Handler-generierte Ereignisse ein, z <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> . b..</span><span class="sxs-lookup"><span data-stu-id="c3662-2826">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="c3662-2827">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse <xref:System.Windows.UIElement> ) als Maus-"Dienst" (mit der von der-Klasse bereitgestellten Dienst Definition <xref:System.Windows.Input.Mouse> ) vorstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2827">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="c3662-2828">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2828">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="c3662-2829">Für erweiterte Szenarien, wie z. b. das Überprüfen auf Zustände von nicht standardmäßigen Schaltflächen, müssen Sie möglicherweise die APIs für die-Klasse und nicht für die in der- <xref:System.Windows.Input.Mouse> Klasse verwenden <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2829">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2830">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2830">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2831">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2831">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="c3662-2832">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2832">Routing strategy</span></span>|<span data-ttu-id="c3662-2833">Direkt</span><span class="sxs-lookup"><span data-stu-id="c3662-2833">Direct</span></span>|  
|<span data-ttu-id="c3662-2834">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2834">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-2835"><xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2835">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2836">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2836">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2837">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2837">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2838">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2838">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2839">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2839">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2840">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2840">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2841">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2841">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2842">Tritt auf, wenn die rechte Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2842">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2843">Obwohl dieses Routing [Ereignis](/dotnet/framework/wpf/advanced/routed-events-overview) einer tunnelingroute durch eine Elementstruktur folgt, ist es tatsächlich ein direktes Routing Ereignis, das durch die einzelnen Elemente in der Elementstruktur ausgelöst und erneut ausgeführt wird <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2843">Although this [routed event](/dotnet/framework/wpf/advanced/routed-events-overview) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="c3662-2844">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Mauszeiger Details eines zugrunde liegenden Ereignisses melden, bei dem es sich um <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> ein angefügtes Ereignis handelt, das von jedem Element entlang einer Ereignis Route verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2844">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="c3662-2845">Die Ereignisdaten dieses Ereignisses machen die Ereignisdaten des zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignisses verfügbar.</span><span class="sxs-lookup"><span data-stu-id="c3662-2845">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="c3662-2846">Wenn dieses Ereignis auf der Ereignis Route als behandelt markiert ist, werden die Mauszeiger-spezifischen Ereignisse immer noch ausgelöst. Allerdings müssen Handler für die Mauszeiger-spezifischen Ereignisse hinzugefügt werden, indem explizit aufgerufen wird, wobei Ereignisse behandelt werden, die <xref:System.Windows.UIElement.AddHandler%2A> bereits als behandelt markiert sind, um Listener für das-Ereignis zu sein.</span><span class="sxs-lookup"><span data-stu-id="c3662-2846">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="c3662-2847">Wenn Sie <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> behandelt markieren, markieren Sie im Grunde <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> alle weiteren Listener entlang der Route und alle zugehörigen Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="c3662-2847">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="c3662-2848">Konzeptionell sollten Sie sich dieses Ereignis (und andere Maustasten Ereignisse <xref:System.Windows.UIElement> ) als Maus-"Dienst" (mit der von der-Klasse bereitgestellten Dienst Definition <xref:System.Windows.Input.Mouse> ) vorstellen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2848">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="c3662-2849">Das Ereignis fügt die Möglichkeit hinzu, nicht die Mauszeiger Zustände (von links nach rechts, nach oben nach unten) der ursprünglichen Mausereignisse in den Ereignisdaten überprüfen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2849">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="c3662-2850">Für erweiterte Szenarien, wie z. b. das Überprüfen auf Zustände von nicht standardmäßigen Schaltflächen, müssen Sie möglicherweise die APIs für die-Klasse und nicht für die in der- <xref:System.Windows.Input.Mouse> Klasse verwenden <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2850">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2851">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2851">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2852">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2852">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="c3662-2853">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2853">Routing strategy</span></span>|<span data-ttu-id="c3662-2854">Direkt</span><span class="sxs-lookup"><span data-stu-id="c3662-2854">Direct</span></span>|  
|<span data-ttu-id="c3662-2855">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2855">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-2856"><xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2856">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2857">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2857">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2858">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2858">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2859">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2859">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2860">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2860">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2861">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2861">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2862">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2862">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2863">Tritt auf, wenn eine Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2863">Occurs when any mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2864">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewMouseUp> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2864">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2865">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewMouseUp> werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2865">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-2866">Das- <xref:System.Windows.UIElement.PreviewMouseUp> Ereignis wird häufig in Verbindung mit <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> oder ausgelöst <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> , was einem Drücken einer der beiden Standard Maustasten entspricht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2866">The <xref:System.Windows.UIElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="c3662-2867"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> und <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> sind auch Routing Ereignisse, aber es handelt sich um direkte Routing Ereignisse, und das entsprechende Schaltflächen spezifische Ereignis wird ausgelöst, wenn das <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignis dieses Element entlang der Ereignis Route erreicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-2867"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="c3662-2868">Siehe Hinweise für <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> oder <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2868">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2869">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2869">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2870">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2870">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="c3662-2871">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2871">Routing strategy</span></span>|<span data-ttu-id="c3662-2872">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2872">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2873">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2873">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-2874">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.MouseUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2874">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="c3662-2875"><xref:System.Windows.UIElement.OnPreviewMouseUp%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2875">Override <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2876">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2876">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2877">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2877">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2878">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2878">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2879">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2879">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2880">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2880">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2881">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2881">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2882">Tritt auf, wenn der Benutzer das Mausrad dreht, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2882">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2883">Der Fokus oder die Maus Erfassung haben Vorrang vor der Position des Mauszeigers. Wenn Sie dieses Ereignis von einem fokussierten oder erfassten Element erhalten, ist der Mauszeiger daher möglicherweise über einem anderen Element.</span><span class="sxs-lookup"><span data-stu-id="c3662-2883">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="c3662-2884">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewMouseMove> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2884">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2885">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewMouseMove> werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2885">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2886">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2886">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2887">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2887">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="c3662-2888">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2888">Routing strategy</span></span>|<span data-ttu-id="c3662-2889">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2889">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2890">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2890">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="c3662-2891">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.MouseWheel> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2891">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="c3662-2892"><xref:System.Windows.UIElement.OnPreviewMouseWheel%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2892">Override <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2893">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewMouseWheel" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2893">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2894">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2894">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2895">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2895">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2896">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2896">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2897">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2897">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2898">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2898">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2899">Tritt auf, wenn sich der Status der Tastatur oder der Maustaste während eines Drag &amp;amp; Drop-Vorgangs ändert.</span><span class="sxs-lookup"><span data-stu-id="c3662-2899">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2900">Das- <xref:System.Windows.UIElement.PreviewQueryContinueDrag> Ereignis ermöglicht der Drag-Quelle, zu deklarieren, ob der Drag & Drop-Vorgang abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="c3662-2900">The <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="c3662-2901">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewQueryContinueDrag> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2901">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2902">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewQueryContinueDrag> werden an das zugrunde liegende <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2902">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2903">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2903">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2904">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2904">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="c3662-2905">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2905">Routing strategy</span></span>|<span data-ttu-id="c3662-2906">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2906">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2907">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2907">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="c3662-2908">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.QueryContinueDrag> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2908">The corresponding bubbling event is <xref:System.Windows.UIElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="c3662-2909"><xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2909">Override <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2910">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2910">Identifies the <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2911">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2911">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2912">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2912">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2913">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2913">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2914">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2914">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2915">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2915">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2916">Tritt auf, wenn die Stifttaste gedrückt wird, während sich der Zeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2916">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2917">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewStylusButtonDown> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2917">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2918">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewStylusButtonDown> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2918">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-2919">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2919">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-2920">Weitere Informationen finden Sie [unter Unterstützung für Fingereingabe in Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) und [Eingabe Übersicht](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-2920">For more information, see [Touch Input Support in Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2921">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2921">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2922">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2922">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="c3662-2923">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2923">Routing strategy</span></span>|<span data-ttu-id="c3662-2924">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2924">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2925">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2925">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-2926">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.StylusButtonDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2926">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="c3662-2927"><xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2927">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2928">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2928">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2929">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2929">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2930">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2930">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2931">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2931">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2932">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2932">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2933">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2933">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2934">Tritt auf, wenn die Stifttaste losgelassen wird, während sich der Zeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2934">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2935">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewStylusButtonUp> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2935">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2936">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewStylusButtonUp> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2936">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-2937">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2937">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-2938">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-2938">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2939">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2939">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2940">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2940">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="c3662-2941">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2941">Routing strategy</span></span>|<span data-ttu-id="c3662-2942">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2942">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2943">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2943">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-2944">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.StylusButtonUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2944">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="c3662-2945"><xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2945">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2946">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2946">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2947">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2947">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2948">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2948">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2949">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2949">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2950">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2950">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2951">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2951">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2952">Tritt auf, wenn der Stift den Digitizer berührt, während dieser sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2952">Occurs when the stylus touches the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2953">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewStylusDown> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2953">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2954">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewStylusDown> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2954">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-2955">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2955">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-2956">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-2956">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2957">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2957">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2958">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2958">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="c3662-2959">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2959">Routing strategy</span></span>|<span data-ttu-id="c3662-2960">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2960">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2961">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2961">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="c3662-2962">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.StylusDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2962">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="c3662-2963"><xref:System.Windows.UIElement.OnPreviewStylusDown%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2963">Override <xref:System.Windows.UIElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2964">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2964">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2965">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2965">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2966">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2966">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2967">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2967">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2968">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2968">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2969">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2969">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2970">Tritt auf, wenn der Stift über ein Element bewegt wird, ohne den Digitizer zu berühren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2970">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2971">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewStylusInAirMove> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2971">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2972">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewStylusInAirMove> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2972">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-2973">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2973">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-2974">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-2974">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2975">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2975">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2976">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2976">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="c3662-2977">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2977">Routing strategy</span></span>|<span data-ttu-id="c3662-2978">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2978">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2979">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2979">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="c3662-2980">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.StylusInAirMove> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2980">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="c3662-2981"><xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2981">Override <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2982">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2982">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2983">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2983">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-2984">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-2984">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-2985">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-2985">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-2986">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2986">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-2987">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-2987">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-2988">Tritt auf, wenn sich der Tablettstift nah genug am Digitizer befindet, um erkannt zu werden, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-2988">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-2989">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewStylusInRange> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-2989">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-2990">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewStylusInRange> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-2990">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-2991">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-2991">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-2992">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-2992">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-2993">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-2993">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-2994">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-2994">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="c3662-2995">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-2995">Routing strategy</span></span>|<span data-ttu-id="c3662-2996">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-2996">Tunneling</span></span>|  
|<span data-ttu-id="c3662-2997">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-2997">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="c3662-2998">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.StylusInRange> .</span><span class="sxs-lookup"><span data-stu-id="c3662-2998">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="c3662-2999"><xref:System.Windows.UIElement.OnPreviewStylusInRange%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-2999">Override <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3000">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusInRange" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3000">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3001">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3001">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3002">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3002">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3003">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3003">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3004">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3004">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3005">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3005">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3006">Tritt auf, wenn der Tablettstift bewegt wird, während er sich über dem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3006">Occurs when the stylus moves while over the element.</span></span> <span data-ttu-id="c3662-3007">Der Tablettstift muss während der Erkennung durch den Digitizer bewegt werden, damit dieses Ereignis ausgelöst wird, andernfalls wird stattdessen <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-3007">The stylus must move while being detected by the digitizer to raise this event, otherwise, <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3008">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewStylusMove> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3008">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3009">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewStylusMove> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3009">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3010">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3010">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-3011">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-3011">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3012">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3012">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3013">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3013">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="c3662-3014">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3014">Routing strategy</span></span>|<span data-ttu-id="c3662-3015">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-3015">Tunneling</span></span>|  
|<span data-ttu-id="c3662-3016">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3016">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="c3662-3017">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.StylusMove> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3017">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="c3662-3018"><xref:System.Windows.UIElement.OnPreviewStylusMove%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3018">Override <xref:System.Windows.UIElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3019">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3019">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3020">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3020">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3021">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3021">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3022">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3022">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3023">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3023">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3024">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3024">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3025">Tritt auf, wenn sich der Stift zu weit vom Digitizer entfernt befindet, um erkannt zu werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3025">Occurs when the stylus is too far from the digitizer to be detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3026">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewStylusOutOfRange> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3026">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3027">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewStylusOutOfRange> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3027">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3028">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3028">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-3029">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-3029">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3030">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3030">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3031">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3031">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="c3662-3032">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3032">Routing strategy</span></span>|<span data-ttu-id="c3662-3033">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-3033">Tunneling</span></span>|  
|<span data-ttu-id="c3662-3034">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3034">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="c3662-3035">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.StylusOutOfRange> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3035">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="c3662-3036"><xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3036">Override <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3037">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3037">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3038">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3038">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3039">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3039">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3040">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3040">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3041">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3041">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3042">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3042">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3043">Tritt auf, wenn ein Benutzer eine von mehreren Gesten ausführt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3043">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3044">Weitere Informationen zu Stift Gesten finden Sie unter <xref:System.Windows.Input.SystemGesture> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3044">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="c3662-3045">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewStylusSystemGesture> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3045">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3046">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewStylusSystemGesture> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3046">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3047">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3047">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-3048">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-3048">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3049">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3049">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3050">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3050">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="c3662-3051">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3051">Routing strategy</span></span>|<span data-ttu-id="c3662-3052">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-3052">Tunneling</span></span>|  
|<span data-ttu-id="c3662-3053">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3053">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="c3662-3054">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.StylusSystemGesture> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3054">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="c3662-3055"><xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3055">Override <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3056">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3056">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3057">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3057">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3058">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3058">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3059">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3059">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3060">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3060">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3061">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3061">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3062">Tritt auf, wenn der Benutzer den Tablettstift vom Digitizer hebt, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3062">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3063">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewStylusDown> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3063">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3064">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewStylusDown> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3064">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3065">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3065">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-3066">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-3066">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3067">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3067">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3068">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3068">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="c3662-3069">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3069">Routing strategy</span></span>|<span data-ttu-id="c3662-3070">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-3070">Tunneling</span></span>|  
|<span data-ttu-id="c3662-3071">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3071">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="c3662-3072">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.StylusUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3072">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="c3662-3073"><xref:System.Windows.UIElement.OnPreviewStylusUp%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3073">Override <xref:System.Windows.UIElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3074">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewStylusUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3074">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3075">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3075">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3076">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3076">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3077">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3077">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3078">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3078">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3079">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3079">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberSignature Language="F#" Value="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3080">Tritt auf, wenn dieses Element Text geräteunabhängig empfängt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3080">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3081">Das- <xref:System.Windows.UIElement.PreviewTextInput> Ereignis ermöglicht es einer Komponente oder Anwendung, auf geräteunabhängige Weise auf Texteingaben zu lauschen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3081">The <xref:System.Windows.UIElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="c3662-3082">Die Tastatur ist das primäre Mittel von <xref:System.Windows.UIElement.PreviewTextInput> ; Sprache, Handschrift und andere Eingabegeräte können jedoch auch generiert werden <xref:System.Windows.UIElement.PreviewTextInput> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3082">The keyboard is the primary means of <xref:System.Windows.UIElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="c3662-3083">Aufgrund von Tastenkombinationen (entweder in Standard-Tastaturen oder über Eingabemethoden-Editoren) können mehrere Schlüsselereignisse nur ein Texteingabe Ereignis aufwerfen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3083">Because of key combinations - either in default keyboards or through input method editors - multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="c3662-3084">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.PreviewTextInput> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3084">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3085">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.PreviewTextInput> werden an das zugrunde liegende <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3085">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3086">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3086">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3087">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3087">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTextInputEvent>|  
|<span data-ttu-id="c3662-3088">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3088">Routing strategy</span></span>|<span data-ttu-id="c3662-3089">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-3089">Tunneling</span></span>|  
|<span data-ttu-id="c3662-3090">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3090">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="c3662-3091">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.TextInput> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3091">The corresponding bubbling event is <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="c3662-3092"><xref:System.Windows.UIElement.OnPreviewTextInput%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3092">Override <xref:System.Windows.UIElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3093">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewTextInput" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3093">Identifies the <see cref="E:System.Windows.UIElement.PreviewTextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3094">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3094">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3095">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3095">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3096">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3096">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3097">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3097">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3098">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3098">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3099">Tritt auf, wenn ein Finger den Bildschirm berührt und sich dieser über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3099">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3100">Standardmäßig tritt das <xref:System.Windows.UIElement.PreviewTouchDown> -Ereignis und das- <xref:System.Windows.UIElement.TouchDown> Ereignis erst auf, wenn ein Finger den Bildschirm berührt und verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3100">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="c3662-3101">Wenn Sie auf dem Bildschirm einen Finger drücken und ihn ohne verschieben bewegen, wird das Verhalten einer festgehalten <xref:System.Windows.Input.Stylus> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3101">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="c3662-3102">Das Verhalten von Press und Hold entspricht einem Mausklick mit der rechten Maustaste.</span><span class="sxs-lookup"><span data-stu-id="c3662-3102">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="c3662-3103">Damit das <xref:System.Windows.UIElement.PreviewTouchDown> -Ereignis und das- <xref:System.Windows.UIElement.TouchDown> Ereignis auftreten, sobald ein Finger den Bildschirm berührt, legen <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> Sie die angefügte-Eigenschaft `false` für dieses Element auf fest.</span><span class="sxs-lookup"><span data-stu-id="c3662-3103">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3104">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3104">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3105">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3105">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="c3662-3106">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3106">Routing strategy</span></span>|<span data-ttu-id="c3662-3107">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-3107">Tunneling</span></span>|  
|<span data-ttu-id="c3662-3108">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3108">Delegate</span></span>|<span data-ttu-id="c3662-3109">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3109"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="c3662-3110">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.TouchDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3110">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="c3662-3111"><xref:System.Windows.UIElement.OnPreviewTouchDown%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3111">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3112">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewTouchDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3112">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3113">Tritt auf, wenn sich ein Finger auf dem Bildschirm bewegt, während sich der Finger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3113">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3114">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3114">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3115">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3115">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="c3662-3116">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3116">Routing strategy</span></span>|<span data-ttu-id="c3662-3117">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-3117">Tunneling</span></span>|  
|<span data-ttu-id="c3662-3118">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3118">Delegate</span></span>|<span data-ttu-id="c3662-3119">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3119"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="c3662-3120">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.TouchMove> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3120">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="c3662-3121"><xref:System.Windows.UIElement.OnPreviewTouchMove%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3121">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3122">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewTouchMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3122">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3123">Tritt auf, wenn ein Finger vom Bildschirm genommen wird, während sich der Finger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3123">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3124">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3124">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3125">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3125">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="c3662-3126">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3126">Routing strategy</span></span>|<span data-ttu-id="c3662-3127">Tunneling</span><span class="sxs-lookup"><span data-stu-id="c3662-3127">Tunneling</span></span>|  
|<span data-ttu-id="c3662-3128">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3128">Delegate</span></span>|<span data-ttu-id="c3662-3129">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3129"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="c3662-3130">Das entsprechende Bubblingereignis ist <xref:System.Windows.UIElement.TouchUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3130">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="c3662-3131"><xref:System.Windows.UIElement.OnPreviewTouchUp%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3131">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3132">Identifiziert das <see cref="E:System.Windows.UIElement.PreviewTouchUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3132">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3133">Tritt auf, wenn sich der Status der Tastatur oder der Maustaste während eines Drag &amp;amp; Drop-Vorgangs ändert.</span><span class="sxs-lookup"><span data-stu-id="c3662-3133">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3134">Das- <xref:System.Windows.UIElement.QueryContinueDrag> Ereignis ermöglicht der Zieh Quelle, zu bestimmen, ob der Drag & Drop-Vorgang abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="c3662-3134">The <xref:System.Windows.UIElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="c3662-3135">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.QueryContinueDrag> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3135">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3136">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.QueryContinueDrag> werden an das zugrunde liegende <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3136">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3137">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3137">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3138">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3138">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryContinueDragEvent>|  
|<span data-ttu-id="c3662-3139">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3139">Routing strategy</span></span>|<span data-ttu-id="c3662-3140">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-3140">Bubbling</span></span>|  
|<span data-ttu-id="c3662-3141">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3141">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="c3662-3142">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewQueryContinueDrag> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3142">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="c3662-3143"><xref:System.Windows.UIElement.OnQueryContinueDrag%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3143">Override <xref:System.Windows.UIElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3144">Identifiziert das <see cref="E:System.Windows.UIElement.QueryContinueDrag" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3144">Identifies the <see cref="E:System.Windows.UIElement.QueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3145">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3145">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3146">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3146">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3147">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3147">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3148">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3148">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3149">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3149">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberSignature Language="F#" Value="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " Usage="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3150">Tritt auf, wenn die Anzeige des Cursors angefordert wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3150">Occurs when the cursor is requested to display.</span></span> <span data-ttu-id="c3662-3151">Dieses Ereignis wird immer dann für ein Element ausgelöst, wenn der Mauszeiger an eine neue Position bewegt wird, d  h., das Cursorobjekt muss möglicherweise in Abhängigkeit von seiner neuen Position geändert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3151">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3152">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.QueryCursor> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3152">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryCursor> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3153">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.QueryCursor> werden an das zugrunde liegende <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3153">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3154">Der Cursor, auf den dieser Ereignis Name verweist, ist nicht notwendigerweise der Textcursor (manchmal auch als Einfügemarke bezeichnet).</span><span class="sxs-lookup"><span data-stu-id="c3662-3154">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="c3662-3155">Stattdessen ist der Cursor in diesem Kontext das-Objekt, das die grafische Bildschirm Anzeige auf mehreren möglichen Eingabe bezogenen Geräten oder Konzepten in der Windows-Programmierung deklariert.</span><span class="sxs-lookup"><span data-stu-id="c3662-3155">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="c3662-3156">Dieses Objekt wird von der- <xref:System.Windows.Input.Cursor> Klasse in WPF dargestellt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3156">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="c3662-3157">Mit dem WPF-Eingabe System können Sie diesen Cursor ändern, wenn er die Bildschirmposition des Mauszeigers darstellt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3157">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="c3662-3158">Sie können vordefinierte Werte aus der- <xref:System.Windows.Input.Cursors> Enumeration verwenden, oder Sie können einen benutzerdefinierten Cursor als Bilddatei deklarieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3158">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="c3662-3159">Das Lauschen auf das <xref:System.Windows.UIElement.QueryCursor> Ereignis ist keine effiziente Technik für die Cursor Verwaltung.</span><span class="sxs-lookup"><span data-stu-id="c3662-3159">Listening for the <xref:System.Windows.UIElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="c3662-3160">Stattdessen sollte jedes Element sein eigenes Cursor Verhalten mit und definieren <xref:System.Windows.FrameworkContentElement.Cursor%2A> <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3160">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="c3662-3161">Sie sollten sich nur darauf verlassen <xref:System.Windows.UIElement.QueryCursor> , wenn Sie die Basiselemente der WPF-Frameworkebene nicht verwenden oder in außergewöhnlichen Fällen, in denen das Festlegen des Cursor Verhaltens auf einer einzelnen Element Basis nicht Ihren Anforderungen entspricht.</span><span class="sxs-lookup"><span data-stu-id="c3662-3161">You should only rely on <xref:System.Windows.UIElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="c3662-3162">Weitere Informationen zum Implementieren des Cursor Verhaltens als Reaktion auf <xref:System.Windows.UIElement.QueryCursor> finden Sie unter <xref:System.Windows.Input.QueryCursorEventHandler> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3162">For more information on implementing cursor behavior in response to <xref:System.Windows.UIElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3163">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3163">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3164">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3164">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryCursorEvent>|  
|<span data-ttu-id="c3662-3165">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3165">Routing strategy</span></span>|<span data-ttu-id="c3662-3166">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-3166">Bubbling</span></span>|  
|<span data-ttu-id="c3662-3167">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3167">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="c3662-3168">Es ist kein entsprechendes tunnelingereignis definiert.</span><span class="sxs-lookup"><span data-stu-id="c3662-3168">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="c3662-3169"><xref:System.Windows.UIElement.OnQueryCursor%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3169">Override <xref:System.Windows.UIElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3170">Identifiziert das <see cref="E:System.Windows.UIElement.QueryCursor" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3170">Identifies the <see cref="E:System.Windows.UIElement.QueryCursor" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3171">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3171">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3172">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3172">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3173">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3173">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3174">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3174">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3175">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3175">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.RaiseEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c3662-3176">Ein <see cref="T:System.Windows.RoutedEventArgs" />, das die Ereignisdaten enthält und zudem das auszulösende Ereignis angibt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3176">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span></span></param>
        <summary><span data-ttu-id="c3662-3177">Löst ein bestimmtes Routingereignis aus.</span><span class="sxs-lookup"><span data-stu-id="c3662-3177">Raises a specific routed event.</span></span> <span data-ttu-id="c3662-3178">Das auszulösende <see cref="T:System.Windows.RoutedEvent" /> wird innerhalb der <see cref="T:System.Windows.RoutedEventArgs" />-Instanz identifiziert, die bereitgestellt wird (als <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />-Eigenschaft für diese Ereignisdaten).</span><span class="sxs-lookup"><span data-stu-id="c3662-3178">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3179">Der- `e` Parameter ist als allgemeiner Basistyp für alle Routing Ereignisdaten typisiert. die Ereignisdaten sollten jedoch als spezifischsten Ereignis Datentyp angegeben werden, der für das ausgelöst-Ereignis verfügbar ist, da <xref:System.Windows.RoutedEventArgs> abgeleitete Klassen die tatsächlichen spezifischen Daten Eigenschaften enthalten, die für das jeweilige Ereignis bestimmt sind, wenn es ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3179">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="c3662-3180"><xref:System.Windows.RoutedEventArgs> ist nicht nur die Zustands Eigenschaften für das-Ereignis. Außerdem wird angegeben, welches Routing Ereignis erhoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="c3662-3180"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="c3662-3181">Dieses Ereignis Erstellungs Muster und die Daten des Routing Ereignisses unterscheiden [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] sich beide von Ereignissen und Daten Klassen, die in der Regel nur Eigenschaften enthalten, die mit dem Ereignis verknüpft sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-3181">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-3182">Im folgenden Beispiel werden Ereignisdaten erstellt, der Ereignis Bezeichner an die Daten angehängt und dann mithilfe der Ereignisdaten Instanz ein benutzerdefiniertes Routing Ereignis generiert.</span><span class="sxs-lookup"><span data-stu-id="c3662-3182">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[RoutedEventCustom#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#raiseevent)]
 [!code-vb[RoutedEventCustom#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberSignature Language="F#" Value="member this.ReleaseAllTouchCaptures : unit -&gt; unit" Usage="uIElement.ReleaseAllTouchCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3662-3183">Gibt alle erfassten Fingereingabegeräte für das Element frei.</span><span class="sxs-lookup"><span data-stu-id="c3662-3183">Releases all captured touch devices from this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMouseCapture : unit -&gt; unit&#xA;override this.ReleaseMouseCapture : unit -&gt; unit" Usage="uIElement.ReleaseMouseCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3662-3184">Gibt die Erfassung von Mauseingaben frei, wenn für dieses Element die Erfassung festgelegt war.</span><span class="sxs-lookup"><span data-stu-id="c3662-3184">Releases the mouse capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3185">Wenn dieses Element die Erfassung nicht enthielt, hat das Aufrufen dieser Methode keine Auswirkung.</span><span class="sxs-lookup"><span data-stu-id="c3662-3185">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="c3662-3186">Überprüfen Sie den Wert von, <xref:System.Windows.UIElement.IsMouseCaptured%2A> bevor Sie diese Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3186">Consider checking the value of <xref:System.Windows.UIElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-3187">Das folgende Beispiel ist das parallele zum Beispiel, das für festgestellt wird <xref:System.Windows.UIElement.CaptureMouse%2A> : Es behandelt die Maus Taste bis zur releaseerfassung und ermöglicht das Verschieben mit der Maus erneut.</span><span class="sxs-lookup"><span data-stu-id="c3662-3187">The following example is the parallel to the example given for <xref:System.Windows.UIElement.CaptureMouse%2A>: it handles mouse button up to release mouse capture and re-enable moving the mouse.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStylusCapture : unit -&gt; unit&#xA;override this.ReleaseStylusCapture : unit -&gt; unit" Usage="uIElement.ReleaseStylusCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3662-3188">Gibt das Erfassen der Eingaben von Tablettstiftgeräten frei, wenn für dieses Element die Erfassung festgelegt war.</span><span class="sxs-lookup"><span data-stu-id="c3662-3188">Releases the stylus device capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3189">Wenn dieses Element die Erfassung nicht enthielt, hat das Aufrufen dieser Methode keine Auswirkung.</span><span class="sxs-lookup"><span data-stu-id="c3662-3189">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="c3662-3190">Überprüfen Sie den Wert von, <xref:System.Windows.UIElement.IsStylusCaptured%2A> bevor Sie diese Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3190">Consider checking the value of <xref:System.Windows.UIElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReleaseTouchCapture (touchDevice As TouchDevice) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.ReleaseTouchCapture : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement.ReleaseTouchCapture touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="c3662-3191">Das freizugebende Gerät.</span><span class="sxs-lookup"><span data-stu-id="c3662-3191">The device to release.</span></span></param>
        <summary><span data-ttu-id="c3662-3192">Versucht, das angegebene Fingereingabegerät von diesem Element freizugeben.</span><span class="sxs-lookup"><span data-stu-id="c3662-3192">Attempts to release the specified touch device from this element.</span></span></summary>
        <returns><span data-ttu-id="c3662-3193"><see langword="true" />, wenn das Fingereingabegerät freigegeben wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-3193"><see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3662-3194"><paramref name="touchDevice" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-3194"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveHandler (routedEvent As RoutedEvent, handler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="c3662-3195">Der Bezeichner des Routingereignisses, für das der Handler angefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="c3662-3195">The identifier of the routed event for which the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="c3662-3196">Die spezifische Handlerimplementierung, die aus der Ereignishandlerauflistung dieses Elements entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="c3662-3196">The specific handler implementation to remove from the event handler collection on this element.</span></span></param>
        <summary><span data-ttu-id="c3662-3197">Entfernt den angegebenen Routingereignishandler aus diesem Element.</span><span class="sxs-lookup"><span data-stu-id="c3662-3197">Removes the specified routed event handler from this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3198">Das häufigste Szenario für die Verwendung dieser API ist, wenn Sie das [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "Wrapper"-Ereignis implementieren, das einem benutzerdefinierten Routing Ereignis zugeordnet ist. Dies gilt insbesondere, wenn Sie die Logik zum Entfernen von Handlern auf der [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ebene implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3198">The most common scenario for using this API is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="c3662-3199">Das folgende Beispiel veranschaulicht dieses Szenario.</span><span class="sxs-lookup"><span data-stu-id="c3662-3199">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="c3662-3200">Das Aufrufen dieser Methode hat keine Auswirkungen, wenn keine Handler mit Kriterien registriert wurden, die mit den Eingabe Parametern für den Methodenaufruf übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3200">Calling this method has no effect if there were no handlers registered with criteria that matches the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="c3662-3201">Wenn mehr als ein Handler angefügt ist, der mit den Kriterien übereinstimmt, wird nur der erste Handler im Ereignishandlerspeicher entfernt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3201">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="c3662-3202">Dieses Verhalten entspricht [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] dem Verhalten des- `-=` Operators.</span><span class="sxs-lookup"><span data-stu-id="c3662-3202">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="c3662-3203">Weder `routedEvent` noch `handler` können sein `null` .</span><span class="sxs-lookup"><span data-stu-id="c3662-3203">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="c3662-3204">Wenn Sie einen der Werte als angeben, `null` wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-3204">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="c3662-3205">Diese Methode ignoriert die `handledEventsToo` Parameterinformationen, die bereitgestellt werden, wenn der Handler zum ersten Mal mit der Signatur hinzugefügt wurde, die die <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Verarbeitung von bereits behandelten Ereignissen ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="c3662-3205">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="c3662-3206">Beide Arten von Handlern werden entfernt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3206">Either type of handler is removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-3207">Im folgenden Beispiel wird <xref:System.Windows.UIElement.RemoveHandler%2A> als Teil einer Ereignis-Wrapper-Definition verwendet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3207">The following example uses <xref:System.Windows.UIElement.RemoveHandler%2A> as part of an event wrapper definition.</span></span>  
  
 [!code-csharp[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#addremovehandler)]
 [!code-vb[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#addremovehandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="RenderSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size RenderSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size RenderSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderSize" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size RenderSize { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.RenderSize : System.Windows.Size with get, set" Usage="System.Windows.UIElement.RenderSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3208">Ruft die endgültige Größe zum Rendern dieses Elements ab (oder legt diese fest, siehe „Hinweise“).</span><span class="sxs-lookup"><span data-stu-id="c3662-3208">Gets (or sets) the final render size of this element.</span></span></summary>
        <value><span data-ttu-id="c3662-3209">Die gerenderte Größe für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="c3662-3209">The rendered size for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="c3662-3210">Versuchen Sie nicht, diese Eigenschaft entweder in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] oder im Code festzulegen, wenn Sie das Layoutsystem auf WPF-Frameworkebene verwenden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3210">Do not attempt to set this property, either in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or in code, if using the WPF framework-level layout system.</span></span> <span data-ttu-id="c3662-3211">In nahezu allen typischen Anwendungsszenarien wird dieses Layoutsystem verwendet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3211">Nearly all typical application scenarios will use this layout system.</span></span> <span data-ttu-id="c3662-3212">Das Layoutsystem berücksichtigt die in der-Eigenschaft festgelegten Größen nicht <xref:System.Windows.UIElement.RenderSize%2A> direkt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3212">The layout system will not respect sizes set in the <xref:System.Windows.UIElement.RenderSize%2A> property directly.</span></span> <span data-ttu-id="c3662-3213">Die- <xref:System.Windows.UIElement.RenderSize%2A> Eigenschaft ist nur als beschreibbar deklariert, um bestimmte Bridging-Fälle auf WPF-Kern Ebene zu ermöglichen, die die üblichen layoutprotokolle, z. b. die Unterstützung für die- <xref:System.Windows.Documents.Adorner> Klasse</span><span class="sxs-lookup"><span data-stu-id="c3662-3213">The <xref:System.Windows.UIElement.RenderSize%2A> property is declared writable only to enable certain WPF core-level bridging cases that deliberately circumvent the typical layout protocols, such as support for the <xref:System.Windows.Documents.Adorner> class.</span></span>  
  
 <span data-ttu-id="c3662-3214">Diese Eigenschaft kann zum Überprüfen der anwendbaren Rendering-Größe in layoutsystemüberschreibungen wie <xref:System.Windows.UIElement.OnRender%2A> oder verwendet werden <xref:System.Windows.UIElement.GetLayoutClip%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3214">This property can be used for checking the applicable render size within layout system overrides such as <xref:System.Windows.UIElement.OnRender%2A> or <xref:System.Windows.UIElement.GetLayoutClip%2A>.</span></span>  
  
 <span data-ttu-id="c3662-3215">Ein allgemeineres Szenario besteht darin, das <xref:System.Windows.FrameworkElement.SizeChanged> Ereignis mit der Überschreibung des Klassen Handlers oder dem-Ereignis zu behandeln <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3215">A more common scenario is handling the <xref:System.Windows.FrameworkElement.SizeChanged> event with the class handler override or the <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> event.</span></span>  
  
## Examples  
 <span data-ttu-id="c3662-3216">Im folgenden Beispiel wird gezeigt, wie ein benutzerdefinierter Funktions Indikator den <xref:System.Windows.UIElement.RenderSize%2A> -Wert verwendet, um die Rechteck Grafik zu erstellen und zu verkleinern, die den Funktions Indikator als Teil der <xref:System.Windows.UIElement.OnRender%2A> Implementierung definiert.</span><span class="sxs-lookup"><span data-stu-id="c3662-3216">The following example shows how a custom adorner uses the <xref:System.Windows.UIElement.RenderSize%2A> value in order to create and size the rectangle graphic that defines the adorner, as part of its <xref:System.Windows.UIElement.OnRender%2A> implementation.</span></span>  
  
 [!code-csharp[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/csharp/VS_Snippets_Wpf/AdornersMiscCode/CSharp/Window1.xaml.cs#uielementdesiredsize)]
 [!code-vb[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AdornersMiscCode/visualbasic/window1.xaml.vb#uielementdesiredsize)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Transform RenderTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Transform RenderTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransform As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Transform ^ RenderTransform { System::Windows::Media::Transform ^ get(); void set(System::Windows::Media::Transform ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenderTransform : System.Windows.Media.Transform with get, set" Usage="System.Windows.UIElement.RenderTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3217">Ruft Transformationsinformationen ab, die die Renderposition dieses Elements betreffen, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="c3662-3217">Gets or sets transform information that affects the rendering position of this element.</span></span>  <span data-ttu-id="c3662-3218">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-3218">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-3219">Beschreibt die Einzelheiten der gewünschten Rendertransformation.</span><span class="sxs-lookup"><span data-stu-id="c3662-3219">Describes the specifics of the desired render transform.</span></span> <span data-ttu-id="c3662-3220">Der Standardwert ist <see cref="P:System.Windows.Media.Transform.Identity" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-3220">The default is <see cref="P:System.Windows.Media.Transform.Identity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3221">Eine Rendertransformation generiert keine Layoutgröße oder renderinggrößeninformationen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3221">A render transform does not regenerate layout size or render size information.</span></span> <span data-ttu-id="c3662-3222">Rendertransformationen dienen in der Regel zum animieren oder Anwenden eines temporären Effekts auf ein Element.</span><span class="sxs-lookup"><span data-stu-id="c3662-3222">Render transforms are typically intended for animating or applying a temporary effect to an element.</span></span> <span data-ttu-id="c3662-3223">Beispielsweise kann das-Element Zoomen, wenn der Fokus oder das Mouseover ist, oder bei der Auslastung, um das Auge dieses Teils der zu zeichnen [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="c3662-3223">For example, the element might zoom when focused or moused over, or might jitter on load to draw the eye to that part of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransform"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-3224">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-3224">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3225">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3225">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformProperty>|  
|<span data-ttu-id="c3662-3226">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-3226">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-3227">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-3227">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point RenderTransformOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point RenderTransformOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransformOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransformOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point RenderTransformOrigin { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.RenderTransformOrigin : System.Windows.Point with get, set" Usage="System.Windows.UIElement.RenderTransformOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3228">Ruft den Mittelpunkt einer möglichen Rendertransformation ab, die von <see cref="P:System.Windows.UIElement.RenderTransform" /> in Bezug zu den Grenzen des Elements deklariert ist, bzw. legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="c3662-3228">Gets or sets the center point of any possible render transform declared by <see cref="P:System.Windows.UIElement.RenderTransform" />, relative to the bounds of the element.</span></span>  <span data-ttu-id="c3662-3229">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-3229">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-3230">Der Wert, der die Rendertransformation deklariert.</span><span class="sxs-lookup"><span data-stu-id="c3662-3230">The value that declares the render transform.</span></span> <span data-ttu-id="c3662-3231">Der Standardwert ist ein <see cref="T:System.Windows.Point" /> mit den Koordinaten (0,0).</span><span class="sxs-lookup"><span data-stu-id="c3662-3231">The default value is a <see cref="T:System.Windows.Point" /> with coordinates (0,0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3232"><xref:System.Windows.UIElement.RenderTransformOrigin%2A> hat eine etwas nicht dem Standard entsprechende Verwendung des- <xref:System.Windows.Point> Struktur Werts, da der <xref:System.Windows.Point> keine absolute Position in einem Koordinatensystem darstellt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3232"><xref:System.Windows.UIElement.RenderTransformOrigin%2A> has a somewhat nonstandard use of the <xref:System.Windows.Point> structure value, in that the <xref:System.Windows.Point> does not represent an absolute location in a coordinate system.</span></span> <span data-ttu-id="c3662-3233">Stattdessen werden Werte zwischen 0 und 1 als Faktor für den Bereich des aktuellen Elements in jeder x-y-Achse interpretiert.</span><span class="sxs-lookup"><span data-stu-id="c3662-3233">Instead, values between 0 and 1 are interpreted as a factor for the range of the current element in each x,y axis.</span></span> <span data-ttu-id="c3662-3234">Beispielsweise bewirkt (0,5, 0,5), dass die Rendertransformation auf das Element zentriert wird, oder (1, 1) würde die Rendertransformation in der unteren rechten Ecke des Elements platzieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3234">For example, (0.5,0.5) will cause the render transform to be centered on the element, or (1,1) would place the render transform at the bottom right corner of the element.</span></span> <span data-ttu-id="c3662-3235"><xref:System.Double.NaN> ist kein akzeptierter Wert.</span><span class="sxs-lookup"><span data-stu-id="c3662-3235"><xref:System.Double.NaN> is not an accepted value.</span></span>  
  
 <span data-ttu-id="c3662-3236">Werte, die größer als 0 und 1 sind, werden ebenfalls akzeptiert. Dies führt zu unkonventionelleren Transformations Effekten.</span><span class="sxs-lookup"><span data-stu-id="c3662-3236">Values beyond 0 and 1 are also accepted, and will result in more unconventional transform effects.</span></span> <span data-ttu-id="c3662-3237">Wenn Sie beispielsweise <xref:System.Windows.UIElement.RenderTransformOrigin%2A> auf (5, 5) festlegen und dann auf Anwenden <xref:System.Windows.Media.RotateTransform> , ist der Drehpunkt außerhalb der Grenzen des Elements selbst.</span><span class="sxs-lookup"><span data-stu-id="c3662-3237">For instance, if you set <xref:System.Windows.UIElement.RenderTransformOrigin%2A> to be (5,5), and then apply a <xref:System.Windows.Media.RotateTransform>, the rotation point will be well outside the bounds of the element itself.</span></span> <span data-ttu-id="c3662-3238">Die Transformation dreht das Element in einem großen Kreis, der über der untersten rechten Seite liegt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3238">The transform will spin your element around in a big circle that originates beyond bottom right.</span></span> <span data-ttu-id="c3662-3239">Der Ursprung befindet sich möglicherweise in seinem übergeordneten Element und kann möglicherweise außerhalb des Frames oder der Sicht liegen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3239">The origin might be somewhere inside its parent element and could possibly be possibly out of frame or view.</span></span> <span data-ttu-id="c3662-3240">Negative Punktwerte sind ähnlich. Diese werden über die oberen linken Grenzen hinausgehen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3240">Negative point values are similar, these will go beyond the top left bounds.</span></span>  
  
 <span data-ttu-id="c3662-3241">Rendertransformationen wirken sich nicht auf das Layout aus, und werden in der Regel verwendet, um einen temporären Effekt auf ein Element zu animieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3241">Render transforms do not affect layout, and are typically used to animate or apply a temporary effect to an element.</span></span>  
  
<a name="xamlAttributeUsage_RenderTransformOrigin"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c3662-3242">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="c3662-3242">XAML Attribute Usage</span></span>  
  
```  
<object RenderTransformOrigin="xOrigin, yOrigin"/>  
```  
  
<a name="xamlPropertyElementUsage_RenderTransformOrigin"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="c3662-3243">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="c3662-3243">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.RenderTransformOrigin>  
    <Point X=" xOrigin " Y=" yOrigin "/>  
  </object.RenderTransformOrigin>  
</object>  
```  
  
<a name="xamlValues_RenderTransformOrigin"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c3662-3244">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="c3662-3244">XAML Values</span></span>  
 <span data-ttu-id="c3662-3245">*XORIGIN*</span><span class="sxs-lookup"><span data-stu-id="c3662-3245">*xOrigin*</span></span>  
 <span data-ttu-id="c3662-3246">Der horizontale Ursprungs Faktor.</span><span class="sxs-lookup"><span data-stu-id="c3662-3246">The horizontal origin factor.</span></span> <span data-ttu-id="c3662-3247">Dies wird in der Regel als Wert zwischen 0 und 1 angegeben.</span><span class="sxs-lookup"><span data-stu-id="c3662-3247">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="c3662-3248">Siehe Hinweise.</span><span class="sxs-lookup"><span data-stu-id="c3662-3248">See Remarks.</span></span>  
  
 <span data-ttu-id="c3662-3249">*YORIGIN*</span><span class="sxs-lookup"><span data-stu-id="c3662-3249">*yOrigin*</span></span>  
 <span data-ttu-id="c3662-3250">Der vertikale Ursprungs Faktor.</span><span class="sxs-lookup"><span data-stu-id="c3662-3250">The vertical origin factor.</span></span> <span data-ttu-id="c3662-3251">Dies wird in der Regel als Wert zwischen 0 und 1 angegeben.</span><span class="sxs-lookup"><span data-stu-id="c3662-3251">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="c3662-3252">Siehe Hinweise.</span><span class="sxs-lookup"><span data-stu-id="c3662-3252">See Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransformOrigin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-3253">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-3253">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3254">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3254">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformOriginProperty>|  
|<span data-ttu-id="c3662-3255">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-3255">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-3256">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-3256">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c3662-3257">Im folgenden Beispiel werden Elemente im Code erstellt, ein angewendet <xref:System.Windows.UIElement.RenderTransformOrigin%2A> und dann eine angewendet  <xref:System.Windows.UIElement.RenderTransform%2A> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3257">The following example builds up elements in code, applies a <xref:System.Windows.UIElement.RenderTransformOrigin%2A>, and then applies a  <xref:System.Windows.UIElement.RenderTransform%2A>.</span></span>  
  
 [!code-csharp[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/csharp/VS_Snippets_Wpf/transformanimations_snip/CSharp/RotateAboutCenterExample.cs#uielementrendertransformorigin)]
 [!code-vb[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/visualbasic/VS_Snippets_Wpf/transformanimations_snip/visualbasic/rotateaboutcenterexample.vb#uielementrendertransformorigin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.RenderTransform" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOriginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformOriginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformOriginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformOriginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformOriginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformOriginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RenderTransformOriginProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.RenderTransformOriginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3258">Bezeichnet die <see cref="P:System.Windows.UIElement.RenderTransformOrigin" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-3258">Identifies the <see cref="P:System.Windows.UIElement.RenderTransformOrigin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RenderTransformProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.RenderTransformProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3259">Bezeichnet die <see cref="P:System.Windows.UIElement.RenderTransform" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-3259">Identifies the <see cref="P:System.Windows.UIElement.RenderTransform" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeCommandBindings : unit -&gt; bool" Usage="uIElement.ShouldSerializeCommandBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3662-3260">Gibt zurück, ob in Serialisierungsprozessen der Inhalt der <see cref="P:System.Windows.UIElement.CommandBindings" />-Eigenschaft für Instanzen dieser Klasse serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="c3662-3260">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.CommandBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="c3662-3261"><see langword="true" />, wenn der <see cref="P:System.Windows.UIElement.CommandBindings" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-3261"><see langword="true" /> if the <see cref="P:System.Windows.UIElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3262">`true`Wenn <xref:System.Windows.UIElement.CommandBindings%2A> lokal festgelegt ist, wird zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="c3662-3262">This will return `true` if <xref:System.Windows.UIElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="c3662-3263">Diese `ShouldSerialize` Methode wird bereitgestellt, da die- <xref:System.Windows.UIElement.CommandBindings%2A> Eigenschaft nicht über einen einfachen Standardwert verfügt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3263">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="c3662-3264">Diese Methode gibt an, ob die-Eigenschaft ihren Standardwert geändert hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-3264">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="c3662-3265">Sie rufen diese Methode in der Regel auf, wenn Sie entweder einen Designer entwickeln oder ein eigenes Steuerelement entwickeln, das eine enthält <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3265">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="c3662-3266">Weitere Informationen finden Sie unter [Definieren von Standardwerten mit den Methoden "dauerdserialisieren" und "Zurücksetzen](/dotnet/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods)".</span><span class="sxs-lookup"><span data-stu-id="c3662-3266">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](/dotnet/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeInputBindings : unit -&gt; bool" Usage="uIElement.ShouldSerializeInputBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3662-3267">Gibt zurück, ob in Serialisierungsprozessen der Inhalt der <see cref="P:System.Windows.UIElement.InputBindings" />-Eigenschaft für Instanzen dieser Klasse serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="c3662-3267">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.InputBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="c3662-3268"><see langword="true" />, wenn der <see cref="P:System.Windows.UIElement.InputBindings" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-3268"><see langword="true" /> if the <see cref="P:System.Windows.UIElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3269">`true`Wenn <xref:System.Windows.UIElement.InputBindings%2A> lokal festgelegt ist, wird zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="c3662-3269">This will return `true` if <xref:System.Windows.UIElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="c3662-3270">Diese `ShouldSerialize` Methode wird bereitgestellt, da die- <xref:System.Windows.UIElement.InputBindings%2A> Eigenschaft nicht über einen einfachen Standardwert verfügt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3270">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="c3662-3271">Diese Methode gibt an, ob die-Eigenschaft ihren Standardwert geändert hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-3271">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="c3662-3272">Sie rufen diese Methode in der Regel auf, wenn Sie entweder einen Designer entwickeln oder ein eigenes Steuerelement entwickeln, das eine enthält <xref:System.Windows.UIElement> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3272">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="c3662-3273">Weitere Informationen finden Sie unter [Definieren von Standardwerten mit den Methoden "dauerdserialisieren" und "Zurücksetzen](/dotnet/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods)".</span><span class="sxs-lookup"><span data-stu-id="c3662-3273">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](/dotnet/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixels">
      <MemberSignature Language="C#" Value="public bool SnapsToDevicePixels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SnapsToDevicePixels" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.SnapsToDevicePixels" />
      <MemberSignature Language="VB.NET" Value="Public Property SnapsToDevicePixels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SnapsToDevicePixels { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SnapsToDevicePixels : bool with get, set" Usage="System.Windows.UIElement.SnapsToDevicePixels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3274">Ruft einen Wert ab, der bestimmt, ob für das Rendern dieses Elements gerätespezifische Pixelseinstellungen verwendet werden sollen, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="c3662-3274">Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.</span></span>  <span data-ttu-id="c3662-3275">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-3275">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-3276"><see langword="true" />, wenn das Element unter Verwendung von Gerätepixeln gerendert werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-3276"><see langword="true" /> if the element should render in accordance to device pixels; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c3662-3277">Die Standardeinstellung, wie sie für <see cref="T:System.Windows.UIElement" /> deklariert ist, ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-3277">The default as declared on <see cref="T:System.Windows.UIElement" /> is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3278">Sie können diese Eigenschaft für das Stamm Element auf festlegen `true` , um das Pixel-Snap-Rendering in der gesamten Benutzeroberfläche zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3278">You can set this property to `true` on your root element to enable pixel snap rendering throughout the UI.</span></span> <span data-ttu-id="c3662-3279">Bei Geräten, die bei mehr als 96 ausgeführt [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] werden, kann das Pixel-Snap-Rendering das Antialiasing von visuellen Elementen in der Nähe von durchgezogenen Einzel Einheits Linien minimieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3279">For devices operating at greater than 96 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)], pixel snap rendering can minimize anti-aliasing visual artifacts in the vicinity of single-unit solid lines.</span></span>  
  
 <span data-ttu-id="c3662-3280">Wenn Sie von <xref:System.Windows.FrameworkElement> oder einer beliebigen möglichen abgeleiteten Klasse geerbt wird, <xref:System.Windows.FrameworkElement> überschreibt die Metadaten für diese Abhängigkeits Eigenschaft, um die <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> Metadateneigenschaft auf festzulegen `true` .</span><span class="sxs-lookup"><span data-stu-id="c3662-3280">When inherited by <xref:System.Windows.FrameworkElement> or any possible derived classes, <xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property to set the <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> metadata property to `true`.</span></span> <span data-ttu-id="c3662-3281">Dies hat zur Folge, dass nur das äußerste Element in einer Unterstruktur als angeben muss <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> `true` , und alle untergeordneten Elemente dieser Unterstruktur melden <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> als `true` und haben den <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> visuellen Effekt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3281">What this achieves is that only the outermost element in a subtree needs to specify <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true`, and all child elements of that subtree will then report <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true` and will have the <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> visual effect.</span></span>  
  
<a name="dependencyPropertyInfo_SnapsToDevicePixels"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-3282">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-3282">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3283">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3283">Identifier field</span></span>|<xref:System.Windows.UIElement.SnapsToDevicePixelsProperty>|  
|<span data-ttu-id="c3662-3284">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-3284">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-3285">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-3285">None</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/aa970908(v=vs.90)"><span data-ttu-id="c3662-3286">Pixel-ausrichten in WPF-Anwendungen</span><span class="sxs-lookup"><span data-stu-id="c3662-3286">Pixel Snapping in WPF Applications</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixelsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SnapsToDevicePixelsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.SnapsToDevicePixelsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SnapsToDevicePixelsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SnapsToDevicePixelsProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.SnapsToDevicePixelsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3287">Bezeichnet die <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-3287">Identifies the <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3288">Tritt auf, wenn die Stifttaste gedrückt wird, während sich der Zeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3288">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3289">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.StylusButtonDown> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3289">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3290">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.StylusButtonDown> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3290">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3291">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3291">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-3292">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-3292">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3293">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3293">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3294">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3294">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonDownEvent>|  
|<span data-ttu-id="c3662-3295">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3295">Routing strategy</span></span>|<span data-ttu-id="c3662-3296">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-3296">Bubbling</span></span>|  
|<span data-ttu-id="c3662-3297">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3297">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-3298">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusButtonDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3298">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="c3662-3299"><xref:System.Windows.UIElement.OnStylusButtonDown%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3299">Override <xref:System.Windows.UIElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3300">Identifiziert das <see cref="E:System.Windows.UIElement.StylusButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3300">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3301">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3301">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3302">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3302">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3303">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3303">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3304">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3304">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3305">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3305">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3306">Tritt auf, wenn die Stifttaste losgelassen wird, während sich der Zeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3306">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3307">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.StylusButtonUp> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3307">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3308">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.StylusButtonUp> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3308">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3309">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3309">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-3310">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-3310">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3311">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3311">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3312">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3312">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonUpEvent>|  
|<span data-ttu-id="c3662-3313">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3313">Routing strategy</span></span>|<span data-ttu-id="c3662-3314">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-3314">Bubbling</span></span>|  
|<span data-ttu-id="c3662-3315">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3315">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="c3662-3316">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusButtonUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3316">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="c3662-3317"><xref:System.Windows.UIElement.OnStylusButtonUp%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3317">Override <xref:System.Windows.UIElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3318">Identifiziert das <see cref="E:System.Windows.UIElement.StylusButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3318">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3319">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3319">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3320">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3320">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3321">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3321">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3322">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3322">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3323">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3323">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberSignature Language="F#" Value="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3324">Tritt auf, wenn der Stift den Digitizer berührt, während sich der Stift über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3324">Occurs when the stylus touches the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3325">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.StylusDown> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3325">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3326">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.StylusDown> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3326">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3327">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3327">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-3328">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-3328">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3329">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3330">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3330">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusDownEvent>|  
|<span data-ttu-id="c3662-3331">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3331">Routing strategy</span></span>|<span data-ttu-id="c3662-3332">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-3332">Bubbling</span></span>|  
|<span data-ttu-id="c3662-3333">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3333">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="c3662-3334">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3334">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="c3662-3335"><xref:System.Windows.UIElement.OnStylusDown%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3335">Override <xref:System.Windows.UIElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3336">Identifiziert das <see cref="E:System.Windows.UIElement.StylusDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3336">Identifies the <see cref="E:System.Windows.UIElement.StylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3337">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3337">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3338">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3338">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3339">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3339">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3340">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3340">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3341">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3341">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberSignature Language="F#" Value="member this.StylusEnter : System.Windows.Input.StylusEventHandler " Usage="member this.StylusEnter : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3342">Tritt auf, wenn der Stift in den Bereich dieses Elements eintritt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3342">Occurs when the stylus enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3343"><xref:System.Windows.UIElement.StylusEnter> ist ein Routing [Ereignis](/dotnet/framework/wpf/advanced/routed-events-overview) , das die Routing Strategie für die direkte Ereignis Behandlung verwendet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3343"><xref:System.Windows.UIElement.StylusEnter> is a [routed event](/dotnet/framework/wpf/advanced/routed-events-overview) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="c3662-3344">Direkt geroutete Ereignisse werden nicht entlang einer Route ausgelöst. Stattdessen werden Sie im selben Element behandelt, in dem Sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3344">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="c3662-3345">Allerdings ermöglichen Sie andere Aspekte des Routing Ereignis Verhaltens, z. b. Ereignis Trigger in Stilen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3345">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="c3662-3346">Obwohl <xref:System.Windows.UIElement.StylusEnter> nachverfolgt, wenn der Tablettstift in den Bereich eines Elements eintritt, meldet dieses Ereignis eher, dass sich der <xref:System.Windows.UIElement.IsStylusOver%2A> Eigenschafts Wert von `false` in `true` in diesem Element geändert hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-3346">Although <xref:System.Windows.UIElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="c3662-3347">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.StylusEnter> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3347">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3348">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.StylusEnter> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3348">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3349">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3349">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-3350">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-3350">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3351">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3351">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3352">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3352">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusEnterEvent>|  
|<span data-ttu-id="c3662-3353">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3353">Routing strategy</span></span>|<span data-ttu-id="c3662-3354">Direkt</span><span class="sxs-lookup"><span data-stu-id="c3662-3354">Direct</span></span>|  
|<span data-ttu-id="c3662-3355">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3355">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="c3662-3356"><xref:System.Windows.UIElement.OnStylusEnter%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3356">Override <xref:System.Windows.UIElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3357">Identifiziert das <see cref="E:System.Windows.UIElement.StylusEnter" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3357">Identifies the <see cref="E:System.Windows.UIElement.StylusEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3358">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3358">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3359">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3359">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3360">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3360">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3361">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3361">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3362">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3362">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3363">Tritt auf, wenn der Stift über ein Element bewegt wird, ohne den Digitizer zu berühren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3363">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3364">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.StylusInAirMove> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3364">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3365">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.StylusInAirMove> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3365">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3366">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3366">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-3367">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-3367">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3368">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3368">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3369">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3369">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="c3662-3370">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3370">Routing strategy</span></span>|<span data-ttu-id="c3662-3371">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-3371">Bubbling</span></span>|  
|<span data-ttu-id="c3662-3372">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3372">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="c3662-3373">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusInAirMove> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3373">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="c3662-3374"><xref:System.Windows.UIElement.OnStylusInAirMove%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3374">Override <xref:System.Windows.UIElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3375">Identifiziert das <see cref="E:System.Windows.UIElement.StylusInAirMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3375">Identifies the <see cref="E:System.Windows.UIElement.StylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3376">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3376">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3377">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3377">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3378">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3378">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3379">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3379">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3380">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3380">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberSignature Language="F#" Value="member this.StylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3381">Tritt auf, wenn sich der Tablettstift nah genug am Digitizer befindet, um erkannt zu werden, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3381">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3382">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.StylusInRange> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3382">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3383">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.StylusInRange> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3383">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3384">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3384">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-3385">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-3385">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3386">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3386">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3387">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3387">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInRangeEvent>|  
|<span data-ttu-id="c3662-3388">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3388">Routing strategy</span></span>|<span data-ttu-id="c3662-3389">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-3389">Bubbling</span></span>|  
|<span data-ttu-id="c3662-3390">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3390">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="c3662-3391">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusInRange> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3391">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="c3662-3392"><xref:System.Windows.UIElement.OnStylusInRange%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3392">Override <xref:System.Windows.UIElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3393">Identifiziert das <see cref="E:System.Windows.UIElement.StylusInRange" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3393">Identifies the <see cref="E:System.Windows.UIElement.StylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3394">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3394">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3395">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3395">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3396">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3396">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3397">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3397">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3398">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3398">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberSignature Language="F#" Value="member this.StylusLeave : System.Windows.Input.StylusEventHandler " Usage="member this.StylusLeave : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3399">Tritt auf, wenn der Stift den Bereich des Elements verlässt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3399">Occurs when the stylus leaves the bounds of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3400"><xref:System.Windows.UIElement.StylusLeave> ist ein Routing [Ereignis](/dotnet/framework/wpf/advanced/routed-events-overview) , das die Routing Strategie für die direkte Ereignis Behandlung verwendet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3400"><xref:System.Windows.UIElement.StylusLeave> is a [routed event](/dotnet/framework/wpf/advanced/routed-events-overview) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="c3662-3401">Direkt geroutete Ereignisse werden nicht entlang einer Route ausgelöst. Stattdessen werden Sie im selben Element behandelt, in dem Sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3401">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="c3662-3402">Allerdings ermöglichen Sie andere Aspekte des Routing Ereignis Verhaltens, z. b. Ereignis Trigger in Stilen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3402">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="c3662-3403">Obwohl <xref:System.Windows.UIElement.StylusLeave> nachverfolgt, wenn der Tablettstift die Begrenzungen eines Elements verlässt, meldet dieses Ereignis eher, dass sich der <xref:System.Windows.UIElement.IsStylusOver%2A> Eigenschafts Wert von `true` in `false` in diesem Element geändert hat.</span><span class="sxs-lookup"><span data-stu-id="c3662-3403">Although <xref:System.Windows.UIElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="c3662-3404">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.StylusLeave> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3404">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3405">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.StylusLeave> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3405">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3406">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3406">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-3407">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-3407">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3408">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3408">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3409">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3409">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusLeaveEvent>|  
|<span data-ttu-id="c3662-3410">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3410">Routing strategy</span></span>|<span data-ttu-id="c3662-3411">Direkt</span><span class="sxs-lookup"><span data-stu-id="c3662-3411">Direct</span></span>|  
|<span data-ttu-id="c3662-3412">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3412">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="c3662-3413"><xref:System.Windows.UIElement.OnStylusLeave%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3413">Override <xref:System.Windows.UIElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3414">Identifiziert das <see cref="E:System.Windows.UIElement.StylusLeave" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3414">Identifies the <see cref="E:System.Windows.UIElement.StylusLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3415">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3415">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3416">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3416">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3417">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3417">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3418">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3418">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3419">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3419">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberSignature Language="F#" Value="member this.StylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3420">Tritt auf, wenn der Stift über das Element bewegt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3420">Occurs when the stylus moves over this element.</span></span> <span data-ttu-id="c3662-3421">Zum Auslösen dieses Ereignisses muss der Stift auf dem Digitizer bewegt werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3421">The stylus must move while on the digitizer to raise this event.</span></span> <span data-ttu-id="c3662-3422">Andernfalls wird <see cref="E:System.Windows.UIElement.StylusInAirMove" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c3662-3422">Otherwise, <see cref="E:System.Windows.UIElement.StylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3423">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.StylusMove> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3423">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3424">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.StylusMove> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3424">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3425">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3425">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-3426">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-3426">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3427">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3427">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3428">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3428">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusMoveEvent>|  
|<span data-ttu-id="c3662-3429">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3429">Routing strategy</span></span>|<span data-ttu-id="c3662-3430">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-3430">Bubbling</span></span>|  
|<span data-ttu-id="c3662-3431">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3431">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="c3662-3432">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusMove> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3432">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="c3662-3433"><xref:System.Windows.UIElement.OnStylusMove%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3433">Override <xref:System.Windows.UIElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3434">Identifiziert das <see cref="E:System.Windows.UIElement.StylusMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3434">Identifies the <see cref="E:System.Windows.UIElement.StylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3435">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3435">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3436">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3436">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3437">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3437">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3438">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3438">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3439">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3439">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3440">Tritt auf, wenn der Stift zu weit vom Digitizer entfernt ist, um erkannt zu werden, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3440">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3441">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.StylusOutOfRange> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3441">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3442">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.StylusOutOfRange> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3442">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3443">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3443">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-3444">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-3444">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3445">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3445">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3446">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3446">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="c3662-3447">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3447">Routing strategy</span></span>|<span data-ttu-id="c3662-3448">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-3448">Bubbling</span></span>|  
|<span data-ttu-id="c3662-3449">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3449">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="c3662-3450">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusOutOfRange> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3450">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="c3662-3451"><xref:System.Windows.UIElement.OnStylusOutOfRange%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3451">Override <xref:System.Windows.UIElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3452">Identifiziert das <see cref="E:System.Windows.UIElement.StylusOutOfRange" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3452">Identifies the <see cref="E:System.Windows.UIElement.StylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3453">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3453">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3454">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3454">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3455">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3455">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3456">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3456">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3457">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3457">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusPlugIns">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.StylusPlugIns" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StylusPlugIns As StylusPlugInCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ StylusPlugIns { System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StylusPlugIns : System.Windows.Input.StylusPlugIns.StylusPlugInCollection" Usage="System.Windows.UIElement.StylusPlugIns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPlugIns.StylusPlugInCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3458">Ruft eine Auflistung aller Tablettstift-Plug-In-Objekte (Anpassung) ab, die diesem Element zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-3458">Gets a collection of all stylus plug-in (customization) objects associated with this element.</span></span></summary>
        <value><span data-ttu-id="c3662-3459">Die Auflistung der Tablettstift-Plug-Ins als spezielle Auflistung.</span><span class="sxs-lookup"><span data-stu-id="c3662-3459">The collection of stylus plug-ins, as a specialized collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3460">Ein Beispiel für ein Steuerelement, das diese Auflistung auffüllt, ist <xref:System.Windows.Controls.InkCanvas> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3460">An example of a control that populates this collection is <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="c3662-3461"><xref:System.Windows.Controls.InkCanvas> Fügt als Auflistungs <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> Element hinzu, das ermöglicht, <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> mit Tablettstifteingaben zu interagieren und das eindeutige Rendering als Reaktion auf Tablettstiftereignisse zu liefern.</span><span class="sxs-lookup"><span data-stu-id="c3662-3461"><xref:System.Windows.Controls.InkCanvas> adds the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> as a collection item, which enables the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to interact with stylus input and produce the unique rendering in response to stylus driven events.</span></span>  
  
 <span data-ttu-id="c3662-3462">Informationen zum Erstellen von benutzerdefinierten Plug-ins, die Tablettstifteingaben empfangen und interpretieren können, finden Sie unter [Abfangen von Eingaben vom Tablettstift](/dotnet/framework/wpf/advanced/intercepting-input-from-the-stylus).</span><span class="sxs-lookup"><span data-stu-id="c3662-3462">For information on creating custom plug-ins that can receive and interpret stylus input, see [Intercepting Input from the Stylus](/dotnet/framework/wpf/advanced/intercepting-input-from-the-stylus).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3662-3463">Im folgenden Beispiel wird eine <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> -Instanz erstellt und der-Auflistung <xref:System.Windows.UIElement.StylusPlugIns%2A> für ein benutzerdefiniertes handlersteuerungssteuerelement hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3463">The following example creates a <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> instance and adds it to the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection for a custom ink handling control.</span></span>  
  
 [!code-csharp[StylusPluginSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusPluginSamples/CSharp/StylusControl.cs#3)]
 [!code-vb[StylusPluginSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusPluginSamples/VisualBasic/StylusControl.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />
        <altmember cref="T:System.Windows.Controls.InkCanvas" />
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3464">Tritt auf, wenn ein Benutzer eine von mehreren Gesten ausführt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3464">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3465">Weitere Informationen zu Stift Gesten finden Sie unter <xref:System.Windows.Input.SystemGesture> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3465">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="c3662-3466">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.StylusSystemGesture> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3466">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3467">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.StylusSystemGesture> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3467">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3468">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3468">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-3469">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-3469">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3470">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3470">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3471">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3471">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="c3662-3472">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3472">Routing strategy</span></span>|<span data-ttu-id="c3662-3473">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-3473">Bubbling</span></span>|  
|<span data-ttu-id="c3662-3474">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3474">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="c3662-3475">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusSystemGesture> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3475">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="c3662-3476"><xref:System.Windows.UIElement.OnStylusSystemGesture%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3476">Override <xref:System.Windows.UIElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3477">Identifiziert das <see cref="E:System.Windows.UIElement.StylusSystemGesture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3477">Identifies the <see cref="E:System.Windows.UIElement.StylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3478">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3478">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3479">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3479">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3480">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3480">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3481">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3481">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3482">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3482">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberSignature Language="F#" Value="member this.StylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.StylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3483">Tritt auf, wenn ein Benutzer den Stift vom Digitizer hebt, während sich der Stift über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3483">Occurs when the user raises the stylus off the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3484">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.StylusUp> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3484">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3485">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.StylusUp> werden an das zugrunde liegende <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3485">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="c3662-3486">Eingabe-, Maus-und Stift Eingaben sind in einer bestimmten Beziehung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3486">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="c3662-3487">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c3662-3487">For more information, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3488">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3488">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3489">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3489">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusUpEvent>|  
|<span data-ttu-id="c3662-3490">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3490">Routing strategy</span></span>|<span data-ttu-id="c3662-3491">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-3491">Bubbling</span></span>|  
|<span data-ttu-id="c3662-3492">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3492">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="c3662-3493">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewStylusUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3493">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="c3662-3494"><xref:System.Windows.UIElement.OnStylusUp%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3494">Override <xref:System.Windows.UIElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3495">Identifiziert das <see cref="E:System.Windows.UIElement.StylusUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3495">Identifies the <see cref="E:System.Windows.UIElement.StylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3496">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3496">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3497">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3497">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3498">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3498">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3499">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3499">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3500">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3500">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3501">Tritt auf, wenn dieses Element Text geräteunabhängig empfängt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3501">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="c3662-3502">Dieses Ereignis ist möglicherweise bereits als behandelt durch die internen Implementierungen von zusammengesetzten Steuerelementen gekennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3502">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="c3662-3503">Weitere Informationen finden Sie unten.</span><span class="sxs-lookup"><span data-stu-id="c3662-3503">See Remark below.</span></span>  
  
 <span data-ttu-id="c3662-3504">Das <xref:System.Windows.UIElement.TextInput> Ereignis ist möglicherweise bereits als behandelt durch die internen Implementierungen von zusammengesetzten Steuerelementen gekennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3504">The <xref:System.Windows.UIElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="c3662-3505">Ein ist beispielsweise ein zusammengesetzter Steuerelement, <xref:System.Windows.Controls.TextBox> bei dem das <xref:System.Windows.UIElement.TextInput> Ereignis bereits als behandelt markiert ist, und zwar innerhalb der Zusammensetzung.</span><span class="sxs-lookup"><span data-stu-id="c3662-3505">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.UIElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="c3662-3506">Dies geschieht, da das Steuerelement einige Typen von Eingaben, wie z. b. Pfeiltasten, interpretieren muss, um eine besondere Bedeutung für dieses Steuerelement zu haben.</span><span class="sxs-lookup"><span data-stu-id="c3662-3506">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="c3662-3507">Wenn Sie <xref:System.Windows.UIElement.PreviewTextInput> als Ereignis verwenden, bei dem Sie Handler für Texteingaben anfügen, erhalten Sie möglicherweise bessere Ergebnisse.</span><span class="sxs-lookup"><span data-stu-id="c3662-3507">If you use <xref:System.Windows.UIElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="c3662-3508">Mit dieser Technik werden die meisten Fälle umgangen, in denen die Steuerelement Komposition dieses Ereignis bereits als behandelt markiert hat und verhindert, dass der Handler das Ereignis auf der Ereignis Route empfängt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3508">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="c3662-3509">Das- <xref:System.Windows.UIElement.TextInput> Ereignis ermöglicht es einer Komponente oder Anwendung, auf geräteunabhängige Weise auf Texteingaben zu lauschen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3509">The <xref:System.Windows.UIElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="c3662-3510">Die Tastatur ist die primäre Methode von <xref:System.Windows.UIElement.TextInput> , aber sprach-, Handschrift-und andere Eingabegeräte können ebenfalls eine Erhöhung durch geben <xref:System.Windows.UIElement.TextInput> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3510">The keyboard is the primary means of <xref:System.Windows.UIElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
 <span data-ttu-id="c3662-3511">Aufgrund von Tastenkombinationen (entweder in Standard-Tastaturen oder über Eingabemethoden-Editoren) können mehrere Schlüsselereignisse nur ein Texteingabe Ereignis aufwerfen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3511">Because of key combinations - either in default keyboards or through input method editors - multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="c3662-3512">Dieses Ereignis erstellt einen Alias für das <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> angefügte-Ereignis für diese Klasse, sodass <xref:System.Windows.UIElement.TextInput> Teil der Klassenmember-Liste ist, wenn <xref:System.Windows.UIElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3512">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.TextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="c3662-3513">Ereignishandler, die an das Ereignis angefügt sind, <xref:System.Windows.UIElement.TextInput> werden an das zugrunde liegende <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> angefügte Ereignis angefügt und empfangen dieselbe Ereignisdaten Instanz.</span><span class="sxs-lookup"><span data-stu-id="c3662-3513">Event handlers that are attached to the <xref:System.Windows.UIElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3514">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3514">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3515">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3515">Identifier field</span></span>|<xref:System.Windows.UIElement.TextInputEvent>|  
|<span data-ttu-id="c3662-3516">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3516">Routing strategy</span></span>|<span data-ttu-id="c3662-3517">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-3517">Bubbling</span></span>|  
|<span data-ttu-id="c3662-3518">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3518">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="c3662-3519">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewTextInput> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3519">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="c3662-3520"><xref:System.Windows.UIElement.OnTextInput%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3520">Override <xref:System.Windows.UIElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3521">Identifiziert das <see cref="E:System.Windows.UIElement.TextInput" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3521">Identifies the <see cref="E:System.Windows.UIElement.TextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3522">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3522">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="c3662-3523">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3523">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="c3662-3524">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3524">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="c3662-3525">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3525">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="c3662-3526">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3526">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberSignature Language="F#" Value="member this.TouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3527">Tritt auf, wenn ein Finger den Bildschirm berührt und sich dieser über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3527">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3528">Standardmäßig tritt das <xref:System.Windows.UIElement.PreviewTouchDown> -Ereignis und das- <xref:System.Windows.UIElement.TouchDown> Ereignis erst auf, wenn ein Finger den Bildschirm berührt und verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3528">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="c3662-3529">Wenn Sie auf dem Bildschirm einen Finger drücken und ihn ohne verschieben bewegen, wird das Verhalten einer festgehalten <xref:System.Windows.Input.Stylus> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3529">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="c3662-3530">Das Verhalten von Press und Hold entspricht einem Mausklick mit der rechten Maustaste.</span><span class="sxs-lookup"><span data-stu-id="c3662-3530">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="c3662-3531">Damit das <xref:System.Windows.UIElement.PreviewTouchDown> -Ereignis und das- <xref:System.Windows.UIElement.TouchDown> Ereignis auftreten, sobald ein Finger den Bildschirm berührt, legen <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> Sie die angefügte-Eigenschaft `false` für dieses Element auf fest.</span><span class="sxs-lookup"><span data-stu-id="c3662-3531">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3532">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3532">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3533">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3533">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchDownEvent>|  
|<span data-ttu-id="c3662-3534">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3534">Routing strategy</span></span>|<span data-ttu-id="c3662-3535">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-3535">Bubbling</span></span>|  
|<span data-ttu-id="c3662-3536">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3536">Delegate</span></span>|<span data-ttu-id="c3662-3537">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3537"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="c3662-3538">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewTouchDown> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3538">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="c3662-3539"><xref:System.Windows.UIElement.OnTouchDown%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3539">Override <xref:System.Windows.UIElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3540">Identifiziert das <see cref="E:System.Windows.UIElement.TouchDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3540">Identifies the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberSignature Language="F#" Value="member this.TouchEnter : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchEnter : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3541">Tritt ein, wenn sich eine Fingereingabe in die Grenzen dieses Elements hineinbewegt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3541">Occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3542">Dieses Ereignis wird immer ausgelöst, unabhängig davon, ob das Finger Eingabegerät für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3542">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3543">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3543">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3544">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3544">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchEnterEvent>|  
|<span data-ttu-id="c3662-3545">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3545">Routing strategy</span></span>|<span data-ttu-id="c3662-3546">Direkt</span><span class="sxs-lookup"><span data-stu-id="c3662-3546">Direct</span></span>|  
|<span data-ttu-id="c3662-3547">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3547">Delegate</span></span>|<span data-ttu-id="c3662-3548">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3548"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="c3662-3549"><xref:System.Windows.UIElement.OnTouchEnter%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3549">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3550">Identifiziert das <see cref="E:System.Windows.UIElement.TouchEnter" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3550">Identifies the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCaptured : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3551">Ruft alle Fingereingabegeräte ab, die für dieses Element erfasst werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3551">Gets all touch devices that are captured to this element.</span></span></summary>
        <value><span data-ttu-id="c3662-3552">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die für dieses Element erfasst werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3552">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCapturedWithin : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3553">Ruft alle Fingereingabegeräte ab, die für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3553">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="c3662-3554">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3554">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesDirectlyOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3555">Ruft alle Fingereingabegeräte ab, die sich über diesem Element befinden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3555">Gets all touch devices that are over this element.</span></span></summary>
        <value><span data-ttu-id="c3662-3556">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die sich über diesem Element befinden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3556">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3557">Ruft alle Fingereingabegeräte ab, die sich über diesem Element oder seinen untergeordneten Elementen in der visuellen Struktur befinden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3557">Gets all touch devices that are over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="c3662-3558">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die sich über diesem Element oder seinen untergeordneten Elemente in der visuellen Struktur befinden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3558">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberSignature Language="F#" Value="member this.TouchLeave : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchLeave : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3559">Tritt ein, wenn sich eine Fingereingabe aus den Grenzen dieses Elements herausbewegt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3559">Occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3560">Dieses Ereignis wird immer ausgelöst, unabhängig davon, ob das Finger Eingabegerät für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="c3662-3560">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3561">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3561">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3562">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3562">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchLeaveEvent>|  
|<span data-ttu-id="c3662-3563">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3563">Routing strategy</span></span>|<span data-ttu-id="c3662-3564">Direkt</span><span class="sxs-lookup"><span data-stu-id="c3662-3564">Direct</span></span>|  
|<span data-ttu-id="c3662-3565">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3565">Delegate</span></span>|<span data-ttu-id="c3662-3566">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3566"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="c3662-3567"><xref:System.Windows.UIElement.OnTouchLeave%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3567">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3568">Identifiziert das <see cref="E:System.Windows.UIElement.TouchLeave" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3568">Identifies the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberSignature Language="F#" Value="member this.TouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3569">Tritt auf, wenn sich ein Finger auf dem Bildschirm bewegt, während sich der Finger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3569">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3570">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3570">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3571">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3571">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchMoveEvent>|  
|<span data-ttu-id="c3662-3572">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3572">Routing strategy</span></span>|<span data-ttu-id="c3662-3573">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-3573">Bubbling</span></span>|  
|<span data-ttu-id="c3662-3574">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3574">Delegate</span></span>|<span data-ttu-id="c3662-3575">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3575"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="c3662-3576">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewTouchMove> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3576">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="c3662-3577"><xref:System.Windows.UIElement.OnTouchMove%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3577">Override <xref:System.Windows.UIElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3578">Identifiziert das <see cref="E:System.Windows.UIElement.TouchMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3578">Identifies the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberSignature Language="F#" Value="member this.TouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3579">Tritt auf, wenn ein Finger vom Bildschirm genommen wird, während sich der Finger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3579">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c3662-3580">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="c3662-3580">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3581">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3581">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchUpEvent>|  
|<span data-ttu-id="c3662-3582">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="c3662-3582">Routing strategy</span></span>|<span data-ttu-id="c3662-3583">Blasen</span><span class="sxs-lookup"><span data-stu-id="c3662-3583">Bubbling</span></span>|  
|<span data-ttu-id="c3662-3584">Delegat</span><span class="sxs-lookup"><span data-stu-id="c3662-3584">Delegate</span></span>|<span data-ttu-id="c3662-3585">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3585"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="c3662-3586">Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement.PreviewTouchUp> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3586">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="c3662-3587"><xref:System.Windows.UIElement.OnTouchUp%2A>Überschreiben, um die Klassen Behandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="c3662-3587">Override <xref:System.Windows.UIElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3588">Identifiziert das <see cref="E:System.Windows.UIElement.TouchUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="c3662-3588">Identifies the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslatePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point TranslatePoint (System.Windows.Point point, System.Windows.UIElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point TranslatePoint(valuetype System.Windows.Point point, class System.Windows.UIElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslatePoint (point As Point, relativeTo As UIElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point TranslatePoint(System::Windows::Point point, System::Windows::UIElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.TranslatePoint : System.Windows.Point * System.Windows.UIElement -&gt; System.Windows.Point" Usage="uIElement.TranslatePoint (point, relativeTo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="relativeTo" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="c3662-3589">Der Punktwert relativ zu diesem Element.</span><span class="sxs-lookup"><span data-stu-id="c3662-3589">The point value, as relative to this element.</span></span></param>
        <param name="relativeTo"><span data-ttu-id="c3662-3590">Das Element, in das der angegebene Punkt übersetzt werden soll.</span><span class="sxs-lookup"><span data-stu-id="c3662-3590">The element to translate the given point into.</span></span></param>
        <summary><span data-ttu-id="c3662-3591">Übersetzt einen Punkt relativ zu diesem Element in Koordinaten, die relativ zum angegebenen Element sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-3591">Translates a point relative to this element to coordinates that are relative to the specified element.</span></span></summary>
        <returns><span data-ttu-id="c3662-3592">Ein Punktwert, der jetzt relativ zum Zielelement anstatt zu diesem Quellelement ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-3592">A point value, now relative to the target element rather than this source element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3593">Das übergeben `null` von für `relativeTo` ist zulässig und gibt an, dass die Koordinaten relativ zum Stamm Element in der logischen Struktur sein müssen, zu der dieses Element gehört.</span><span class="sxs-lookup"><span data-stu-id="c3662-3593">Passing `null` for `relativeTo` is permitted, and indicates that coordinates should be relative to the root element in the logical tree that this element belongs to.</span></span>  
  
 <span data-ttu-id="c3662-3594">Diese Methode wird zum Übersetzen von Treffer Test Punktwerten verwendet.</span><span class="sxs-lookup"><span data-stu-id="c3662-3594">This method is used for translating hit test point values.</span></span> <span data-ttu-id="c3662-3595">Das Aufrufen dieser Methode ist hauptsächlich wichtig, wenn Sie ein Steuerelement erstellen und Eingaben auf niedrigerer Ebene verarbeiten müssen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3595">Calling this method is mainly relevant if you are authoring a control and need to process input at a lower level.</span></span> <span data-ttu-id="c3662-3596">Wenn Sie vorhandene Steuerelemente verwenden, können Sie in der Regel davon ausgehen, dass abgeschlossene Steuerelemente ordnungsgemäß übersetzte Treffer Testergebnisse melden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3596">If you are using existing controls, you can generally assume that completed controls will report correctly translated hit test results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uid">
      <MemberSignature Language="C#" Value="public string Uid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Uid" />
      <MemberSignature Language="VB.NET" Value="Public Property Uid As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uid { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uid : string with get, set" Usage="System.Windows.UIElement.Uid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3597">Ruft den eindeutigen Bezeichner (für Lokalisierung) für dieses Element ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="c3662-3597">Gets or sets the unique identifier (for localization) for this element.</span></span> <span data-ttu-id="c3662-3598">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-3598">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-3599">Eine Zeichenfolge, die der eindeutige Bezeichner für dieses Element ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-3599">A string that is the unique identifier for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3600">Wird von Designern verwendet, um den Wert zu erhalten `x:Uid` (Weitere Informationen finden Sie unter [Übersicht über WPF-Globalisierung und-Lokalisierung](/dotnet/framework/wpf/advanced/wpf-globalization-and-localization-overview) ).</span><span class="sxs-lookup"><span data-stu-id="c3662-3600">Used by designers to get the `x:Uid` value (see [WPF Globalization and Localization Overview](/dotnet/framework/wpf/advanced/wpf-globalization-and-localization-overview) for more information).</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-3601">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-3601">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3602">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3602">Identifier field</span></span>|<xref:System.Windows.UIElement.UidProperty>|  
|<span data-ttu-id="c3662-3603">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-3603">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-3604">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-3604">None</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/81defade-483b-4a89-b76d-9b25bba34010"><span data-ttu-id="c3662-3605">x:UID-Attribut</span><span class="sxs-lookup"><span data-stu-id="c3662-3605">x:Uid Attribute</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UidProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UidProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UidProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.UidProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UidProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UidProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UidProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.UidProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3606">Bezeichnet die <see cref="P:System.Windows.UIElement.Uid" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-3606">Identifies the <see cref="P:System.Windows.UIElement.Uid" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLayout">
      <MemberSignature Language="C#" Value="public void UpdateLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.UpdateLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLayout();" />
      <MemberSignature Language="F#" Value="member this.UpdateLayout : unit -&gt; unit" Usage="uIElement.UpdateLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3662-3607">Stellt sicher, dass alle visuellen untergeordneten Elemente dieses Elements ordnungsgemäß für das Layout aktualisiert werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3607">Ensures that all visual child elements of this element are properly updated for layout.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3608">Wenn Sie diese Methode aufzurufen, werden Elemente mit <xref:System.Windows.UIElement.IsMeasureValid%2A> `false` oder <xref:System.Windows.UIElement.IsArrangeValid%2A> `false` Element spezifische- <xref:System.Windows.UIElement.MeasureCore%2A> und- <xref:System.Windows.UIElement.ArrangeCore%2A> Methoden aufgerufen, die die Layoutaktualisierung erzwingen und alle berechneten Größen überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="c3662-3608">When you call this method, elements with <xref:System.Windows.UIElement.IsMeasureValid%2A>`false` or <xref:System.Windows.UIElement.IsArrangeValid%2A>`false` will call element-specific <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> methods, which forces layout update, and all computed sizes will be validated.</span></span>  
  
 <span data-ttu-id="c3662-3609">Das Aufrufen dieser Methode hat keine Auswirkungen, wenn das Layout unverändert ist, oder wenn weder die Anordnung noch der Messzustand eines Layouts ungültig ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-3609">Calling this method has no effect if layout is unchanged, or if neither arrangement nor measurement state of a layout is invalid.</span></span> <span data-ttu-id="c3662-3610">Wenn das Layout jedoch in jeder Hinsicht ungültig ist, wird der-Befehl <xref:System.Windows.UIElement.UpdateLayout%2A> das gesamte Layout wiederholen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3610">However, if layout is invalid in either respect, the <xref:System.Windows.UIElement.UpdateLayout%2A> call will redo the entire layout.</span></span> <span data-ttu-id="c3662-3611">Daher sollten Sie <xref:System.Windows.UIElement.UpdateLayout%2A> nach jeder inkrementellen und geringfügigen Änderung in der Elementstruktur nicht aufrufen.</span><span class="sxs-lookup"><span data-stu-id="c3662-3611">Therefore, you should avoid calling <xref:System.Windows.UIElement.UpdateLayout%2A> after each incremental and minor change in the element tree.</span></span> <span data-ttu-id="c3662-3612">Das Layoutsystem führt das Element Layout verzögert aus und verwendet dabei einen Algorithmus, der die Leistung und die Währung ausgleicht, sowie eine Gewichtungs Strategie, um die Änderungen an Stämme zu verzögern, bis alle untergeordneten Elemente gültig sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-3612">The layout system will perform element layout in a deferred manner, using an algorithm that balances performance and currency, and with a weighting strategy to defer changes to roots until all child elements are valid.</span></span> <span data-ttu-id="c3662-3613">Sie sollten nur <xref:System.Windows.UIElement.UpdateLayout%2A> dann anrufen, wenn Sie unbedingt aktualisierte Größen und Positionen benötigen, und nur, wenn Sie sicher sind, dass alle Änderungen an den Eigenschaften, die Sie steuern und die das Layout beeinflussen können, abgeschlossen sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-3613">You should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if you absolutely need updated sizes and positions, and only after you are certain that all changes to properties that you control and that may affect layout are completed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility Visibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberSignature Language="F#" Value="member this.Visibility : System.Windows.Visibility with get, set" Usage="System.Windows.UIElement.Visibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3614">Ruft die [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]-Sichtbarkeit dieses Elements ab oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="c3662-3614">Gets or sets the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] visibility of this element.</span></span>  <span data-ttu-id="c3662-3615">Hierbei handelt es sich um eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-3615">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="c3662-3616">Ein Wert aus der Enumeration.</span><span class="sxs-lookup"><span data-stu-id="c3662-3616">A value of the enumeration.</span></span> <span data-ttu-id="c3662-3617">Der Standardwert ist <see cref="F:System.Windows.Visibility.Visible" />.</span><span class="sxs-lookup"><span data-stu-id="c3662-3617">The default value is <see cref="F:System.Windows.Visibility.Visible" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3662-3618">Das Festlegen dieser Eigenschaft wirkt sich auf den Wert von aus <xref:System.Windows.UIElement.IsVisible%2A> , der wiederum das Ereignis hervorrufen kann <xref:System.Windows.UIElement.IsVisibleChanged> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3618">Setting this property affects the value of <xref:System.Windows.UIElement.IsVisible%2A>, which in turn may raise the <xref:System.Windows.UIElement.IsVisibleChanged> event.</span></span> <span data-ttu-id="c3662-3619">Hat jedoch <xref:System.Windows.UIElement.IsVisible%2A> andere Faktoren, die dies beeinflussen, z. a. die Sichtbarkeitseinstellungen von übergeordneten Elementen, die Sie enthalten.</span><span class="sxs-lookup"><span data-stu-id="c3662-3619">However, <xref:System.Windows.UIElement.IsVisible%2A> has other factors that influence it, for instance the visibility settings of parents that contain it.</span></span>  
  
 <span data-ttu-id="c3662-3620">Elemente, bei denen <xref:System.Windows.UIElement.Visibility%2A> nicht an <xref:System.Windows.Visibility.Visible> Eingabe Ereignissen (oder Befehlen) beteiligt ist, beeinflussen weder das Measure noch das Anordnen des Layouts, befinden sich nicht in einer Tabulator Sequenz und werden bei Treffer Tests nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="c3662-3620">Elements where <xref:System.Windows.UIElement.Visibility%2A> is not <xref:System.Windows.Visibility.Visible> do not participate in input events (or commands), do not influence either the Measure or Arrange passes of layout, are not in a tab sequence, and will not be reported in hit testing.</span></span>  
  
 <span data-ttu-id="c3662-3621">Wenn Sie von <xref:System.Windows.Window> oder von den abgeleiteten Klassen geerbt werden, wird <xref:System.Windows.Window> der Standardwert dieser Eigenschaft neu definiert als <xref:System.Windows.Visibility.Collapsed> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3621">When inherited by <xref:System.Windows.Window> or its derived classes, <xref:System.Windows.Window> redefines the default value of this property to be <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="c3662-3622">Dies hat den Effekt, dass der Mess Durchlauf des Layouts bei einem anfänglich erstellten nicht ausgeführt <xref:System.Windows.Window> wird, und <xref:System.Windows.UIElement.RenderSize%2A> gibt (0,0) zurück.</span><span class="sxs-lookup"><span data-stu-id="c3662-3622">This has the effect of not running the Measure pass of layout on an initially created <xref:System.Windows.Window>, and <xref:System.Windows.UIElement.RenderSize%2A> returns (0,0).</span></span> <span data-ttu-id="c3662-3623">Ausführliche Informationen finden Sie unter <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="c3662-3623">For details, see <xref:System.Windows.Window>.</span></span> <span data-ttu-id="c3662-3624"><xref:System.Windows.Controls.Primitives.Popup> definiert den Standardwert auch neu <xref:System.Windows.Visibility.Collapsed> , wobei das resultierende Verhalten für <xref:System.Windows.Controls.Primitives.Popup> und seine abgeleiteten Klassen ähnlich ist.</span><span class="sxs-lookup"><span data-stu-id="c3662-3624"><xref:System.Windows.Controls.Primitives.Popup> also redefines the default value to be <xref:System.Windows.Visibility.Collapsed>, with similar resulting behavior for <xref:System.Windows.Controls.Primitives.Popup> and its derived classes.</span></span>  
  
<a name="dependencyPropertyInfo_Visibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c3662-3625">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c3662-3625">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c3662-3626">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c3662-3626">Identifier field</span></span>|<xref:System.Windows.UIElement.VisibilityProperty>|  
|<span data-ttu-id="c3662-3627">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c3662-3627">Metadata properties set to `true`</span></span>|<span data-ttu-id="c3662-3628">Keiner</span><span class="sxs-lookup"><span data-stu-id="c3662-3628">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c3662-3629">Im folgenden Beispiel wird ein Handler implementiert, der auf zwei verschiedene benannte Schaltflächen verweist, die in der Benutzeroberfläche als gegenseitig ausschließliches paar gedacht sind.</span><span class="sxs-lookup"><span data-stu-id="c3662-3629">The following example implements a handler that references two different named buttons that are intended to be a mutually exclusive pair in the user interface.</span></span> <span data-ttu-id="c3662-3630">Vor der Ausführung der eigentlichen Programmlogik, die der Schaltfläche zugeordnet ist, wird die Schaltfläche selbst auf festgelegt <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType> , und die andere Schaltfläche im Paar wird auf festgelegt <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="c3662-3630">Prior to running the actual program logic associated with the button, the button itself is set to be <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>, and the other button in the pair is set to <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[MediaElement_snip#UIElementVisibility](~/samples/snippets/csharp/VS_Snippets_Wpf/MediaElement_snip/CSharp/PlaybackExample.cs#uielementvisibility)]
 [!code-vb[MediaElement_snip#UIElementVisibility](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MediaElement_snip/VB/PlaybackExample.vb#uielementvisibility)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsVisible" />
        <altmember cref="T:System.Windows.Visibility" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.VisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.VisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3662-3631">Bezeichnet die <see cref="P:System.Windows.UIElement.Visibility" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c3662-3631">Identifies the <see cref="P:System.Windows.UIElement.Visibility" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
