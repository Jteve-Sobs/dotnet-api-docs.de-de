<Type Name="DependencyPropertyHelper" FullName="System.Windows.DependencyPropertyHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="991865ade837b92661fd5f42757182b3de9f77a8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69445017" /></Metadata><TypeSignature Language="C#" Value="public static class DependencyPropertyHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DependencyPropertyHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyPropertyHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type DependencyPropertyHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine einzelne Hilfsmethode (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />) bereit, die Informationen über die Quelle des Eigenschaftensystems für den effektiven Wert einer Abhängigkeitseigenschaft liefert.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] -Eigenschaften System ist recht komplex und basiert auf der Rationalisierung der Werte, die potenziell aus einer Vielzahl von Eingaben stammen, basierend auf einer festgelegten Prioritäts Bestimmung. Da diese Quellen potenziell aus Lauf Zeit Code, aus kompiliertem Markup oder sogar aus Lauf Zeit Benutzereinstellungen stammen, kann es hilfreich sein, genau zu wissen, welcher Teilnehmer im Wert System der Abhängigkeits Eigenschaft den Wert festgelegt hat, den Sie beim Aufrufen <xref:System.Windows.DependencyObject.GetValue%2A>vonerhaltenhaben.zur Laufzeit für diese Eigenschaft. Wenn der Wert aus einer anderen Quelle stammt, als Sie beabsichtigt haben, müssen Sie möglicherweise einen Aspekt der Anwendung anpassen. Die Wert Quelle kann ein Stil, ein Design, ein lokaler Wert, eine Animation, eine Bindung oder ein Lauf zeitbasierter Wert sein, z. b. Systemeinstellungen durch Designs oder Systemressourcen. Weitere Informationen finden Sie unter [Priorität von Abhängigkeitseigenschaftswerten](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).  
  
 Ein weiterer Mechanismus, der über die-Eigenschaft im allgemeinen und nicht über eine bestimmte Instanz der-Eigenschaft eines Objekts berichtet, sind die Eigenschafts Metadaten. Die Eigenschaften Metadaten können durch Aufrufen <xref:System.Windows.DependencyProperty.GetMetadata%2A> von und untersuchen der zurückgegebenen (oder einer von mehreren möglichen abgeleiteten Klassen, in die die zurückgegebenen Eigenschafts Metadaten einstellbar sind) versetzt <xref:System.Windows.PropertyMetadata> werden.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetValueSource">
      <MemberSignature Language="C#" Value="public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.ValueSource GetValueSource(class System.Windows.DependencyObject dependencyObject, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::ValueSource GetValueSource(System::Windows::DependencyObject ^ dependencyObject, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member GetValueSource : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.ValueSource" Usage="System.Windows.DependencyPropertyHelper.GetValueSource (dependencyObject, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ValueSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Das Element, das die <paramref name="dependencyProperty" /> enthält, zu der Informationen geliefert werden sollen.</param>
        <param name="dependencyProperty">Der Bezeichner für die Abhängigkeitseigenschaft, zu dem Informationen geliefert werden sollen.</param>
        <summary>Gibt eine Struktur zurück, die verschiedene Metadaten und Eigenschaftssystemmerkmale einer angegebenen Abhängigkeitseigenschaft eines bestimmten <see cref="T:System.Windows.DependencyObject" /> meldet.</summary>
        <returns>Eine <see cref="T:System.Windows.ValueSource" />-Struktur, die die bestimmten Informationen liefert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie sollten diese Methode in einem Kontext so aufzurufen, dass späte Teilnehmer bei der Festlegung von Eigenschafts Werten für eine Eigenschaft agieren können. Beispielsweise können Bindungen für eine Eigenschaft nicht aktiv sein, es sei denn, alle Teilnehmer Elemente in der Elementstruktur werden geladen, die asynchrone Bindung wird weitergegeben, und das Bindungs Quell Objekt ist verbunden. Ebenso sollten Ressourcen verfügbar sein, die alle erforderlichen Design Wörterbücher einschließen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.ValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsTemplatedValueDynamic">
      <MemberSignature Language="C#" Value="public static bool IsTemplatedValueDynamic (System.Windows.DependencyObject elementInTemplate, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTemplatedValueDynamic(class System.Windows.DependencyObject elementInTemplate, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTemplatedValueDynamic(System::Windows::DependencyObject ^ elementInTemplate, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member IsTemplatedValueDynamic : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; bool" Usage="System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic (elementInTemplate, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementInTemplate" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="elementInTemplate">Ein Element, dass zu einer Vorlageninstanz gehört.</param>
        <param name="dependencyProperty">Eine Abhängigkeitseigenschaft.</param>
        <summary>Gibt an, ob ein angegebenes Element zu einer Instanz einer Vorlage gehört, die einen Wert für die angegebene Eigenschaft definiert, die sich zur Laufzeit auf Grundlage von Änderungen an anderer Stelle ändern kann.</summary>
        <returns><see langword="true" />, wenn <paramref name="elementInTemplate" /> zu einer Instanz einer Vorlage gehört, die einen Wert für die angegebene Eigenschaft definiert, die sich zur Laufzeit auf Grundlage von Änderungen an anderer Stelle ändern kann; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Beispiele für Werte, die sich zur Laufzeit auf der Grundlage von Änderungen an anderer Stelle <xref:System.Windows.Data.Binding>ändern <xref:System.Windows.TemplateBindingExtension> können <xref:System.Windows.DynamicResourceExtension> , sind von-und-Objekten festgelegte Werte

Diese Methode stellt ausführlichere Informationen in Fällen bereit, in denen der <xref:System.Windows.ValueSource.BaseValueSource?displayProperty=nameWithType> Wert der <xref:System.Windows.BaseValueSource.ParentTemplate?displayProperty=nameWithType>-Eigenschaft ist.
Die Informationen dienen hauptsächlich der Verwendung von Diagnosetools.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
