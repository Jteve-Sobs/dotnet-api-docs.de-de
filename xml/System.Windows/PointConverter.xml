<Type Name="PointConverter" FullName="System.Windows.PointConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e08d9c9c54390f8befa05c208b3eefcfb7dec73a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PointConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PointConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PointConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PointConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PointConverter sealed : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b93c1-101">Konvertiert Instanzen anderer Typen in ein bzw. aus einem <see cref="T:System.Windows.Point" />-Objekt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b93c1-101">Converts instances of other types to and from a <see cref="T:System.Windows.Point" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b93c1-102">Im folgenden Codebeispiel wird mit einem <xref:System.Windows.PointConverter> zum Konvertieren einer Zeichenfolge in eine <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="b93c1-102">The following code example uses a <xref:System.Windows.PointConverter> to convert a string into a <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointConverterExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointconverterexample_csharp)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Point" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PointConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PointConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PointConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b93c1-103">Initialisiert eine neue Instanz der <see cref="T:System.Windows.PointConverter" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-103">Initializes a new instance of the <see cref="T:System.Windows.PointConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b93c1-104">Beschreibt die Kontextinformationen eines Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-104">Describes the context information of a type.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="b93c1-105">Der Typ der Quelle, die f√ºr die Konvertierung ausgewertet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-105">The type of the source that is being evaluated for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b93c1-106">Bestimmt, ob ein Objekt von einem angegebenen Typ in eine Instanz einer <see cref="T:System.Windows.Point" /> konvertiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-106">Determines whether an object can be converted from a given type to an instance of a <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b93c1-107">
            <see langword="true" />, wenn der Typ in eine <see cref="T:System.Windows.Point" /> konvertiert werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-107">
              <see langword="true" /> if the type can be converted to a <see cref="T:System.Windows.Point" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b93c1-108">Beschreibt die Kontextinformationen eines Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-108">Describes the context information of a type.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="b93c1-109">Der Typ, in den die auszuwertende <see cref="T:System.Windows.Point" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-109">The desired type this <see cref="T:System.Windows.Point" /> is being evaluated for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b93c1-110">Bestimmt, ob eine Instanz einer <see cref="T:System.Windows.Point" /> in einen anderen Typ konvertiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-110">Determines whether an instance of a <see cref="T:System.Windows.Point" /> can be converted to a different type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b93c1-111">
            <see langword="true" />, wenn die <see cref="T:System.Windows.Point" /> in <paramref name="destinationType" /> konvertiert werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-111">
              <see langword="true" /> if this <see cref="T:System.Windows.Point" /> can be converted to <paramref name="destinationType" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b93c1-112">Stellt erforderliche Kontextinformationen f√ºr die Konvertierung bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-112">Provides contextual information required for conversion.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="b93c1-113">Kulturinformationen, die w√§hrend der Konvertierung beachtet werden m√ºssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-113">Cultural information to respect during conversion.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b93c1-114">Das Objekt, das konvertiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-114">The object being converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b93c1-115">Versucht, das angegebene Objekt in eine <see cref="T:System.Windows.Point" /> zu konvertieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-115">Attempts to convert the specified object to a <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b93c1-116">Die durch Konvertieren von <paramref name="value" /> erzeugte <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-116">The <see cref="T:System.Windows.Point" /> created from converting <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c1-117">Um zu bestimmen, ob eine Konvertierung m√∂glich ist, ohne die Konvertierung ausf√ºhren, verwenden die <xref:System.Windows.PointConverter.CanConvertFrom%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="b93c1-117">To determine whether a conversion is possible without actually performing the conversion, use the <xref:System.Windows.PointConverter.CanConvertFrom%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b93c1-118">Wird ausgel√∂st, wenn das angegebene Objekt NULL oder von einem Typ ist, der nicht in eine <see cref="T:System.Windows.Point" /> konvertiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-118">Thrown if the specified object is NULL or is a type that cannot be converted to a <see cref="T:System.Windows.Point" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b93c1-119">Stellt erforderliche Kontextinformationen f√ºr die Konvertierung bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-119">Provides contextual information required for conversion.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="b93c1-120">Kulturinformationen, die w√§hrend der Konvertierung beachtet werden m√ºssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-120">Cultural information to respect during conversion.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b93c1-121">Die zu konvertierende <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-121">The <see cref="T:System.Windows.Point" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="b93c1-122">Der Typ, in den die <see cref="T:System.Windows.Point" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-122">The type to convert this <see cref="T:System.Windows.Point" /> to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b93c1-123">Versucht, eine <see cref="T:System.Windows.Point" /> in einen angegebenen Typ zu konvertieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-123">Attempts to convert a <see cref="T:System.Windows.Point" /> to a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b93c1-124">Das Objekt, das durch Konvertieren der <see cref="T:System.Windows.Point" /> erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-124">The object created from converting this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c1-125">Um zu bestimmen, ob eine Konvertierung m√∂glich ist, ohne die Konvertierung ausf√ºhren, verwenden die <xref:System.Windows.PointConverter.CanConvertTo%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="b93c1-125">To determine whether a conversion is possible without actually performing the conversion, use the <xref:System.Windows.PointConverter.CanConvertTo%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b93c1-126">Wird ausgel√∂st, wenn <paramref name="value" /> is <see langword="null" /> oder keine <see cref="T:System.Windows.Point" /> ist, oder wenn der <paramref name="destinationType" /> kein g√ºltiger Typ f√ºr die Konvertierung ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c1-126">Thrown if <paramref name="value" /> is <see langword="null" /> or is not a <see cref="T:System.Windows.Point" />, or if the <paramref name="destinationType" /> is not one of the valid types for conversion.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>