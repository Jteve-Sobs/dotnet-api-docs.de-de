<Type Name="Freezable" FullName="System.Windows.Freezable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12a1be02c542dfe0d4b2b31c8c4e0fbee60ca7d5" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37549380" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Freezable : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Freezable extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Freezable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Freezable&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Freezable abstract : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type Freezable = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6f523-101">Defines an object that has a modifiable state and a read-only (frozen) state.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f523-101">Defines an object that has a modifiable state and a read-only (frozen) state.</span>
      </span>
      <span data-ttu-id="6f523-102">Classes that derive from <see cref="T:System.Windows.Freezable" /> provide detailed change notification, can be made immutable, and can clone themselves.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f523-102">Classes that derive from <see cref="T:System.Windows.Freezable" /> provide detailed change notification, can be made immutable, and can clone themselves.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-103">Die <xref:System.Windows.Freezable> Klasse bietet spezielle Features, die helfen können die Leistung der Anwendung verbessert, wenn Sie Objekte verwenden, die aufwendig zu ändern oder zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="6f523-103">The <xref:System.Windows.Freezable> class provides special features that can help improve application performance when using objects that are expensive to modify or copy.</span></span> <span data-ttu-id="6f523-104">Beispiele für <xref:System.Windows.Freezable> umfassen folgende Objekte:</span><span class="sxs-lookup"><span data-stu-id="6f523-104">Examples of <xref:System.Windows.Freezable> objects include the following:</span></span>  
  
-   <xref:System.Windows.Media.Brush>  
  
-   <xref:System.Windows.Media.Pen>  
  
-   <xref:System.Windows.Media.Geometry>  
  
-   <xref:System.Windows.Media.Transform>  
  
-   <xref:System.Windows.Media.Animation.AnimationTimeline>  
  
## <a name="deriving-from-freezable"></a><span data-ttu-id="6f523-105">Ableiten von Freezable-Objekts</span><span class="sxs-lookup"><span data-stu-id="6f523-105">Deriving From Freezable</span></span>  
 <span data-ttu-id="6f523-106">Eine abgeleitete Klasse <xref:System.Windows.Freezable> erhält die folgenden Features:</span><span class="sxs-lookup"><span data-stu-id="6f523-106">A class that derives from <xref:System.Windows.Freezable> gains the following features:</span></span>  
  
-   <span data-ttu-id="6f523-107">Besondere Zustände: einen schreibgeschützten (fixierten) Zustand und einen beschreibbaren Status.</span><span class="sxs-lookup"><span data-stu-id="6f523-107">Special states: a read-only (frozen) state and a writable state.</span></span>  
  
-   <span data-ttu-id="6f523-108">Threadsicherheit: ein fixiertes <xref:System.Windows.Freezable> Objekt über Threads freigegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="6f523-108">Thread safety: a frozen <xref:System.Windows.Freezable> object can be shared across threads.</span></span>  
  
-   <span data-ttu-id="6f523-109">Detaillierte änderungsbenachrichtigung: im Gegensatz zu anderen <xref:System.Windows.DependencyObject> Objekte, eine <xref:System.Windows.Freezable> Objekt bietet änderungsbenachrichtigungen aus, wenn untergeordnete Eigenschaftswerte sofort geändert.</span><span class="sxs-lookup"><span data-stu-id="6f523-109">Detailed change notification: Unlike other <xref:System.Windows.DependencyObject> objects, a <xref:System.Windows.Freezable> object provides change notifications when sub-property values change.</span></span>  
  
-   <span data-ttu-id="6f523-110">Klonen einfach: die Freezable-Klasse verfügt über mehrere Methoden, die tiefe Klone erstellen bereits implementiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-110">Easy cloning: the Freezable class has already implemented several methods that produce deep clones.</span></span>  
  
 <span data-ttu-id="6f523-111">Informationen zum verwenden und erstellen eigene <xref:System.Windows.Freezable> Objekten finden Sie [Übersicht über Freezable-Objekte](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6f523-111">For information on using and creating your own <xref:System.Windows.Freezable> objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="6f523-112">Alle öffentlichen <see langword="static" /> Member dieses Typs sind threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f523-112">Any public <see langword="static" /> members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="6f523-113">Bei Instanzmembern ist die Threadsicherheit nicht gewährleistet.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f523-113">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="6f523-114">Wenn die <see cref="P:System.Windows.Freezable.IsFrozen" /> Eigenschaft <see langword="false" />, <see cref="T:System.Windows.Freezable" /> Objekt zugegriffen werden kann, nur aus dem Thread, in dem es erstellt wurde.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f523-114">When the <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" />, a <see cref="T:System.Windows.Freezable" /> object can be accessed only from the thread on which it was created.</span>
      </span>
      <span data-ttu-id="6f523-115">Es wird versucht, die Zugriffsberechtigung von einem anderen Thread ausgelöst ein <see cref="T:System.InvalidOperationException" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f523-115">Attempting to access it from another thread throws an <see cref="T:System.InvalidOperationException" />.</span>
      </span>
      <span data-ttu-id="6f523-116">Die <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> und <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> Methoden bieten Unterstützung für das marshalling an den richtigen Thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f523-116">The <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> and <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> methods provide support for marshalling to the correct thread.</span>
      </span>
      <span data-ttu-id="6f523-117">Wenn ihre <see cref="P:System.Windows.Freezable.IsFrozen" /> Eigenschaft <see langword="true" />, <see cref="T:System.Windows.Freezable" /> Objekte sind Freethread-.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f523-117">When their <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, <see cref="T:System.Windows.Freezable" /> objects are free-threaded.</span>
      </span>
      <span data-ttu-id="6f523-118">Weitere Informationen finden Sie unter [Freezable-Objekte Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f523-118">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Freezable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Freezable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f523-119">Initializes a new instance of a <see cref="T:System.Windows.Freezable" /> derived class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-119">Initializes a new instance of a <see cref="T:System.Windows.Freezable" /> derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-120">Dies ist der Konstruktor für die geschützten Zugriff einer abstrakten Klasse.</span><span class="sxs-lookup"><span data-stu-id="6f523-120">This is the protected-accessibility constructor of an abstract class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFreeze">
      <MemberSignature Language="C#" Value="public bool CanFreeze { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFreeze" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Freezable.CanFreeze" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanFreeze As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanFreeze { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFreeze : bool" Usage="System.Windows.Freezable.CanFreeze" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f523-121">Gets a value that indicates whether the object can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-121">Gets a value that indicates whether the object can be made unmodifiable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6f523-122">
            <see langword="true" />, wenn das aktuelle Objekt als nicht änderbar festgelegt werden kann oder bereits nicht änderbar ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-122">
              <see langword="true" /> if the current object can be made unmodifiable or is already unmodifiable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-123">
            <para>Diese methodenimplementierung verwendet die <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> -Methode mit <paramref name="isChecking" /> festgelegt <see langword="true" /> um zu bestimmen, ob eine <see cref="T:System.Windows.Freezable" /> änderbar festgelegt werden können. So ändern Sie die Methode, diese Eigenschaft verhält sich in einer abgeleiteten Klasse, außer Kraft setzen der <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-123">
              <para>This method implementation uses the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method with <paramref name="isChecking" /> set to <see langword="true" /> to determine whether a <see cref="T:System.Windows.Freezable" /> can be made unmodifiable. To modify the way this property behaves in a derived class, override the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Changed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Freezable.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Changed;" />
      <MemberSignature Language="F#" Value="member this.Changed : EventHandler " Usage="member this.Changed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f523-124">Occurs when the <see cref="T:System.Windows.Freezable" /> or an object it contains is modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-124">Occurs when the <see cref="T:System.Windows.Freezable" /> or an object it contains is modified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-125">Wenn Sie versuchen, hinzufügen oder Entfernen von Ereignishandlern, wenn das aktuelle Objekt nicht geändert werden kann (wenn die <xref:System.Windows.Freezable.IsFrozen%2A> Eigenschaft `true`), wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="6f523-125">If you attempt to add or remove event handlers when the current object is not modifiable (when the <xref:System.Windows.Freezable.IsFrozen%2A> property is `true`), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Freezable" Usage="freezable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f523-126">Creates a modifiable clone of the <see cref="T:System.Windows.Freezable" />, making deep copies of the object's values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-126">Creates a modifiable clone of the <see cref="T:System.Windows.Freezable" />, making deep copies of the object's values.</span>
          </span>
          <span data-ttu-id="6f523-127">When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-127">When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f523-128">A modifiable clone of the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-128">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="6f523-129">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-129">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-130">Die <xref:System.Windows.Freezable.Clone%2A> und <xref:System.Windows.Freezable.CloneCurrentValue%2A> Methoden erstellen, änderbare Klone von fixierten <xref:System.Windows.Freezable> Objekte (Methoden auch Klonen <xref:System.Windows.Freezable> Objekte, die nicht eingefroren sind).</span><span class="sxs-lookup"><span data-stu-id="6f523-130">The <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods produce modifiable clones of frozen <xref:System.Windows.Freezable> objects (the methods also clone <xref:System.Windows.Freezable> objects that are not frozen).</span></span> <span data-ttu-id="6f523-131">Der Klon ist im Grunde eine tiefe Kopie des aktuellen Objekts.</span><span class="sxs-lookup"><span data-stu-id="6f523-131">The clone is effectively a deep copy of the current object.</span></span>  
  
 <span data-ttu-id="6f523-132">In der folgende Tabelle werden die Unterschiede zwischen der <xref:System.Windows.Freezable.Clone%2A> und <xref:System.Windows.Freezable.CloneCurrentValue%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="6f523-132">The following table summarizes the differences between the <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods.</span></span>  
  
|<span data-ttu-id="6f523-133">Aktion</span><span class="sxs-lookup"><span data-stu-id="6f523-133">Action</span></span>|<span data-ttu-id="6f523-134">Verhalten der Klon-Methode</span><span class="sxs-lookup"><span data-stu-id="6f523-134">Clone method behavior</span></span>|<span data-ttu-id="6f523-135">Verhalten der CloneCurrentValue-Methode</span><span class="sxs-lookup"><span data-stu-id="6f523-135">CloneCurrentValue method behavior</span></span>|  
|------------|---------------------------|---------------------------------------|  
|<span data-ttu-id="6f523-136">Kopieren einer Abhängigkeitseigenschaft, die einen Ausdruck verfügt.</span><span class="sxs-lookup"><span data-stu-id="6f523-136">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="6f523-137">Der Ausdruck wird kopiert, aber möglicherweise nicht mehr aufgelöst.</span><span class="sxs-lookup"><span data-stu-id="6f523-137">The expression is copied, but might no longer resolve.</span></span> <span data-ttu-id="6f523-138">Weitere Informationen finden Sie unter der [Übersicht über Freezable-Objekte](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6f523-138">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>|<span data-ttu-id="6f523-139">Der aktuelle Wert des Ausdrucks wird jedoch nicht den Ausdruck selbst kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-139">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="6f523-140">Kopieren einer animierten Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="6f523-140">Copying an animated dependency property</span></span>|<span data-ttu-id="6f523-141">Kopiert den Wert der Eigenschaft Basis (nicht animiert).</span><span class="sxs-lookup"><span data-stu-id="6f523-141">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="6f523-142">Animationen werden nicht kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-142">Animations are not copied.</span></span>|<span data-ttu-id="6f523-143">Der Eigenschaft aktuelle animierte Wert wird kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-143">The property's current animated value is copied.</span></span> <span data-ttu-id="6f523-144">Animationen werden nicht kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-144">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="6f523-145">Beachten Sie, dass nicht festgelegte Eigenschaften nicht kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="6f523-145">Note that unset properties are not copied.</span></span> <span data-ttu-id="6f523-146">Wenn eine nicht festgelegte Eigenschaft einen Standardwert verfügt, die ein fixiertes <xref:System.Windows.Freezable>, bleibt dieser Eigenschaftswert in den ansonsten änderbaren Klon fixiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-146">If an unset property has a default value that is a frozen <xref:System.Windows.Freezable>, that property value remains frozen in the otherwise modifiable clone.</span></span>  
  
## <a name="move-a-freezable-between-threads"></a><span data-ttu-id="6f523-147">Verschieben von Freezable zwischen Threads</span><span class="sxs-lookup"><span data-stu-id="6f523-147">Move a Freezable Between Threads</span></span>  
 <span data-ttu-id="6f523-148">Diese Methode kann für das Verschieben von nützlich sein, eine <xref:System.Windows.Freezable> zwischen Threads.</span><span class="sxs-lookup"><span data-stu-id="6f523-148">This method can be useful for moving a <xref:System.Windows.Freezable> between threads.</span></span> <span data-ttu-id="6f523-149">Stellen Sie zunächst die <xref:System.Windows.Freezable> als nicht änderbar fest, durch den Aufruf der <xref:System.Windows.Freezable.Freeze%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="6f523-149">First, make the <xref:System.Windows.Freezable> unmodifiable by calling its <xref:System.Windows.Freezable.Freeze%2A> method.</span></span> <span data-ttu-id="6f523-150">Nun einem anderen Thread zugreifen, kann die <xref:System.Windows.Freezable> und einen lokalen <xref:System.Windows.Freezable.Clone%2A> , die darauf zugreifen kann.</span><span class="sxs-lookup"><span data-stu-id="6f523-150">Now another thread can access the <xref:System.Windows.Freezable> and make a local <xref:System.Windows.Freezable.Clone%2A> that it can access.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-151">
            <para>Diese Methode verwendet <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> den Klon. Um das Verhalten dieser Methode in einer abgeleiteten Klasse zu ändern, überschreiben die <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-151">
              <para>This method uses <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> to produce the clone. To modify the behavior of this method in a derived class, override the <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected virtual void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="freezable.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="6f523-152">The object to clone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-152">The object to clone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f523-153">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-153">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-154">Diese Methode wird aufgerufen, indem die <xref:System.Windows.Freezable.Clone%2A> Methode und sollte nicht aufgerufen werden direkt aus Ihrem Code, außer wenn beim Überschreiben dieser Methode die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6f523-154">This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="6f523-155">Rufen Sie zum Erstellen einer änderbaren Kopie des aktuellen Objekts <xref:System.Windows.Freezable.Clone%2A> müssen diese Methode nicht direkt aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6f523-155">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-156">
            <para>Bei der Ableitung von <see cref="T:System.Windows.Freezable" />, müssen Sie möglicherweise diese Methode überschreiben. Gründe für die außer Kraft setzen, umfassen Folgendes:-die abgeleitete Klasse verfügt über Daten, die nicht über Abhängigkeitseigenschaften verfügbar gemacht werden.  -Die abgeleitete Klasse muss eine zusätzliche Initialisierung-Aufgaben, die nicht erreicht werden kann, indem Sie einfach überschreiben ausführen <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Dies gilt z. B. wenn die abgeleitete Klasse implementiert <see cref="T:System.ComponentModel.ISupportInitialize" />.  Klassen, die alle Daten in Abhängigkeitseigenschaften speichern und keine zusätzlichen Initialisierungsaufgaben ausführen, müssen nicht außer Kraft setzen <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />.  Es ist wichtig, dass alle Implementierungen dieser Methode die basisimplementierung aufrufen. Implementierungen sollten nur Aufgaben ausführen, die von der Standardimplementierung nicht ausgeführt wird. Die Standardimplementierung erstellt tiefe Kopien alle beschreibbaren, lokal festgelegte Eigenschaften, einschließlich interner Ausdrücke.  Wenn das Objekt von datengebundenen Abhängigkeitseigenschaften verfügt, wird die Ausdrücke werden kopiert, jedoch möglicherweise nicht mehr aufgelöst. Weitere Informationen zum Klonen von datengebundenen Objekten finden Sie unter [Freezable-Objekte Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). Wenn das Objekt über animierte Abhängigkeitseigenschaften verfügt, wird der Basiswert (nicht animiert) diese Eigenschaften kopiert. Animationen werden nicht kopiert.  Beachten Sie, dass nicht festgelegte Eigenschaften nicht kopiert werden oder sind schreibgeschützte Eigenschaften. Wenn diese Eigenschaft einen Standardwert verfügt, die ein fixiertes <see cref="T:System.Windows.Freezable" />, bleibt dieser Eigenschaftswert in den ansonsten änderbaren Klon fixiert.  Die folgende Liste enthält das erwartete Verhalten für diese Methode:-die erzeugten Kopie enthält Kopien aller <see cref="T:System.Windows.Freezable" /> untergeordnete Objekte.  -Die Festlegung und Read-only-Eigenschaften werden nicht kopiert.  -Ausdrücke werden kopiert.  – None dieser untergeordnete Objekte werden bei der Erstellung fixiert.  – Die Kopie selbst ist nicht fixiert.  -Animationen werden nicht kopiert.  -Nur Basis Eigenschaftswerte werden kopiert, nicht den aktuellen animierten Werte.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-156">
              <para>If you derive from <see cref="T:System.Windows.Freezable" />, you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation makes deep copies of all writable, locally set properties, including internal expressions.  If the object has data-bound dependency properties, the expressions are copied but might no longer resolve. For more information about cloning data-bound objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). If the object has animated dependency properties, the base (non-animated) value of those properties is copied. Animations are not copied.  Note that unset properties are not copied, nor are read-only properties. If such a property has a default value that is a frozen <see cref="T:System.Windows.Freezable" />, that property value remains frozen in the otherwise modifiable clone.  The following list summarizes the expected behavior for this method:  -   The copy produced contains copies of all <see cref="T:System.Windows.Freezable" /> sub-objects.  -   Unset and read-only properties are not copied.  -   Expressions are copied.  -   None of these sub-objects are frozen on creation.  -   The copy itself is not frozen.  -   Animations are not copied.  -   Only property base values are copied, not current animated values.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Freezable" Usage="freezable.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f523-157">Creates a modifiable clone (deep copy) of the <see cref="T:System.Windows.Freezable" /> using its current values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-157">Creates a modifiable clone (deep copy) of the <see cref="T:System.Windows.Freezable" /> using its current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f523-158">A modifiable clone of the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-158">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="6f523-159">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-159">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-160">Die <xref:System.Windows.Freezable.Clone%2A> und <xref:System.Windows.Freezable.CloneCurrentValue%2A> Methoden erstellen, änderbare Klone von fixierten <xref:System.Windows.Freezable> Objekte (Methoden auch Klonen <xref:System.Windows.Freezable> Objekte, die nicht eingefroren sind).</span><span class="sxs-lookup"><span data-stu-id="6f523-160">The <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods produce modifiable clones of frozen <xref:System.Windows.Freezable> objects (the methods also clone <xref:System.Windows.Freezable> objects that are not frozen).</span></span> <span data-ttu-id="6f523-161">Der Klon ist im Grunde eine tiefe Kopie des aktuellen Objekts.</span><span class="sxs-lookup"><span data-stu-id="6f523-161">The clone is effectively a deep copy of the current object.</span></span>  
  
 <span data-ttu-id="6f523-162">In der folgende Tabelle werden die Unterschiede zwischen der <xref:System.Windows.Freezable.Clone%2A> und <xref:System.Windows.Freezable.CloneCurrentValue%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="6f523-162">The following table summarizes the differences between the <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods.</span></span>  
  
|<span data-ttu-id="6f523-163">Aktion</span><span class="sxs-lookup"><span data-stu-id="6f523-163">Action</span></span>|<span data-ttu-id="6f523-164">Verhalten der Klon-Methode</span><span class="sxs-lookup"><span data-stu-id="6f523-164">Clone method behavior</span></span>|<span data-ttu-id="6f523-165">Verhalten der CloneCurrentValue-Methode</span><span class="sxs-lookup"><span data-stu-id="6f523-165">CloneCurrentValue method behavior</span></span>|  
|------------|---------------------------|---------------------------------------|  
|<span data-ttu-id="6f523-166">Kopieren einer Abhängigkeitseigenschaft, die einen Ausdruck verfügt.</span><span class="sxs-lookup"><span data-stu-id="6f523-166">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="6f523-167">Der Ausdruck wird kopiert, aber möglicherweise nicht mehr aufgelöst.</span><span class="sxs-lookup"><span data-stu-id="6f523-167">The expression is copied, but might no longer resolve.</span></span> <span data-ttu-id="6f523-168">Weitere Informationen finden Sie unter der [Übersicht über Freezable-Objekte](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6f523-168">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>|<span data-ttu-id="6f523-169">Der aktuelle Wert des Ausdrucks wird jedoch nicht den Ausdruck selbst kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-169">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="6f523-170">Kopieren einer animierten Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="6f523-170">Copying an animated dependency property</span></span>|<span data-ttu-id="6f523-171">Kopiert den Wert der Eigenschaft Basis (nicht animiert).</span><span class="sxs-lookup"><span data-stu-id="6f523-171">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="6f523-172">Animationen werden nicht kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-172">Animations are not copied.</span></span>|<span data-ttu-id="6f523-173">Der Eigenschaft aktuelle animierte Wert wird kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-173">The property's current animated value is copied.</span></span> <span data-ttu-id="6f523-174">Animationen werden nicht kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-174">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="6f523-175">Beachten Sie, dass nicht festgelegte Eigenschaften nicht kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="6f523-175">Note that unset properties are not copied.</span></span> <span data-ttu-id="6f523-176">Wenn eine nicht festgelegte Eigenschaft einen Standardwert verfügt, die ein fixiertes <xref:System.Windows.Freezable>, bleibt dieser Eigenschaftswert in den ansonsten änderbaren Klon fixiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-176">If an unset property has a default value that is a frozen <xref:System.Windows.Freezable>, that property value remains frozen in the otherwise modifiable clone.</span></span>  
  
## <a name="move-a-freezable-between-threads"></a><span data-ttu-id="6f523-177">Verschieben von Freezable zwischen Threads</span><span class="sxs-lookup"><span data-stu-id="6f523-177">Move a Freezable Between Threads</span></span>  
 <span data-ttu-id="6f523-178">Diese Methode kann für das Verschieben von nützlich sein, eine <xref:System.Windows.Freezable> zwischen Threads.</span><span class="sxs-lookup"><span data-stu-id="6f523-178">This method can be useful for moving a <xref:System.Windows.Freezable> between threads.</span></span> <span data-ttu-id="6f523-179">Stellen Sie zunächst die <xref:System.Windows.Freezable> als nicht änderbar fest, mit dessen <xref:System.Windows.Freezable.Freeze%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="6f523-179">First, make the <xref:System.Windows.Freezable> unmodifiable by using its <xref:System.Windows.Freezable.Freeze%2A> method.</span></span> <span data-ttu-id="6f523-180">Nun einem anderen Thread zugreifen, kann die <xref:System.Windows.Freezable> und einen lokalen Klon, die darauf zugreifen kann.</span><span class="sxs-lookup"><span data-stu-id="6f523-180">Now another thread can access the <xref:System.Windows.Freezable> and make a local clone that it can access.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-181">
            <para>Diese Methode verwendet die <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> Methode zum Erstellen des Klons; <see cref="T:System.Windows.Freezable" /> Implementierer, die überschreiben <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> müssen sicherstellen, dass die Kopie bei der Erstellung nicht fixiert ist.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-181">
              <para>This method uses the <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> method to produce the clone; <see cref="T:System.Windows.Freezable" /> implementers who override <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> must ensure that the copy is not frozen on creation.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected virtual void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="freezable.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="6f523-182">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-182">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f523-183">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-183">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-184">Diese Methode wird aufgerufen, indem die <xref:System.Windows.Freezable.CloneCurrentValue%2A> Methode und sollte nicht aufgerufen werden direkt aus Ihrem Code, außer wenn beim Überschreiben dieser Methode die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6f523-184">This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="6f523-185">Rufen Sie zum Erstellen einer änderbaren Kopie des aktuellen Objekts <xref:System.Windows.Freezable.CloneCurrentValue%2A> müssen diese Methode nicht direkt aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6f523-185">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-186">
            <para>Bei der Ableitung von <see cref="T:System.Windows.Freezable" />, müssen Sie möglicherweise diese Methode überschreiben. Gründe für die außer Kraft setzen, umfassen Folgendes:-die abgeleitete Klasse verfügt über Daten, die nicht über Abhängigkeitseigenschaften verfügbar gemacht werden.  -Die abgeleitete Klasse muss eine zusätzliche Initialisierung-Aufgaben, die nicht erreicht werden kann, indem Sie einfach überschreiben ausführen <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Dies gilt z. B. wenn die abgeleitete Klasse implementiert <see cref="T:System.ComponentModel.ISupportInitialize" />.  Klassen, die alle Daten in Abhängigkeitseigenschaften speichern und keine zusätzlichen Initialisierungsaufgaben ausführen, müssen nicht außer Kraft setzen <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />.  Es ist wichtig, dass alle Implementierungen dieser Methode die basisimplementierung aufrufen. Implementierungen sollten nur Aufgaben ausführen, die von der Standardimplementierung nicht ausgeführt wird. Die Standardimplementierung erstellt tiefe Kopien alle beschreibbaren, lokal festgelegte Eigenschaften. Wenn das Objekt Abhängigkeitseigenschaften mit Ausdrücken (z. B. eine Datenbindung) enthält, wird der aktuelle Wert des Ausdrucks aber nicht den Ausdruck selbst kopiert.  Wenn das Objekt über animierte Abhängigkeitseigenschaften verfügt, wird der aktuelle animierte Wert dieser Eigenschaften wird kopiert, aber die Animationen sind nicht.  Beachten Sie, dass nicht festgelegte Eigenschaften nicht kopiert werden oder sind schreibgeschützte Eigenschaften. Wenn diese Eigenschaft einen Standardwert verfügt, die ein fixiertes <see cref="T:System.Windows.Freezable" />, bleibt dieser Eigenschaftswert in den ansonsten änderbaren Klon fixiert.  Die folgende Liste enthält das erwartete Verhalten für diese Methode.  – Die erstellt Kopie enthält Kopien aller <see cref="T:System.Windows.Freezable" /> untergeordnete Objekte.  -Die Festlegung und Read-only-Eigenschaften werden nicht kopiert.  – Wenn eine Eigenschaft animiert wird, wird der aktuelle Wert wird kopiert, aber die Animation selbst ist nicht.  – None dieser untergeordnete Objekte werden bei der Erstellung fixiert.  – Die Kopie selbst ist nicht fixiert.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-186">
              <para>If you derive from <see cref="T:System.Windows.Freezable" />, you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation makes deep copies of all writable, locally set properties. If the object contains dependency properties with expressions (such as a data binding), the current value of the expression is copied but not the expression itself.  If the object has animated dependency properties, the current animated value of those properties is copied, but the animations are not.  Note that unset properties are not copied, nor are read-only properties. If such a property has a default value that is a frozen <see cref="T:System.Windows.Freezable" />, that property value remains frozen in the otherwise modifiable clone.  The following list summarizes the expected behavior for this method.  -   The copy produced contains copies of all <see cref="T:System.Windows.Freezable" /> sub-objects.  -   Unset and read-only properties are not copied.  -   If a property is animated, its current value is copied, but the animation itself is not.  -   None of these sub-objects are frozen on creation.  -   The copy itself is not frozen.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected System.Windows.Freezable CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Freezable CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateInstance () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Freezable ^ CreateInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : unit -&gt; System.Windows.Freezable" Usage="freezable.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f523-187">Initializes a new instance of the <see cref="T:System.Windows.Freezable" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-187">Initializes a new instance of the <see cref="T:System.Windows.Freezable" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f523-188">The new instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-188">The new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-189">Dies ist eine geschützte Methode, und die eigentlichen objektspezifischen Implementierungen für das Verhalten hängt von der Implementierung der Außerkraftsetzung von werden die <xref:System.Windows.Freezable.CreateInstanceCore%2A> -Methode, die diese Methode intern ruft.</span><span class="sxs-lookup"><span data-stu-id="6f523-189">This is a protected method, and the actual object-specific implementations for the behavior are dependent on the override implementation of the <xref:System.Windows.Freezable.CreateInstanceCore%2A> method, which this method calls internally.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="freezable.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f523-190">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-190">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f523-191">The new instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-191">The new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-192">Rufen Sie diese Methode direkt (mit Ausnahme beim Aufrufen der Basis in einer Implementierung) nicht.</span><span class="sxs-lookup"><span data-stu-id="6f523-192">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="6f523-193">Diese Methode wird aufgerufen, intern von der <xref:System.Windows.Freezable.CreateInstance%2A> -Methode auf, wenn eine neue Instanz der der <xref:System.Windows.Freezable> erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="6f523-193">This method is called internally by the <xref:System.Windows.Freezable.CreateInstance%2A> method whenever a new instance of the <xref:System.Windows.Freezable> is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f523-194">Das folgende Beispiel zeigt eine typische Implementierung der <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="6f523-194">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-195">
            <para>Jede <see cref="T:System.Windows.Freezable" /> abgeleitete Klasse muss diese Methode implementieren. Eine typische Implementierung ist, einfach den Standardkonstruktor aufrufen und das Ergebnis zurückgeben.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-195">
              <para>Every <see cref="T:System.Windows.Freezable" /> derived class must implement this method. A typical implementation is to simply call the default constructor and return the result.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstance" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Freeze">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6f523-196">Makes a <see cref="T:System.Windows.Freezable" /> object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />, or tests whether a <see cref="T:System.Windows.Freezable" /> object can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-196">Makes a <see cref="T:System.Windows.Freezable" /> object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />, or tests whether a <see cref="T:System.Windows.Freezable" /> object can be made unmodifiable.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="public void Freeze ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Freeze() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Freeze" />
      <MemberSignature Language="VB.NET" Value="Public Sub Freeze ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Freeze();" />
      <MemberSignature Language="F#" Value="member this.Freeze : unit -&gt; unit" Usage="freezable.Freeze " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f523-197">Makes the current object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-197">Makes the current object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-198">Um die Möglichkeit zu vermeiden ein <xref:System.InvalidOperationException> überprüfen Sie beim Aufrufen dieser Methode die <xref:System.Windows.Freezable.CanFreeze%2A> Eigenschaft, um zu bestimmen, ob der <xref:System.Windows.Freezable> können änderbar festgelegt werden vor dem Aufrufen dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="6f523-198">To avoid the possibility of an <xref:System.InvalidOperationException> when calling this method, check the <xref:System.Windows.Freezable.CanFreeze%2A> property to determine whether the <xref:System.Windows.Freezable> can be made unmodifiable before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6f523-199">The <see cref="T:System.Windows.Freezable" /> cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-199">The <see cref="T:System.Windows.Freezable" /> cannot be made unmodifiable.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-200">
            <para>Diese Methode verwendet die <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> Methode zum Erstellen der <see cref="T:System.Windows.Freezable" /> als nicht änderbar fest. Um Einfrieren Verhalten ändern möchten, überschreiben die <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-200">
              <para>This method uses the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method to make the <see cref="T:System.Windows.Freezable" /> unmodifiable. To modify freezing behavior, override the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="protected internal static bool Freeze (System.Windows.Freezable freezable, bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig bool Freeze(class System.Windows.Freezable freezable, bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static bool Freeze(System::Windows::Freezable ^ freezable, bool isChecking);" />
      <MemberSignature Language="F#" Value="static member Freeze : System.Windows.Freezable * bool -&gt; bool" Usage="System.Windows.Freezable.Freeze (freezable, isChecking)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="freezable" Type="System.Windows.Freezable" />
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="freezable">
          <span data-ttu-id="6f523-201">The object to check or make unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-201">The object to check or make unmodifiable.</span>
          </span>
          <span data-ttu-id="6f523-202">If <c>isChecking</c> is <see langword="true" />, the object is checked to determine whether it can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-202">If <c>isChecking</c> is <see langword="true" />, the object is checked to determine whether it can be made unmodifiable.</span>
          </span>
          <span data-ttu-id="6f523-203">If <c>isChecking</c> is <see langword="false" />, the object is made unmodifiable, if possible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-203">If <c>isChecking</c> is <see langword="false" />, the object is made unmodifiable, if possible.</span>
          </span>
        </param>
        <param name="isChecking">
          <span data-ttu-id="6f523-204">
            <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-204">
              <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f523-205">If the <paramref name="isChecking" /> parameter is <see langword="true" />, this method indicates whether the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-205">If the <paramref name="isChecking" /> parameter is <see langword="true" />, this method indicates whether the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable.</span>
          </span>
          <span data-ttu-id="6f523-206">If the <paramref name="isChecking" /> parameter is <see langword="false" />, this method attempts to make the specified <see cref="T:System.Windows.Freezable" /> unmodifiable and indicates whether the operation succeeded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-206">If the <paramref name="isChecking" /> parameter is <see langword="false" />, this method attempts to make the specified <see cref="T:System.Windows.Freezable" /> unmodifiable and indicates whether the operation succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f523-207">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-207">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
          <span data-ttu-id="6f523-208">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-208">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-209">Diese Methode nicht aufrufen, es sei denn, beim Ableiten von <xref:System.Windows.Freezable> und überschreiben die <xref:System.Windows.Freezable.FreezeCore%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="6f523-209">Do not call this method unless you are deriving from <xref:System.Windows.Freezable> and overriding the <xref:System.Windows.Freezable.FreezeCore%2A> method.</span></span>  <span data-ttu-id="6f523-210">Diese Methode kann verwendet werden, der <xref:System.Windows.Freezable.FreezeCore%2A> Methode, um die Datenmember der Klasse zu fixieren, die selbst sind <xref:System.Windows.Freezable> Objekte.</span><span class="sxs-lookup"><span data-stu-id="6f523-210">This method may be used in the <xref:System.Windows.Freezable.FreezeCore%2A> method to freeze class data members that are themselves <xref:System.Windows.Freezable> objects.</span></span>  
  
 <span data-ttu-id="6f523-211">Es ist möglich, diese Methode erneut aufrufen, auf eine <xref:System.Windows.Freezable> -Objekt, das bereits fixiert ist (nicht änderbar).</span><span class="sxs-lookup"><span data-stu-id="6f523-211">It is alright to call this method again on a <xref:System.Windows.Freezable> object that is already frozen (unmodifiable).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6f523-212">When <paramref name="isChecking" /> is <see langword="false" />, the attempt to make <paramref name="freezable" /> unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-212">When <paramref name="isChecking" /> is <see langword="false" />, the attempt to make <paramref name="freezable" /> unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-213">
            <para>Diese Methode verwendet die <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> Methode zum Erstellen der <see cref="T:System.Windows.Freezable" /> als nicht änderbar fest. Um Einfrieren Verhalten ändern möchten, überschreiben die <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-213">
              <para>This method uses the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method to make the <see cref="T:System.Windows.Freezable" /> unmodifiable. To modify freezing behavior, override the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected virtual bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="abstract member FreezeCore : bool -&gt; bool&#xA;override this.FreezeCore : bool -&gt; bool" Usage="freezable.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <span data-ttu-id="6f523-214">
            <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-214">
              <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f523-215">Makes the <see cref="T:System.Windows.Freezable" /> object unmodifiable or tests whether it can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-215">Makes the <see cref="T:System.Windows.Freezable" /> object unmodifiable or tests whether it can be made unmodifiable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f523-216">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-216">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
          <span data-ttu-id="6f523-217">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-217">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-218">Rufen Sie diese Methode direkt (mit Ausnahme beim Aufrufen der Basis in einer Implementierung) nicht.</span><span class="sxs-lookup"><span data-stu-id="6f523-218">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="6f523-219">Diese Methode wird aufgerufen, intern von der <xref:System.Windows.Freezable.CanFreeze%2A> Eigenschaft (mit `isChecking` gleich `true`) und die <xref:System.Windows.Freezable.Freeze%2A> Methode (mit `isChecking` gleich `false`).</span><span class="sxs-lookup"><span data-stu-id="6f523-219">This method is called internally by the <xref:System.Windows.Freezable.CanFreeze%2A> property (with `isChecking` equal to `true`) and the <xref:System.Windows.Freezable.Freeze%2A> method (with `isChecking` equal to `false`).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-220">
            <para>
              <see cref="T:System.Windows.Freezable" /> Implementierungen müssen diese Methode überschreiben, wenn die Klasse Daten enthält, die nicht mit Abhängigkeitseigenschaften gespeichert.  Eine typische Implementierung Basis aufrufen würden, dann rufen Sie die statische <see cref="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" /> für alle <see cref="T:System.Windows.Freezable" /> typisierte Eigenschaften mit die Klasse zurückgeben, <see langword="true" /> nur, wenn alle Eigenschaften, die fixiert waren (oder, im Fall von angeben eingefroren konnte <see langword="true" /> für <paramref name="isChecking" />).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-220">
              <para>
                <see cref="T:System.Windows.Freezable" /> implementers must override this method when the class contains data that is not stored using dependency properties.  A typical implementation would call base, then call the static <see cref="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" /> method on all <see cref="T:System.Windows.Freezable" /> typed properties that the class contains, returning <see langword="true" /> only if all properties were frozen (or could have been frozen, in the case of specifying <see langword="true" /> for <paramref name="isChecking" />).</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.Freeze" />
        <altmember cref="P:System.Windows.Freezable.CanFreeze" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozen">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable GetAsFrozen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable GetAsFrozen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetAsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsFrozen () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ GetAsFrozen();" />
      <MemberSignature Language="F#" Value="member this.GetAsFrozen : unit -&gt; System.Windows.Freezable" Usage="freezable.GetAsFrozen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f523-221">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" />, using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-221">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" />, using base (non-animated) property values.</span>
          </span>
          <span data-ttu-id="6f523-222">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-222">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f523-223">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-223">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="6f523-224">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-224">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-225">Überprüfen Sie die <xref:System.Windows.Freezable.CanFreeze%2A> -Eigenschaft vor dem Aufrufen dieser Methode, um sicherzustellen, dass die <xref:System.Windows.Freezable> kann fixiert werden.</span><span class="sxs-lookup"><span data-stu-id="6f523-225">You should check the <xref:System.Windows.Freezable.CanFreeze%2A> property before calling this method to verify that the <xref:System.Windows.Freezable> can be frozen.</span></span> <span data-ttu-id="6f523-226">Mit dieser Methode ähnelt der beim Erstellen einer Kopie mithilfe der <xref:System.Windows.Freezable.Clone%2A> und dem anschließenden mit Fixieren der <xref:System.Windows.Freezable.Freeze%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="6f523-226">Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.Clone%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method.</span></span>  
  
 <span data-ttu-id="6f523-227">Die <xref:System.Windows.Freezable.GetAsFrozen%2A> und <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> Methoden können die kopieren-Leistung verbessern, da sie nicht Klonen <xref:System.Windows.Freezable> untergeordnete Objekte, die bereits eingefroren werden; sie nur kopieren Sie sie als Verweis.</span><span class="sxs-lookup"><span data-stu-id="6f523-227">The <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference.</span></span>  
  
 <span data-ttu-id="6f523-228">In der folgende Tabelle werden die Unterschiede zwischen der <xref:System.Windows.Freezable.GetAsFrozen%2A> und <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="6f523-228">The following table summarizes the differences between the <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods.</span></span>  
  
|<span data-ttu-id="6f523-229">Aktion</span><span class="sxs-lookup"><span data-stu-id="6f523-229">Action</span></span>|<span data-ttu-id="6f523-230">Verhalten der GetAsFrozen-Methode</span><span class="sxs-lookup"><span data-stu-id="6f523-230">GetAsFrozen method behavior</span></span>|<span data-ttu-id="6f523-231">Verhalten der GetCurrentValueAsFrozen-Methode</span><span class="sxs-lookup"><span data-stu-id="6f523-231">GetCurrentValueAsFrozen method behavior</span></span>|  
|------------|---------------------------------|---------------------------------------------|  
|<span data-ttu-id="6f523-232">Kopieren einer Abhängigkeitseigenschaft, die einen Ausdruck verfügt.</span><span class="sxs-lookup"><span data-stu-id="6f523-232">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="6f523-233">Löst die Methode eine <xref:System.InvalidOperationException> , da dies nicht möglich <xref:System.Windows.Freezable.Freeze%2A> die-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="6f523-233">The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.</span></span>|<span data-ttu-id="6f523-234">Der aktuelle Wert des Ausdrucks wird jedoch nicht den Ausdruck selbst kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-234">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="6f523-235">Kopieren einer animierten Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="6f523-235">Copying an animated dependency property</span></span>|<span data-ttu-id="6f523-236">Kopiert den Wert der Eigenschaft Basis (nicht animiert).</span><span class="sxs-lookup"><span data-stu-id="6f523-236">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="6f523-237">Animationen werden nicht kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-237">Animations are not copied.</span></span>|<span data-ttu-id="6f523-238">Der Eigenschaft aktuelle animierte Wert wird kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-238">The property's current animated value is copied.</span></span> <span data-ttu-id="6f523-239">Animationen werden nicht kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-239">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="6f523-240">Beachten Sie, dass nicht festgelegte Eigenschaften nicht kopiert werden oder sind schreibgeschützte Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="6f523-240">Note that unset properties are not copied, nor are read-only properties.</span></span>  
  
 <span data-ttu-id="6f523-241">Erstellen Sie eine Kopie der <xref:System.Windows.Freezable> , nicht fixiert ist, verwenden die <xref:System.Windows.Freezable.Clone%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="6f523-241">To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.Clone%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6f523-242">The <see cref="T:System.Windows.Freezable" /> cannot be frozen because it contains expressions or animated properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-242">The <see cref="T:System.Windows.Freezable" /> cannot be frozen because it contains expressions or animated properties.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-243">
            <para>Diese Methode verwendet die virtuelle <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" /> Methode, um den Klon zu erstellen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-243">
              <para>This method uses the virtual <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" /> method to produce the clone.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected virtual void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezable.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="6f523-244">The instance to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-244">The instance to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f523-245">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-245">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-246">Diese Methode wird aufgerufen, indem die <xref:System.Windows.Freezable.GetAsFrozen%2A> Methode und sollte nicht aufgerufen werden direkt aus Ihrem Code, außer wenn beim Überschreiben dieser Methode die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6f523-246">This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="6f523-247">Rufen Sie zum Erstellen einer fixierten Kopie des aktuellen Objekts <xref:System.Windows.Freezable.GetAsFrozen%2A> müssen diese Methode nicht direkt aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6f523-247">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-248">
            <para>Bei der Ableitung von <see cref="T:System.Windows.Freezable" /> müssen Sie möglicherweise diese Methode überschreiben. Gründe für die außer Kraft setzen, umfassen Folgendes:-die abgeleitete Klasse verfügt über Daten, die nicht über Abhängigkeitseigenschaften verfügbar gemacht werden.  -Die abgeleitete Klasse muss eine zusätzliche Initialisierung-Aufgaben, die nicht erreicht werden kann, indem Sie einfach überschreiben ausführen <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Dies gilt z. B. wenn die abgeleitete Klasse implementiert <see cref="T:System.ComponentModel.ISupportInitialize" />.  Klassen, die alle Daten in Abhängigkeitseigenschaften speichern und keine zusätzlichen Initialisierungsaufgaben ausführen, müssen nicht außer Kraft setzen <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.  Es ist wichtig, dass alle Implementierungen dieser Methode die basisimplementierung aufrufen. Implementierungen sollten nur Aufgaben ausführen, die von der Standardimplementierung nicht ausgeführt wird. Die Standardimplementierung erstellt tiefe Kopien jeder nicht fixierten Freezable-Objekte und alle anderen beschreibbaren flache Kopien, lokal darin enthaltenen Eigenschaften. Wenn das Objekt von datengebundenen Abhängigkeitseigenschaften verfügt, werden die Ausdrücke werden kopiert, jedoch möglicherweise nicht mehr aufgelöst; Weitere Informationen zum Klonen von datengebundenen Objekten finden Sie unter [Freezable-Objekte Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). Wenn das Objekt über animierte Abhängigkeitseigenschaften verfügt, werden die Basiswerte (nicht animiert) diese Eigenschaften kopiert. Animationen werden nicht kopiert.  Beachten Sie, dass nicht festgelegte Eigenschaften nicht kopiert werden oder sind schreibgeschützte Eigenschaften.  Wenn Sie diese Methode überschreiben, müssen Sie die basisimplementierung aufrufen.  Sie müssen sich nicht um <see cref="M:System.Windows.Freezable.Freeze" /> Werte, wie sie kopiert werden.  Das Ergebnis ist gesperrt, indem <see cref="M:System.Windows.Freezable.GetAsFrozen" /> vor der Rückgabe.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-248">
              <para>If you derive from <see cref="T:System.Windows.Freezable" /> you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation makes deep copies of any unfrozen freezables and shallow copies of all other writable, locally set properties it contains. If the object has data-bound dependency properties, the expressions are copied but might no longer resolve; for more information about cloning data-bound objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). If the object has animated dependency properties, the base (non-animated) values of those properties are copied. Animations are not copied.  Note that unset properties are not copied, nor are read-only properties.  If you do override this method, you must call the base implementation.  You do not need to <see cref="M:System.Windows.Freezable.Freeze" /> values as they are copied.  The result is frozen by <see cref="M:System.Windows.Freezable.GetAsFrozen" /> before being returned.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozen" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozen">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable GetCurrentValueAsFrozen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable GetCurrentValueAsFrozen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentValueAsFrozen () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ GetCurrentValueAsFrozen();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentValueAsFrozen : unit -&gt; System.Windows.Freezable" Usage="freezable.GetCurrentValueAsFrozen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f523-249">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-249">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          </span>
          <span data-ttu-id="6f523-250">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-250">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f523-251">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-251">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="6f523-252">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-252">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-253">Mit dieser Methode ähnelt der beim Erstellen einer Kopie mithilfe der <xref:System.Windows.Freezable.CloneCurrentValue%2A> und dem anschließenden mit Fixieren der <xref:System.Windows.Freezable.Freeze%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="6f523-253">Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.CloneCurrentValue%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method.</span></span>  
  
 <span data-ttu-id="6f523-254">Die <xref:System.Windows.Freezable.GetAsFrozen%2A> und <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> Methoden können die kopieren-Leistung verbessern, da sie nicht Klonen <xref:System.Windows.Freezable> untergeordnete Objekte, die bereits eingefroren werden; sie nur kopieren Sie sie als Verweis.</span><span class="sxs-lookup"><span data-stu-id="6f523-254">The <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference.</span></span>  
  
 <span data-ttu-id="6f523-255">In der folgende Tabelle werden die Unterschiede zwischen der <xref:System.Windows.Freezable.GetAsFrozen%2A> und <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="6f523-255">The following table summarizes the differences between the <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods.</span></span>  
  
|<span data-ttu-id="6f523-256">Aktion</span><span class="sxs-lookup"><span data-stu-id="6f523-256">Action</span></span>|<span data-ttu-id="6f523-257">Verhalten der GetAsFrozen-Methode</span><span class="sxs-lookup"><span data-stu-id="6f523-257">GetAsFrozen method behavior</span></span>|<span data-ttu-id="6f523-258">Verhalten der GetCurrentValueAsFrozen-Methode</span><span class="sxs-lookup"><span data-stu-id="6f523-258">GetCurrentValueAsFrozen method behavior</span></span>|  
|------------|---------------------------------|---------------------------------------------|  
|<span data-ttu-id="6f523-259">Kopieren einer Abhängigkeitseigenschaft, die einen Ausdruck verfügt.</span><span class="sxs-lookup"><span data-stu-id="6f523-259">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="6f523-260">Löst die Methode eine <xref:System.InvalidOperationException> , da dies nicht möglich <xref:System.Windows.Freezable.Freeze%2A> die-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="6f523-260">The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.</span></span>|<span data-ttu-id="6f523-261">Der aktuelle Wert des Ausdrucks wird jedoch nicht den Ausdruck selbst kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-261">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="6f523-262">Kopieren einer animierten Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="6f523-262">Copying an animated dependency property</span></span>|<span data-ttu-id="6f523-263">Kopiert den Wert der Eigenschaft Basis (nicht animiert).</span><span class="sxs-lookup"><span data-stu-id="6f523-263">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="6f523-264">Animationen werden nicht kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-264">Animations are not copied.</span></span>|<span data-ttu-id="6f523-265">Der Eigenschaft aktuelle animierte Wert wird kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-265">The property's current animated value is copied.</span></span> <span data-ttu-id="6f523-266">Animationen werden nicht kopiert.</span><span class="sxs-lookup"><span data-stu-id="6f523-266">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="6f523-267">Beachten Sie, dass nicht festgelegte Eigenschaften nicht kopiert werden oder sind schreibgeschützte Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="6f523-267">Note that unset properties are not copied, nor are read-only properties.</span></span>  
  
 <span data-ttu-id="6f523-268">Erstellen Sie eine Kopie der <xref:System.Windows.Freezable> , nicht fixiert ist, verwenden die <xref:System.Windows.Freezable.CloneCurrentValue%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="6f523-268">To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-269">
            <para>Diese Methode verwendet die virtuelle <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" /> Methode, um den Klon zu erstellen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-269">
              <para>This method uses the virtual <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" /> method to produce the clone.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected virtual void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezable.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="6f523-270">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-270">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f523-271">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-271">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="6f523-272">If the object has animated dependency properties, their current animated values are copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-272">If the object has animated dependency properties, their current animated values are copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-273">Diese Methode wird aufgerufen, indem die <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> Methode und sollte nicht aufgerufen werden direkt aus Ihrem Code, außer wenn beim Überschreiben dieser Methode die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6f523-273">This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="6f523-274">Rufen Sie zum Erstellen einer fixierten Kopie des aktuellen Objekts <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> müssen diese Methode nicht direkt aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6f523-274">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-275">
            <para>Bei der Ableitung von <see cref="T:System.Windows.Freezable" />, müssen Sie möglicherweise diese Methode überschreiben. Gründe für die außer Kraft setzen, umfassen Folgendes:-die abgeleitete Klasse verfügt über Daten, die nicht über Abhängigkeitseigenschaften verfügbar gemacht werden.  -Die abgeleitete Klasse muss eine zusätzliche Initialisierung-Aufgaben, die nicht erreicht werden kann, indem Sie einfach überschreiben ausführen <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Dies gilt z. B. wenn die abgeleitete Klasse implementiert <see cref="T:System.ComponentModel.ISupportInitialize" />.  Klassen, die alle Daten in Abhängigkeitseigenschaften speichern und keine zusätzlichen Initialisierungsaufgaben ausführen, müssen nicht außer Kraft setzen <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.  Es ist wichtig, dass alle Implementierungen dieser Methode die basisimplementierung aufrufen. Implementierungen sollten nur Aufgaben ausführen, die von der Standardimplementierung nicht ausgeführt wird. Die Standardimplementierung erstellt einen neuen <see cref="T:System.Windows.Freezable" /> mithilfe der <see cref="M:System.Windows.Freezable.CreateInstance" /> -Methode und führt tiefe Kopien nicht fixierten Freezable-Objekte und alle anderen beschreibbaren flache Kopien lokal darin enthaltenen Eigenschaften festgelegt. Wenn das Objekt von datengebundenen Abhängigkeitseigenschaften verfügt, datenbindungen, die beim Übertragungsvorgang kopiert werden, aber Sie werden möglicherweise nicht mehr aufgelöst; Weitere Informationen zum Klonen von datengebundenen Objekten finden Sie unter [Freezable-Objekte Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). Wenn das Objekt über animierte Abhängigkeitseigenschaften verfügt, wird der aktuelle animierte Wert dieser Eigenschaften wird kopiert, aber die Animationen sind nicht.  Schreibgeschützte Abhängigkeitseigenschaften innerhalb einer <see cref="T:System.Windows.Freezable" /> werden durch diese Standardimplementierung nicht kopiert.  Wenn Sie diese Methode überschreiben, müssen Sie die basisimplementierung aufrufen.  Sie müssen sich nicht um <see cref="M:System.Windows.Freezable.Freeze" /> Werte, wie sie kopiert werden.  Das Ergebnis ist gesperrt, indem <see cref="M:System.Windows.Freezable.GetAsFrozen" /> vor der Rückgabe.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-275">
              <para>If you derive from <see cref="T:System.Windows.Freezable" />, you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation creates a new <see cref="T:System.Windows.Freezable" /> using the <see cref="M:System.Windows.Freezable.CreateInstance" /> method and makes deep copies of unfrozen freezables and shallow copies of all other writable, locally set properties it contains. If the object has data-bound dependency properties, the data bindings are copied but might no longer resolve; for more information about cloning data-bound objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). If the object has animated dependency properties, the current animated value of those properties is copied, but the animations are not.  Read-only dependency properties within a <see cref="T:System.Windows.Freezable" /> are not copied by this default implementation.  If you do override this method, you must call the base implementation.  You do not need to <see cref="M:System.Windows.Freezable.Freeze" /> values as they are copied.  The result is frozen by <see cref="M:System.Windows.Freezable.GetAsFrozen" /> before being returned.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrozen">
      <MemberSignature Language="C#" Value="public bool IsFrozen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Freezable.IsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFrozen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFrozen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFrozen : bool" Usage="System.Windows.Freezable.IsFrozen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f523-276">Gets a value that indicates whether the object is currently modifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-276">Gets a value that indicates whether the object is currently modifiable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6f523-277">
            <see langword="true" /> Wenn das Objekt fixiert ist und kann nicht geändert werden; <see langword="false" /> , wenn das Objekt geändert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-277">
              <see langword="true" /> if the object is frozen and cannot be modified; <see langword="false" /> if the object can be modified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-278">Versuchen, ein Objekt zu ändern. bei der <xref:System.Windows.Freezable.IsFrozen%2A> -Eigenschaft ist `true` löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="6f523-278">Attempting to modify an object when its <xref:System.Windows.Freezable.IsFrozen%2A> property is `true` throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="6f523-279">Diese Eigenschaft ist schreibgeschützt und aus der Perspektive der Object-Modell.</span><span class="sxs-lookup"><span data-stu-id="6f523-279">This property is read-only from the object model perspective.</span></span> <span data-ttu-id="6f523-280">Teil der Dokumentation zu <xref:System.Windows.Freezable> Verhalten möglicherweise ganz zu schweigen "legt diese fest <xref:System.Windows.Freezable.IsFrozen%2A> zu `true`" oder ähnliche Sprache, bei der das Verhalten der anderen Methoden der Erörterung <xref:System.Windows.Freezable>, aber dies geschieht intern in der Klasseninstanzen Wenn Methoden der Instanz die privaten Variablen bearbeiten, die in der abstrakten Klasse vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="6f523-280">Some of the documentation about <xref:System.Windows.Freezable> behaviors may mention "sets <xref:System.Windows.Freezable.IsFrozen%2A> to `true`" or similar language when discussing the behavior of other methods of <xref:System.Windows.Freezable>, but this behavior is happening internally in the class instances, when methods of the instance manipulate the private variables that exist within the abstract class.</span></span> <span data-ttu-id="6f523-281">Um den Wert dieser Eigenschaft festzulegen, rufen Sie <xref:System.Windows.Freezable.Freeze%2A>.</span><span class="sxs-lookup"><span data-stu-id="6f523-281">To set the value of this property, you should call <xref:System.Windows.Freezable.Freeze%2A>.</span></span> <span data-ttu-id="6f523-282">Dies effektiv ist ein Einmaliger Vorgang so ändern Sie die <xref:System.Windows.Freezable.IsFrozen%2A> Eigenschaft aus der anfängliche Standardwert `false` -Zustand in den `true` Zustand.</span><span class="sxs-lookup"><span data-stu-id="6f523-282">This effectively is a one-time operation to change the <xref:System.Windows.Freezable.IsFrozen%2A> property from the initial default `false` state to the `true` state.</span></span> <span data-ttu-id="6f523-283">Es gibt keine Möglichkeit zum Festlegen des Werts an `false`.</span><span class="sxs-lookup"><span data-stu-id="6f523-283">There is no available means to set the value back to `false`.</span></span> <span data-ttu-id="6f523-284">Stattdessen könnten Sie jede tiefe Kopie, die von der ursprünglichen ändern (siehe die <xref:System.Windows.Freezable.Clone%2A> Methode).</span><span class="sxs-lookup"><span data-stu-id="6f523-284">Instead, you could change any deep copy made from the original (see the <xref:System.Windows.Freezable.Clone%2A> method).</span></span> <span data-ttu-id="6f523-285">Dies ist beabsichtigt und eine abgeleitete Klasse Verhalten sollte bei Anwendung auf die Fälle, in denen die <xref:System.Windows.Freezable> Muster ist hilfreich.</span><span class="sxs-lookup"><span data-stu-id="6f523-285">This is by design and is how any derived class should behave when applied to the cases where the <xref:System.Windows.Freezable> pattern is useful.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnChanged : unit -&gt; unit&#xA;override this.OnChanged : unit -&gt; unit" Usage="freezable.OnChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f523-286">Called when the current <see cref="T:System.Windows.Freezable" /> object is modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-286">Called when the current <see cref="T:System.Windows.Freezable" /> object is modified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-287">Diese Methode wird aufgerufen, wenn die <xref:System.Windows.Freezable.Changed> Ereignis auftritt.</span><span class="sxs-lookup"><span data-stu-id="6f523-287">This method is called whenever the <xref:System.Windows.Freezable.Changed> event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-288">
            <para>Wenn Sie eine abgeleitete Klasse implementieren <see cref="T:System.Windows.Freezable" />, Sie können angeben, überschreiben diese Methode zum Durchführen von Aufgaben.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-288">
              <para>When you implement a class that derives from <see cref="T:System.Windows.Freezable" />, you may override this method to perform tasks.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Freezable.Changed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OnFreezablePropertyChanged">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6f523-289">Ensures that appropriate context pointers are established for a data member of type <see cref="T:System.Windows.DependencyObject" /> that has just been modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-289">Ensures that appropriate context pointers are established for a data member of type <see cref="T:System.Windows.DependencyObject" /> that has just been modified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnFreezablePropertyChanged">
      <MemberSignature Language="C#" Value="protected void OnFreezablePropertyChanged (System.Windows.DependencyObject oldValue, System.Windows.DependencyObject newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnFreezablePropertyChanged(class System.Windows.DependencyObject oldValue, class System.Windows.DependencyObject newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnFreezablePropertyChanged (oldValue As DependencyObject, newValue As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnFreezablePropertyChanged(System::Windows::DependencyObject ^ oldValue, System::Windows::DependencyObject ^ newValue);" />
      <MemberSignature Language="F#" Value="member this.OnFreezablePropertyChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="freezable.OnFreezablePropertyChanged (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="newValue" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="6f523-290">The previous value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-290">The previous value of the data member.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="6f523-291">The current value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-291">The current value of the data member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f523-292">Ensures that appropriate context pointers are established for a <see cref="T:System.Windows.DependencyObjectType" /> data member that has just been set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-292">Ensures that appropriate context pointers are established for a <see cref="T:System.Windows.DependencyObjectType" /> data member that has just been set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-293">Diese Methode sollte aufgerufen werden, indem <xref:System.Windows.Freezable> erben jedes Mal eine <xref:System.Windows.DependencyObject> Datenmember, die nicht als gespeichert ist eine <xref:System.Windows.DependencyProperty> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="6f523-293">This method should be called by <xref:System.Windows.Freezable> inheritors each time a <xref:System.Windows.DependencyObject> data member that is not stored as a <xref:System.Windows.DependencyProperty> is set.</span></span>  
  
 <span data-ttu-id="6f523-294">Diese Methode muss nicht aufgerufen werden, damit <xref:System.Windows.DependencyObject> Datenmember, die gespeichert werden, mithilfe einer <xref:System.Windows.DependencyProperty>.</span><span class="sxs-lookup"><span data-stu-id="6f523-294">This method does not need to be called for <xref:System.Windows.DependencyObject> data members that are stored using a <xref:System.Windows.DependencyProperty>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreezablePropertyChanged">
      <MemberSignature Language="C#" Value="protected void OnFreezablePropertyChanged (System.Windows.DependencyObject oldValue, System.Windows.DependencyObject newValue, System.Windows.DependencyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnFreezablePropertyChanged(class System.Windows.DependencyObject oldValue, class System.Windows.DependencyObject newValue, class System.Windows.DependencyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnFreezablePropertyChanged (oldValue As DependencyObject, newValue As DependencyObject, property As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnFreezablePropertyChanged(System::Windows::DependencyObject ^ oldValue, System::Windows::DependencyObject ^ newValue, System::Windows::DependencyProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.OnFreezablePropertyChanged : System.Windows.DependencyObject * System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; unit" Usage="freezable.OnFreezablePropertyChanged (oldValue, newValue, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="newValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="property" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="6f523-295">The previous value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-295">The previous value of the data member.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="6f523-296">The current value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-296">The current value of the data member.</span>
          </span>
        </param>
        <param name="property">
          <span data-ttu-id="6f523-297">The property that changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-297">The property that changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f523-298">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-298">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="freezable.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6f523-299">Event data that contains information about which property changed, and its old and new values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-299">Event data that contains information about which property changed, and its old and new values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f523-300">Overrides the <see cref="T:System.Windows.DependencyObject" /> implementation of <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> to also invoke any <see cref="E:System.Windows.Freezable.Changed" /> handlers in response to a changing dependency property of type <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-300">Overrides the <see cref="T:System.Windows.DependencyObject" /> implementation of <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> to also invoke any <see cref="E:System.Windows.Freezable.Changed" /> handlers in response to a changing dependency property of type <see cref="T:System.Windows.Freezable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-301">Die Ereignisdaten enthalten nur Informationen zu den <xref:System.Windows.Freezable> selbst.</span><span class="sxs-lookup"><span data-stu-id="6f523-301">The event data contains information about only the <xref:System.Windows.Freezable> itself.</span></span> <span data-ttu-id="6f523-302">Alle Informationen für die untergeordnete Eigenschaft abgerufen werden muss, bis die <xref:System.Windows.Freezable.Changed> Handler.</span><span class="sxs-lookup"><span data-stu-id="6f523-302">Any sub-property information must be obtained through the <xref:System.Windows.Freezable.Changed> handlers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPreamble">
      <MemberSignature Language="C#" Value="protected void ReadPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.ReadPreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadPreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadPreamble();" />
      <MemberSignature Language="F#" Value="member this.ReadPreamble : unit -&gt; unit" Usage="freezable.ReadPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f523-303">Ensures that the <see cref="T:System.Windows.Freezable" /> is being accessed from a valid thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-303">Ensures that the <see cref="T:System.Windows.Freezable" /> is being accessed from a valid thread.</span>
          </span>
          <span data-ttu-id="6f523-304">Inheritors of <see cref="T:System.Windows.Freezable" /> must call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that reads data members that are not dependency properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-304">Inheritors of <see cref="T:System.Windows.Freezable" /> must call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that reads data members that are not dependency properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-305">
            <para>Abgeleitete Klassen <see cref="T:System.Windows.Freezable" /> aufrufen, sollte die <see cref="M:System.Windows.Freezable.ReadPreamble" /> -Methode auf, bevor sie versuchen, alle Member zuzugreifen, die keine Abhängigkeitseigenschaften sind. Die <see cref="M:System.Windows.Freezable.WritePreamble" /> -Methode aufgerufen werden soll, bevor solche Member in geschrieben werden.  Diese Methode effektiv macht nichts anderes als Aufrufen <see cref="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-305">
              <para>Classes that derive from <see cref="T:System.Windows.Freezable" /> should call the <see cref="M:System.Windows.Freezable.ReadPreamble" /> method before they attempt to access any members that are not dependency properties. The <see cref="M:System.Windows.Freezable.WritePreamble" /> method should be called before any such members are written to.  This method effectively does nothing more than call <see cref="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.WritePreamble" />
      </Docs>
    </Member>
    <Member MemberName="WritePostscript">
      <MemberSignature Language="C#" Value="protected void WritePostscript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePostscript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.WritePostscript" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePostscript ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePostscript();" />
      <MemberSignature Language="F#" Value="member this.WritePostscript : unit -&gt; unit" Usage="freezable.WritePostscript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f523-306">Raises the <see cref="E:System.Windows.Freezable.Changed" /> event for the <see cref="T:System.Windows.Freezable" /> and invokes its <see cref="M:System.Windows.Freezable.OnChanged" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-306">Raises the <see cref="E:System.Windows.Freezable.Changed" /> event for the <see cref="T:System.Windows.Freezable" /> and invokes its <see cref="M:System.Windows.Freezable.OnChanged" /> method.</span>
          </span>
          <span data-ttu-id="6f523-307">Classes that derive from <see cref="T:System.Windows.Freezable" /> should call this method at the end of any API that modifies class members that are not stored as dependency properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-307">Classes that derive from <see cref="T:System.Windows.Freezable" /> should call this method at the end of any API that modifies class members that are not stored as dependency properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-308">
            <para>Abgeleitete Klassen <see cref="T:System.Windows.Freezable" /> sollten diese Methode am Ende jeder API, die einen Klassenmember, die nicht ändert als gespeichert Aufrufen einer <see cref="T:System.Windows.DependencyProperty" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-308">
              <para>Classes that derive from <see cref="T:System.Windows.Freezable" /> should call this method at the end of any API that modifies a class member that is not stored as a <see cref="T:System.Windows.DependencyProperty" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WritePreamble">
      <MemberSignature Language="C#" Value="protected void WritePreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.WritePreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePreamble();" />
      <MemberSignature Language="F#" Value="member this.WritePreamble : unit -&gt; unit" Usage="freezable.WritePreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f523-309">Verifies that the <see cref="T:System.Windows.Freezable" /> is not frozen and that it is being accessed from a valid threading context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-309">Verifies that the <see cref="T:System.Windows.Freezable" /> is not frozen and that it is being accessed from a valid threading context.</span>
          </span>
          <span data-ttu-id="6f523-310">
            <see cref="T:System.Windows.Freezable" /> inheritors should call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that writes to data members that are not dependency properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-310">
              <see cref="T:System.Windows.Freezable" /> inheritors should call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that writes to data members that are not dependency properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f523-311">Diese Methode ruft <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> so Überprüfen der Threadkontext kann zugegriffen werden, und es wird eine Ausnahme ausgelöst, wenn die <xref:System.Windows.Freezable> Instanz ist bereits eingefroren.</span><span class="sxs-lookup"><span data-stu-id="6f523-311">This method calls <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> to verify the threading context is accessible, and it throws an exception if the <xref:System.Windows.Freezable> instance is already frozen.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6f523-312">The <see cref="T:System.Windows.Freezable" /> instance is frozen and cannot have its members written to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-312">The <see cref="T:System.Windows.Freezable" /> instance is frozen and cannot have its members written to.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="6f523-313">
            <para>Abgeleitete Klassen <see cref="T:System.Windows.Freezable" /> sollten Aufrufen <see cref="M:System.Windows.Freezable.WritePreamble" /> vor dem Schreiben von Elementen, die keine Abhängigkeitseigenschaften sind. Wenn Sie aufrufen <see cref="M:System.Windows.Freezable.WritePreamble" /> in einen [! Include[TLA#tla_api](~/Includes/tlasharptla-API-MD.MD)], können Sie einen Aufruf von weglassen <see cref="M:System.Windows.Freezable.ReadPreamble" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6f523-313">
              <para>Classes that derive from <see cref="T:System.Windows.Freezable" /> should call <see cref="M:System.Windows.Freezable.WritePreamble" /> before attempting to write to any members that are not dependency properties. If you call <see cref="M:System.Windows.Freezable.WritePreamble" /> in an [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], you can omit a call to <see cref="M:System.Windows.Freezable.ReadPreamble" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.ReadPreamble" />
      </Docs>
    </Member>
  </Members>
</Type>