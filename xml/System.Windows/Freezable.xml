<Type Name="Freezable" FullName="System.Windows.Freezable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12a1be02c542dfe0d4b2b31c8c4e0fbee60ca7d5" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37549380" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Freezable : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Freezable extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Freezable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Freezable&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Freezable abstract : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type Freezable = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines an object that has a modifiable state and a read-only (frozen) state. Classes that derive from <see cref="T:System.Windows.Freezable" /> provide detailed change notification, can be made immutable, and can clone themselves.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Freezable> Klasse bietet spezielle Features, die helfen können die Leistung der Anwendung verbessert, wenn Sie Objekte verwenden, die aufwendig zu ändern oder zu kopieren. Beispiele für <xref:System.Windows.Freezable> umfassen folgende Objekte:  
  
-   <xref:System.Windows.Media.Brush>  
  
-   <xref:System.Windows.Media.Pen>  
  
-   <xref:System.Windows.Media.Geometry>  
  
-   <xref:System.Windows.Media.Transform>  
  
-   <xref:System.Windows.Media.Animation.AnimationTimeline>  
  
## <a name="deriving-from-freezable"></a>Ableiten von Freezable-Objekts  
 Eine abgeleitete Klasse <xref:System.Windows.Freezable> erhält die folgenden Features:  
  
-   Besondere Zustände: einen schreibgeschützten (fixierten) Zustand und einen beschreibbaren Status.  
  
-   Threadsicherheit: ein fixiertes <xref:System.Windows.Freezable> Objekt über Threads freigegeben werden kann.  
  
-   Detaillierte änderungsbenachrichtigung: im Gegensatz zu anderen <xref:System.Windows.DependencyObject> Objekte, eine <xref:System.Windows.Freezable> Objekt bietet änderungsbenachrichtigungen aus, wenn untergeordnete Eigenschaftswerte sofort geändert.  
  
-   Klonen einfach: die Freezable-Klasse verfügt über mehrere Methoden, die tiefe Klone erstellen bereits implementiert.  
  
 Informationen zum verwenden und erstellen eigene <xref:System.Windows.Freezable> Objekten finden Sie [Übersicht über Freezable-Objekte](~/docs/framework/wpf/advanced/freezable-objects-overview.md).  
  
 ]]></format>
    </remarks>
    <threadsafe>Alle öffentlichen <see langword="static" /> Member dieses Typs sind threadsicher. Bei Instanzmembern ist die Threadsicherheit nicht gewährleistet.  Wenn die <see cref="P:System.Windows.Freezable.IsFrozen" /> Eigenschaft <see langword="false" />, <see cref="T:System.Windows.Freezable" /> Objekt zugegriffen werden kann, nur aus dem Thread, in dem es erstellt wurde. Es wird versucht, die Zugriffsberechtigung von einem anderen Thread ausgelöst ein <see cref="T:System.InvalidOperationException" />. Die <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> und <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> Methoden bieten Unterstützung für das marshalling an den richtigen Thread.  Wenn ihre <see cref="P:System.Windows.Freezable.IsFrozen" /> Eigenschaft <see langword="true" />, <see cref="T:System.Windows.Freezable" /> Objekte sind Freethread-.  Weitere Informationen finden Sie unter [Freezable-Objekte Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Freezable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Freezable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of a <see cref="T:System.Windows.Freezable" /> derived class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist der Konstruktor für die geschützten Zugriff einer abstrakten Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFreeze">
      <MemberSignature Language="C#" Value="public bool CanFreeze { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFreeze" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Freezable.CanFreeze" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanFreeze As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanFreeze { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFreeze : bool" Usage="System.Windows.Freezable.CanFreeze" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the object can be made unmodifiable.</summary>
        <value>
          <see langword="true" />, wenn das aktuelle Objekt als nicht änderbar festgelegt werden kann oder bereits nicht änderbar ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Diese methodenimplementierung verwendet die <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> -Methode mit <paramref name="isChecking" /> festgelegt <see langword="true" /> um zu bestimmen, ob eine <see cref="T:System.Windows.Freezable" /> änderbar festgelegt werden können. So ändern Sie die Methode, diese Eigenschaft verhält sich in einer abgeleiteten Klasse, außer Kraft setzen der <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> Methode.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Changed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Freezable.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Changed;" />
      <MemberSignature Language="F#" Value="member this.Changed : EventHandler " Usage="member this.Changed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the <see cref="T:System.Windows.Freezable" /> or an object it contains is modified.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder Entfernen von Ereignishandlern, wenn das aktuelle Objekt nicht geändert werden kann (wenn die <xref:System.Windows.Freezable.IsFrozen%2A> Eigenschaft `true`), wird eine Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Freezable" Usage="freezable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a modifiable clone of the <see cref="T:System.Windows.Freezable" />, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</summary>
        <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Freezable.Clone%2A> und <xref:System.Windows.Freezable.CloneCurrentValue%2A> Methoden erstellen, änderbare Klone von fixierten <xref:System.Windows.Freezable> Objekte (Methoden auch Klonen <xref:System.Windows.Freezable> Objekte, die nicht eingefroren sind). Der Klon ist im Grunde eine tiefe Kopie des aktuellen Objekts.  
  
 In der folgende Tabelle werden die Unterschiede zwischen der <xref:System.Windows.Freezable.Clone%2A> und <xref:System.Windows.Freezable.CloneCurrentValue%2A> Methoden.  
  
|Aktion|Verhalten der Klon-Methode|Verhalten der CloneCurrentValue-Methode|  
|------------|---------------------------|---------------------------------------|  
|Kopieren einer Abhängigkeitseigenschaft, die einen Ausdruck verfügt.|Der Ausdruck wird kopiert, aber möglicherweise nicht mehr aufgelöst. Weitere Informationen finden Sie unter der [Übersicht über Freezable-Objekte](~/docs/framework/wpf/advanced/freezable-objects-overview.md).|Der aktuelle Wert des Ausdrucks wird jedoch nicht den Ausdruck selbst kopiert.|  
|Kopieren einer animierten Abhängigkeitseigenschaft|Kopiert den Wert der Eigenschaft Basis (nicht animiert). Animationen werden nicht kopiert.|Der Eigenschaft aktuelle animierte Wert wird kopiert. Animationen werden nicht kopiert.|  
  
 Beachten Sie, dass nicht festgelegte Eigenschaften nicht kopiert werden. Wenn eine nicht festgelegte Eigenschaft einen Standardwert verfügt, die ein fixiertes <xref:System.Windows.Freezable>, bleibt dieser Eigenschaftswert in den ansonsten änderbaren Klon fixiert.  
  
## <a name="move-a-freezable-between-threads"></a>Verschieben von Freezable zwischen Threads  
 Diese Methode kann für das Verschieben von nützlich sein, eine <xref:System.Windows.Freezable> zwischen Threads. Stellen Sie zunächst die <xref:System.Windows.Freezable> als nicht änderbar fest, durch den Aufruf der <xref:System.Windows.Freezable.Freeze%2A> Methode. Nun einem anderen Thread zugreifen, kann die <xref:System.Windows.Freezable> und einen lokalen <xref:System.Windows.Freezable.Clone%2A> , die darauf zugreifen kann.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Diese Methode verwendet <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> den Klon. Um das Verhalten dieser Methode in einer abgeleiteten Klasse zu ändern, überschreiben die <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> Methode.</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected virtual void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="freezable.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">The object to clone.</param>
        <summary>Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, indem die <xref:System.Windows.Freezable.Clone%2A> Methode und sollte nicht aufgerufen werden direkt aus Ihrem Code, außer wenn beim Überschreiben dieser Methode die basisimplementierung aufrufen. Rufen Sie zum Erstellen einer änderbaren Kopie des aktuellen Objekts <xref:System.Windows.Freezable.Clone%2A> müssen diese Methode nicht direkt aufrufen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Bei der Ableitung von <see cref="T:System.Windows.Freezable" />, müssen Sie möglicherweise diese Methode überschreiben. Gründe für die außer Kraft setzen, umfassen Folgendes:-die abgeleitete Klasse verfügt über Daten, die nicht über Abhängigkeitseigenschaften verfügbar gemacht werden.  -Die abgeleitete Klasse muss eine zusätzliche Initialisierung-Aufgaben, die nicht erreicht werden kann, indem Sie einfach überschreiben ausführen <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Dies gilt z. B. wenn die abgeleitete Klasse implementiert <see cref="T:System.ComponentModel.ISupportInitialize" />.  Klassen, die alle Daten in Abhängigkeitseigenschaften speichern und keine zusätzlichen Initialisierungsaufgaben ausführen, müssen nicht außer Kraft setzen <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />.  Es ist wichtig, dass alle Implementierungen dieser Methode die basisimplementierung aufrufen. Implementierungen sollten nur Aufgaben ausführen, die von der Standardimplementierung nicht ausgeführt wird. Die Standardimplementierung erstellt tiefe Kopien alle beschreibbaren, lokal festgelegte Eigenschaften, einschließlich interner Ausdrücke.  Wenn das Objekt von datengebundenen Abhängigkeitseigenschaften verfügt, wird die Ausdrücke werden kopiert, jedoch möglicherweise nicht mehr aufgelöst. Weitere Informationen zum Klonen von datengebundenen Objekten finden Sie unter [Freezable-Objekte Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). Wenn das Objekt über animierte Abhängigkeitseigenschaften verfügt, wird der Basiswert (nicht animiert) diese Eigenschaften kopiert. Animationen werden nicht kopiert.  Beachten Sie, dass nicht festgelegte Eigenschaften nicht kopiert werden oder sind schreibgeschützte Eigenschaften. Wenn diese Eigenschaft einen Standardwert verfügt, die ein fixiertes <see cref="T:System.Windows.Freezable" />, bleibt dieser Eigenschaftswert in den ansonsten änderbaren Klon fixiert.  Die folgende Liste enthält das erwartete Verhalten für diese Methode:-die erzeugten Kopie enthält Kopien aller <see cref="T:System.Windows.Freezable" /> untergeordnete Objekte.  -Die Festlegung und Read-only-Eigenschaften werden nicht kopiert.  -Ausdrücke werden kopiert.  – None dieser untergeordnete Objekte werden bei der Erstellung fixiert.  – Die Kopie selbst ist nicht fixiert.  -Animationen werden nicht kopiert.  -Nur Basis Eigenschaftswerte werden kopiert, nicht den aktuellen animierten Werte.</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Freezable" Usage="freezable.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a modifiable clone (deep copy) of the <see cref="T:System.Windows.Freezable" /> using its current values.</summary>
        <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Freezable.Clone%2A> und <xref:System.Windows.Freezable.CloneCurrentValue%2A> Methoden erstellen, änderbare Klone von fixierten <xref:System.Windows.Freezable> Objekte (Methoden auch Klonen <xref:System.Windows.Freezable> Objekte, die nicht eingefroren sind). Der Klon ist im Grunde eine tiefe Kopie des aktuellen Objekts.  
  
 In der folgende Tabelle werden die Unterschiede zwischen der <xref:System.Windows.Freezable.Clone%2A> und <xref:System.Windows.Freezable.CloneCurrentValue%2A> Methoden.  
  
|Aktion|Verhalten der Klon-Methode|Verhalten der CloneCurrentValue-Methode|  
|------------|---------------------------|---------------------------------------|  
|Kopieren einer Abhängigkeitseigenschaft, die einen Ausdruck verfügt.|Der Ausdruck wird kopiert, aber möglicherweise nicht mehr aufgelöst. Weitere Informationen finden Sie unter der [Übersicht über Freezable-Objekte](~/docs/framework/wpf/advanced/freezable-objects-overview.md).|Der aktuelle Wert des Ausdrucks wird jedoch nicht den Ausdruck selbst kopiert.|  
|Kopieren einer animierten Abhängigkeitseigenschaft|Kopiert den Wert der Eigenschaft Basis (nicht animiert). Animationen werden nicht kopiert.|Der Eigenschaft aktuelle animierte Wert wird kopiert. Animationen werden nicht kopiert.|  
  
 Beachten Sie, dass nicht festgelegte Eigenschaften nicht kopiert werden. Wenn eine nicht festgelegte Eigenschaft einen Standardwert verfügt, die ein fixiertes <xref:System.Windows.Freezable>, bleibt dieser Eigenschaftswert in den ansonsten änderbaren Klon fixiert.  
  
## <a name="move-a-freezable-between-threads"></a>Verschieben von Freezable zwischen Threads  
 Diese Methode kann für das Verschieben von nützlich sein, eine <xref:System.Windows.Freezable> zwischen Threads. Stellen Sie zunächst die <xref:System.Windows.Freezable> als nicht änderbar fest, mit dessen <xref:System.Windows.Freezable.Freeze%2A> Methode. Nun einem anderen Thread zugreifen, kann die <xref:System.Windows.Freezable> und einen lokalen Klon, die darauf zugreifen kann.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Diese Methode verwendet die <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> Methode zum Erstellen des Klons; <see cref="T:System.Windows.Freezable" /> Implementierer, die überschreiben <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> müssen sicherstellen, dass die Kopie bei der Erstellung nicht fixiert ist.</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected virtual void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="freezable.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">The <see cref="T:System.Windows.Freezable" /> to be cloned.</param>
        <summary>Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, indem die <xref:System.Windows.Freezable.CloneCurrentValue%2A> Methode und sollte nicht aufgerufen werden direkt aus Ihrem Code, außer wenn beim Überschreiben dieser Methode die basisimplementierung aufrufen. Rufen Sie zum Erstellen einer änderbaren Kopie des aktuellen Objekts <xref:System.Windows.Freezable.CloneCurrentValue%2A> müssen diese Methode nicht direkt aufrufen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Bei der Ableitung von <see cref="T:System.Windows.Freezable" />, müssen Sie möglicherweise diese Methode überschreiben. Gründe für die außer Kraft setzen, umfassen Folgendes:-die abgeleitete Klasse verfügt über Daten, die nicht über Abhängigkeitseigenschaften verfügbar gemacht werden.  -Die abgeleitete Klasse muss eine zusätzliche Initialisierung-Aufgaben, die nicht erreicht werden kann, indem Sie einfach überschreiben ausführen <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Dies gilt z. B. wenn die abgeleitete Klasse implementiert <see cref="T:System.ComponentModel.ISupportInitialize" />.  Klassen, die alle Daten in Abhängigkeitseigenschaften speichern und keine zusätzlichen Initialisierungsaufgaben ausführen, müssen nicht außer Kraft setzen <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />.  Es ist wichtig, dass alle Implementierungen dieser Methode die basisimplementierung aufrufen. Implementierungen sollten nur Aufgaben ausführen, die von der Standardimplementierung nicht ausgeführt wird. Die Standardimplementierung erstellt tiefe Kopien alle beschreibbaren, lokal festgelegte Eigenschaften. Wenn das Objekt Abhängigkeitseigenschaften mit Ausdrücken (z. B. eine Datenbindung) enthält, wird der aktuelle Wert des Ausdrucks aber nicht den Ausdruck selbst kopiert.  Wenn das Objekt über animierte Abhängigkeitseigenschaften verfügt, wird der aktuelle animierte Wert dieser Eigenschaften wird kopiert, aber die Animationen sind nicht.  Beachten Sie, dass nicht festgelegte Eigenschaften nicht kopiert werden oder sind schreibgeschützte Eigenschaften. Wenn diese Eigenschaft einen Standardwert verfügt, die ein fixiertes <see cref="T:System.Windows.Freezable" />, bleibt dieser Eigenschaftswert in den ansonsten änderbaren Klon fixiert.  Die folgende Liste enthält das erwartete Verhalten für diese Methode.  – Die erstellt Kopie enthält Kopien aller <see cref="T:System.Windows.Freezable" /> untergeordnete Objekte.  -Die Festlegung und Read-only-Eigenschaften werden nicht kopiert.  – Wenn eine Eigenschaft animiert wird, wird der aktuelle Wert wird kopiert, aber die Animation selbst ist nicht.  – None dieser untergeordnete Objekte werden bei der Erstellung fixiert.  – Die Kopie selbst ist nicht fixiert.</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected System.Windows.Freezable CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Freezable CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateInstance () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Freezable ^ CreateInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : unit -&gt; System.Windows.Freezable" Usage="freezable.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Freezable" /> class.</summary>
        <returns>The new instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist eine geschützte Methode, und die eigentlichen objektspezifischen Implementierungen für das Verhalten hängt von der Implementierung der Außerkraftsetzung von werden die <xref:System.Windows.Freezable.CreateInstanceCore%2A> -Methode, die diese Methode intern ruft.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="freezable.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</summary>
        <returns>The new instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode direkt (mit Ausnahme beim Aufrufen der Basis in einer Implementierung) nicht. Diese Methode wird aufgerufen, intern von der <xref:System.Windows.Freezable.CreateInstance%2A> -Methode auf, wenn eine neue Instanz der der <xref:System.Windows.Freezable> erstellt wird.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine typische Implementierung der <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jede <see cref="T:System.Windows.Freezable" /> abgeleitete Klasse muss diese Methode implementieren. Eine typische Implementierung ist, einfach den Standardkonstruktor aufrufen und das Ergebnis zurückgeben.</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstance" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Freeze">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Makes a <see cref="T:System.Windows.Freezable" /> object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />, or tests whether a <see cref="T:System.Windows.Freezable" /> object can be made unmodifiable.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="public void Freeze ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Freeze() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Freeze" />
      <MemberSignature Language="VB.NET" Value="Public Sub Freeze ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Freeze();" />
      <MemberSignature Language="F#" Value="member this.Freeze : unit -&gt; unit" Usage="freezable.Freeze " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Makes the current object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um die Möglichkeit zu vermeiden ein <xref:System.InvalidOperationException> überprüfen Sie beim Aufrufen dieser Methode die <xref:System.Windows.Freezable.CanFreeze%2A> Eigenschaft, um zu bestimmen, ob der <xref:System.Windows.Freezable> können änderbar festgelegt werden vor dem Aufrufen dieser Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Freezable" /> cannot be made unmodifiable.</exception>
        <block subset="none" type="overrides">
          <para>Diese Methode verwendet die <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> Methode zum Erstellen der <see cref="T:System.Windows.Freezable" /> als nicht änderbar fest. Um Einfrieren Verhalten ändern möchten, überschreiben die <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> Methode.</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="protected internal static bool Freeze (System.Windows.Freezable freezable, bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig bool Freeze(class System.Windows.Freezable freezable, bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static bool Freeze(System::Windows::Freezable ^ freezable, bool isChecking);" />
      <MemberSignature Language="F#" Value="static member Freeze : System.Windows.Freezable * bool -&gt; bool" Usage="System.Windows.Freezable.Freeze (freezable, isChecking)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="freezable" Type="System.Windows.Freezable" />
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="freezable">The object to check or make unmodifiable. If <c>isChecking</c> is <see langword="true" />, the object is checked to determine whether it can be made unmodifiable. If <c>isChecking</c> is <see langword="false" />, the object is made unmodifiable, if possible.</param>
        <param name="isChecking">
          <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</param>
        <summary>If the <paramref name="isChecking" /> parameter is <see langword="true" />, this method indicates whether the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable. If the <paramref name="isChecking" /> parameter is <see langword="false" />, this method attempts to make the specified <see cref="T:System.Windows.Freezable" /> unmodifiable and indicates whether the operation succeeded.</summary>
        <returns>If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable. If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode nicht aufrufen, es sei denn, beim Ableiten von <xref:System.Windows.Freezable> und überschreiben die <xref:System.Windows.Freezable.FreezeCore%2A> Methode.  Diese Methode kann verwendet werden, der <xref:System.Windows.Freezable.FreezeCore%2A> Methode, um die Datenmember der Klasse zu fixieren, die selbst sind <xref:System.Windows.Freezable> Objekte.  
  
 Es ist möglich, diese Methode erneut aufrufen, auf eine <xref:System.Windows.Freezable> -Objekt, das bereits fixiert ist (nicht änderbar).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">When <paramref name="isChecking" /> is <see langword="false" />, the attempt to make <paramref name="freezable" /> unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).</exception>
        <block subset="none" type="overrides">
          <para>Diese Methode verwendet die <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> Methode zum Erstellen der <see cref="T:System.Windows.Freezable" /> als nicht änderbar fest. Um Einfrieren Verhalten ändern möchten, überschreiben die <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> Methode.</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected virtual bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="abstract member FreezeCore : bool -&gt; bool&#xA;override this.FreezeCore : bool -&gt; bool" Usage="freezable.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</param>
        <summary>Makes the <see cref="T:System.Windows.Freezable" /> object unmodifiable or tests whether it can be made unmodifiable.</summary>
        <returns>If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable. If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode direkt (mit Ausnahme beim Aufrufen der Basis in einer Implementierung) nicht. Diese Methode wird aufgerufen, intern von der <xref:System.Windows.Freezable.CanFreeze%2A> Eigenschaft (mit `isChecking` gleich `true`) und die <xref:System.Windows.Freezable.Freeze%2A> Methode (mit `isChecking` gleich `false`).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="T:System.Windows.Freezable" /> Implementierungen müssen diese Methode überschreiben, wenn die Klasse Daten enthält, die nicht mit Abhängigkeitseigenschaften gespeichert.  Eine typische Implementierung Basis aufrufen würden, dann rufen Sie die statische <see cref="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" /> für alle <see cref="T:System.Windows.Freezable" /> typisierte Eigenschaften mit die Klasse zurückgeben, <see langword="true" /> nur, wenn alle Eigenschaften, die fixiert waren (oder, im Fall von angeben eingefroren konnte <see langword="true" /> für <paramref name="isChecking" />).</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.Freeze" />
        <altmember cref="P:System.Windows.Freezable.CanFreeze" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozen">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable GetAsFrozen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable GetAsFrozen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetAsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsFrozen () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ GetAsFrozen();" />
      <MemberSignature Language="F#" Value="member this.GetAsFrozen : unit -&gt; System.Windows.Freezable" Usage="freezable.GetAsFrozen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a frozen copy of the <see cref="T:System.Windows.Freezable" />, using base (non-animated) property values. Because the copy is frozen, any frozen sub-objects are copied by reference.</summary>
        <returns>A frozen copy of the <see cref="T:System.Windows.Freezable" />. The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überprüfen Sie die <xref:System.Windows.Freezable.CanFreeze%2A> -Eigenschaft vor dem Aufrufen dieser Methode, um sicherzustellen, dass die <xref:System.Windows.Freezable> kann fixiert werden. Mit dieser Methode ähnelt der beim Erstellen einer Kopie mithilfe der <xref:System.Windows.Freezable.Clone%2A> und dem anschließenden mit Fixieren der <xref:System.Windows.Freezable.Freeze%2A> Methode.  
  
 Die <xref:System.Windows.Freezable.GetAsFrozen%2A> und <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> Methoden können die kopieren-Leistung verbessern, da sie nicht Klonen <xref:System.Windows.Freezable> untergeordnete Objekte, die bereits eingefroren werden; sie nur kopieren Sie sie als Verweis.  
  
 In der folgende Tabelle werden die Unterschiede zwischen der <xref:System.Windows.Freezable.GetAsFrozen%2A> und <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> Methoden.  
  
|Aktion|Verhalten der GetAsFrozen-Methode|Verhalten der GetCurrentValueAsFrozen-Methode|  
|------------|---------------------------------|---------------------------------------------|  
|Kopieren einer Abhängigkeitseigenschaft, die einen Ausdruck verfügt.|Löst die Methode eine <xref:System.InvalidOperationException> , da dies nicht möglich <xref:System.Windows.Freezable.Freeze%2A> die-Eigenschaft.|Der aktuelle Wert des Ausdrucks wird jedoch nicht den Ausdruck selbst kopiert.|  
|Kopieren einer animierten Abhängigkeitseigenschaft|Kopiert den Wert der Eigenschaft Basis (nicht animiert). Animationen werden nicht kopiert.|Der Eigenschaft aktuelle animierte Wert wird kopiert. Animationen werden nicht kopiert.|  
  
 Beachten Sie, dass nicht festgelegte Eigenschaften nicht kopiert werden oder sind schreibgeschützte Eigenschaften.  
  
 Erstellen Sie eine Kopie der <xref:System.Windows.Freezable> , nicht fixiert ist, verwenden die <xref:System.Windows.Freezable.Clone%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Freezable" /> cannot be frozen because it contains expressions or animated properties.</exception>
        <block subset="none" type="overrides">
          <para>Diese Methode verwendet die virtuelle <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" /> Methode, um den Klon zu erstellen.</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected virtual void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezable.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">The instance to copy.</param>
        <summary>Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, indem die <xref:System.Windows.Freezable.GetAsFrozen%2A> Methode und sollte nicht aufgerufen werden direkt aus Ihrem Code, außer wenn beim Überschreiben dieser Methode die basisimplementierung aufrufen. Rufen Sie zum Erstellen einer fixierten Kopie des aktuellen Objekts <xref:System.Windows.Freezable.GetAsFrozen%2A> müssen diese Methode nicht direkt aufrufen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Bei der Ableitung von <see cref="T:System.Windows.Freezable" /> müssen Sie möglicherweise diese Methode überschreiben. Gründe für die außer Kraft setzen, umfassen Folgendes:-die abgeleitete Klasse verfügt über Daten, die nicht über Abhängigkeitseigenschaften verfügbar gemacht werden.  -Die abgeleitete Klasse muss eine zusätzliche Initialisierung-Aufgaben, die nicht erreicht werden kann, indem Sie einfach überschreiben ausführen <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Dies gilt z. B. wenn die abgeleitete Klasse implementiert <see cref="T:System.ComponentModel.ISupportInitialize" />.  Klassen, die alle Daten in Abhängigkeitseigenschaften speichern und keine zusätzlichen Initialisierungsaufgaben ausführen, müssen nicht außer Kraft setzen <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.  Es ist wichtig, dass alle Implementierungen dieser Methode die basisimplementierung aufrufen. Implementierungen sollten nur Aufgaben ausführen, die von der Standardimplementierung nicht ausgeführt wird. Die Standardimplementierung erstellt tiefe Kopien jeder nicht fixierten Freezable-Objekte und alle anderen beschreibbaren flache Kopien, lokal darin enthaltenen Eigenschaften. Wenn das Objekt von datengebundenen Abhängigkeitseigenschaften verfügt, werden die Ausdrücke werden kopiert, jedoch möglicherweise nicht mehr aufgelöst; Weitere Informationen zum Klonen von datengebundenen Objekten finden Sie unter [Freezable-Objekte Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). Wenn das Objekt über animierte Abhängigkeitseigenschaften verfügt, werden die Basiswerte (nicht animiert) diese Eigenschaften kopiert. Animationen werden nicht kopiert.  Beachten Sie, dass nicht festgelegte Eigenschaften nicht kopiert werden oder sind schreibgeschützte Eigenschaften.  Wenn Sie diese Methode überschreiben, müssen Sie die basisimplementierung aufrufen.  Sie müssen sich nicht um <see cref="M:System.Windows.Freezable.Freeze" /> Werte, wie sie kopiert werden.  Das Ergebnis ist gesperrt, indem <see cref="M:System.Windows.Freezable.GetAsFrozen" /> vor der Rückgabe.</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozen" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozen">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable GetCurrentValueAsFrozen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable GetCurrentValueAsFrozen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentValueAsFrozen () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ GetCurrentValueAsFrozen();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentValueAsFrozen : unit -&gt; System.Windows.Freezable" Usage="freezable.GetCurrentValueAsFrozen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a frozen copy of the <see cref="T:System.Windows.Freezable" /> using current property values. Because the copy is frozen, any frozen sub-objects are copied by reference.</summary>
        <returns>A frozen copy of the <see cref="T:System.Windows.Freezable" />. The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode ähnelt der beim Erstellen einer Kopie mithilfe der <xref:System.Windows.Freezable.CloneCurrentValue%2A> und dem anschließenden mit Fixieren der <xref:System.Windows.Freezable.Freeze%2A> Methode.  
  
 Die <xref:System.Windows.Freezable.GetAsFrozen%2A> und <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> Methoden können die kopieren-Leistung verbessern, da sie nicht Klonen <xref:System.Windows.Freezable> untergeordnete Objekte, die bereits eingefroren werden; sie nur kopieren Sie sie als Verweis.  
  
 In der folgende Tabelle werden die Unterschiede zwischen der <xref:System.Windows.Freezable.GetAsFrozen%2A> und <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> Methoden.  
  
|Aktion|Verhalten der GetAsFrozen-Methode|Verhalten der GetCurrentValueAsFrozen-Methode|  
|------------|---------------------------------|---------------------------------------------|  
|Kopieren einer Abhängigkeitseigenschaft, die einen Ausdruck verfügt.|Löst die Methode eine <xref:System.InvalidOperationException> , da dies nicht möglich <xref:System.Windows.Freezable.Freeze%2A> die-Eigenschaft.|Der aktuelle Wert des Ausdrucks wird jedoch nicht den Ausdruck selbst kopiert.|  
|Kopieren einer animierten Abhängigkeitseigenschaft|Kopiert den Wert der Eigenschaft Basis (nicht animiert). Animationen werden nicht kopiert.|Der Eigenschaft aktuelle animierte Wert wird kopiert. Animationen werden nicht kopiert.|  
  
 Beachten Sie, dass nicht festgelegte Eigenschaften nicht kopiert werden oder sind schreibgeschützte Eigenschaften.  
  
 Erstellen Sie eine Kopie der <xref:System.Windows.Freezable> , nicht fixiert ist, verwenden die <xref:System.Windows.Freezable.CloneCurrentValue%2A> Methode.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Diese Methode verwendet die virtuelle <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" /> Methode, um den Klon zu erstellen.</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected virtual void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezable.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</param>
        <summary>Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />. If the object has animated dependency properties, their current animated values are copied.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, indem die <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> Methode und sollte nicht aufgerufen werden direkt aus Ihrem Code, außer wenn beim Überschreiben dieser Methode die basisimplementierung aufrufen. Rufen Sie zum Erstellen einer fixierten Kopie des aktuellen Objekts <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> müssen diese Methode nicht direkt aufrufen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Bei der Ableitung von <see cref="T:System.Windows.Freezable" />, müssen Sie möglicherweise diese Methode überschreiben. Gründe für die außer Kraft setzen, umfassen Folgendes:-die abgeleitete Klasse verfügt über Daten, die nicht über Abhängigkeitseigenschaften verfügbar gemacht werden.  -Die abgeleitete Klasse muss eine zusätzliche Initialisierung-Aufgaben, die nicht erreicht werden kann, indem Sie einfach überschreiben ausführen <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Dies gilt z. B. wenn die abgeleitete Klasse implementiert <see cref="T:System.ComponentModel.ISupportInitialize" />.  Klassen, die alle Daten in Abhängigkeitseigenschaften speichern und keine zusätzlichen Initialisierungsaufgaben ausführen, müssen nicht außer Kraft setzen <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.  Es ist wichtig, dass alle Implementierungen dieser Methode die basisimplementierung aufrufen. Implementierungen sollten nur Aufgaben ausführen, die von der Standardimplementierung nicht ausgeführt wird. Die Standardimplementierung erstellt einen neuen <see cref="T:System.Windows.Freezable" /> mithilfe der <see cref="M:System.Windows.Freezable.CreateInstance" /> -Methode und führt tiefe Kopien nicht fixierten Freezable-Objekte und alle anderen beschreibbaren flache Kopien lokal darin enthaltenen Eigenschaften festgelegt. Wenn das Objekt von datengebundenen Abhängigkeitseigenschaften verfügt, datenbindungen, die beim Übertragungsvorgang kopiert werden, aber Sie werden möglicherweise nicht mehr aufgelöst; Weitere Informationen zum Klonen von datengebundenen Objekten finden Sie unter [Freezable-Objekte Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). Wenn das Objekt über animierte Abhängigkeitseigenschaften verfügt, wird der aktuelle animierte Wert dieser Eigenschaften wird kopiert, aber die Animationen sind nicht.  Schreibgeschützte Abhängigkeitseigenschaften innerhalb einer <see cref="T:System.Windows.Freezable" /> werden durch diese Standardimplementierung nicht kopiert.  Wenn Sie diese Methode überschreiben, müssen Sie die basisimplementierung aufrufen.  Sie müssen sich nicht um <see cref="M:System.Windows.Freezable.Freeze" /> Werte, wie sie kopiert werden.  Das Ergebnis ist gesperrt, indem <see cref="M:System.Windows.Freezable.GetAsFrozen" /> vor der Rückgabe.</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrozen">
      <MemberSignature Language="C#" Value="public bool IsFrozen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Freezable.IsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFrozen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFrozen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFrozen : bool" Usage="System.Windows.Freezable.IsFrozen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the object is currently modifiable.</summary>
        <value>
          <see langword="true" /> Wenn das Objekt fixiert ist und kann nicht geändert werden; <see langword="false" /> , wenn das Objekt geändert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Versuchen, ein Objekt zu ändern. bei der <xref:System.Windows.Freezable.IsFrozen%2A> -Eigenschaft ist `true` löst eine <xref:System.InvalidOperationException>.  
  
 Diese Eigenschaft ist schreibgeschützt und aus der Perspektive der Object-Modell. Teil der Dokumentation zu <xref:System.Windows.Freezable> Verhalten möglicherweise ganz zu schweigen "legt diese fest <xref:System.Windows.Freezable.IsFrozen%2A> zu `true`" oder ähnliche Sprache, bei der das Verhalten der anderen Methoden der Erörterung <xref:System.Windows.Freezable>, aber dies geschieht intern in der Klasseninstanzen Wenn Methoden der Instanz die privaten Variablen bearbeiten, die in der abstrakten Klasse vorhanden sein. Um den Wert dieser Eigenschaft festzulegen, rufen Sie <xref:System.Windows.Freezable.Freeze%2A>. Dies effektiv ist ein Einmaliger Vorgang so ändern Sie die <xref:System.Windows.Freezable.IsFrozen%2A> Eigenschaft aus der anfängliche Standardwert `false` -Zustand in den `true` Zustand. Es gibt keine Möglichkeit zum Festlegen des Werts an `false`. Stattdessen könnten Sie jede tiefe Kopie, die von der ursprünglichen ändern (siehe die <xref:System.Windows.Freezable.Clone%2A> Methode). Dies ist beabsichtigt und eine abgeleitete Klasse Verhalten sollte bei Anwendung auf die Fälle, in denen die <xref:System.Windows.Freezable> Muster ist hilfreich.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnChanged : unit -&gt; unit&#xA;override this.OnChanged : unit -&gt; unit" Usage="freezable.OnChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the current <see cref="T:System.Windows.Freezable" /> object is modified.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn die <xref:System.Windows.Freezable.Changed> Ereignis auftritt.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie eine abgeleitete Klasse implementieren <see cref="T:System.Windows.Freezable" />, Sie können angeben, überschreiben diese Methode zum Durchführen von Aufgaben.</para>
        </block>
        <altmember cref="E:System.Windows.Freezable.Changed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OnFreezablePropertyChanged">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ensures that appropriate context pointers are established for a data member of type <see cref="T:System.Windows.DependencyObject" /> that has just been modified.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnFreezablePropertyChanged">
      <MemberSignature Language="C#" Value="protected void OnFreezablePropertyChanged (System.Windows.DependencyObject oldValue, System.Windows.DependencyObject newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnFreezablePropertyChanged(class System.Windows.DependencyObject oldValue, class System.Windows.DependencyObject newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnFreezablePropertyChanged (oldValue As DependencyObject, newValue As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnFreezablePropertyChanged(System::Windows::DependencyObject ^ oldValue, System::Windows::DependencyObject ^ newValue);" />
      <MemberSignature Language="F#" Value="member this.OnFreezablePropertyChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="freezable.OnFreezablePropertyChanged (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="newValue" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldValue">The previous value of the data member.</param>
        <param name="newValue">The current value of the data member.</param>
        <summary>Ensures that appropriate context pointers are established for a <see cref="T:System.Windows.DependencyObjectType" /> data member that has just been set.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sollte aufgerufen werden, indem <xref:System.Windows.Freezable> erben jedes Mal eine <xref:System.Windows.DependencyObject> Datenmember, die nicht als gespeichert ist eine <xref:System.Windows.DependencyProperty> festgelegt ist.  
  
 Diese Methode muss nicht aufgerufen werden, damit <xref:System.Windows.DependencyObject> Datenmember, die gespeichert werden, mithilfe einer <xref:System.Windows.DependencyProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreezablePropertyChanged">
      <MemberSignature Language="C#" Value="protected void OnFreezablePropertyChanged (System.Windows.DependencyObject oldValue, System.Windows.DependencyObject newValue, System.Windows.DependencyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnFreezablePropertyChanged(class System.Windows.DependencyObject oldValue, class System.Windows.DependencyObject newValue, class System.Windows.DependencyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnFreezablePropertyChanged (oldValue As DependencyObject, newValue As DependencyObject, property As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnFreezablePropertyChanged(System::Windows::DependencyObject ^ oldValue, System::Windows::DependencyObject ^ newValue, System::Windows::DependencyProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.OnFreezablePropertyChanged : System.Windows.DependencyObject * System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; unit" Usage="freezable.OnFreezablePropertyChanged (oldValue, newValue, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="newValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="property" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="oldValue">The previous value of the data member.</param>
        <param name="newValue">The current value of the data member.</param>
        <param name="property">The property that changed.</param>
        <summary>This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="freezable.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Event data that contains information about which property changed, and its old and new values.</param>
        <summary>Overrides the <see cref="T:System.Windows.DependencyObject" /> implementation of <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> to also invoke any <see cref="E:System.Windows.Freezable.Changed" /> handlers in response to a changing dependency property of type <see cref="T:System.Windows.Freezable" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Ereignisdaten enthalten nur Informationen zu den <xref:System.Windows.Freezable> selbst. Alle Informationen für die untergeordnete Eigenschaft abgerufen werden muss, bis die <xref:System.Windows.Freezable.Changed> Handler.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPreamble">
      <MemberSignature Language="C#" Value="protected void ReadPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.ReadPreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadPreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadPreamble();" />
      <MemberSignature Language="F#" Value="member this.ReadPreamble : unit -&gt; unit" Usage="freezable.ReadPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ensures that the <see cref="T:System.Windows.Freezable" /> is being accessed from a valid thread. Inheritors of <see cref="T:System.Windows.Freezable" /> must call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that reads data members that are not dependency properties.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Abgeleitete Klassen <see cref="T:System.Windows.Freezable" /> aufrufen, sollte die <see cref="M:System.Windows.Freezable.ReadPreamble" /> -Methode auf, bevor sie versuchen, alle Member zuzugreifen, die keine Abhängigkeitseigenschaften sind. Die <see cref="M:System.Windows.Freezable.WritePreamble" /> -Methode aufgerufen werden soll, bevor solche Member in geschrieben werden.  Diese Methode effektiv macht nichts anderes als Aufrufen <see cref="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />.</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.WritePreamble" />
      </Docs>
    </Member>
    <Member MemberName="WritePostscript">
      <MemberSignature Language="C#" Value="protected void WritePostscript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePostscript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.WritePostscript" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePostscript ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePostscript();" />
      <MemberSignature Language="F#" Value="member this.WritePostscript : unit -&gt; unit" Usage="freezable.WritePostscript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Raises the <see cref="E:System.Windows.Freezable.Changed" /> event for the <see cref="T:System.Windows.Freezable" /> and invokes its <see cref="M:System.Windows.Freezable.OnChanged" /> method. Classes that derive from <see cref="T:System.Windows.Freezable" /> should call this method at the end of any API that modifies class members that are not stored as dependency properties.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Abgeleitete Klassen <see cref="T:System.Windows.Freezable" /> sollten diese Methode am Ende jeder API, die einen Klassenmember, die nicht ändert als gespeichert Aufrufen einer <see cref="T:System.Windows.DependencyProperty" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WritePreamble">
      <MemberSignature Language="C#" Value="protected void WritePreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.WritePreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePreamble();" />
      <MemberSignature Language="F#" Value="member this.WritePreamble : unit -&gt; unit" Usage="freezable.WritePreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verifies that the <see cref="T:System.Windows.Freezable" /> is not frozen and that it is being accessed from a valid threading context. <see cref="T:System.Windows.Freezable" /> inheritors should call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that writes to data members that are not dependency properties.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> so Überprüfen der Threadkontext kann zugegriffen werden, und es wird eine Ausnahme ausgelöst, wenn die <xref:System.Windows.Freezable> Instanz ist bereits eingefroren.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Freezable" /> instance is frozen and cannot have its members written to.</exception>
        <block subset="none" type="overrides">
          <para>Abgeleitete Klassen <see cref="T:System.Windows.Freezable" /> sollten Aufrufen <see cref="M:System.Windows.Freezable.WritePreamble" /> vor dem Schreiben von Elementen, die keine Abhängigkeitseigenschaften sind. Wenn Sie aufrufen <see cref="M:System.Windows.Freezable.WritePreamble" /> in einen [! Include[TLA#tla_api](~/Includes/tlasharptla-API-MD.MD)], können Sie einen Aufruf von weglassen <see cref="M:System.Windows.Freezable.ReadPreamble" />.</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.ReadPreamble" />
      </Docs>
    </Member>
  </Members>
</Type>