<Type Name="Style" FullName="System.Windows.Style">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c5c6e0e35f0a2174c5431bd602871bd1c84a59ac" /><Meta Name="ms.sourcegitcommit" Value="33529b5cc32683b91d3422992fb4dc422f85782b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/17/2020" /><Meta Name="ms.locfileid" Value="88264889" /></Metadata><TypeSignature Language="C#" Value="public class Style : System.Windows.Threading.DispatcherObject, System.Windows.Markup.IAddChild, System.Windows.Markup.INameScope, System.Windows.Markup.IQueryAmbient" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Style extends System.Windows.Threading.DispatcherObject implements class System.Windows.Markup.IAddChild, class System.Windows.Markup.INameScope, class System.Windows.Markup.IQueryAmbient" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Style" />
  <TypeSignature Language="VB.NET" Value="Public Class Style&#xA;Inherits DispatcherObject&#xA;Implements IAddChild, INameScope, IQueryAmbient" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class Style : System::Windows::Threading::DispatcherObject, System::Windows::Markup::IAddChild, System::Windows::Markup::INameScope, System::Windows::Markup::IQueryAmbient" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type Style = class&#xA;    inherit DispatcherObject&#xA;    interface IAddChild&#xA;    interface INameScope&#xA;    interface IQueryAmbient" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C#" Value="public class Style : System.Windows.Threading.DispatcherObject, System.Windows.Markup.IAddChild, System.Windows.Markup.INameScope" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Style extends System.Windows.Threading.DispatcherObject implements class System.Windows.Markup.IAddChild, class System.Windows.Markup.INameScope" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <TypeSignature Language="VB.NET" Value="Public Class Style&#xA;Inherits DispatcherObject&#xA;Implements IAddChild, INameScope" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C++ CLI" Value="public ref class Style : System::Windows::Threading::DispatcherObject, System::Windows::Markup::IAddChild, System::Windows::Markup::INameScope" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <TypeSignature Language="F#" Value="type Style = class&#xA;    inherit DispatcherObject&#xA;    interface INameScope&#xA;    interface IAddChild" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Style extends System.Windows.Threading.DispatcherObject implements class System.Windows.Markup.IAddChild, class System.Windows.Markup.INameScope, class System.Windows.Markup.IQueryAmbient" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type Style = class&#xA;    inherit DispatcherObject&#xA;    interface INameScope&#xA;    interface IAddChild&#xA;    interface IQueryAmbient" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.INameScope</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Windows.Markup.IQueryAmbient</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Markup.ContentProperty("Setters")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Markup.ContentProperty("Setters")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Markup.DictionaryKeyProperty("TargetType")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Markup.DictionaryKeyProperty("TargetType")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dc420-101">Ermöglicht die gemeinsame Nutzung von Eigenschaften, Ressourcen und Ereignishandlern zwischen Instanzen eines Typs.</span><span class="sxs-lookup"><span data-stu-id="dc420-101">Enables the sharing of properties, resources, and event handlers between instances of a type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc420-102">Sie können <xref:System.Windows.Style> für alle Elemente festlegen, die von oder abgeleitet werden <xref:System.Windows.FrameworkElement> <xref:System.Windows.FrameworkContentElement> .</span><span class="sxs-lookup"><span data-stu-id="dc420-102">You can set a <xref:System.Windows.Style> on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="dc420-103">Ein Stil wird am häufigsten als Ressource innerhalb des Abschnitts deklariert <xref:System.Windows.Application.Resources%2A> .</span><span class="sxs-lookup"><span data-stu-id="dc420-103">A style is most commonly declared as a resource inside the <xref:System.Windows.Application.Resources%2A> section.</span></span> <span data-ttu-id="dc420-104">Da es sich bei Stilen um Ressourcen handelt, werden dieselben Bereichs Regeln befolgt, die für alle Ressourcen gelten. Wenn Sie also einen Stil deklarieren, wirkt er sich darauf aus, wo er angewendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="dc420-104">Because styles are resources, they obey the same scoping rules that apply to all resources, so where you declare a style affects where it can be applied.</span></span> <span data-ttu-id="dc420-105">Wenn Sie beispielsweise den Stil im Stamm Element ihrer Anwendungs Definitionsdatei deklarieren [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] , kann der Stil an beliebiger Stelle in der Anwendung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dc420-105">If, for instance, you declare the style in the root element of your application definition [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file, the style can be used anywhere in your application.</span></span> <span data-ttu-id="dc420-106">Wenn Sie eine Navigations Anwendung erstellen und den Stil in einer der Anwendungs Dateien deklarieren [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] , kann der Stil nur in dieser Datei verwendet werden [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="dc420-106">If you are creating a navigation application and declare the style in one of the application's [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] files, the style can be used only in that [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</span></span> <span data-ttu-id="dc420-107">Weitere Informationen zu Bereichs Regeln für Ressourcen finden Sie unter [XAML-Ressourcen](/dotnet/framework/wpf/advanced/xaml-resources).</span><span class="sxs-lookup"><span data-stu-id="dc420-107">For more information on scoping rules for resources, see [XAML Resources](/dotnet/framework/wpf/advanced/xaml-resources).</span></span>  
  
 <span data-ttu-id="dc420-108">Die Format Deklaration besteht aus einem- <xref:System.Windows.Style> Objekt, das eine Auflistung von einem oder mehreren- <xref:System.Windows.Setter> Objekten enthält.</span><span class="sxs-lookup"><span data-stu-id="dc420-108">The style declaration consists of a <xref:System.Windows.Style> object that contains a collection of one or more <xref:System.Windows.Setter> objects.</span></span> <span data-ttu-id="dc420-109">Jede <xref:System.Windows.Setter> besteht aus einem <xref:System.Windows.Setter.Property%2A> und einem <xref:System.Windows.Setter.Value%2A> .</span><span class="sxs-lookup"><span data-stu-id="dc420-109">Each <xref:System.Windows.Setter> consists of a <xref:System.Windows.Setter.Property%2A> and a <xref:System.Windows.Setter.Value%2A>.</span></span> <span data-ttu-id="dc420-110">Die-Eigenschaft ist der Name der-Eigenschaft des Elements, auf das der Stil angewendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc420-110">The property is the name of the property of the element the style is to apply to.</span></span> <span data-ttu-id="dc420-111">Nachdem der Stil als Ressource deklariert wurde, kann auf ihn genauso wie auf jede andere Ressource verwiesen werden.</span><span class="sxs-lookup"><span data-stu-id="dc420-111">After the style is declared as a resource, it can then be referenced just like any other resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc420-112">Wenn mehr als ein Setter in der Setter-Auflistung mit dem gleichen- <xref:System.Windows.Setter.Property%2A> Eigenschafts Wert vorhanden ist, wird der als letzter deklarierte Setter verwendet.</span><span class="sxs-lookup"><span data-stu-id="dc420-112">If there is more than one setter in the setter collection with the same <xref:System.Windows.Setter.Property%2A> property value, the setter that is declared last is used.</span></span> <span data-ttu-id="dc420-113">Wenn Sie einen Wert für dieselbe Eigenschaft in einem Stil und direkt auf einem Element festlegen, hat der Wert, der für das Element direkt festgelegt wurde, Vorrang.</span><span class="sxs-lookup"><span data-stu-id="dc420-113">Similarly, if you set a value for the same property in a style and on an element directly, the value set on the element directly takes precedence.</span></span>  
  
 <span data-ttu-id="dc420-114">Das Formatvorlagen [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] -und Vorlagen Modell ermöglicht die Wartung und Freigabe eines Sehens sowie die Trennung von Präsentation und Logik.</span><span class="sxs-lookup"><span data-stu-id="dc420-114">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] styling and templating model allows maintenance and sharing of a look as well as the separation of presentation and logic.</span></span> <span data-ttu-id="dc420-115">Das Formatierungs-und Vorlagen Modell umfasst eine Reihe von Features, mit denen Sie Ihre anpassen können [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="dc420-115">The styling and templating model includes a suite of features that enable you to customize your [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="dc420-116">Diese featuresuite beinhaltet die- <xref:System.Windows.Style> Klasse und die folgenden:</span><span class="sxs-lookup"><span data-stu-id="dc420-116">This suite of features includes the <xref:System.Windows.Style> class as well as the following:</span></span>  
  
-   <xref:System.Windows.Trigger>  
  
-   <span data-ttu-id="dc420-117"><xref:System.Windows.EventTrigger> und <xref:System.Windows.Media.Animation.Storyboard></span><span class="sxs-lookup"><span data-stu-id="dc420-117"><xref:System.Windows.EventTrigger> and <xref:System.Windows.Media.Animation.Storyboard></span></span>  
  
-   <xref:System.Windows.Controls.ControlTemplate>  
  
-   <xref:System.Windows.DataTemplate>  
  
 <span data-ttu-id="dc420-118">Weitere Informationen finden Sie unter [Erstellen von Formaten und Vorlagen](/dotnet/framework/wpf/controls/styling-and-templating).</span><span class="sxs-lookup"><span data-stu-id="dc420-118">For more information, see [Styling and Templating](/dotnet/framework/wpf/controls/styling-and-templating).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc420-119">Das folgende Beispiel zeigt eine Format Deklaration, die sich <xref:System.Windows.Controls.Control.Background%2A> auf die-Eigenschaft eines-Objekts auswirkt <xref:System.Windows.Controls.Control> .</span><span class="sxs-lookup"><span data-stu-id="dc420-119">The following example shows a style declaration that will affect the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Controls.Control>.</span></span>  
  
 [!code-xaml[StyleOvw01#StyleSimple](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#stylesimple)]   
  
 <span data-ttu-id="dc420-120">Gehen Sie folgendermaßen vor, um den obigen Stil anzuwenden:</span><span class="sxs-lookup"><span data-stu-id="dc420-120">To apply the above style, do the following:</span></span>  
  
 [!code-xaml[StyleOvw01#StyleSimpleApplied](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#stylesimpleapplied)]
  
 <span data-ttu-id="dc420-121">Mithilfe der-Eigenschaft können Sie auch Stile auf alle Elemente eines bestimmten Typs anwenden <xref:System.Windows.Style.TargetType%2A> .</span><span class="sxs-lookup"><span data-stu-id="dc420-121">You can also apply styles to all elements of a given type by using the <xref:System.Windows.Style.TargetType%2A> property.</span></span> <span data-ttu-id="dc420-122">Das Hinzufügen des Zieltyps zum Stil bedeutet, dass Sie die Eigenschaft, die Sie mit der Syntax festlegen, nicht mehr vollständig qualifizieren müssen `ClassName.PropertyName` .</span><span class="sxs-lookup"><span data-stu-id="dc420-122">Adding the target type to the style means that you no longer have to fully qualify the property you are setting with the `ClassName.PropertyName` syntax.</span></span> <span data-ttu-id="dc420-123">Im folgenden Beispiel wird ein Stil definiert, der auf jedes Element angewendet wird <xref:System.Windows.Controls.TextBlock> .</span><span class="sxs-lookup"><span data-stu-id="dc420-123">The following example defines a style that will be applied to every <xref:System.Windows.Controls.TextBlock> element.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#1)]   
  
> [!NOTE]
>  <span data-ttu-id="dc420-124">Viele Steuer [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Elemente bestehen aus einer Kombination aus anderen Steuer [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Elementen, sodass das Erstellen eines Stils, der für alle Steuerelemente eines Typs gilt, weitreichende Auswirkungen haben kann.</span><span class="sxs-lookup"><span data-stu-id="dc420-124">Many [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls consist of a combination of other [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls, so creating a style that applies to all controls of a type can have broad impact.</span></span> <span data-ttu-id="dc420-125">Wenn Sie z. b. einen Stil erstellen, der auf die Steuer <xref:System.Windows.Controls.TextBlock> Elemente in einem abzielt <xref:System.Windows.Controls.Canvas> , wird der Stil auf alle- <xref:System.Windows.Controls.TextBlock> Steuerelemente im Zeichenbereich angewendet, auch wenn der <xref:System.Windows.Controls.TextBlock> Teil eines anderen Steuer Elements ist, z <xref:System.Windows.Controls.ListBox> . b..</span><span class="sxs-lookup"><span data-stu-id="dc420-125">For instance, if you create a style that targets the <xref:System.Windows.Controls.TextBlock> controls in a <xref:System.Windows.Controls.Canvas>, the style is applied to all <xref:System.Windows.Controls.TextBlock> controls in the canvas, even if the <xref:System.Windows.Controls.TextBlock> is part of another control, such as a <xref:System.Windows.Controls.ListBox>.</span></span>  
  
 <span data-ttu-id="dc420-126">Informationen zum Erweitern oder Erben eines definierten Stils finden Sie auf der <xref:System.Windows.Style.BasedOn%2A> Seite.</span><span class="sxs-lookup"><span data-stu-id="dc420-126">For information on how to extend or inherit from a defined style, see the <xref:System.Windows.Style.BasedOn%2A> page.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/desktop-wpf/xaml-services/xkey-directive"><span data-ttu-id="dc420-127">x:Schlüssel-Attribut</span><span class="sxs-lookup"><span data-stu-id="dc420-127">x:Key Attribute</span></span></related>
    <related type="Article" href="/dotnet/desktop-wpf/xaml-services/xtype-markup-extension"><span data-ttu-id="dc420-128">x:Type-Markuperweiterung</span><span class="sxs-lookup"><span data-stu-id="dc420-128">x:Type Markup Extension</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="dc420-129">Einführung in das Beispiel für formatieren und Vorlagen</span><span class="sxs-lookup"><span data-stu-id="dc420-129">Introduction to Styling and Templating Sample</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc420-130">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Style" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc420-130">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc420-131">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Style" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc420-131">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc420-132">Dieser konstruktorbefehl erfordert eine verzögerte Validierung von <xref:System.Windows.Style.TargetType%2A> und <xref:System.Windows.Style.BasedOn%2A> Stiltyp.</span><span class="sxs-lookup"><span data-stu-id="dc420-132">This constructor call requires delayed validation of <xref:System.Windows.Style.TargetType%2A> and <xref:System.Windows.Style.BasedOn%2A> style type.</span></span> <span data-ttu-id="dc420-133">Wenn diese außerhalb des Kontexts des Parsers verwendet wird, ist das Verhalten nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="dc420-133">If this is used outside the context of the parser, behavior is undefined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style (Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style(Type ^ targetType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Style : Type -&gt; System.Windows.Style" Usage="new System.Windows.Style targetType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="targetType"><span data-ttu-id="dc420-134">Der Typ, auf den der Stil angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="dc420-134">The type to which the style will apply.</span></span></param>
        <summary><span data-ttu-id="dc420-135">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Style" />-Klasse zur Verwendung für den angegebenen <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="dc420-135">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class to use on the specified <see cref="T:System.Type" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style (Type targetType, System.Windows.Style basedOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type targetType, class System.Windows.Style basedOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.#ctor(System.Type,System.Windows.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetType As Type, basedOn As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style(Type ^ targetType, System::Windows::Style ^ basedOn);" />
      <MemberSignature Language="F#" Value="new System.Windows.Style : Type * System.Windows.Style -&gt; System.Windows.Style" Usage="new System.Windows.Style (targetType, basedOn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="basedOn" Type="System.Windows.Style" />
      </Parameters>
      <Docs>
        <param name="targetType"><span data-ttu-id="dc420-136">Der Typ, auf den der Stil angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="dc420-136">The type to which the style will apply.</span></span></param>
        <param name="basedOn"><span data-ttu-id="dc420-137">Der Stil, der als Grundlage für diesen Stil verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc420-137">The style to base this style on.</span></span></param>
        <summary><span data-ttu-id="dc420-138">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Style" />-Klasse zur Verwendung für den angegebenen <see cref="T:System.Type" /> und auf Grundlage des angegebenen <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="dc420-138">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class to use on the specified <see cref="T:System.Type" /> and based on the specified <see cref="T:System.Windows.Style" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BasedOn">
      <MemberSignature Language="C#" Value="public System.Windows.Style BasedOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style BasedOn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.BasedOn" />
      <MemberSignature Language="VB.NET" Value="Public Property BasedOn As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ BasedOn { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BasedOn : System.Windows.Style with get, set" Usage="System.Windows.Style.BasedOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Windows.Markup.Ambient]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Markup.Ambient&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc420-139">Ruft einen definierten Stil ab, der die Grundlage für den aktuellen Stil ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="dc420-139">Gets or sets a defined style that is the basis of the current style.</span></span></summary>
        <value><span data-ttu-id="dc420-140">Ein definierter Stil, der die Grundlage für den aktuellen Stil darstellt.</span><span class="sxs-lookup"><span data-stu-id="dc420-140">A defined style that is the basis of the current style.</span></span> <span data-ttu-id="dc420-141">Der Standardwert ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc420-141">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc420-142">Jeder Stil unterstützt nur einen <xref:System.Windows.Style.BasedOn%2A> Wert.</span><span class="sxs-lookup"><span data-stu-id="dc420-142">Each style only supports one <xref:System.Windows.Style.BasedOn%2A> value.</span></span>  
  
<a name="xamlAttributeUsage_BasedOn"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="dc420-143">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="dc420-143">XAML Attribute Usage</span></span>  
  
```  
<object BasedOn="myStyle" .../>  
```  
  
<a name="xamlValues_BasedOn"></a>   
## <a name="xaml-values"></a><span data-ttu-id="dc420-144">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="dc420-144">XAML Values</span></span>  
 <span data-ttu-id="dc420-145">*Meinstil*</span><span class="sxs-lookup"><span data-stu-id="dc420-145">*myStyle*</span></span>  
 <span data-ttu-id="dc420-146">Ein vorhandener Stil.</span><span class="sxs-lookup"><span data-stu-id="dc420-146">An existing style.</span></span> <span data-ttu-id="dc420-147">In der Regel verwenden Sie die [Markup Erweiterungen und WPF-XAML](/dotnet/framework/wpf/advanced/markup-extensions-and-wpf-xaml) , um auf einen vorhandenen Stil zu verweisen.</span><span class="sxs-lookup"><span data-stu-id="dc420-147">Typically, you use the [Markup Extensions and WPF XAML](/dotnet/framework/wpf/advanced/markup-extensions-and-wpf-xaml) to refer to an existing style.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc420-148">Es gibt mehrere Möglichkeiten, wie Stile in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] erweitert oder geerbt werden können.</span><span class="sxs-lookup"><span data-stu-id="dc420-148">There are several ways that styles in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can be extended or inherited.</span></span> <span data-ttu-id="dc420-149">Stile können über diese Eigenschaft auf anderen Stilen basieren.</span><span class="sxs-lookup"><span data-stu-id="dc420-149">Styles can be based on other styles through this property.</span></span> <span data-ttu-id="dc420-150">Wenn Sie diese Eigenschaft verwenden, erbt der neue Stil die Werte des ursprünglichen Stils, die nicht explizit im neuen Stil neu definiert werden.</span><span class="sxs-lookup"><span data-stu-id="dc420-150">When you use this property, the new style will inherit the values of the original style that are not explicitly redefined in the new style.</span></span> <span data-ttu-id="dc420-151">Im folgenden Beispiel `Style2` erbt den <xref:System.Windows.Controls.Control.Background%2A?displayProperty=nameWithType> Wert von `Yellow` und fügt den <xref:System.Windows.Controls.Control.Foreground%2A?displayProperty=nameWithType> Wert hinzu `Blue` .</span><span class="sxs-lookup"><span data-stu-id="dc420-151">In the following example, `Style2` inherits the <xref:System.Windows.Controls.Control.Background%2A?displayProperty=nameWithType> value of `Yellow`, and adds a <xref:System.Windows.Controls.Control.Foreground%2A?displayProperty=nameWithType> value of `Blue`.</span></span>  
  
 [!code-xaml[StyleOvw01#ExtendingStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#extendingstyle)]   
  
 <span data-ttu-id="dc420-152">Entsprechend können Stile auf dem Stil eines vorhandenen [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Elements basieren, wie im folgenden Beispiel, in dem die neue Formatvorlage auf dem Stil eines- <xref:System.Windows.Controls.TextBlock> Elements basiert.</span><span class="sxs-lookup"><span data-stu-id="dc420-152">Similarly, styles can be based on the style of an existing [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] element, as in the following example where the new style is based on the style of a <xref:System.Windows.Controls.TextBlock> element.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#2)]   
  
> [!NOTE]
>  <span data-ttu-id="dc420-153">Wenn Sie einen Stil mit einer <xref:System.Windows.Style.TargetType%2A> Eigenschaft erstellen und auf einem anderen Stil basieren, der auch eine <xref:System.Windows.Style.TargetType%2A> Eigenschaft definiert, muss der Zieltyp des abgeleiteten Stils mit dem Typ des Basistyps identisch sein oder davon abgeleitet sein.</span><span class="sxs-lookup"><span data-stu-id="dc420-153">If you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the type of the base style.</span></span>  
  
 <span data-ttu-id="dc420-154">Für bestimmte Typen definierte Stile können auch auf anderen Stilen basieren, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc420-154">Styles defined for specific types can also be based on other styles, as in the following example.</span></span>  
  
 [!code-xaml[StyleOvw01#ExtendingStyleTargetType](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#extendingstyletargettype)]   
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="dc420-155">Einführung in das Beispiel für formatieren und Vorlagen</span><span class="sxs-lookup"><span data-stu-id="dc420-155">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int&#xA;override this.GetHashCode : unit -&gt; int" Usage="style.GetHashCode " FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="style.GetHashCode " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc420-156">Gibt den Hashcode für diesen <see cref="T:System.Windows.Style" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="dc420-156">Returns the hash code for this <see cref="T:System.Windows.Style" />.</span></span></summary>
        <returns><span data-ttu-id="dc420-157">Der Hashcode für diese <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="dc420-157">The hash code for this <see cref="T:System.Windows.Style" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Windows.Style.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc420-158">Ruft einen Wert ab, der angibt, ob der Stil schreibgeschützt ist und nicht geändert werden kann.</span><span class="sxs-lookup"><span data-stu-id="dc420-158">Gets a value that indicates whether the style is read-only and cannot be changed.</span></span></summary>
        <value><span data-ttu-id="dc420-159"><see langword="true" />, wenn der Stil versiegelt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc420-159"><see langword="true" /> if the style is sealed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc420-160">Ein Stil ist versiegelt, wenn ein anderer Stil darauf basiert oder wenn er zum ersten Mal angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="dc420-160">A style is sealed when another style is based on it or when it is applied for the first time.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Style.BasedOn" />
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit&#xA;override this.RegisterName : string * obj -&gt; unit" Usage="style.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dc420-161">Der zu registrierende Name.</span><span class="sxs-lookup"><span data-stu-id="dc420-161">The name to register.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="dc420-162">Das Objekt, das dem angegebenen <paramref name="name" /> zugeordnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc420-162">The object to map to the specified <paramref name="name" />.</span></span></param>
        <summary><span data-ttu-id="dc420-163">Registriert ein neues Name/Objekt-Paar im aktuellen Namescope.</span><span class="sxs-lookup"><span data-stu-id="dc420-163">Registers a new name-object pair in the current namescope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public System.Windows.ResourceDictionary Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ResourceDictionary Resources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As ResourceDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResourceDictionary ^ Resources { System::Windows::ResourceDictionary ^ get(); void set(System::Windows::ResourceDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resources : System.Windows.ResourceDictionary with get, set" Usage="System.Windows.Style.Resources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Windows.Markup.Ambient]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Markup.Ambient&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc420-164">Ruft die Auflistung von Ressourcen ab, die innerhalb des Bereichs dieses Stils verwendet werden können, oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="dc420-164">Gets or sets the collection of resources that can be used within the scope of this style.</span></span></summary>
        <value><span data-ttu-id="dc420-165">Die Ressourcen, die im Bereich dieses Stils verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="dc420-165">The resources that can be used within the scope of this style.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Resources"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="dc420-166">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="dc420-166">XAML Property Element Usage</span></span>  
  
```xaml
<object>  
  <object.Resources>  
    oneOrMoreResourceElements  
  </object.Resources>  
</object>
```

<span data-ttu-id="dc420-167">- oder -</span><span class="sxs-lookup"><span data-stu-id="dc420-167">-or-</span></span>

```xaml
<object>  
  <object.Resources>  
    <ResourceDictionary Source="externalDictionarySource"/>  
  </object.Resources>  
</object>  
```

<a name="xamlValues_Resources"></a>   
## <a name="xaml-values"></a><span data-ttu-id="dc420-168">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="dc420-168">XAML Values</span></span>  
 <span data-ttu-id="dc420-169">*oneormoreresourceelements*</span><span class="sxs-lookup"><span data-stu-id="dc420-169">*oneOrMoreResourceElements*</span></span>  
 <span data-ttu-id="dc420-170">Mindestens ein Ressourcen Element.</span><span class="sxs-lookup"><span data-stu-id="dc420-170">One or more resource elements.</span></span> <span data-ttu-id="dc420-171">Um später in der [statikresource-Markup Erweiterung](/dotnet/framework/wpf/advanced/staticresource-markup-extension) oder der [dynamikresource-Markup Erweiterungs](/dotnet/framework/wpf/advanced/dynamicresource-markup-extension) Syntax in referenziert zu werden [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] , muss ein Ressourcen Element über ein- `x:Key` Attribut verfügen.</span><span class="sxs-lookup"><span data-stu-id="dc420-171">To be referenced later in either [StaticResource Markup Extension](/dotnet/framework/wpf/advanced/staticresource-markup-extension) or [DynamicResource Markup Extension](/dotnet/framework/wpf/advanced/dynamicresource-markup-extension) syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], a resource element must have an `x:Key` attribute.</span></span>  
  
 \<ResourceDictionary Source=" *externalDictionarySource*"/>  
 <span data-ttu-id="dc420-172">Eine externe Wörterbuch Quelle.</span><span class="sxs-lookup"><span data-stu-id="dc420-172">An external dictionary source.</span></span> <span data-ttu-id="dc420-173">Weitere Informationen finden Sie unter [zusammengeführte Ressourcen Wörterbücher](/dotnet/framework/wpf/advanced/merged-resource-dictionaries).</span><span class="sxs-lookup"><span data-stu-id="dc420-173">For details, see [Merged Resource Dictionaries](/dotnet/framework/wpf/advanced/merged-resource-dictionaries).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seal">
      <MemberSignature Language="C#" Value="public void Seal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.Seal" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seal ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seal();" />
      <MemberSignature Language="F#" Value="member this.Seal : unit -&gt; unit" Usage="style.Seal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc420-174">Sperrt diesen Stil und alle Factorys und Trigger, damit sie nicht geändert werden können.</span><span class="sxs-lookup"><span data-stu-id="dc420-174">Locks this style and all factories and triggers so they cannot be changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.Style.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc420-175">Ruft eine Auflistung von <see cref="T:System.Windows.Setter" />-Objekten und <see cref="T:System.Windows.EventSetter" />-Objekten ab.</span><span class="sxs-lookup"><span data-stu-id="dc420-175">Gets a collection of <see cref="T:System.Windows.Setter" /> and <see cref="T:System.Windows.EventSetter" /> objects.</span></span></summary>
        <value><span data-ttu-id="dc420-176">Eine Auflistung von <see cref="T:System.Windows.Setter" />-Objekten und <see cref="T:System.Windows.EventSetter" />-Objekten.</span><span class="sxs-lookup"><span data-stu-id="dc420-176">A collection of <see cref="T:System.Windows.Setter" /> and <see cref="T:System.Windows.EventSetter" /> objects.</span></span> <span data-ttu-id="dc420-177">Der Standard ist eine leere Auflistung.</span><span class="sxs-lookup"><span data-stu-id="dc420-177">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc420-178">Die- <xref:System.Windows.Style.Setters%2A> Eigenschaft eines- <xref:System.Windows.Style> Objekts kann nur aus Objekten bestehen, die zugewiesen werden können <xref:System.Windows.SetterBase> .</span><span class="sxs-lookup"><span data-stu-id="dc420-178">The <xref:System.Windows.Style.Setters%2A> property of a <xref:System.Windows.Style> object can consist only of objects assignable to <xref:System.Windows.SetterBase>.</span></span> <span data-ttu-id="dc420-179">Wenn Sie einem-Objekt ein untergeordnetes Element hinzufügen, wird dieses <xref:System.Windows.SetterBase> <xref:System.Windows.Style> implizit dem <xref:System.Windows.SetterBaseCollection> für das- <xref:System.Windows.Style> Objekt hinzugefügt</span><span class="sxs-lookup"><span data-stu-id="dc420-179">Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object.</span></span>  
  
 <span data-ttu-id="dc420-180">Eine explizite Verwendung eines Eigenschafts Elements für <xref:System.Windows.Style.Setters%2A> ist ebenfalls relativ häufig.</span><span class="sxs-lookup"><span data-stu-id="dc420-180">An explicit property element usage  for <xref:System.Windows.Style.Setters%2A> is also relatively common.</span></span> <span data-ttu-id="dc420-181">Dabei handelt es sich um eine Entscheidung über den Markup Stil, die manchmal zur Unterscheidung <xref:System.Windows.Style.Setters%2A> von <xref:System.Windows.Style.Resources%2A> -Elementen und- <xref:System.Windows.Style.Triggers%2A> Elementen in einem komplexen Stil</span><span class="sxs-lookup"><span data-stu-id="dc420-181">This is a markup style decision that can sometimes help distinguish <xref:System.Windows.Style.Setters%2A> from <xref:System.Windows.Style.Resources%2A> and <xref:System.Windows.Style.Triggers%2A> items in a complex style.</span></span> <span data-ttu-id="dc420-182">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="dc420-182">For example:</span></span>  
  
```  
<Style>  
  <Style.Setters>  
    <!--one or more SetterBase derived object elements here-->  
  </Style.Setters>  
</Style>  
```  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="dc420-183">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="dc420-183">XAML Property Element Usage</span></span>  
  
```  
<object>  
  oneOrMoreSetters  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a><span data-ttu-id="dc420-184">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="dc420-184">XAML Values</span></span>  
 <span data-ttu-id="dc420-185">*oneormoresetters*</span><span class="sxs-lookup"><span data-stu-id="dc420-185">*oneOrMoreSetters*</span></span>  
 <span data-ttu-id="dc420-186">Mindestens ein- <xref:System.Windows.Setter> oder- <xref:System.Windows.EventSetter> Objekt.</span><span class="sxs-lookup"><span data-stu-id="dc420-186">One or more <xref:System.Windows.Setter> or <xref:System.Windows.EventSetter> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc420-187">Das folgende Beispiel zeigt, wie diese Eigenschaft verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="dc420-187">The following example shows how to use this property.</span></span>  
  
 [!code-csharp[listboxitemstyle#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxItemStyle/CSharp/Pane1.xaml.cs#1)]
 [!code-vb[listboxitemstyle#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBoxItemStyle/VisualBasic/Pane1.xaml.vb#1)]  
  
 <span data-ttu-id="dc420-188">Wenn Sie einem-Objekt ein untergeordnetes Element hinzufügen, wird dieses <xref:System.Windows.SetterBase> <xref:System.Windows.Style> implizit dem <xref:System.Windows.SetterBaseCollection> für das- <xref:System.Windows.Style> Objekt hinzugefügt</span><span class="sxs-lookup"><span data-stu-id="dc420-188">Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object.</span></span> <span data-ttu-id="dc420-189">Folgendes <xref:System.Windows.EventSetter> wird implizit dem des-Stils hinzugefügt <xref:System.Windows.SetterBaseCollection> :</span><span class="sxs-lookup"><span data-stu-id="dc420-189">The following <xref:System.Windows.EventSetter> is implicitly added to the <xref:System.Windows.SetterBaseCollection> of the style:</span></span>  
  
 [!code-xaml[eventovwsupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Setter" />
        <altmember cref="T:System.Windows.EventSetter" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="dc420-190">Einführung in das Beispiel für formatieren und Vorlagen</span><span class="sxs-lookup"><span data-stu-id="dc420-190">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit" Usage="style.System.Windows.Markup.IAddChild.AddChild value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dc420-191">Das hinzuzufügende untergeordnete Objekt.</span><span class="sxs-lookup"><span data-stu-id="dc420-191">The child object to add.</span></span></param>
        <summary><span data-ttu-id="dc420-192">Fügt ein untergeordnetes Objekt hinzu.</span><span class="sxs-lookup"><span data-stu-id="dc420-192">Adds a child object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc420-193">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="dc420-193">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="dc420-194">Er kann nur verwendet werden, wenn die <xref:System.Windows.Style>-Instanz in eine <xref:System.Windows.Markup.IAddChild>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="dc420-194">It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddText : string -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddText : string -&gt; unit" Usage="style.System.Windows.Markup.IAddChild.AddText text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="dc420-195">Der dem Objekt hinzuzufügende Text.</span><span class="sxs-lookup"><span data-stu-id="dc420-195">The text to add to the object.</span></span></param>
        <summary><span data-ttu-id="dc420-196">Fügt dem Objekt den Textinhalt eines Knotens hinzu.</span><span class="sxs-lookup"><span data-stu-id="dc420-196">Adds the text content of a node to the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc420-197">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="dc420-197">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="dc420-198">Er kann nur verwendet werden, wenn die <xref:System.Windows.Style>-Instanz in eine <xref:System.Windows.Markup.IAddChild>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="dc420-198">It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.INameScope.FindName">
      <MemberSignature Language="C#" Value="object INameScope.FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Windows.Markup.INameScope.FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindName (name As String) As Object Implements INameScope.FindName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Windows.Markup.INameScope.FindName(System::String ^ name) = System::Windows::Markup::INameScope::FindName;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.INameScope.FindName : string -&gt; obj&#xA;override this.System.Windows.Markup.INameScope.FindName : string -&gt; obj" Usage="style.System.Windows.Markup.INameScope.FindName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.FindName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dc420-199">Der Namensbezeichner für das angeforderte Objekt.</span><span class="sxs-lookup"><span data-stu-id="dc420-199">The name identifier for the object being requested.</span></span></param>
        <summary><span data-ttu-id="dc420-200">Gibt ein Objekt zurück, das über den bereitgestellten kennzeichnenden Namen verfügt.</span><span class="sxs-lookup"><span data-stu-id="dc420-200">Returns an object that has the provided identifying name.</span></span></summary>
        <returns><span data-ttu-id="dc420-201">Das Objekt, falls gefunden.</span><span class="sxs-lookup"><span data-stu-id="dc420-201">The object, if found.</span></span> <span data-ttu-id="dc420-202">Gibt <see langword="null" /> zurück, wenn kein Objekt mit diesem Namen gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="dc420-202">Returns <see langword="null" /> if no object of that name was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc420-203">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="dc420-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="dc420-204">Er kann nur verwendet werden, wenn die <xref:System.Windows.Style>-Instanz in eine <xref:System.Windows.Markup.INameScope>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="dc420-204">It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.INameScope> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsAmbientPropertyAvailable (propertyName As String) As Boolean Implements IQueryAmbient.IsAmbientPropertyAvailable" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System::String ^ propertyName) = System::Windows::Markup::IQueryAmbient::IsAmbientPropertyAvailable;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable : string -&gt; bool&#xA;override this.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable : string -&gt; bool" Usage="style.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="dc420-205">Der Name der angeforderten Ambient-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc420-205">The name of the requested ambient property.</span></span></param>
        <summary><span data-ttu-id="dc420-206">Fragt ab, ob eine angegebene Ambient-Eigenschaft im aktuellen Bereich verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="dc420-206">Queries whether a specified ambient property is available in the current scope.</span></span></summary>
        <returns><span data-ttu-id="dc420-207"><see langword="true" />, wenn die angeforderte Ambient-Eigenschaft verfügbar ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc420-207"><see langword="true" /> if the requested ambient property is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.IQueryAmbient" />
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public Type TargetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TargetType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : Type with get, set" Usage="System.Windows.Style.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.Markup.Ambient]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Markup.Ambient&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc420-208">Ruft den Typ ab, für den dieser Stil vorgesehen ist, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="dc420-208">Gets or sets the type for which this style is intended.</span></span></summary>
        <value><span data-ttu-id="dc420-209">Der Zieltyp für diesen Stil.</span><span class="sxs-lookup"><span data-stu-id="dc420-209">The target type for this style.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc420-210">Sie können für jedes Element, das von oder abgeleitet wird, einen Stil festlegen <xref:System.Windows.FrameworkElement> <xref:System.Windows.FrameworkContentElement> .</span><span class="sxs-lookup"><span data-stu-id="dc420-210">You can set a style on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="dc420-211">Daher kann der Zieltyp ein beliebiges Element sein.</span><span class="sxs-lookup"><span data-stu-id="dc420-211">Therefore, your target type can be any of those elements.</span></span> <span data-ttu-id="dc420-212">Wenn Sie jedoch einen Stil mit einer Eigenschaft erstellen <xref:System.Windows.Style.TargetType%2A> und auf einem anderen Stil basieren, der auch eine <xref:System.Windows.Style.TargetType%2A> Eigenschaft definiert, muss der Zieltyp des abgeleiteten Stils mit dem Zieltyp des Basistyps identisch sein oder davon abgeleitet sein.</span><span class="sxs-lookup"><span data-stu-id="dc420-212">However, if you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the target type of the base style.</span></span>  
  
 <span data-ttu-id="dc420-213">Wenn Sie keinen angeben <xref:System.Windows.Style.TargetType%2A> , müssen Sie ein für den angeben `x:Key` <xref:System.Windows.Style> und die Eigenschaften im Stil mit einem Klassennamen qualifizieren.</span><span class="sxs-lookup"><span data-stu-id="dc420-213">If you do not specify a <xref:System.Windows.Style.TargetType%2A>, then you must specify an `x:Key` for your <xref:System.Windows.Style> and also qualify the properties in your style with a class name.</span></span>  
  
<a name="xamlAttributeUsage_TargetType"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="dc420-214">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="dc420-214">XAML Attribute Usage</span></span>  
  
```  
<object  TargetType="{x:Type typeName}"/>  
-or-  
<object  TargetType="typeName"/>  
```  
  
<a name="xamlValues_TargetType"></a>   
## <a name="xaml-values"></a><span data-ttu-id="dc420-215">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="dc420-215">XAML Values</span></span>  
 `{x:Type ...}`  
 <span data-ttu-id="dc420-216">Die Markup Erweiterungs Verwendung einer [x:typmarkup Erweiterung](/dotnet/framework/xaml-services/x-type-markup-extension) .</span><span class="sxs-lookup"><span data-stu-id="dc420-216">An [x:Type Markup Extension](/dotnet/framework/xaml-services/x-type-markup-extension) markup extension usage.</span></span>  
  
 <span data-ttu-id="dc420-217">*typeName*</span><span class="sxs-lookup"><span data-stu-id="dc420-217">*typeName*</span></span>  
 <span data-ttu-id="dc420-218">Der Typname der Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc420-218">The type name of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc420-219">Im folgenden Beispiel wird ein Stil definiert, der auf alle Instanzen des-Elements angewendet wird <xref:System.Windows.Controls.TextBlock> .</span><span class="sxs-lookup"><span data-stu-id="dc420-219">The following example defines a style that will be applied to all instances of the <xref:System.Windows.Controls.TextBlock> element.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#1)]   
  
 <span data-ttu-id="dc420-220">Wenn die-Eigenschaft auf den-Typ festgelegt wird, <xref:System.Windows.Style.TargetType%2A> <xref:System.Windows.Controls.TextBlock> ohne dass ein festgelegt wird `x:Key` `x:Key` , `{x:Type TextBlock}` wird</span><span class="sxs-lookup"><span data-stu-id="dc420-220">Setting the <xref:System.Windows.Style.TargetType%2A> property to the <xref:System.Windows.Controls.TextBlock> type without setting an `x:Key` implicitly sets the `x:Key` to `{x:Type TextBlock}`.</span></span> <span data-ttu-id="dc420-221">Dies bedeutet auch, dass, wenn Sie dem <xref:System.Windows.Style> obigen `x:Key` Wert einen anderen Wert als geben `{x:Type TextBlock}` , der <xref:System.Windows.Style> nicht automatisch auf alle Elemente angewendet wird <xref:System.Windows.Controls.TextBlock> .</span><span class="sxs-lookup"><span data-stu-id="dc420-221">This also means that if you give the above <xref:System.Windows.Style> an `x:Key` value of anything other than `{x:Type TextBlock}`, the <xref:System.Windows.Style> would not be applied to all <xref:System.Windows.Controls.TextBlock> elements automatically.</span></span> <span data-ttu-id="dc420-222">Stattdessen müssen Sie den Stil explizit auf die Elemente anwenden <xref:System.Windows.Controls.TextBlock> .</span><span class="sxs-lookup"><span data-stu-id="dc420-222">Instead, you need to apply the style to the <xref:System.Windows.Controls.TextBlock> elements explicitly.</span></span>  
  
 <span data-ttu-id="dc420-223">Viele Steuer [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Elemente bestehen aus einer Kombination aus anderen Steuer [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Elementen, sodass das Erstellen eines Stils, der für alle Steuerelemente eines Typs gilt, weitreichende Auswirkungen haben kann.</span><span class="sxs-lookup"><span data-stu-id="dc420-223">Many [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls consist of a combination of other [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls, so creating a style that applies to all controls of a type can have broad impact.</span></span> <span data-ttu-id="dc420-224">Wenn Sie z. b. einen Stil erstellen, der auf die Steuer <xref:System.Windows.Controls.TextBox> Elemente in einem abzielt <xref:System.Windows.Controls.Canvas> , wird der Stil auf alle- <xref:System.Windows.Controls.TextBox> Steuerelemente im Zeichenbereich angewendet, auch wenn der <xref:System.Windows.Controls.TextBox> Teil eines anderen Steuer Elements ist, z <xref:System.Windows.Controls.ComboBox> . b..</span><span class="sxs-lookup"><span data-stu-id="dc420-224">For instance, if you create a style that targets the <xref:System.Windows.Controls.TextBox> controls in a <xref:System.Windows.Controls.Canvas>, the style is applied to all <xref:System.Windows.Controls.TextBox> controls in the canvas, even if the <xref:System.Windows.Controls.TextBox> is part of another control, such as a <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="dc420-225">Einführung in das Beispiel für formatieren und Vorlagen</span><span class="sxs-lookup"><span data-stu-id="dc420-225">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As TriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerCollection ^ Triggers { System::Windows::TriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Windows.TriggerCollection" Usage="System.Windows.Style.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc420-226">Ruft eine Auflistung von <see cref="T:System.Windows.TriggerBase" />-Objekten ab, die Eigenschaftswerte auf Grundlage bestimmter Bedingungen anwenden.</span><span class="sxs-lookup"><span data-stu-id="dc420-226">Gets a collection of <see cref="T:System.Windows.TriggerBase" /> objects that apply property values based on specified conditions.</span></span></summary>
        <value><span data-ttu-id="dc420-227">Eine Auflistung von <see cref="T:System.Windows.TriggerBase" />-Objekten.</span><span class="sxs-lookup"><span data-stu-id="dc420-227">A collection of <see cref="T:System.Windows.TriggerBase" /> objects.</span></span> <span data-ttu-id="dc420-228">Der Standard ist eine leere Auflistung.</span><span class="sxs-lookup"><span data-stu-id="dc420-228">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc420-229">Das Formatvorlagen [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] -und Vorlagen Modell ermöglicht Ihnen das Angeben von Triggern in Ihrem <xref:System.Windows.Style> .</span><span class="sxs-lookup"><span data-stu-id="dc420-229">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styling and templating model enables you to specify triggers within your <xref:System.Windows.Style>.</span></span> <span data-ttu-id="dc420-230">Trigger sind im wesentlichen Objekte, die es Ihnen ermöglichen, Änderungen anzuwenden, wenn bestimmte Bedingungen erfüllt sind (z. b. Wenn ein bestimmter Eigenschafts Wert wird `true` oder wenn ein Ereignis auftritt).</span><span class="sxs-lookup"><span data-stu-id="dc420-230">Essentially, triggers are objects that enable you to apply changes when certain conditions (such as when a certain property value becomes `true`, or when an event occurs) are satisfied.</span></span>  
  
<a name="xamlPropertyElementUsage_Triggers"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="dc420-231">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="dc420-231">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Triggers>  
    oneOrMoreTriggers  
  </object.Triggers>  
</object>  
```  
  
<a name="xamlValues_Triggers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="dc420-232">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="dc420-232">XAML Values</span></span>  
 <span data-ttu-id="dc420-233">*oneormoretriggers*</span><span class="sxs-lookup"><span data-stu-id="dc420-233">*oneOrMoreTriggers*</span></span>  
 <span data-ttu-id="dc420-234">0 (null) oder mehr Objekt Elemente, die von abgeleitete Klassen sind <xref:System.Windows.TriggerBase> .</span><span class="sxs-lookup"><span data-stu-id="dc420-234">Zero or more object elements that are classes deriving from <xref:System.Windows.TriggerBase>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc420-235">Im folgenden Beispiel wird ein mit dem Namen <xref:System.Windows.Style> verfügbar für-Steuer <xref:System.Windows.Controls.Button> Elemente angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc420-235">The following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls.</span></span> <span data-ttu-id="dc420-236"><xref:System.Windows.Style>Definiert ein- <xref:System.Windows.Trigger> Element, das die- <xref:System.Windows.Controls.Control.Foreground%2A> Eigenschaft einer Schaltfläche ändert, wenn die- <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> Eigenschaft ist `true` .</span><span class="sxs-lookup"><span data-stu-id="dc420-236">The <xref:System.Windows.Style> defines a <xref:System.Windows.Trigger> element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.</span></span>  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DataTrigger" />
        <altmember cref="T:System.Windows.EventTrigger" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="dc420-237">Einführung in das Beispiel für formatieren und Vorlagen</span><span class="sxs-lookup"><span data-stu-id="dc420-237">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit&#xA;override this.UnregisterName : string -&gt; unit" Usage="style.UnregisterName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.UnregisterName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dc420-238">Der Name der zu entfernenden Zuordnung.</span><span class="sxs-lookup"><span data-stu-id="dc420-238">The name of the mapping to remove.</span></span></param>
        <summary><span data-ttu-id="dc420-239">Entfernt eine Name/Objekt-Zuordnung aus dem Namescope.</span><span class="sxs-lookup"><span data-stu-id="dc420-239">Removes a name-object mapping from the namescope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
