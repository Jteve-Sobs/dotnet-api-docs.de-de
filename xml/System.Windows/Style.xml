<Type Name="Style" FullName="System.Windows.Style">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5c0d32107632951a876a7daa92bb59a0fb760dfe" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55398215" /></Metadata><TypeSignature Language="C#" Value="public class Style : System.Windows.Threading.DispatcherObject, System.Windows.Markup.IAddChild, System.Windows.Markup.INameScope, System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Style extends System.Windows.Threading.DispatcherObject implements class System.Windows.Markup.IAddChild, class System.Windows.Markup.INameScope, class System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Style" />
  <TypeSignature Language="VB.NET" Value="Public Class Style&#xA;Inherits DispatcherObject&#xA;Implements IAddChild, INameScope, IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public ref class Style : System::Windows::Threading::DispatcherObject, System::Windows::Markup::IAddChild, System::Windows::Markup::INameScope, System::Windows::Markup::IQueryAmbient" />
  <TypeSignature Language="F#" Value="type Style = class&#xA;    inherit DispatcherObject&#xA;    interface INameScope&#xA;    interface IAddChild&#xA;    interface IQueryAmbient" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.INameScope</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IQueryAmbient</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.DictionaryKeyProperty("TargetType")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c6666-101">Ermöglicht die gemeinsame Nutzung von Eigenschaften, Ressourcen und Ereignishandlern zwischen Instanzen eines Typs.</span><span class="sxs-lookup"><span data-stu-id="c6666-101">Enables the sharing of properties, resources, and event handlers between instances of a type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6666-102">Sie können festlegen, eine <xref:System.Windows.Style> auf ein beliebiges Element, das von abgeleitet ist <xref:System.Windows.FrameworkElement> oder <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="c6666-102">You can set a <xref:System.Windows.Style> on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="c6666-103">Deklariert ein Stil am häufigsten als Ressource in der <xref:System.Windows.Application.Resources%2A> Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="c6666-103">A style is most commonly declared as a resource inside the <xref:System.Windows.Application.Resources%2A> section.</span></span> <span data-ttu-id="c6666-104">Da es sich bei Stilen um Ressourcen handelt, unterliegen sie die gleichen Bereichsregeln, die für alle Ressourcen gelten also, wenn Sie ein Stils wirkt sich auf deklarieren, wo er angewendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="c6666-104">Because styles are resources, they obey the same scoping rules that apply to all resources, so where you declare a style affects where it can be applied.</span></span> <span data-ttu-id="c6666-105">Wenn Sie z. B. auf der Sie das Format im Stammelement Ihrer Anwendungsdefinition deklarieren [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] -Datei das Format kann eine beliebige Stelle in Ihrer Anwendung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="c6666-105">If, for instance, you declare the style in the root element of your application definition [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file, the style can be used anywhere in your application.</span></span> <span data-ttu-id="c6666-106">Wenn Sie eine navigationsanwendung erstellen, und deklarieren den Stil in einer von der Anwendung [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] das Format-Dateien können verwendet werden, nur in der [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Datei.</span><span class="sxs-lookup"><span data-stu-id="c6666-106">If you are creating a navigation application and declare the style in one of the application's [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] files, the style can be used only in that [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</span></span> <span data-ttu-id="c6666-107">Weitere Informationen zu Bereichsregeln für Ressourcen finden Sie unter [XAML-Ressourcen](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="c6666-107">For more information on scoping rules for resources, see [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="c6666-108">Die Style-Deklaration besteht aus einem <xref:System.Windows.Style> -Objekt, das eine Auflistung einer oder mehreren enthält <xref:System.Windows.Setter> Objekte.</span><span class="sxs-lookup"><span data-stu-id="c6666-108">The style declaration consists of a <xref:System.Windows.Style> object that contains a collection of one or more <xref:System.Windows.Setter> objects.</span></span> <span data-ttu-id="c6666-109">Jede <xref:System.Windows.Setter> besteht aus einem <xref:System.Windows.Setter.Property%2A> und <xref:System.Windows.Setter.Value%2A>.</span><span class="sxs-lookup"><span data-stu-id="c6666-109">Each <xref:System.Windows.Setter> consists of a <xref:System.Windows.Setter.Property%2A> and a <xref:System.Windows.Setter.Value%2A>.</span></span> <span data-ttu-id="c6666-110">Die Eigenschaft ist der Name der Eigenschaft des Elements, der Stil zuweisen.</span><span class="sxs-lookup"><span data-stu-id="c6666-110">The property is the name of the property of the element the style is to apply to.</span></span> <span data-ttu-id="c6666-111">Nach der das Format als Ressource deklariert ist, können sie dann genau wie jede andere Ressource verwiesen werden.</span><span class="sxs-lookup"><span data-stu-id="c6666-111">After the style is declared as a resource, it can then be referenced just like any other resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c6666-112">Wenn es mehr als ein Setter in der Setter-Auflistung mit dem gleichen <xref:System.Windows.Setter.Property%2A> Eigenschaftswert, der Setter, der deklariert wurde zuletzt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="c6666-112">If there is more than one setter in the setter collection with the same <xref:System.Windows.Setter.Property%2A> property value, the setter that is declared last is used.</span></span> <span data-ttu-id="c6666-113">Wenn Sie einen Wert für die gleiche Eigenschaft in einem Stil, und klicken Sie auf ein Element direkt festlegen, hat der Wert festgelegt für das Element direkt auf ähnliche Weise Vorrang vor.</span><span class="sxs-lookup"><span data-stu-id="c6666-113">Similarly, if you set a value for the same property in a style and on an element directly, the value set on the element directly takes precedence.</span></span>  
  
 <span data-ttu-id="c6666-114">Die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] formatierungs-und Vorlagenmodells ermöglicht die Wartung und Freigabe von einiges als auch die Trennung von Darstellung und Logik.</span><span class="sxs-lookup"><span data-stu-id="c6666-114">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] styling and templating model allows maintenance and sharing of a look as well as the separation of presentation and logic.</span></span> <span data-ttu-id="c6666-115">Das Erstellen von Formaten und Vorlagen-Modell umfasst eine Suite mit Features, die Sie anpassen können Ihre [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="c6666-115">The styling and templating model includes a suite of features that enable you to customize your [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="c6666-116">Diese Suite von Features umfasst die <xref:System.Windows.Style> -Klasse sowie die folgenden:</span><span class="sxs-lookup"><span data-stu-id="c6666-116">This suite of features includes the <xref:System.Windows.Style> class as well as the following:</span></span>  
  
-   <xref:System.Windows.Trigger>  
  
-   <span data-ttu-id="c6666-117"><xref:System.Windows.EventTrigger> und <xref:System.Windows.Media.Animation.Storyboard></span><span class="sxs-lookup"><span data-stu-id="c6666-117"><xref:System.Windows.EventTrigger> and <xref:System.Windows.Media.Animation.Storyboard></span></span>  
  
-   <xref:System.Windows.Controls.ControlTemplate>  
  
-   <xref:System.Windows.DataTemplate>  
  
 <span data-ttu-id="c6666-118">Weitere Informationen finden Sie unter [Erstellen von Formaten und Vorlagen](~/docs/framework/wpf/controls/styling-and-templating.md).</span><span class="sxs-lookup"><span data-stu-id="c6666-118">For more information, see [Styling and Templating](~/docs/framework/wpf/controls/styling-and-templating.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6666-119">Das folgende Beispiel zeigt eine Style-Deklaration, die gelten die <xref:System.Windows.Controls.Control.Background%2A> Eigenschaft eine <xref:System.Windows.Controls.Control>.</span><span class="sxs-lookup"><span data-stu-id="c6666-119">The following example shows a style declaration that will affect the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Controls.Control>.</span></span>  
  
 [!code-xaml[StyleOvw01#StyleSimple](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#stylesimple)]   
  
 <span data-ttu-id="c6666-120">Um die oben genannten Formatvorlage zuzuweisen, führen Sie folgende Schritte aus:</span><span class="sxs-lookup"><span data-stu-id="c6666-120">To apply the above style, do the following:</span></span>  
  
 [!code-xaml[StyleOvw01#StyleSimpleApplied](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#stylesimpleapplied)]
  
 <span data-ttu-id="c6666-121">Sie können auch Stile auf alle Elemente eines bestimmten Typs anwenden, mit der <xref:System.Windows.Style.TargetType%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c6666-121">You can also apply styles to all elements of a given type by using the <xref:System.Windows.Style.TargetType%2A> property.</span></span> <span data-ttu-id="c6666-122">Hinzufügen des Zieltyps den Stil bedeutet, dass Sie nicht mehr um die Eigenschaft vollständig zu qualifizieren, legen Sie mit, der `ClassName.PropertyName` Syntax.</span><span class="sxs-lookup"><span data-stu-id="c6666-122">Adding the target type to the style means that you no longer have to fully qualify the property you are setting with the `ClassName.PropertyName` syntax.</span></span> <span data-ttu-id="c6666-123">Das folgende Beispiel definiert einen Stil, die auf alle angewendet werden <xref:System.Windows.Controls.TextBlock> Element.</span><span class="sxs-lookup"><span data-stu-id="c6666-123">The following example defines a style that will be applied to every <xref:System.Windows.Controls.TextBlock> element.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#1)]   
  
> [!NOTE]
>  <span data-ttu-id="c6666-124">Viele [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Steuerelemente bestehen aus einer Kombination von anderen [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Steuerelemente, die daher einen Stil zu erstellen, die für alle Steuerelemente eines Typs gilt können große Auswirkungen haben.</span><span class="sxs-lookup"><span data-stu-id="c6666-124">Many [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls consist of a combination of other [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls, so creating a style that applies to all controls of a type can have broad impact.</span></span> <span data-ttu-id="c6666-125">Z. B., wenn Sie einen Stil erstellen, die <xref:System.Windows.Controls.TextBlock> -Steuerelemente in eine <xref:System.Windows.Controls.Canvas>, der Stil angewendet wird, um alle <xref:System.Windows.Controls.TextBlock> Steuerelementen im Zeichenbereich, selbst wenn die <xref:System.Windows.Controls.TextBlock> ist Teil eines anderen Steuerelements wie einer <xref:System.Windows.Controls.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="c6666-125">For instance, if you create a style that targets the <xref:System.Windows.Controls.TextBlock> controls in a <xref:System.Windows.Controls.Canvas>, the style is applied to all <xref:System.Windows.Controls.TextBlock> controls in the canvas, even if the <xref:System.Windows.Controls.TextBlock> is part of another control, such as a <xref:System.Windows.Controls.ListBox>.</span></span>  
  
 <span data-ttu-id="c6666-126">Informationen zum Erweitern oder erben von der ein definiertes Format finden Sie in der <xref:System.Windows.Style.BasedOn%2A> Seite.</span><span class="sxs-lookup"><span data-stu-id="c6666-126">For information on how to extend or inherit from a defined style, see the <xref:System.Windows.Style.BasedOn%2A> page.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/1985cd45-f197-42d5-b75e-886add64b248"><span data-ttu-id="c6666-127">X: Key-Attribut</span><span class="sxs-lookup"><span data-stu-id="c6666-127">x:Key Attribute</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e0e0ce6f-e873-49c7-8ad7-8b840eb353ec"><span data-ttu-id="c6666-128">x:Type-Markuperweiterung</span><span class="sxs-lookup"><span data-stu-id="c6666-128">x:Type Markup Extension</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="c6666-129">Erstellen von Formaten und Vorlagen-Beispiel – Einführung</span><span class="sxs-lookup"><span data-stu-id="c6666-129">Introduction to Styling and Templating Sample</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c6666-130">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Style" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="c6666-130">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6666-131">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Style" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="c6666-131">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6666-132">Dieser Konstruktoraufruf erfordert verzögerte Validierung des <xref:System.Windows.Style.TargetType%2A> und <xref:System.Windows.Style.BasedOn%2A> Typ zu formatieren.</span><span class="sxs-lookup"><span data-stu-id="c6666-132">This constructor call requires delayed validation of <xref:System.Windows.Style.TargetType%2A> and <xref:System.Windows.Style.BasedOn%2A> style type.</span></span> <span data-ttu-id="c6666-133">Wenn diese außerhalb des Kontexts des Parsers verwendet wird, ist das Verhalten undefiniert.</span><span class="sxs-lookup"><span data-stu-id="c6666-133">If this is used outside the context of the parser, behavior is undefined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style (Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style(Type ^ targetType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Style : Type -&gt; System.Windows.Style" Usage="new System.Windows.Style targetType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="targetType"><span data-ttu-id="c6666-134">Der Typ, auf den der Stil angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="c6666-134">The type to which the style will apply.</span></span></param>
        <summary><span data-ttu-id="c6666-135">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Style" />-Klasse zur Verwendung für den angegebenen <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="c6666-135">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class to use on the specified <see cref="T:System.Type" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style (Type targetType, System.Windows.Style basedOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type targetType, class System.Windows.Style basedOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.#ctor(System.Type,System.Windows.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetType As Type, basedOn As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style(Type ^ targetType, System::Windows::Style ^ basedOn);" />
      <MemberSignature Language="F#" Value="new System.Windows.Style : Type * System.Windows.Style -&gt; System.Windows.Style" Usage="new System.Windows.Style (targetType, basedOn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="basedOn" Type="System.Windows.Style" />
      </Parameters>
      <Docs>
        <param name="targetType"><span data-ttu-id="c6666-136">Der Typ, auf den der Stil angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="c6666-136">The type to which the style will apply.</span></span></param>
        <param name="basedOn"><span data-ttu-id="c6666-137">Der Stil, der als Grundlage für diesen Stil verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="c6666-137">The style to base this style on.</span></span></param>
        <summary><span data-ttu-id="c6666-138">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Style" />-Klasse zur Verwendung für den angegebenen <see cref="T:System.Type" /> und auf Grundlage des angegebenen <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="c6666-138">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class to use on the specified <see cref="T:System.Type" /> and based on the specified <see cref="T:System.Windows.Style" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BasedOn">
      <MemberSignature Language="C#" Value="public System.Windows.Style BasedOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style BasedOn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.BasedOn" />
      <MemberSignature Language="VB.NET" Value="Public Property BasedOn As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ BasedOn { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BasedOn : System.Windows.Style with get, set" Usage="System.Windows.Style.BasedOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6666-139">Ruft einen definierten Stil ab, der die Grundlage für den aktuellen Stil ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="c6666-139">Gets or sets a defined style that is the basis of the current style.</span></span></summary>
        <value><span data-ttu-id="c6666-140">Ein definierter Stil, der die Grundlage für den aktuellen Stil darstellt.</span><span class="sxs-lookup"><span data-stu-id="c6666-140">A defined style that is the basis of the current style.</span></span> <span data-ttu-id="c6666-141">Der Standardwert ist <see langword="null" />sein.</span><span class="sxs-lookup"><span data-stu-id="c6666-141">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6666-142">Jeder Stil unterstützt nur einen <xref:System.Windows.Style.BasedOn%2A> Wert.</span><span class="sxs-lookup"><span data-stu-id="c6666-142">Each style only supports one <xref:System.Windows.Style.BasedOn%2A> value.</span></span>  
  
<a name="xamlAttributeUsage_BasedOn"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c6666-143">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="c6666-143">XAML Attribute Usage</span></span>  
  
```  
<object BasedOn="myStyle" .../>  
```  
  
<a name="xamlValues_BasedOn"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c6666-144">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="c6666-144">XAML Values</span></span>  
 <span data-ttu-id="c6666-145">*myStyle*</span><span class="sxs-lookup"><span data-stu-id="c6666-145">*myStyle*</span></span>  
 <span data-ttu-id="c6666-146">Einen vorhandenen Stil.</span><span class="sxs-lookup"><span data-stu-id="c6666-146">An existing style.</span></span> <span data-ttu-id="c6666-147">Normalerweise verwenden Sie die [Markuperweiterungen und WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md) zum Verweisen auf einen vorhandenen Stil.</span><span class="sxs-lookup"><span data-stu-id="c6666-147">Typically, you use the [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md) to refer to an existing style.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6666-148">Es gibt mehrere Möglichkeiten, das im Stile [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] erweitert oder geerbt werden kann.</span><span class="sxs-lookup"><span data-stu-id="c6666-148">There are several ways that styles in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can be extended or inherited.</span></span> <span data-ttu-id="c6666-149">Stile können auf anderen Formaten über diese Eigenschaft basieren.</span><span class="sxs-lookup"><span data-stu-id="c6666-149">Styles can be based on other styles through this property.</span></span> <span data-ttu-id="c6666-150">Wenn Sie diese Eigenschaft verwenden, erben die neue Formatvorlage die Werte der ursprünglichen Formatvorlage, die nicht explizit in das neue Format neu definiert werden.</span><span class="sxs-lookup"><span data-stu-id="c6666-150">When you use this property, the new style will inherit the values of the original style that are not explicitly redefined in the new style.</span></span> <span data-ttu-id="c6666-151">Im folgenden Beispiel `Style2` erbt die <xref:System.Windows.Controls.Control.Background%2A?displayProperty=nameWithType> Wert `Yellow`, und fügt eine <xref:System.Windows.Controls.Control.Foreground%2A?displayProperty=nameWithType> Wert `Blue`.</span><span class="sxs-lookup"><span data-stu-id="c6666-151">In the following example, `Style2` inherits the <xref:System.Windows.Controls.Control.Background%2A?displayProperty=nameWithType> value of `Yellow`, and adds a <xref:System.Windows.Controls.Control.Foreground%2A?displayProperty=nameWithType> value of `Blue`.</span></span>  
  
 [!code-xaml[StyleOvw01#ExtendingStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#extendingstyle)]   
  
 <span data-ttu-id="c6666-152">Auf ähnliche Weise Stile können basierend auf den Stil eines vorhandenen [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Element, wie im folgenden Beispiel, in die neue Formatvorlage auf den Stil der basiert, eine <xref:System.Windows.Controls.TextBlock> Element.</span><span class="sxs-lookup"><span data-stu-id="c6666-152">Similarly, styles can be based on the style of an existing [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] element, as in the following example where the new style is based on the style of a <xref:System.Windows.Controls.TextBlock> element.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#2)]   
  
> [!NOTE]
>  <span data-ttu-id="c6666-153">Bei der Erstellung eines Stils mit einem <xref:System.Windows.Style.TargetType%2A> -Eigenschaft und als Grundlage einen anderen Stil, die definiert, die auch eine <xref:System.Windows.Style.TargetType%2A> -Eigenschaft der Zieltyp des abgeleiteten Stils müssen identisch sein oder vom Typ für den grundlegenden Stil abgeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="c6666-153">If you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the type of the base style.</span></span>  
  
 <span data-ttu-id="c6666-154">Für bestimmte Typen definierte Formatvorlagen können auch auf anderen Formaten, wie im folgenden Beispiel basieren.</span><span class="sxs-lookup"><span data-stu-id="c6666-154">Styles defined for specific types can also be based on other styles, as in the following example.</span></span>  
  
 [!code-xaml[StyleOvw01#ExtendingStyleTargetType](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#extendingstyletargettype)]   
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="c6666-155">Erstellen von Formaten und Vorlagen-Beispiel – Einführung</span><span class="sxs-lookup"><span data-stu-id="c6666-155">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="style.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6666-156">Gibt den Hashcode für diesen <see cref="T:System.Windows.Style" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="c6666-156">Returns the hash code for this <see cref="T:System.Windows.Style" />.</span></span></summary>
        <returns><span data-ttu-id="c6666-157">Der Hashcode für diese <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="c6666-157">The hash code for this <see cref="T:System.Windows.Style" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Windows.Style.IsSealed" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.ISealable.IsSealed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6666-158">Ruft einen Wert ab, der angibt, ob der Stil schreibgeschützt ist und nicht geändert werden kann.</span><span class="sxs-lookup"><span data-stu-id="c6666-158">Gets a value that indicates whether the style is read-only and cannot be changed.</span></span></summary>
        <value><span data-ttu-id="c6666-159"><see langword="true" />, wenn der Stil versiegelt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6666-159"><see langword="true" /> if the style is sealed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6666-160">Ein Stil ist versiegelt, wenn ein anderes Format darauf basiert, oder wenn es zum ersten Mal angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="c6666-160">A style is sealed when another style is based on it or when it is applied for the first time.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Style.BasedOn" />
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit&#xA;override this.RegisterName : string * obj -&gt; unit" Usage="style.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c6666-161">Der zu registrierende Name.</span><span class="sxs-lookup"><span data-stu-id="c6666-161">The name to register.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="c6666-162">Das Objekt, das dem angegebenen <paramref name="name" /> zugeordnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="c6666-162">The object to map to the specified <paramref name="name" />.</span></span></param>
        <summary><span data-ttu-id="c6666-163">Registriert ein neues Name/Objekt-Paar im aktuellen Namescope.</span><span class="sxs-lookup"><span data-stu-id="c6666-163">Registers a new name-object pair in the current namescope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public System.Windows.ResourceDictionary Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ResourceDictionary Resources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As ResourceDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResourceDictionary ^ Resources { System::Windows::ResourceDictionary ^ get(); void set(System::Windows::ResourceDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resources : System.Windows.ResourceDictionary with get, set" Usage="System.Windows.Style.Resources" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IHaveResources.Resources</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6666-164">Ruft die Auflistung von Ressourcen ab, die innerhalb des Bereichs dieses Stils verwendet werden können, oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="c6666-164">Gets or sets the collection of resources that can be used within the scope of this style.</span></span></summary>
        <value><span data-ttu-id="c6666-165">Die Ressourcen, die im Bereich dieses Stils verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="c6666-165">The resources that can be used within the scope of this style.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Resources"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="c6666-166">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="c6666-166">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Resources>  
    oneOrMoreResourceElements  
  </object.Resources>  
</object>  
- or -   
<object>  
  <object.Resources>  
    <ResourceDictionary Source="externalDictionarySource"/>  
  </object.Resources>  
</object>  
```  
  
<a name="xamlValues_Resources"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c6666-167">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="c6666-167">XAML Values</span></span>  
 <span data-ttu-id="c6666-168">*oneOrMoreResourceElements*</span><span class="sxs-lookup"><span data-stu-id="c6666-168">*oneOrMoreResourceElements*</span></span>  
 <span data-ttu-id="c6666-169">Ein oder mehrere Ressourcenelemente.</span><span class="sxs-lookup"><span data-stu-id="c6666-169">One or more resource elements.</span></span> <span data-ttu-id="c6666-170">Weiter unten in referenziert werden [StaticResource-Markuperweiterung](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) oder [DynamicResource-Markuperweiterung](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) -Syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], ein Ressourcenelement benötigen eine `x:Key` Attribut.</span><span class="sxs-lookup"><span data-stu-id="c6666-170">To be referenced later in either [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) or [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], a resource element must have an `x:Key` attribute.</span></span>  
  
 <span data-ttu-id="c6666-171">\<ResourceDictionary Source=" *externalDictionarySource*"/></span><span class="sxs-lookup"><span data-stu-id="c6666-171">\<ResourceDictionary Source=" *externalDictionarySource*"/></span></span>  
 <span data-ttu-id="c6666-172">Eine externe Wörterbuch-Quelle.</span><span class="sxs-lookup"><span data-stu-id="c6666-172">An external dictionary source.</span></span> <span data-ttu-id="c6666-173">Weitere Informationen finden Sie unter [zusammengeführte Ressourcenverzeichnisse](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).</span><span class="sxs-lookup"><span data-stu-id="c6666-173">For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seal">
      <MemberSignature Language="C#" Value="public void Seal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.Seal" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seal ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seal();" />
      <MemberSignature Language="F#" Value="member this.Seal : unit -&gt; unit" Usage="style.Seal " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.ISealable.Seal</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6666-174">Sperrt diesen Stil und alle Factorys und Trigger, damit sie nicht geändert werden können.</span><span class="sxs-lookup"><span data-stu-id="c6666-174">Locks this style and all factories and triggers so they cannot be changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.Style.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6666-175">Ruft eine Auflistung von <see cref="T:System.Windows.Setter" />-Objekten und <see cref="T:System.Windows.EventSetter" />-Objekten ab.</span><span class="sxs-lookup"><span data-stu-id="c6666-175">Gets a collection of <see cref="T:System.Windows.Setter" /> and <see cref="T:System.Windows.EventSetter" /> objects.</span></span></summary>
        <value><span data-ttu-id="c6666-176">Eine Auflistung von <see cref="T:System.Windows.Setter" />-Objekten und <see cref="T:System.Windows.EventSetter" />-Objekten.</span><span class="sxs-lookup"><span data-stu-id="c6666-176">A collection of <see cref="T:System.Windows.Setter" /> and <see cref="T:System.Windows.EventSetter" /> objects.</span></span> <span data-ttu-id="c6666-177">Der Standard ist eine leere Auflistung.</span><span class="sxs-lookup"><span data-stu-id="c6666-177">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6666-178">Die <xref:System.Windows.Style.Setters%2A> Eigenschaft eine <xref:System.Windows.Style> Objekt kann nur von Objekten, die zugewiesen werden bestehen <xref:System.Windows.SetterBase>.</span><span class="sxs-lookup"><span data-stu-id="c6666-178">The <xref:System.Windows.Style.Setters%2A> property of a <xref:System.Windows.Style> object can consist only of objects assignable to <xref:System.Windows.SetterBase>.</span></span> <span data-ttu-id="c6666-179">Hinzufügen einer <xref:System.Windows.SetterBase> untergeordnetes Element eine <xref:System.Windows.Style> Objekt implizit hinzugefügt der <xref:System.Windows.SetterBaseCollection> für die <xref:System.Windows.Style> Objekt.</span><span class="sxs-lookup"><span data-stu-id="c6666-179">Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object.</span></span>  
  
 <span data-ttu-id="c6666-180">Eine explizite Eigenschaftselementverwendung für <xref:System.Windows.Style.Setters%2A> ist auch relativ häufig.</span><span class="sxs-lookup"><span data-stu-id="c6666-180">An explicit property element usage  for <xref:System.Windows.Style.Setters%2A> is also relatively common.</span></span> <span data-ttu-id="c6666-181">Dies ist eine Entscheidung der Markup-Stil, mit denen in einigen Fällen unterscheiden kann <xref:System.Windows.Style.Setters%2A> aus <xref:System.Windows.Style.Resources%2A> und <xref:System.Windows.Style.Triggers%2A> Elemente in einem komplexen Format.</span><span class="sxs-lookup"><span data-stu-id="c6666-181">This is a markup style decision that can sometimes help distinguish <xref:System.Windows.Style.Setters%2A> from <xref:System.Windows.Style.Resources%2A> and <xref:System.Windows.Style.Triggers%2A> items in a complex style.</span></span> <span data-ttu-id="c6666-182">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="c6666-182">For example:</span></span>  
  
```  
<Style>  
  <Style.Setters>  
    <!--one or more SetterBase derived object elements here-->  
  </Style.Setters>  
</Style>  
```  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="c6666-183">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="c6666-183">XAML Property Element Usage</span></span>  
  
```  
<object>  
  oneOrMoreSetters  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c6666-184">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="c6666-184">XAML Values</span></span>  
 <span data-ttu-id="c6666-185">*oneOrMoreSetters*</span><span class="sxs-lookup"><span data-stu-id="c6666-185">*oneOrMoreSetters*</span></span>  
 <span data-ttu-id="c6666-186">Eine oder mehrere <xref:System.Windows.Setter> oder <xref:System.Windows.EventSetter> Objekte.</span><span class="sxs-lookup"><span data-stu-id="c6666-186">One or more <xref:System.Windows.Setter> or <xref:System.Windows.EventSetter> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6666-187">Das folgende Beispiel zeigt, wie Sie diese Eigenschaft zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="c6666-187">The following example shows how to use this property.</span></span>  
  
 [!code-csharp[listboxitemstyle#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxItemStyle/CSharp/Pane1.xaml.cs#1)]
 [!code-vb[listboxitemstyle#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBoxItemStyle/VisualBasic/Pane1.xaml.vb#1)]  
  
 <span data-ttu-id="c6666-188">Hinzufügen einer <xref:System.Windows.SetterBase> untergeordnetes Element eine <xref:System.Windows.Style> Objekt implizit hinzugefügt der <xref:System.Windows.SetterBaseCollection> für die <xref:System.Windows.Style> Objekt.</span><span class="sxs-lookup"><span data-stu-id="c6666-188">Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object.</span></span> <span data-ttu-id="c6666-189">Die folgenden <xref:System.Windows.EventSetter> implizit hinzugefügt die <xref:System.Windows.SetterBaseCollection> des Formats:</span><span class="sxs-lookup"><span data-stu-id="c6666-189">The following <xref:System.Windows.EventSetter> is implicitly added to the <xref:System.Windows.SetterBaseCollection> of the style:</span></span>  
  
 [!code-xaml[eventovwsupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Setter" />
        <altmember cref="T:System.Windows.EventSetter" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="c6666-190">Erstellen von Formaten und Vorlagen-Beispiel – Einführung</span><span class="sxs-lookup"><span data-stu-id="c6666-190">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.CanSeal">
      <MemberSignature Language="C#" Value="bool System.Windows.ISealable.CanSeal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.ISealable.CanSeal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.System#Windows#ISealable#CanSeal" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CanSeal As Boolean Implements ISealable.CanSeal" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Windows::ISealable::CanSeal { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.ISealable.CanSeal" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.ISealable.CanSeal</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.IsSealed">
      <MemberSignature Language="C#" Value="bool System.Windows.ISealable.IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.ISealable.IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.System#Windows#ISealable#IsSealed" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSealed As Boolean Implements ISealable.IsSealed" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Windows::ISealable::IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.ISealable.IsSealed" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.ISealable.IsSealed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.Seal">
      <MemberSignature Language="C#" Value="void ISealable.Seal ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.ISealable.Seal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#ISealable#Seal" />
      <MemberSignature Language="VB.NET" Value="Sub Seal () Implements ISealable.Seal" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.ISealable.Seal() = System::Windows::ISealable::Seal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.ISealable.Seal</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c6666-191">Das hinzuzufügende untergeordnete Objekt.</span><span class="sxs-lookup"><span data-stu-id="c6666-191">The child object to add.</span></span></param>
        <summary><span data-ttu-id="c6666-192">Fügt ein untergeordnetes Objekt hinzu.</span><span class="sxs-lookup"><span data-stu-id="c6666-192">Adds a child object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6666-193">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="c6666-193">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c6666-194">Er kann nur verwendet werden, wenn die <xref:System.Windows.Style>-Instanz in eine <xref:System.Windows.Markup.IAddChild>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="c6666-194">It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="c6666-195">Der dem Objekt hinzuzufügende Text.</span><span class="sxs-lookup"><span data-stu-id="c6666-195">The text to add to the object.</span></span></param>
        <summary><span data-ttu-id="c6666-196">Fügt dem Objekt den Textinhalt eines Knotens hinzu.</span><span class="sxs-lookup"><span data-stu-id="c6666-196">Adds the text content of a node to the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6666-197">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="c6666-197">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c6666-198">Er kann nur verwendet werden, wenn die <xref:System.Windows.Style>-Instanz in eine <xref:System.Windows.Markup.IAddChild>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="c6666-198">It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.INameScope.FindName">
      <MemberSignature Language="C#" Value="object INameScope.FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Windows.Markup.INameScope.FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindName (name As String) As Object Implements INameScope.FindName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Windows.Markup.INameScope.FindName(System::String ^ name) = System::Windows::Markup::INameScope::FindName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.FindName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c6666-199">Der Namensbezeichner für das angeforderte Objekt.</span><span class="sxs-lookup"><span data-stu-id="c6666-199">The name identifier for the object being requested.</span></span></param>
        <summary><span data-ttu-id="c6666-200">Gibt ein Objekt zurück, das über den bereitgestellten kennzeichnenden Namen verfügt.</span><span class="sxs-lookup"><span data-stu-id="c6666-200">Returns an object that has the provided identifying name.</span></span></summary>
        <returns><span data-ttu-id="c6666-201">Das Objekt, falls gefunden.</span><span class="sxs-lookup"><span data-stu-id="c6666-201">The object, if found.</span></span> <span data-ttu-id="c6666-202">Gibt <see langword="null" /> zurück, wenn kein Objekt mit diesem Namen gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="c6666-202">Returns <see langword="null" /> if no object of that name was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6666-203">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="c6666-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c6666-204">Er kann nur verwendet werden, wenn die <xref:System.Windows.Style>-Instanz in eine <xref:System.Windows.Markup.INameScope>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="c6666-204">It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.INameScope> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsAmbientPropertyAvailable (propertyName As String) As Boolean Implements IQueryAmbient.IsAmbientPropertyAvailable" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System::String ^ propertyName) = System::Windows::Markup::IQueryAmbient::IsAmbientPropertyAvailable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="c6666-205">Der Name der angeforderten Ambient-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c6666-205">The name of the requested ambient property.</span></span></param>
        <summary><span data-ttu-id="c6666-206">Fragt ab, ob eine angegebene Ambient-Eigenschaft im aktuellen Bereich verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="c6666-206">Queries whether a specified ambient property is available in the current scope.</span></span></summary>
        <returns><span data-ttu-id="c6666-207"><see langword="true" />, wenn die angeforderte Ambient-Eigenschaft verfügbar ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6666-207"><see langword="true" /> if the requested ambient property is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.IQueryAmbient" />
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public Type TargetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TargetType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : Type with get, set" Usage="System.Windows.Style.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6666-208">Ruft den Typ ab, für den dieser Stil vorgesehen ist, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="c6666-208">Gets or sets the type for which this style is intended.</span></span></summary>
        <value><span data-ttu-id="c6666-209">Der Zieltyp für diesen Stil.</span><span class="sxs-lookup"><span data-stu-id="c6666-209">The target type for this style.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6666-210">Sie können einen Stil festlegen, auf ein beliebiges Element, das von abgeleitet ist <xref:System.Windows.FrameworkElement> oder <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="c6666-210">You can set a style on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="c6666-211">Aus diesem Grund kann alle Elemente Ihrer Zieltyp sein.</span><span class="sxs-lookup"><span data-stu-id="c6666-211">Therefore, your target type can be any of those elements.</span></span> <span data-ttu-id="c6666-212">Allerdings bei der Erstellung eines Stils mit einem <xref:System.Windows.Style.TargetType%2A> -Eigenschaft und als Grundlage einen anderen Stil, die definiert, die auch eine <xref:System.Windows.Style.TargetType%2A> -Eigenschaft der Zieltyp des abgeleiteten Stils müssen identisch sein oder von den Zieltyp für den grundlegenden Stil abgeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="c6666-212">However, if you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the target type of the base style.</span></span>  
  
 <span data-ttu-id="c6666-213">Wenn Sie nicht angeben einer <xref:System.Windows.Style.TargetType%2A>, Sie angeben, müssen ein `x:Key` für Ihre <xref:System.Windows.Style> und außerdem die Eigenschaften in Ihrem Stil und einem Klassennamen qualifizieren.</span><span class="sxs-lookup"><span data-stu-id="c6666-213">If you do not specify a <xref:System.Windows.Style.TargetType%2A>, then you must specify an `x:Key` for your <xref:System.Windows.Style> and also qualify the properties in your style with a class name.</span></span>  
  
<a name="xamlAttributeUsage_TargetType"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c6666-214">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="c6666-214">XAML Attribute Usage</span></span>  
  
```  
<object  TargetType="{x:Type typeName}"/>  
-or-  
<object  TargetType="typeName"/>  
```  
  
<a name="xamlValues_TargetType"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c6666-215">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="c6666-215">XAML Values</span></span>  
 `{x:Type ...}`  
 <span data-ttu-id="c6666-216">Ein [X: Type-Markuperweiterung](~/docs/framework/xaml-services/x-type-markup-extension.md) Markuperweiterungsverwendung.</span><span class="sxs-lookup"><span data-stu-id="c6666-216">An [x:Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md) markup extension usage.</span></span>  
  
 <span data-ttu-id="c6666-217">*typeName*</span><span class="sxs-lookup"><span data-stu-id="c6666-217">*typeName*</span></span>  
 <span data-ttu-id="c6666-218">Der Typname der Klasse.</span><span class="sxs-lookup"><span data-stu-id="c6666-218">The type name of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6666-219">Das folgende Beispiel definiert einen Stil, die für alle Instanzen angewendet werden, die <xref:System.Windows.Controls.TextBlock> Element.</span><span class="sxs-lookup"><span data-stu-id="c6666-219">The following example defines a style that will be applied to all instances of the <xref:System.Windows.Controls.TextBlock> element.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#1)]   
  
 <span data-ttu-id="c6666-220">Festlegen der <xref:System.Windows.Style.TargetType%2A> Eigenschaft, um die <xref:System.Windows.Controls.TextBlock> Typ festlegen, ohne ein `x:Key` implizit legt der `x:Key` zu `{x:Type TextBlock}`.</span><span class="sxs-lookup"><span data-stu-id="c6666-220">Setting the <xref:System.Windows.Style.TargetType%2A> property to the <xref:System.Windows.Controls.TextBlock> type without setting an `x:Key` implicitly sets the `x:Key` to `{x:Type TextBlock}`.</span></span> <span data-ttu-id="c6666-221">Dies bedeutet auch, dass wenn Sie den oben genannten geben <xref:System.Windows.Style> ein `x:Key` Wert außer `{x:Type TextBlock}`, <xref:System.Windows.Style> würde nicht angewendet werden, um alle <xref:System.Windows.Controls.TextBlock> Elemente automatisch.</span><span class="sxs-lookup"><span data-stu-id="c6666-221">This also means that if you give the above <xref:System.Windows.Style> an `x:Key` value of anything other than `{x:Type TextBlock}`, the <xref:System.Windows.Style> would not be applied to all <xref:System.Windows.Controls.TextBlock> elements automatically.</span></span> <span data-ttu-id="c6666-222">Stattdessen müssen Sie den Stil darauf anzuwenden der <xref:System.Windows.Controls.TextBlock> Elemente explizit.</span><span class="sxs-lookup"><span data-stu-id="c6666-222">Instead, you need to apply the style to the <xref:System.Windows.Controls.TextBlock> elements explicitly.</span></span>  
  
 <span data-ttu-id="c6666-223">Viele [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Steuerelemente bestehen aus einer Kombination von anderen [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Steuerelemente, die daher einen Stil zu erstellen, die für alle Steuerelemente eines Typs gilt können große Auswirkungen haben.</span><span class="sxs-lookup"><span data-stu-id="c6666-223">Many [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls consist of a combination of other [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls, so creating a style that applies to all controls of a type can have broad impact.</span></span> <span data-ttu-id="c6666-224">Z. B., wenn Sie einen Stil erstellen, die <xref:System.Windows.Controls.TextBox> -Steuerelemente in eine <xref:System.Windows.Controls.Canvas>, der Stil angewendet wird, um alle <xref:System.Windows.Controls.TextBox> Steuerelementen im Zeichenbereich, selbst wenn die <xref:System.Windows.Controls.TextBox> ist Teil eines anderen Steuerelements wie einer <xref:System.Windows.Controls.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c6666-224">For instance, if you create a style that targets the <xref:System.Windows.Controls.TextBox> controls in a <xref:System.Windows.Controls.Canvas>, the style is applied to all <xref:System.Windows.Controls.TextBox> controls in the canvas, even if the <xref:System.Windows.Controls.TextBox> is part of another control, such as a <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="c6666-225">Erstellen von Formaten und Vorlagen-Beispiel – Einführung</span><span class="sxs-lookup"><span data-stu-id="c6666-225">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As TriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerCollection ^ Triggers { System::Windows::TriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Windows.TriggerCollection" Usage="System.Windows.Style.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6666-226">Ruft eine Auflistung von <see cref="T:System.Windows.TriggerBase" />-Objekten ab, die Eigenschaftswerte auf Grundlage bestimmter Bedingungen anwenden.</span><span class="sxs-lookup"><span data-stu-id="c6666-226">Gets a collection of <see cref="T:System.Windows.TriggerBase" /> objects that apply property values based on specified conditions.</span></span></summary>
        <value><span data-ttu-id="c6666-227">Eine Auflistung von <see cref="T:System.Windows.TriggerBase" />-Objekten.</span><span class="sxs-lookup"><span data-stu-id="c6666-227">A collection of <see cref="T:System.Windows.TriggerBase" /> objects.</span></span> <span data-ttu-id="c6666-228">Der Standard ist eine leere Auflistung.</span><span class="sxs-lookup"><span data-stu-id="c6666-228">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6666-229">Die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] formatierungs-und Vorlagenmodells können Sie zum Angeben von Triggern in Ihrer <xref:System.Windows.Style>.</span><span class="sxs-lookup"><span data-stu-id="c6666-229">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styling and templating model enables you to specify triggers within your <xref:System.Windows.Style>.</span></span> <span data-ttu-id="c6666-230">Trigger sind im Wesentlichen Objekte, die Sie zum Anwenden von Änderungen, wenn bestimmte ermöglichen, Bedingungen (z. B. ein bestimmten Eigenschaftswert, wird `true`, oder wenn ein Ereignis eintritt) zufrieden sind.</span><span class="sxs-lookup"><span data-stu-id="c6666-230">Essentially, triggers are objects that enable you to apply changes when certain conditions (such as when a certain property value becomes `true`, or when an event occurs) are satisfied.</span></span>  
  
<a name="xamlPropertyElementUsage_Triggers"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="c6666-231">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="c6666-231">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Triggers>  
    oneOrMoreTriggers  
  </object.Triggers>  
</object>  
```  
  
<a name="xamlValues_Triggers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c6666-232">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="c6666-232">XAML Values</span></span>  
 <span data-ttu-id="c6666-233">*oneOrMoreTriggers*</span><span class="sxs-lookup"><span data-stu-id="c6666-233">*oneOrMoreTriggers*</span></span>  
 <span data-ttu-id="c6666-234">NULL oder mehr Object-Elemente, die Klassen abgeleitet sind <xref:System.Windows.TriggerBase>.</span><span class="sxs-lookup"><span data-stu-id="c6666-234">Zero or more object elements that are classes deriving from <xref:System.Windows.TriggerBase>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6666-235">Das folgende Beispiel zeigt eine benannte <xref:System.Windows.Style> zur <xref:System.Windows.Controls.Button> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="c6666-235">The following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls.</span></span> <span data-ttu-id="c6666-236">Die <xref:System.Windows.Style> definiert eine <xref:System.Windows.Trigger> -Element, das Änderungen der <xref:System.Windows.Controls.Control.Foreground%2A> -Eigenschaft einer Schaltfläche bei der <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> -Eigenschaft ist `true`.</span><span class="sxs-lookup"><span data-stu-id="c6666-236">The <xref:System.Windows.Style> defines a <xref:System.Windows.Trigger> element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.</span></span>  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DataTrigger" />
        <altmember cref="T:System.Windows.EventTrigger" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="c6666-237">Erstellen von Formaten und Vorlagen-Beispiel – Einführung</span><span class="sxs-lookup"><span data-stu-id="c6666-237">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit&#xA;override this.UnregisterName : string -&gt; unit" Usage="style.UnregisterName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.UnregisterName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c6666-238">Der Name der zu entfernenden Zuordnung.</span><span class="sxs-lookup"><span data-stu-id="c6666-238">The name of the mapping to remove.</span></span></param>
        <summary><span data-ttu-id="c6666-239">Entfernt eine Name/Objekt-Zuordnung aus dem Namescope.</span><span class="sxs-lookup"><span data-stu-id="c6666-239">Removes a name-object mapping from the namescope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>