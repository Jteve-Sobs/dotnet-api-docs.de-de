<Type Name="IActivityEventListener&lt;T&gt;" FullName="System.Workflow.ComponentModel.IActivityEventListener&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a80f444183d398efb7f90123738296372feed2f" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86636963" /></Metadata><TypeSignature Language="C#" Value="public interface IActivityEventListener&lt;T&gt; where T : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActivityEventListener`1&lt;(class System.EventArgs) T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.IActivityEventListener`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IActivityEventListener(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : EventArgspublic interface class IActivityEventListener" />
  <TypeSignature Language="F#" Value="type IActivityEventListener&lt;'T (requires 'T :&gt; EventArgs)&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>System.EventArgs</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">Der Typ der Ereignisarguments.</typeparam>
    <summary>Definiert die Schnittstelle für ein Objekt, das nach einem Ereignis lauscht.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Die Eingabe der Ereignisargumente ist für diese Definition wichtig.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="OnEvent">
      <MemberSignature Language="C#" Value="public void OnEvent (object sender, T e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnEvent(object sender, !T e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnEvent (sender As Object, e As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnEvent(System::Object ^ sender, T e);" />
      <MemberSignature Language="F#" Value="abstract member OnEvent : obj * 'T -&gt; unit" Usage="iActivityEventListener.OnEvent (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="T" />
      </Parameters>
      <Docs>
        <param name="sender">Das Objekt, das das Ereignis ausgelöst hat.</param>
        <param name="e">Die vorher eingegebenen Ereignisargumente.</param>
        <summary>Definiert die Verarbeitungsprozedur, wenn das Abonnementereignis auftritt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
