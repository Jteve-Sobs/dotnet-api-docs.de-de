<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SafeHandleZeroOrMinusOneIsInvalid.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a69039b5518339d78ac25440fabafa62809c2660.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a69039b5518339d78ac25440fabafa62809c2660</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>Provides a base class for Win32 safe handle implementations in which the value of either 0 or -1 indicates an invalid handle.</source>
          <target state="translated">Stellt eine Basisklasse für sichere Win32-Handleimplementierungen bereit, in denen ein Wert von 0 (null) oder -1 ein ungültiges Handle angibt.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>This class derives from the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeHandle?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">Diese Klasse wird von der <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeHandle?displayProperty=nameWithType&gt;</ph>-Klasse abgeleitet.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>It describes the format of an invalid handle.</source>
          <target state="translated">Das Format eines ungültigen Handles beschrieben.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>For example, some handles use -1 as an invalid handle value, while others use 0.</source>
          <target state="translated">Einige Handles verwenden z. B.-1 als ungültigen Handlewert, während andere 0 verwenden.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>Further derivations of this class (for example, file or registry handles) can specialize this further.</source>
          <target state="translated">Weitere ableitungen von dieser Klasse (für das Beispiel, Datei oder ein Registrierungsschlüsselwert Handles) können diese weiter spezialisieren.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>See the <ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeFileHandle&gt;</ph> class for an example of a class that derives from <ph id="ph2">&lt;xref:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid&gt;</ph>.</source>
          <target state="translated">Finden Sie unter der <ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeFileHandle&gt;</ph> Klasse für ein Beispiel für eine Klasse, die abgeleitet <ph id="ph2">&lt;xref:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Dieser Typ implementiert die <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Wenn Sie mithilfe des Typs abgeschlossen haben, sollten Sie es entweder direkt oder indirekt freigeben.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Aufrufen, um den Typ direkt zu verwerfen, dessen <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> Methode in einer <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> Block.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Um es indirekt freizugeben, verwenden Sie ein Sprachkonstrukt z. B. <ph id="ph1">`using`</ph> (in c#) oder <ph id="ph2">`Using`</ph> (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Weitere Informationen finden Sie im Abschnitt "Verwenden eines Objekts, implementiert IDisposable" in der <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> Thema zur Schnittstelle.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid&gt;</ph> class whenever you need to safely wrap an unmanaged resource that does not have an existing managed wrapper.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid&gt;</ph> Klasse benötigt werden, eine nicht verwaltete Ressource einschließen, die keiner vorhandenen verwalteten Wrapper.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>for full trust for inheritors.</source>
          <target state="translated">für volle Vertrauenswürdigkeit für erben.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem Code nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to reliably release the handle during the finalization phase; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to prevent reliable release (not recommended).</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um das Handle während der Abschlussphase zuverlässig freizugeben. <ph id="ph2">&lt;see langword="false" /&gt;</ph>, um eine zuverlässige Freigabe zu verhindern (dies wird nicht empfohlen).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" /&gt;</ph> class, specifying whether the handle is to be reliably released.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" /&gt;</ph>-Klasse und gibt an, ob das Handle zuverlässig freigegeben werden soll.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.#ctor(System.Boolean)">
          <source>for full trust for inheritors.</source>
          <target state="translated">für volle Vertrauenswürdigkeit für erben.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.#ctor(System.Boolean)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem Code nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.#ctor(System.Boolean)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.#ctor(System.Boolean)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid">
          <source>Gets a value that indicates whether the handle is invalid.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob das Handle ungültig ist.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handle is not valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Handle ungültig ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid">
          <source>The common language runtime uses this property to determine whether critical finalization is required.</source>
          <target state="translated">Die common Language Runtime verwendet diese Eigenschaft, um festzustellen, ob Handleressourcen erforderlich ist.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>