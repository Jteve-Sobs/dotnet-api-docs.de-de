<Type Name="SafeNCryptHandle" FullName="Microsoft.Win32.SafeHandles.SafeNCryptHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="feaedf3be0b414b992d2208c4a31d5b9e83acd9e" /><Meta Name="ms.sourcegitcommit" Value="367e1eae0725e6da7136cd073aaa856ded5d5c29" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/13/2019" /><Meta Name="ms.locfileid" Value="75015206" /></Metadata><TypeSignature Language="C#" Value="public abstract class SafeNCryptHandle : Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SafeNCryptHandle extends Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SafeNCryptHandle&#xA;Inherits SafeHandleZeroOrMinusOneIsInvalid" />
  <TypeSignature Language="C++ CLI" Value="public ref class SafeNCryptHandle abstract : Microsoft::Win32::SafeHandles::SafeHandleZeroOrMinusOneIsInvalid" />
  <TypeSignature Language="F#" Value="type SafeNCryptHandle = class&#xA;    inherit SafeHandleZeroOrMinusOneIsInvalid" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.SafeHandle</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a4d9a-101">Stellt ein sicheres Handle bereit, das von CNG-Objekten (Cryptography Next Generation) verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-101">Provides a safe handle that can be used by Cryptography Next Generation (CNG) objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
      
## Remarks


<span data-ttu-id="a4d9a-102">Diese Klasse schließt die Logik ein, um diese Handles ordnungsgemäß zu duplizieren und freizugeben, um eine native Duplizierung zu simulieren.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-102">This class wraps up the logic to correctly duplicate and free these handles to simulate a native duplication.</span></span>
            
<span data-ttu-id="a4d9a-103">Jedes geöffnete handle-Objekt kann als in einem von drei Zuständen betrachtet werden:</span><span class="sxs-lookup"><span data-stu-id="a4d9a-103">Each open handle object can be thought of as being in one of three states:</span></span>

- <span data-ttu-id="a4d9a-104">**Besitzer** : erstellt über den Mars Haller, herkömmliches Stil sicheres Handle.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-104">**Owner** - Created via the marshaler, traditional style safe handle.</span></span> <span data-ttu-id="a4d9a-105">Insbesondere ist nur ein Besitzer Handle für ein angegebenes System eigenes handle vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-105">Notably, only one owner handle exists for a given native handle.</span></span>
- <span data-ttu-id="a4d9a-106">**Doppelte** Punkte an einem Handle im Inhaber Zustand.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-106">**Duplicate** - Points at a handle in the Holder state.</span></span> <span data-ttu-id="a4d9a-107">Das Freigeben eines Handles im doppelten Zustand führt nur zum Dekrementieren des Verweis Zählers des Inhabers, nicht in einem Release des systemeigenen Handles.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-107">Releasing a handle in the duplicate state results only in decrementing the reference count of the holder, not in a release of the native handle.</span></span>
- <span data-ttu-id="a4d9a-108">Der **Halter** hält auf einem nativen Handle und wird von Handles im doppelten Zustand referenziert.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-108">**Holder** - Holds onto a native handle and is referenced by handles in the duplicate state.</span></span> <span data-ttu-id="a4d9a-109">Wenn alle doppelten Handles geschlossen werden, gibt das Inhaber handle das Native Handle frei.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-109">When all duplicate handles are closed, the holder handle releases the native handle.</span></span> <span data-ttu-id="a4d9a-110">Ein Inhaber Handle wird nie fertiggestellt, da dies zu einem Wettlauf zwischen den Finalizern der doppelten Handles und dem Inhaber handle führt.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-110">A holder handle will never be finalized, since this results in a race between the finalizers of the duplicate handles and the holder handle.</span></span> <span data-ttu-id="a4d9a-111">Stattdessen werden alle doppelten Handles abgeschlossen, und der Verweis Zähler wird auf 0 (null) herabgesetzt.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-111">Instead, it relies upon all of the duplicate handles to be finalized and decrement the ref count to zero.</span></span> <span data-ttu-id="a4d9a-112">Instanzen eines Inhaber Handles sollten nie von einem doppelten handle referenziert werden.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-112">Instances of a holder handle should never be referenced by anything but a duplicate handle.</span></span>

      ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a4d9a-113">für die Berechtigung zum Abrufen von nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-113">for permission to call unmanaged code.</span></span> <span data-ttu-id="a4d9a-114">Sicherheitsmaßnahme: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-114">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="a4d9a-115">Zugehörige Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="a4d9a-115">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SafeNCryptHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SafeNCryptHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a4d9a-116">Initialisiert eine neue Instanz der <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-116">Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a4d9a-117">für die Berechtigung zum Abrufen von nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-117">for permission to call unmanaged code.</span></span> <span data-ttu-id="a4d9a-118">Sicherheitsmaßnahme: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-118">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="a4d9a-119">Zugehörige Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="a4d9a-119">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SafeNCryptHandle (IntPtr handle, System.Runtime.InteropServices.SafeHandle parentHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int handle, class System.Runtime.InteropServices.SafeHandle parentHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor(System.IntPtr,System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (handle As IntPtr, parentHandle As SafeHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SafeNCryptHandle(IntPtr handle, System::Runtime::InteropServices::SafeHandle ^ parentHandle);" />
      <MemberSignature Language="F#" Value="new Microsoft.Win32.SafeHandles.SafeNCryptHandle : nativeint * System.Runtime.InteropServices.SafeHandle -&gt; Microsoft.Win32.SafeHandles.SafeNCryptHandle" Usage="new Microsoft.Win32.SafeHandles.SafeNCryptHandle (handle, parentHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parentHandle" Type="System.Runtime.InteropServices.SafeHandle" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="a4d9a-120">Das bereits vorhandene Handle, das verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-120">The pre-existing handle to use.</span></span> <span data-ttu-id="a4d9a-121">Bei Verwendung von <see cref="F:System.IntPtr.Zero" /> wird ein ungültiges Handle zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-121">Using <see cref="F:System.IntPtr.Zero" /> returns an invalid handle.</span></span></param>
        <param name="parentHandle"><span data-ttu-id="a4d9a-122">Das übergeordnete Handle dieses <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-122">The parent handle of this <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />.</span></span></param>
        <summary><span data-ttu-id="a4d9a-123">Instanziiert eine neue Instanz der <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-123">Instantiates a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a4d9a-124"><paramref name="parentHandle" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-124"><paramref name="parentHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a4d9a-125">Der <paramref name="parentHandle" /> ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-125"><paramref name="parentHandle" /> is closed.</span></span>  
  
<span data-ttu-id="a4d9a-126">- oder -</span><span class="sxs-lookup"><span data-stu-id="a4d9a-126">-or-</span></span> 
 <span data-ttu-id="a4d9a-127"><paramref name="parentHandle" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-127"><paramref name="parentHandle" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsInvalid">
      <MemberSignature Language="C#" Value="public override bool IsInvalid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvalid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.SafeHandles.SafeNCryptHandle.IsInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsInvalid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsInvalid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInvalid : bool" Usage="Microsoft.Win32.SafeHandles.SafeNCryptHandle.IsInvalid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandle">
      <MemberSignature Language="C#" Value="protected override bool ReleaseHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ReleaseHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ReleaseHandle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ReleaseHandle();" />
      <MemberSignature Language="F#" Value="override this.ReleaseHandle : unit -&gt; bool" Usage="safeNCryptHandle.ReleaseHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a4d9a-128">Gibt ein Handle frei, das von einem CNG (Cryptography Next Generation)-Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-128">Releases a handle used by a Cryptography Next Generation (CNG) object.</span></span></summary>
        <returns><span data-ttu-id="a4d9a-129"><see langword="true" />, wenn das Handle erfolgreich freigegeben wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-129"><see langword="true" /> if the handle is released successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a4d9a-130">Ähnlich wie bei der Duplizierung führt das Freigeben eines Handles verschiedene Vorgänge basierend auf dem Zustand des Handles aus.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-130">Similar to duplication, releasing a handle performs different operations based upon the state of the handle.</span></span>
            
<span data-ttu-id="a4d9a-131">Eine-Instanz, die mit einem "Klammern Wert"-Wert erstellt wurde, ruft "gefährousrelease" nur für das "Parser"-Objekt auf.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-131">An instance that was constructed with a parentHandle value will only call DangerousRelease on the parentHandle object.</span></span> <span data-ttu-id="a4d9a-132">Andernfalls wird das Verhalten durch den Besitz Status vorgegeben.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-132">Otherwise, the behavior is dictated by the ownership state.</span></span>

- <span data-ttu-id="a4d9a-133">**Owner** : ruft einfach die Release-P/aufrufen-Methode auf.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-133">**Owner** - Simply calls the release P/Invoke method.</span></span>
- <span data-ttu-id="a4d9a-134">**Duplicate** : Dekremente den Verweis Zähler des aktuellen Inhabers.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-134">**Duplicate** - Decrements the reference count of the current holder.</span></span>
- <span data-ttu-id="a4d9a-135">**Inhaber** : Ruft den Release-P/-Aufruf auf.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-135">**Holder** - Calls the release P/Invoke.</span></span> <span data-ttu-id="a4d9a-136">Beachten Sie, dass ReleaseHandle für einen Halter einen Verweis Zähler von 0 (null) impliziert.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-136">Note that ReleaseHandle on a holder implies a reference count of zero.</span></span>

          ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ReleaseNativeHandle">
      <MemberSignature Language="C#" Value="protected abstract bool ReleaseNativeHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ReleaseNativeHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReleaseNativeHandle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool ReleaseNativeHandle();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseNativeHandle : unit -&gt; bool" Usage="safeNCryptHandle.ReleaseNativeHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a4d9a-137">Gibt ein systemeigenes Handle frei, das von einem CNG (Cryptography Next Generation)-Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-137">Releases a native handle used by a Cryptography Next Generation (CNG) object.</span></span></summary>
        <returns><span data-ttu-id="a4d9a-138"><see langword="true" />, wenn das Handle erfolgreich freigegeben wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a4d9a-138"><see langword="true" /> if the handle is released successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
