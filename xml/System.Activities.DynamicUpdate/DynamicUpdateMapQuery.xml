<Type Name="DynamicUpdateMapQuery" FullName="System.Activities.DynamicUpdate.DynamicUpdateMapQuery">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ff1ce108a770fa82c7042f50e8830cb7fb34b10" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70732115" /></Metadata><TypeSignature Language="C#" Value="public class DynamicUpdateMapQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicUpdateMapQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicUpdateMapQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicUpdateMapQuery" />
  <TypeSignature Language="F#" Value="type DynamicUpdateMapQuery = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="67e58-101">Stellt eine dynamische Updatezuordnungsabfrage dar.</span><span class="sxs-lookup"><span data-stu-id="67e58-101">Represents a dynamic update map query.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67e58-102">Diese Klasse unterstützt die Funktionen "Versionierung" und "Dynamic Update" von Windows Workflow Foundation.</span><span class="sxs-lookup"><span data-stu-id="67e58-102">This class supports the versioning and dynamic update functionality of Windows Workflow Foundation.</span></span> <span data-ttu-id="67e58-103">Weitere Informationen zur Workflow Versionsverwaltung, Workflow Identität und dynamischen Updates finden Sie in den folgenden Themen.</span><span class="sxs-lookup"><span data-stu-id="67e58-103">For more information about workflow versioning, workflow identity, and dynamic update, see the following topics.</span></span>  
  
 [<span data-ttu-id="67e58-104">Workflow Versionsverwaltung</span><span class="sxs-lookup"><span data-stu-id="67e58-104">Workflow Versioning</span></span>](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 <span data-ttu-id="67e58-105">Beschreibt die Funktionen der Workflow Versionsverwaltung, [!INCLUDE[net_v45](~/includes/net-v45-md.md)]die in eingeführt wurden.</span><span class="sxs-lookup"><span data-stu-id="67e58-105">Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/includes/net-v45-md.md)].</span></span>  
  
 [<span data-ttu-id="67e58-106">Dynamisches Update</span><span class="sxs-lookup"><span data-stu-id="67e58-106">Dynamic Update</span></span>](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 <span data-ttu-id="67e58-107">Beschreibt, wie die Workflow Definition einer persistenten Workflow Instanz mithilfe des dynamischen Updates aktualisiert wird.</span><span class="sxs-lookup"><span data-stu-id="67e58-107">Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.</span></span>  
  
 [<span data-ttu-id="67e58-108">Verwenden der WorkflowApplication-Identität und-Versionsverwaltung</span><span class="sxs-lookup"><span data-stu-id="67e58-108">Using WorkflowApplication Identity and Versioning</span></span>](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 <span data-ttu-id="67e58-109">Beschreibt, wie <xref:System.Activities.WorkflowIdentity> zum parallelen Hosten mehrerer Workflowversionen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="67e58-109">Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side.</span></span>  
  
 [<span data-ttu-id="67e58-110">Parallele Versionsverwaltung in WorkflowServiceHost</span><span class="sxs-lookup"><span data-stu-id="67e58-110">Side by Side Versioning in WorkflowServiceHost</span></span>](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 <span data-ttu-id="67e58-111">Beschreibt, wie mehrere Versionen eines Workflows auf einem einzelnen Endpunkt gehostet werden.</span><span class="sxs-lookup"><span data-stu-id="67e58-111">Describes how to host multiple versions of a workflow on a single endpoint.</span></span>  
  
 [<span data-ttu-id="67e58-112">Vorgehensweise: Paralleles Hosten mehrerer Workflowversionen</span><span class="sxs-lookup"><span data-stu-id="67e58-112">How to: Host Multiple Versions of a Workflow Side-by-Side</span></span>](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 <span data-ttu-id="67e58-113">Dieser Schritt im [Tutorial "Getting Started](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) " veranschaulicht das Aktualisieren einer Workflow Definition und das Hosting von Workflows mit der alten und der neuen Definition gleichzeitig.</span><span class="sxs-lookup"><span data-stu-id="67e58-113">This step in the [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.</span></span>  
  
 [<span data-ttu-id="67e58-114">Vorgehensweise: Aktualisieren der Definition einer ausgeführten Workflowinstanz</span><span class="sxs-lookup"><span data-stu-id="67e58-114">How to: Update the Definition of a Running Workflow Instance</span></span>](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 <span data-ttu-id="67e58-115">Dieser Schritt im [Tutorial "Getting Started](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) " veranschaulicht, wie Sie persistente Workflow Instanzen aktualisieren, um eine neue Workflow Definition zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="67e58-115">This step in the [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) demonstrates updating persisted workflow instances to use a new workflow definition.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanApplyUpdateWhileRunning">
      <MemberSignature Language="C#" Value="public bool CanApplyUpdateWhileRunning (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanApplyUpdateWhileRunning(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateMapQuery.CanApplyUpdateWhileRunning(System.Activities.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanApplyUpdateWhileRunning(System::Activities::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.CanApplyUpdateWhileRunning : System.Activities.Activity -&gt; bool" Usage="dynamicUpdateMapQuery.CanApplyUpdateWhileRunning activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="67e58-116">Die aktuelle Aktion.</span><span class="sxs-lookup"><span data-stu-id="67e58-116">The current activity.</span></span></param>
        <summary><span data-ttu-id="67e58-117">Gibt an, ob die <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> beim Ausführen aktualisieren kann.</span><span class="sxs-lookup"><span data-stu-id="67e58-117">Specifies whether the <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> can update while running.</span></span></summary>
        <returns><span data-ttu-id="67e58-118"><see langword="true" />, wenn die <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> während der Ausführung aktualisiert werden kann; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="67e58-118"><see langword="true" /> if the <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> can update while running; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindMatch">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="67e58-119">Sucht die Übereinstimmung mit <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" />.</span><span class="sxs-lookup"><span data-stu-id="67e58-119">Searches for the match with <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindMatch">
      <MemberSignature Language="C#" Value="public System.Activities.Activity FindMatch (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Activity FindMatch(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateMapQuery.FindMatch(System.Activities.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Activity ^ FindMatch(System::Activities::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.FindMatch : System.Activities.Activity -&gt; System.Activities.Activity" Usage="dynamicUpdateMapQuery.FindMatch activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="67e58-120">Die auf eine Übereinstimmung zu durchsuchende Aktivität.</span><span class="sxs-lookup"><span data-stu-id="67e58-120">The activity to be searched for a match.</span></span></param>
        <summary><span data-ttu-id="67e58-121">Sucht die Übereinstimmung mit <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" />, wobei die angegebenen Aktivitäten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="67e58-121">Searches for the match with <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> using the specified activities.</span></span></summary>
        <returns><span data-ttu-id="67e58-122">Die Übereinstimmung für die Aktivität.</span><span class="sxs-lookup"><span data-stu-id="67e58-122">The match for the activity.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMatch">
      <MemberSignature Language="C#" Value="public System.Activities.Variable FindMatch (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Variable FindMatch(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateMapQuery.FindMatch(System.Activities.Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Variable ^ FindMatch(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="member this.FindMatch : System.Activities.Variable -&gt; System.Activities.Variable" Usage="dynamicUpdateMapQuery.FindMatch variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Variable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="67e58-123">Die auf eine Übereinstimmung zu durchsuchende Variable.</span><span class="sxs-lookup"><span data-stu-id="67e58-123">The variable to be searched for a match.</span></span></param>
        <summary><span data-ttu-id="67e58-124">Sucht die Übereinstimmung mit <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" />, wobei die angegebene Variable verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="67e58-124">Searches for the match with <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> using the specified variable.</span></span></summary>
        <returns><span data-ttu-id="67e58-125">Die Übereinstimmung für die Variable.</span><span class="sxs-lookup"><span data-stu-id="67e58-125">The match for the variable.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
