<Type Name="DataControlReferenceIDConverter" FullName="System.Web.DynamicData.Design.DataControlReferenceIDConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4fb9f1abc2d5b58594125faa45b6a0079280a091" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36402517" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataControlReferenceIDConverter : System.ComponentModel.StringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataControlReferenceIDConverter extends System.ComponentModel.StringConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.Design.DataControlReferenceIDConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataControlReferenceIDConverter&#xA;Inherits StringConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataControlReferenceIDConverter : System::ComponentModel::StringConverter" />
  <TypeSignature Language="F#" Value="type DataControlReferenceIDConverter = class&#xA;    inherit StringConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.StringConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6dc4b-101">Erstellt eine Auflistung von Datensteuerelementen, die vom Benutzer ausgewählt werden können.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6dc4b-101">Creates a user-selectable collection of data controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dc4b-102">Zur Entwurfszeit die <xref:System.Web.DynamicData.Design.DataControlReferenceIDConverter> Klasse führt die Konvertierung vom Typ der Steuerelemente in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="6dc4b-102">At design time, the <xref:System.Web.DynamicData.Design.DataControlReferenceIDConverter> class performs type conversion of the controls in the collection.</span></span> <span data-ttu-id="6dc4b-103">Diese Klasse wird in der Regel verweist die <xref:System.ComponentModel.TypeConverterAttribute> Attribut.</span><span class="sxs-lookup"><span data-stu-id="6dc4b-103">This class is typically referenced by the <xref:System.ComponentModel.TypeConverterAttribute> attribute.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.StringConverter" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataControlReferenceIDConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataControlReferenceIDConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6dc4b-104">Initialisiert eine neue Instanz der <see cref="T:System.Web.DynamicData.Design.DataControlReferenceIDConverter" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dc4b-104">Initializes a new instance of the <see cref="T:System.Web.DynamicData.Design.DataControlReferenceIDConverter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dc4b-105">Eine neue Instanz der dem <xref:System.Web.DynamicData.Design.DataControlReferenceIDConverter> Klasse wird erstellt, wenn die Konverterklasse, indem aufgerufen wird ein <xref:System.ComponentModel.TypeConverterAttribute> Attribut.</span><span class="sxs-lookup"><span data-stu-id="6dc4b-105">A new instance of the <xref:System.Web.DynamicData.Design.DataControlReferenceIDConverter> class is created when the converter class is called by a <xref:System.ComponentModel.TypeConverterAttribute> attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="dataControlReferenceIDConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="6dc4b-106">Ein Objekt, das Kontextinformationen für diesen Typkonverter bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dc4b-106">An object that provides context information for this type converter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dc4b-107">Gibt eine Auflistung der verfügbaren Steuerelementwerte zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dc4b-107">Returns a collection of available control values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dc4b-108">Eine Auflistung, die die Namen der verfügbaren Steuerelemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dc4b-108">A collection that contains the names of the available controls.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dc4b-109">Die <xref:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValues%2A?displayProperty=nameWithType> Methode ruft den Satz von Steuerelementen, die konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="6dc4b-109">The <xref:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValues%2A?displayProperty=nameWithType> method gets the set of controls that can be converted.</span></span> <span data-ttu-id="6dc4b-110">Erstellt eine <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> Instanz, die enthält Objekte, die gültige Datentypen in `context`.</span><span class="sxs-lookup"><span data-stu-id="6dc4b-110">It creates a <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> instance that contains objects that are valid data types in `context`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataControlReferenceIDConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="6dc4b-111">Ein Objekt, das Kontextinformationen für diesen Typkonverter bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dc4b-111">An object that provides context information to this type converter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dc4b-112">Gibt einen Wert zurück, der angibt, ob die zurückgegebenen Steuerelementnamen eine exklusive Liste aller möglichen Werte darstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dc4b-112">Returns a value that indicates whether the returned control names are an exclusive list of all possible values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dc4b-113">Immer <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dc4b-113">Always <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataControlReferenceIDConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="6dc4b-114">Ein Objekt, das Kontextinformationen für diesen Typkonverter bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dc4b-114">An object that provides context information to this type converter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dc4b-115">Gibt einen Wert zurück, der angibt, ob dieser Konverter eine Standardmenge von Steuerelementnamen unterstützt, die in der Auflistung ausgewählt werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dc4b-115">Returns a value that indicates whether this converter supports a standard set of control names that can be selected from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dc4b-116">Immer <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dc4b-116">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>