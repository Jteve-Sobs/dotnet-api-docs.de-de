<Namespace Name="System.AddIn.Contract.Automation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5f80cdf9dfec8da7507dfb3139c0514563bef75e" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30724964" />
  </Metadata>
  <Docs>
    <summary>
      <span data-ttu-id="ee8c2-101">Der <see cref="N:System.AddIn.Contract.Automation" />-Namespace enthält Schnittstellen, die Komponenten für den Zugriff auf Typinformationen und den Aufruf von Typmembern verwenden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee8c2-101">The <see cref="N:System.AddIn.Contract.Automation" /> namespace contains interfaces that components use to access type information and invoke type members.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee8c2-102">Verwenden Sie die Schnittstellen in den <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> -Namespace Komponenten den Zugriff auf Typinformationen für ein Remoteobjekt ermöglichen, ohne direkten Zugriff auf die <xref:System.Type> des Remoteobjekts.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-102">Use the interfaces in the <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> namespace to enable components to access type information for a remote object without having direct access to the <xref:System.Type> of the remote object.</span></span> <span data-ttu-id="ee8c2-103">Die <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> -Namespace definiert Reflektionsfunktionen für Komponenten, die die Schnittstellen und Strukturen im Verwenden der <xref:System.AddIn.Contract?displayProperty=nameWithType>, <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType>, und <xref:System.AddIn.Contract.Collections?displayProperty=nameWithType> Namespaces zu kommunizieren.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-103">The <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> namespace defines reflection functionality for components that use the interfaces and structures in the <xref:System.AddIn.Contract?displayProperty=nameWithType>, <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType>, and <xref:System.AddIn.Contract.Collections?displayProperty=nameWithType> namespaces to communicate.</span></span> <span data-ttu-id="ee8c2-104">Die Schnittstellen in diesen Namespaces werden auch Verträge bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-104">The interfaces in these namespaces are also called contracts.</span></span> <span data-ttu-id="ee8c2-105">Alle Verträge Ableiten der <xref:System.AddIn.Contract.IContract> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-105">All contracts derive from the <xref:System.AddIn.Contract.IContract> interface.</span></span>  
  
 <span data-ttu-id="ee8c2-106">Wenn Verträge verwenden, um die Kommunikation zwischen Komponenten zu verwalten, müssen Sie implementieren die <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> -Schnittstelle in einem Typ, um die Typinformationen für andere Komponenten verfügbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-106">When using contracts to manage the communication between components, you must implement the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface in a type to expose the type information to other components.</span></span> <span data-ttu-id="ee8c2-107">Komponenten können dann auf die Member des Typs zugreifen, durch Aufrufen der <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> -Methode der Schnittstelle zum Abrufen einer <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-107">Components can then access the members of the type by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method of the interface to get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.</span></span> <span data-ttu-id="ee8c2-108">Die anderen Schnittstellen und Strukturen in den <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> Namespace ermöglichen den Zugriff auf die Typinformationen für Delegaten, Eigenschaften, Methoden, Ereignissen und Feldern.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-108">The other interfaces and structures in the <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> namespace provide access to type information for delegates, properties, methods, events, and fields.</span></span>  
  
 <span data-ttu-id="ee8c2-109">Komponenten können die Verträge in der <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> Namespace, den Zugriff auf Typinformationen für ein Objekt, das in einem anderen Prozess oder die Anwendungsdomäne oder in derselben Prozess- oder Anwendungsdomäne ist.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-109">Components can use the contracts in the <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> namespace to access type information for an object that is in a different process or application domain, or in the same process or application domain.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.AddIn.Contract" />
    <altmember cref="N:System.AddIn.Contract.Collections" />
  </Docs>
</Namespace>