<Type Name="ZipArchive" FullName="System.IO.Compression.ZipArchive">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7ce51f04b9bc5b2eef3bc47d0a6ee5bd47d5a39" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82323145" /></Metadata><TypeSignature Language="C#" Value="public class ZipArchive : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ZipArchive extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipArchive" />
  <TypeSignature Language="VB.NET" Value="Public Class ZipArchive&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipArchive : IDisposable" />
  <TypeSignature Language="F#" Value="type ZipArchive = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt ein Paket komprimierter Dateien im Zip-Archiv-Format dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methoden zum Bearbeiten von ZIP-Archiven und deren Datei Einträgen sind auf drei Klassen verteilt: <xref:System.IO.Compression.ZipFile>, <xref:System.IO.Compression.ZipArchive>und <xref:System.IO.Compression.ZipArchiveEntry>.  
  
|To|Zweck|  
|--------|---------|  
|Erstellen eines ZIP-Archivs aus einem Verzeichnis|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=nameWithType>|  
|Extrahieren des Inhalts eines ZIP-Archivs in ein Verzeichnis|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=nameWithType>|  
|Hinzufügen neuer Dateien zu einem vorhandenen ZIP-Archiv|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=nameWithType>|  
|Abrufen einer Datei aus einem ZIP-Archiv|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=nameWithType>|  
|Abrufen aller Dateien aus einem ZIP-Archiv|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=nameWithType>|  
|Öffnen eines Streams in einer einzelnen Datei, die in einem ZIP-Archiv enthalten ist|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=nameWithType>|  
|Löschen einer Datei aus einem ZIP-Archiv|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=nameWithType>|  
  
 Wenn Sie einen neuen Eintrag erstellen, wird die Datei komprimiert und dem ZIP-Paket hinzugefügt. Mit der <xref:System.IO.Compression.ZipArchive.CreateEntry%2A>-Methode können Sie beim Hinzufügen des Eintrags eine Verzeichnishierarchie angeben. Sie fügen den relativen Pfad des neuen Eintrags in das ZIP-Paket ein. Wenn Sie z. b. einen neuen Eintrag mit einem relativen Pfad von `AddedFolder\NewFile.txt` erstellen, wird eine komprimierte Textdatei in einem Verzeichnis namens addedfolder erstellt.  
  
 Wenn Sie in Ihrem Projekt auf die `System.IO.Compression.FileSystem`-Assembly verweisen, können Sie auf vier Erweiterungs Methoden (von der <xref:System.IO.Compression.ZipFileExtensions>-Klasse) für die <xref:System.IO.Compression.ZipArchive>-Klasse zugreifen: <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)>, <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)>, <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)>und <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String,System.Boolean)> (verfügbar in .net Core 2,0 und höheren Versionen). Diese Erweiterungs Methoden ermöglichen es Ihnen, den Inhalt des Eintrags in eine Datei zu komprimieren und zu dekomprimieren. Die `System.IO.Compression.FileSystem` Assembly ist für [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]-apps nicht verfügbar. In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]-Apps können Sie Dateien mit der <xref:System.IO.Compression.DeflateStream>-oder <xref:System.IO.Compression.GZipStream>-Klasse komprimieren und dekomprimieren, oder Sie können die [!INCLUDE[wrt](~/includes/wrt-md.md)] Typen " [Kompressor](https://go.microsoft.com/fwlink/p/?LinkID=246357) " und " [Decompressor](https://go.microsoft.com/fwlink/p/?LinkID=246358)" verwenden.  
  
   
  
## Examples  
 Im ersten Beispiel wird gezeigt, wie ein neuer Eintrag erstellt und mithilfe eines Streams darauf geschrieben wird.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 Im folgenden Beispiel wird gezeigt, wie ein ZIP-Archiv geöffnet und die Auflistung von Einträgen durchlaufen wird.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 Das dritte Beispiel zeigt, wie Erweiterungs Methoden verwendet werden, um einen neuen Eintrag in einem ZIP-Archiv aus einer vorhandenen Datei zu erstellen und den Archiv Inhalt zu extrahieren. Sie müssen auf die `System.IO.Compression.FileSystem` Assembly verweisen, um den Code auszuführen.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Compression.ZipFile" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.IO.Compression.ZipArchive" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Ein Stream, der das zu lesende Archiv enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.ZipArchive" />-Klasse aus dem angegebenen Stream.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Der Stream wurde bereits geschlossen oder unterstützt keine Lesevorgänge.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> ist <see langword="null" /></exception>
        <exception cref="T:System.IO.InvalidDataException">Die Inhalte des Streams haben nicht das ZIP-Archivformat.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, mode As ZipArchiveMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream * System.IO.Compression.ZipArchiveMode -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive (stream, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
      </Parameters>
      <Docs>
        <param name="stream">Der Eingabe- oder Ausgabestream.</param>
        <param name="mode">Einer der Enumerationswerte, der angibt, ob das Zip-Archiv verwendet wird, um Einträge zu lesen, zu erstellen oder zu aktualisieren.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.ZipArchive" />-Klasse aus dem angegebenen Stream und mit dem angegebenen Modus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der `mode`-Parameter auf <xref:System.IO.Compression.ZipArchiveMode.Read>festgelegt ist, muss der Stream Lesevorgänge unterstützen. Wenn der `mode`-Parameter auf <xref:System.IO.Compression.ZipArchiveMode.Create>festgelegt ist, muss der Stream Schreibvorgänge unterstützen. Wenn der `mode`-Parameter auf <xref:System.IO.Compression.ZipArchiveMode.Update>festgelegt ist, muss der Stream Lese-, Schreib-und Suchvorgänge unterstützen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Stream ist bereits geschlossen oder die Funktionen des Streams stimmen nicht mit dem Modus überein.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> ist ein ungültiger Wert.</exception>
        <exception cref="T:System.IO.InvalidDataException">Die Inhalte des Streams konnten nicht als ZIP-Archiv interpretiert werden.  
  
Oder 
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und ein Eintrag im Archiv fehlt oder ist beschädigt und kann nicht gelesen werden.  
  
Oder 
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und ein Eintrag ist zu groß, um in den Arbeitsspeicher zu passen.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, mode As ZipArchiveMode, leaveOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream * System.IO.Compression.ZipArchiveMode * bool -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive (stream, mode, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">Der Eingabe- oder Ausgabestream.</param>
        <param name="mode">Einer der Enumerationswerte, der angibt, ob das Zip-Archiv verwendet wird, um Einträge zu lesen, zu erstellen oder zu aktualisieren.</param>
        <param name="leaveOpen"><see langword="true" />, um den Datenstrom geöffnet zu lassen, nach dem das <see cref="T:System.IO.Compression.ZipArchive" />-Objekt freigegeben wurde; andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.ZipArchive" />-Klasse für den angegebenen Stream und den angegebenen Modus und lässt den Stream optional geöffnet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der `mode`-Parameter auf <xref:System.IO.Compression.ZipArchiveMode.Read>festgelegt ist, muss der Stream Lesevorgänge unterstützen. Wenn der `mode`-Parameter auf <xref:System.IO.Compression.ZipArchiveMode.Create>festgelegt ist, muss der Stream Schreibvorgänge unterstützen. Wenn der `mode`-Parameter auf <xref:System.IO.Compression.ZipArchiveMode.Update>festgelegt ist, muss der Stream Lese-, Schreib-und Suchvorgänge unterstützen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Stream ist bereits geschlossen oder die Funktionen des Streams stimmen nicht mit dem Modus überein.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> ist ein ungültiger Wert.</exception>
        <exception cref="T:System.IO.InvalidDataException">Die Inhalte des Streams konnten nicht als ZIP-Archiv interpretiert werden.  
  
Oder 
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und ein Eintrag im Archiv fehlt oder ist beschädigt und kann nicht gelesen werden.  
  
Oder 
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und ein Eintrag ist zu groß, um in den Arbeitsspeicher zu passen.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, mode As ZipArchiveMode, leaveOpen As Boolean, entryNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode, bool leaveOpen, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream * System.IO.Compression.ZipArchiveMode * bool * System.Text.Encoding -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive (stream, mode, leaveOpen, entryNameEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">Der Eingabe- oder Ausgabestream.</param>
        <param name="mode">Einer der Enumerationswerte, der angibt, ob das Zip-Archiv verwendet wird, um Einträge zu lesen, zu erstellen oder zu aktualisieren.</param>
        <param name="leaveOpen"><see langword="true" />, um den Datenstrom geöffnet zu lassen, nach dem das <see cref="T:System.IO.Compression.ZipArchive" />-Objekt freigegeben wurde; andernfalls <see langword="false" />.</param>
        <param name="entryNameEncoding">Die Codierung, die beim Lesen oder Schreiben von Eintragsnamen in diesem Archiv verwendet werden soll. Geben Sie einen Wert für diesen Parameter nur an, wenn eine Codierung für die Interoperabilität mit ZIP-Archiv-Tools und -Bibliotheken erforderlich ist, die die UTF-8-Codierung für Eintragsnamen nicht unterstützen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.ZipArchive" />-Klasse für den angegebenen Stream und den angegebenen Modus und verwendet dabei die angegebene Codierung für Eintragsnamen und lässt den Stream optional geöffnet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der `mode`-Parameter auf <xref:System.IO.Compression.ZipArchiveMode.Read>festgelegt ist, muss der Stream Lesevorgänge unterstützen. Wenn der `mode`-Parameter auf <xref:System.IO.Compression.ZipArchiveMode.Create>festgelegt ist, muss der Stream Schreibvorgänge unterstützen. Wenn der `mode`-Parameter auf <xref:System.IO.Compression.ZipArchiveMode.Update>festgelegt ist, muss der Stream Lese-, Schreib-und Suchvorgänge unterstützen.  
  
 Wenn Sie eine ZIP-Archivdatei zum Lesen öffnen und `entryNameEncoding` auf `null`festgelegt ist, werden die Namen der Einträge gemäß den folgenden Regeln decodiert:  
  
-   Wenn das sprachcodierungsflag (im Bitflag "General Purpose" des lokalen Datei Headers) nicht festgelegt ist, wird die aktuelle System Standard Codepage verwendet, um den Namen des Eintrags zu decodieren.  
  
-   Wenn das sprachcodierungsflag festgelegt ist, wird UTF-8 verwendet, um den Namen des Eintrags zu decodieren.  
  
 Wenn Sie eine ZIP-Archivdatei zum Lesen öffnen und `entryNameEncoding` auf einen anderen Wert als `null`festgelegt ist, werden die Namen der Einträge gemäß den folgenden Regeln decodiert:  
  
-   Wenn das Language Encoding-Flag nicht festgelegt ist, wird der angegebene `entryNameEncoding` zum Decodieren des Eingabe namens verwendet.  
  
-   Wenn das sprachcodierungsflag festgelegt ist, wird UTF-8 verwendet, um den Namen des Eintrags zu decodieren.  
  
 Wenn Sie in Archivdateien schreiben und `entryNameEncoding` auf `null`festgelegt ist, werden die Namen der Einträge gemäß den folgenden Regeln codiert:  
  
-   Für Eintrags Namen, die Zeichen außerhalb des ASCII-Bereichs enthalten, wird das sprachcodierungsflag festgelegt, und Eintrags Namen werden mithilfe von UTF-8 codiert.  
  
-   Für Eintrags Namen, die nur ASCII-Zeichen enthalten, ist das sprachcodierungsflag nicht festgelegt, und Eintrags Namen werden mithilfe der aktuellen Standard Codepage des Systems codiert.  
  
 Wenn Sie in Archivdateien schreiben und `entryNameEncoding` auf einen anderen Wert als `null`festgelegt ist, wird der angegebene `entryNameEncoding` zum Codieren der Eintrags Namen in Bytes verwendet. Das sprachcodierungsflag (im allgemeinen Bitflag des lokalen Datei Headers) wird nur festgelegt, wenn die angegebene Codierung eine UTF-8-Codierung ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Stream ist bereits geschlossen oder die Funktionen des Streams stimmen nicht mit dem Modus überein.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> ist ein ungültiger Wert.</exception>
        <exception cref="T:System.IO.InvalidDataException">Die Inhalte des Streams konnten nicht als ZIP-Archiv interpretiert werden.  
  
Oder 
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und ein Eintrag im Archiv fehlt oder ist beschädigt und kann nicht gelesen werden.  
  
Oder 
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und ein Eintrag ist zu groß, um in den Arbeitsspeicher zu passen.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEntry">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt einen leeren Eintrag im ZIP-Archiv.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntry (entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ CreateEntry(System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="member this.CreateEntry : string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="zipArchive.CreateEntry entryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">Ein Pfad relativ zum Stamm des Archivs, der den Namen des Eintrags angibt, der erstellt werden soll.</param>
        <summary>Erstellt einen leeren Eintrag, der den angegebenen Pfad und Eintragsnamen im ZIP-Archiv Ebene verwendet.</summary>
        <returns>Ein leerer Eintrag im ZIP-Archiv.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `entryName` Zeichenfolge sollte den relativen Pfad des Eintrags, den Sie im ZIP-Archiv erstellen möchten, widerspiegeln. Es gibt keine Einschränkung für die von Ihnen bereitgestellte Zeichenfolge. Wenn Sie jedoch nicht als relativer Pfad formatiert ist, wird der Eintrag erstellt, aber Sie erhalten möglicherweise eine Ausnahme, wenn Sie den Inhalt des ZIP-Archivs extrahieren. Wenn ein Eintrag mit dem angegebenen Pfad und Namen bereits im Archiv vorhanden ist, wird ein zweiter Eintrag mit demselben Pfad und Namen erstellt.  
  
 Der Wert der <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>-Eigenschaft für den neuen Eintrag wird auf die aktuelle Zeit festgelegt. Der Eintrag wird mit der Standard Komprimierungs Ebene des zugrunde liegenden Komprimierungs Algorithmus komprimiert. Wenn Sie eine andere Komprimierungs Ebene angeben möchten, verwenden Sie die <xref:System.IO.Compression.ZipArchive.CreateEntry%2A>-Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein Eintrag erstellt und mithilfe eines Streams darauf geschrieben wird.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="entryName" /> ist <see cref="F:System.String.Empty" /></exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="entryName" /> ist <see langword="null" /></exception>
        <exception cref="T:System.NotSupportedException">Das ZIP-Archiv unterstützt keine Schreibvorgänge.</exception>
        <exception cref="T:System.ObjectDisposedException">Die ZIP-Archiv wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntry (entryName As String, compressionLevel As CompressionLevel) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ CreateEntry(System::String ^ entryName, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberSignature Language="F#" Value="member this.CreateEntry : string * System.IO.Compression.CompressionLevel -&gt; System.IO.Compression.ZipArchiveEntry" Usage="zipArchive.CreateEntry (entryName, compressionLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="entryName">Ein Pfad relativ zum Stamm des Archivs, der den Namen des Eintrags angibt, der erstellt werden soll.</param>
        <param name="compressionLevel">Einer der Enumerationswerte, der angibt, ob Geschwindigkeit oder Komprimierungseffektivität priorisiert wird, wenn der Eintrag erstellt.</param>
        <summary>Erstellt einen leeren Eintrag, der den angegebenen Eintragsnamen und die Komprimierung im ZIP-Archiv Ebene verwendet.</summary>
        <returns>Ein leerer Eintrag im ZIP-Archiv.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `entryName` Zeichenfolge sollte den relativen Pfad des Eintrags, den Sie im ZIP-Archiv erstellen möchten, widerspiegeln. Es gibt keine Einschränkung für die von Ihnen bereitgestellte Zeichenfolge. Wenn Sie jedoch nicht als relativer Pfad formatiert ist, wird der Eintrag erstellt, aber Sie erhalten möglicherweise eine Ausnahme, wenn Sie den Inhalt des ZIP-Archivs extrahieren. Wenn im Archiv bereits ein Eintrag mit dem angegebenen Namen vorhanden ist, wird ein zweiter Eintrag mit demselben Namen erstellt.  
  
 Der Wert der <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>-Eigenschaft für den neuen Eintrag wird auf die aktuelle Zeit festgelegt. Legen Sie den `compressionLevel`-Parameter auf <xref:System.IO.Compression.CompressionLevel.Optimal> fest, wenn Sie die Datei so weit wie möglich komprimieren möchten. Legen Sie den `compressionLevel`-Parameter auf <xref:System.IO.Compression.CompressionLevel.Fastest> fest, wenn Sie Bedenken haben, dass der Komprimierungs Vorgang für Ihr Szenario nicht schnell genug ausgeführt werden soll.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein Eintrag mit der optimalen Komprimierungs Ebene erstellt wird. Außerdem wird mit einem Stream in den neuen Eintrag geschrieben.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="entryName" /> ist <see cref="F:System.String.Empty" /></exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="entryName" /> ist <see langword="null" /></exception>
        <exception cref="T:System.NotSupportedException">Das ZIP-Archiv unterstützt keine Schreibvorgänge.</exception>
        <exception cref="T:System.ObjectDisposedException">Die ZIP-Archiv wurde freigegeben.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt alle Ressourcen frei, die vom <see cref="T:System.IO.Compression.ZipArchive" />-Objekt verwendet werden.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="zipArchive.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Ressourcen frei, die von der aktuellen Instanz der Klasse <see cref="T:System.IO.Compression.ZipArchive" /> verwendet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode schließt das Schreiben des Archivs ein und gibt alle vom <xref:System.IO.Compression.ZipArchive> Objekt verwendeten Ressourcen frei. Wenn Sie das-Objekt nicht mit der <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>-Konstruktorüberladung erstellen und dessen `leaveOpen`-Parameter auf `true`festlegen, werden alle zugrunde liegenden Streams geschlossen und sind für nachfolgende Schreibvorgänge nicht mehr verfügbar.  
  
 Wenn Sie diese Instanz von <xref:System.IO.Compression.ZipArchive>nicht mehr benötigen, können Sie <xref:System.IO.Compression.ZipArchive.Dispose> abrufen, um alle von dieser Instanz verwendeten Ressourcen freizugeben. Sie sollten weitere Verweise auf diese <xref:System.IO.Compression.ZipArchive> Instanz entfernen, damit die Garbage Collector den Speicher der Instanz freigeben kann, anstatt Sie für die Beendigung aufrechtzuerhalten.  
  
 <xref:System.IO.Compression.ZipArchive.Dispose> Ruft die <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29>-Methode auf, die den Code zum Freigeben von verwalteten und nicht verwalteten Ressourcen enthält. Weitere Informationen finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="zipArchive.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um das Schreiben des Archivs abzuschließen und sowohl nicht verwaltete als auch verwaltete Ressourcen freizugeben; <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Wird von den <see cref="M:System.IO.Compression.ZipArchive.Dispose" /> und <see cref="M:System.Object.Finalize" />-Methoden aufgerufen, um die nicht verwalteten Ressourcen freizugeben, die von der aktuellen Instanz der <see cref="T:System.IO.Compression.ZipArchive" />-Klasse verwendet werden, und beendet optional das Schreiben ins Archiv und gibt die verwalteten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `disposing` auf `true`festgelegt ist, werden alle zugrunde liegenden Streams geschlossen und sind nicht mehr für nachfolgende Schreibvorgänge verfügbar, es sei denn, Sie erstellen das Objekt mit der <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>-Konstruktorüberladung und legen den `leaveOpen` Parameter auf `true`fest.  
  
 Diese Methode wird nur von der öffentlichen <xref:System.IO.Compression.ZipArchive.Dispose> und <xref:System.Object.Finalize> Methoden aufgerufen; Diese Methode sollte nicht direkt aufgerufen werden.  
  
 Wenn Sie das Verwerfen-Muster implementieren, sollte der boolesche Parameter der <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29>-Methode wie folgt verwendet werden:  
  
-   Die <xref:System.IO.Compression.ZipArchive.Dispose>-Methode des aktuellen-Objekts sollte <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> aufrufen, bei dem der boolesche Parameter auf `true` festgelegt ist, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben.  
  
-   Die <xref:System.Object.Finalize>-Methode des aktuellen-Objekts sollte <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> aufrufen, bei dem der boolesche Parameter auf `false` festgelegt ist, um nur nicht verwaltete Ressourcen freizugeben.
  
 Weitere Informationen finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt; Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Compression.ZipArchiveEntry&gt; Entries" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As ReadOnlyCollection(Of ZipArchiveEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Compression::ZipArchiveEntry ^&gt; ^ Entries { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Compression::ZipArchiveEntry ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entries : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt;" Usage="System.IO.Compression.ZipArchive.Entries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von Einträgen ab, die das ZIP-Archiv momentan enthält.</summary>
        <value>Die Auflistung von Einträgen, die das ZIP-Archiv momentan enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.IO.Compression.ZipArchive.Entries%2A>-Eigenschaft, um die gesamte Auflistung von Einträgen abzurufen. Verwenden Sie die <xref:System.IO.Compression.ZipArchive.GetEntry%2A>-Methode, um einen einzelnen Eintrag anhand des Namens abzurufen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein ZIP-Archiv geöffnet und die Auflistung von Einträgen durchlaufen wird.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Das Zip-Archiv unterstützt keine Lesevorgänge.</exception>
        <exception cref="T:System.ObjectDisposedException">Die ZIP-Archiv wurde freigegeben.</exception>
        <exception cref="T:System.IO.InvalidDataException">Das Zip-Archiv ist beschädigt, und seine Einträge konnten nicht abgerufen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry GetEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry GetEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.GetEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntry (entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ GetEntry(System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="member this.GetEntry : string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="zipArchive.GetEntry entryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">Ein Pfad relativ zum Stamm des Archivs, das den Eintrag identifiziert, der abgerufen werden soll.</param>
        <summary>Ruft einen Wrapper für den angegebenen Eintrag im Zip-Archiv ab.</summary>
        <returns>Ein Wrapper für den angegebenen Eintrag im Archiv. <see langword="null" />, wenn der Eintrag nicht im Archiv vorhanden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn mehrere Einträge mit dem angegebenen Namen im Archiv vorhanden sind, wird der erste Wert zurückgegeben. Der Name des Eintrags wird mit `entryName` mithilfe eines Ordinalvergleichs verglichen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit der <xref:System.IO.Compression.ZipArchive.GetEntry%2A>-Methode einen Eintrag abrufen.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="entryName" /> ist <see cref="F:System.String.Empty" /></exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="entryName" /> ist <see langword="null" /></exception>
        <exception cref="T:System.NotSupportedException">Das Zip-Archiv unterstützt keine Lesevorgänge.</exception>
        <exception cref="T:System.ObjectDisposedException">Die ZIP-Archiv wurde freigegeben.</exception>
        <exception cref="T:System.IO.InvalidDataException">Das Zip-Archiv ist beschädigt, und seine Einträge konnten nicht abgerufen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Compression.ZipArchiveMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As ZipArchiveMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Compression::ZipArchiveMode Mode { System::IO::Compression::ZipArchiveMode get(); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.IO.Compression.ZipArchiveMode" Usage="System.IO.Compression.ZipArchive.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der den Typ der Aktion beschreibt, die das ZIP-Archiv für Einträge ausführen kann.</summary>
        <value>Einer der Enumerationswerte, der den Typ der Aktion (Lesen, Erstellen oder Update) beschreibt, die das Zip-Archiv bei Einträgen ausführen kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie geben einen Wert für die <xref:System.IO.Compression.ZipArchive>-Eigenschaft an, wenn Sie eine Instanz der <xref:System.IO.Compression.ZipArchive> Klasse erstellen. Verwenden Sie den <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%29>-oder <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>-Konstruktor, um einen Wert für die Eigenschaft <xref:System.IO.Compression.ZipArchive.Mode%2A> bereitzustellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
