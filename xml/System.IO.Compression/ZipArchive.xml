<Type Name="ZipArchive" FullName="System.IO.Compression.ZipArchive">
  <Metadata><Meta Name="ms.openlocfilehash" Value="15b1f6e4a2de7a6d6fcd352f7d31c3bfc5eb30a2" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65014006" /></Metadata><TypeSignature Language="C#" Value="public class ZipArchive : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ZipArchive extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipArchive" />
  <TypeSignature Language="VB.NET" Value="Public Class ZipArchive&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipArchive : IDisposable" />
  <TypeSignature Language="F#" Value="type ZipArchive = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt ein Paket komprimierter Dateien im Zip-Archiv-Format dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methoden zum Bearbeiten von Zip-Archive und ihre Dateieinträge auf drei Klassen verteilt sind: <xref:System.IO.Compression.ZipFile>, <xref:System.IO.Compression.ZipArchive>, und <xref:System.IO.Compression.ZipArchiveEntry>.  
  
|Beschreibung|Mit|  
|--------|---------|  
|Erstellen Sie eine Zip-Archiv aus einem Verzeichnis|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=nameWithType>|  
|Extrahieren Sie den Inhalt der Zip-Archiv in ein Verzeichnis|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=nameWithType>|  
|Fügen Sie neue Dateien hinzu, um eine vorhandene Zip-Archiv|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=nameWithType>|  
|Rufen Sie eine Datei aus einer Zip-Archiv|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=nameWithType>|  
|Rufen Sie alle Dateien aus einer Zip-Archiv|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=nameWithType>|  
|Öffnet einen Stream für eine einzelne Datei in eine Zip-Archiv enthalten|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=nameWithType>|  
|Löschen einer Datei aus einem Zip-Archiv|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=nameWithType>|  
  
 Wenn Sie einen neuen Eintrag erstellen, wird die Datei komprimierte und Zip-Paket hinzugefügt. Die <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> Methode ermöglicht es Ihnen, eine Verzeichnishierarchie an, wenn Sie den Eintrag hinzufügen. Sie enthalten den relativen Pfad des neuen Eintrags im Zip-Paket. Erstellen Sie z. B. einen neuen Eintrag mit dem relativen Pfad der `AddedFolder\NewFile.txt` erstellt eine komprimierte Textdatei in ein Verzeichnis namens AddedFolder.  
  
 Wenn Sie auf die `System.IO.Compression.FileSystem` Assembly in Ihrem Projekt können Sie vier Erweiterungsmethoden zugreifen (aus der <xref:System.IO.Compression.ZipFileExtensions> Klasse) für die <xref:System.IO.Compression.ZipArchive> Klasse: <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)>, <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)>, <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)>, und <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String,System.Boolean)> (verfügbar in .NET Core 2.0 und höheren Versionen). Diese Erweiterungsmethoden können Sie zum Komprimieren und Dekomprimieren den Inhalt des Eintrags, der eine Datei. Die `System.IO.Compression.FileSystem` Assembly ist nicht verfügbar für [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps. In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] -apps können Sie zu komprimieren und Dekomprimieren von Dateien mithilfe der <xref:System.IO.Compression.DeflateStream> oder <xref:System.IO.Compression.GZipStream> -Klasse, oder Sie können die [!INCLUDE[wrt](~/includes/wrt-md.md)] Typen [von komprimieren](https://go.microsoft.com/fwlink/p/?LinkID=246357) und [Dekomprimierungsprogramm](https://go.microsoft.com/fwlink/p/?LinkID=246358).  
  
   
  
## Examples  
 Das erste Beispiel zeigt, wie ein neuer Eintrag erstellt und mithilfe eines Datenstroms in sie schreiben.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 Das folgende Beispiel zeigt, wie Sie die Zip-Archive öffnen, und die Auflistung von Einträgen zu durchlaufen.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 Das dritte Beispiel zeigt, wie Sie Erweiterungsmethoden verwenden, erstellen einen neuen Eintrag im Zip-Archiv aus einer vorhandenen Datei, und Extrahieren der Archivinhalte. Sie müssen verweisen die `System.IO.Compression.FileSystem` Assembly zum Ausführen des Codes.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Compression.ZipFile" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.ZipArchive" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Ein Stream, der das zu lesende Archiv enthält.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.IO.Compression.ZipArchive" /> Klasse aus dem angegebenen Stream.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Der Stream wurde bereits geschlossen oder unterstützt keine Lesevorgänge.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.InvalidDataException">Der Inhalt des Datenstroms sind nicht in der Zip-Archivformat.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream * System.IO.Compression.ZipArchiveMode -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive (stream, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
      </Parameters>
      <Docs>
        <param name="stream">Der Eingabe- oder Ausgabestream.</param>
        <param name="mode">Einer der Enumerationswerte, der angibt, ob das Zip-Archiv verwendet wird, um Einträge zu lesen, zu erstellen oder zu aktualisieren.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.IO.Compression.ZipArchive" /> -Klasse aus dem angegebenen Stream und mit dem angegebenen Modus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die `mode` Parametersatz zu <xref:System.IO.Compression.ZipArchiveMode.Read>, muss werden vom Stream Lesevorgänge unterstützt. Wenn die `mode` Parametersatz zu <xref:System.IO.Compression.ZipArchiveMode.Create>, der Stream muss Schreibvorgänge unterstützen. Wenn die `mode` Parametersatz zu <xref:System.IO.Compression.ZipArchiveMode.Update>, lesen, schreiben und gesucht werden soll, muss vom Stream unterstützt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Stream ist bereits geschlossen oder die Funktionen des Streams nicht mit dem Modus überein.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> ist ein ungültiger Wert.</exception>
        <exception cref="T:System.IO.InvalidDataException">Der Inhalt des Streams konnte nicht als Zip-Archiv interpretiert werden.  
  
- oder -  
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und einen Eintrag aus dem Archiv fehlt oder ist beschädigt und kann nicht gelesen werden.  
  
- oder -  
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und ein Eintrag ist zu groß, um in den Arbeitsspeicher passen.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream * System.IO.Compression.ZipArchiveMode * bool -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive (stream, mode, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">Der Eingabe- oder Ausgabestream.</param>
        <param name="mode">Einer der Enumerationswerte, der angibt, ob das Zip-Archiv verwendet wird, um Einträge zu lesen, zu erstellen oder zu aktualisieren.</param>
        <param name="leaveOpen"><see langword="true" />, um den Datenstrom geöffnet zu lassen, nach dem das <see cref="T:System.IO.Compression.ZipArchive" />-Objekt freigegeben wurde; andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.IO.Compression.ZipArchive" /> Klasse für den angegebenen Stream und den angegebenen Modus, und optional den Stream geöffnet bleibt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die `mode` Parametersatz zu <xref:System.IO.Compression.ZipArchiveMode.Read>, muss werden vom Stream Lesevorgänge unterstützt. Wenn die `mode` Parametersatz zu <xref:System.IO.Compression.ZipArchiveMode.Create>, der Stream muss Schreibvorgänge unterstützen. Wenn die `mode` Parametersatz zu <xref:System.IO.Compression.ZipArchiveMode.Update>, lesen, schreiben und gesucht werden soll, muss vom Stream unterstützt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Stream ist bereits geschlossen oder die Funktionen des Streams nicht mit dem Modus überein.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> ist ein ungültiger Wert.</exception>
        <exception cref="T:System.IO.InvalidDataException">Der Inhalt des Streams konnte nicht als Zip-Archiv interpretiert werden.  
  
- oder -  
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und einen Eintrag aus dem Archiv fehlt oder ist beschädigt und kann nicht gelesen werden.  
  
- oder -  
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und ein Eintrag ist zu groß, um in den Arbeitsspeicher passen.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode, bool leaveOpen, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream * System.IO.Compression.ZipArchiveMode * bool * System.Text.Encoding -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive (stream, mode, leaveOpen, entryNameEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">Der Eingabe- oder Ausgabestream.</param>
        <param name="mode">Einer der Enumerationswerte, der angibt, ob das Zip-Archiv verwendet wird, um Einträge zu lesen, zu erstellen oder zu aktualisieren.</param>
        <param name="leaveOpen"><see langword="true" />, um den Datenstrom geöffnet zu lassen, nach dem das <see cref="T:System.IO.Compression.ZipArchive" />-Objekt freigegeben wurde; andernfalls <see langword="false" />.</param>
        <param name="entryNameEncoding">Die Codierung, die beim Lesen oder Schreiben von Eintragsnamen in diesem Archiv verwendet werden soll. Geben Sie einen Wert für diesen Parameter nur an, wenn eine Codierung für die Interoperabilität mit ZIP-Archiv-Tools und -Bibliotheken erforderlich ist, die die UTF-8-Codierung für Eintragsnamen nicht unterstützen.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.IO.Compression.ZipArchive" /> Klasse für den angegebenen Stream für den angegebenen Modus und verwendet die angegebene Codierung für Eintragsnamen und lässt den Stream optional geöffnet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die `mode` Parametersatz zu <xref:System.IO.Compression.ZipArchiveMode.Read>, muss werden vom Stream Lesevorgänge unterstützt. Wenn die `mode` Parametersatz zu <xref:System.IO.Compression.ZipArchiveMode.Create>, der Stream muss Schreibvorgänge unterstützen. Wenn die `mode` Parametersatz zu <xref:System.IO.Compression.ZipArchiveMode.Update>, lesen, schreiben und gesucht werden soll, muss vom Stream unterstützt.  
  
 Wenn Sie eine Zip-Archiv-Datei zum Lesen öffnen und `entryNameEncoding` nastaven NA hodnotu `null`, Eintragsnamen decodiert werden, gemäß den folgenden Regeln:  
  
-   Wenn die sprachcodierung-Flag (in der allgemeinen Bitflag des Headers lokale Datei) nicht festgelegt ist, wird die aktuelle System-Standardcodepage verwendet, der Name des Eintrags zu decodieren.  
  
-   Bei der Codierung Language-Flag festgelegt ist, wird UTF-8 verwendet, der Name des Eintrags zu decodieren.  
  
 Wenn Sie eine Zip-Archiv-Datei zum Lesen öffnen und `entryNameEncoding` auf einen Wert festgelegt ist anders als `null`, Eintragsnamen decodiert werden, gemäß den folgenden Regeln:  
  
-   Wenn die sprachcodierung-Flag nicht festgelegt ist, den angegebenen `entryNameEncoding` wird verwendet, um der Name des Eintrags zu decodieren.  
  
-   Bei der Codierung Language-Flag festgelegt ist, wird UTF-8 verwendet, der Name des Eintrags zu decodieren.  
  
 Beim Erstellen von Dateien archivieren und `entryNameEncoding` nastaven NA hodnotu `null`, Eintragsnamen codiert werden, gemäß den folgenden Regeln:  
  
-   Für Eintragsnamen, die außerhalb des Bereichs der ASCII-Zeichen, das Language-encoding-Flag festgelegt ist, und Eintragsnamen mithilfe von UTF-8 codiert sind.  
  
-   Für Eintragsnamen, die nur ASCII-Zeichen enthalten, die Language-encoding-Flag nicht festgelegt, und Eintragsnamen werden codiert, indem Sie die aktuelle System-Standardcodepage.  
  
 Beim Erstellen von Dateien archivieren und `entryNameEncoding` auf einen Wert festgelegt ist anders als `null`, dem angegebenen `entryNameEncoding` wird verwendet, um den Eintragsnamen in Bytes zu codieren. Nur, wenn die angegebene Codierung UTF-8-Codierung ist, wird die sprachcodierung-Flag (in der allgemeinen Bitflag der lokale Dateiheader) festgelegt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Stream ist bereits geschlossen oder die Funktionen des Streams nicht mit dem Modus überein.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> ist ein ungültiger Wert.</exception>
        <exception cref="T:System.IO.InvalidDataException">Der Inhalt des Streams konnte nicht als Zip-Archiv interpretiert werden.  
  
- oder -  
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und einen Eintrag aus dem Archiv fehlt oder ist beschädigt und kann nicht gelesen werden.  
  
- oder -  
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und ein Eintrag ist zu groß, um in den Arbeitsspeicher passen.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEntry">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt einen leeren Eintrag im ZIP-Archiv.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntry (entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ CreateEntry(System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="member this.CreateEntry : string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="zipArchive.CreateEntry entryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">Ein Pfad relativ zum Stamm des Archivs, der den Namen des Eintrags angibt, der erstellt werden soll.</param>
        <summary>Erstellt einen leeren Eintrag, der den angegebenen Pfad und Eintragsnamen im ZIP-Archiv Ebene verwendet.</summary>
        <returns>Ein leerer Eintrag im ZIP-Archiv.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `entryName` Zeichenfolge sollte entsprechend den relativen Pfad des Eintrags im Zip-Archiv erstellt werden soll. Es gibt keine Einschränkung für die Zeichenfolge, die Sie bereitstellen. Wenn es nicht als relativer Pfad formatiert ist, wird der Eintrag erstellt, jedoch wenn Sie den Inhalt der Zip-Archiv extrahieren, erhalten Sie möglicherweise eine Ausnahme. Wenn bereits ein Eintrag mit dem angegebenen Pfad und Namen im Archiv vorhanden ist, wird der zweite Eintrag mit dem gleichen Pfad und Namen erstellt.  
  
 Der Wert des der <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> -Eigenschaft für den neuen Eintrag auf die aktuelle Uhrzeit festgelegt ist. Der Eintrag wird mit die Standardebene für die Komprimierung von der zugrunde liegenden Komprimierungsalgorithmus komprimiert. Wenn Sie eine andere Komprimierungsebene angeben möchten, verwenden Sie die <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> Methode.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie erstellen Sie einen Eintrag, und darin geschrieben werden, mithilfe eines Datenstroms.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="entryName" /> ist <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="entryName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Das Zip-Archiv unterstützt keine Schreibvorgänge.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Zip-Archiv wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ CreateEntry(System::String ^ entryName, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberSignature Language="F#" Value="member this.CreateEntry : string * System.IO.Compression.CompressionLevel -&gt; System.IO.Compression.ZipArchiveEntry" Usage="zipArchive.CreateEntry (entryName, compressionLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="entryName">Ein Pfad relativ zum Stamm des Archivs, der den Namen des Eintrags angibt, der erstellt werden soll.</param>
        <param name="compressionLevel">Einer der Enumerationswerte, der angibt, ob Geschwindigkeit oder Komprimierungseffektivität priorisiert wird, wenn der Eintrag erstellt.</param>
        <summary>Erstellt einen leeren Eintrag, der den angegebenen Eintragsnamen und die Komprimierung im ZIP-Archiv Ebene verwendet.</summary>
        <returns>Ein leerer Eintrag im ZIP-Archiv.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `entryName` Zeichenfolge sollte entsprechend den relativen Pfad des Eintrags im Zip-Archiv erstellt werden soll. Es gibt keine Einschränkung für die Zeichenfolge, die Sie bereitstellen. Wenn es nicht als relativer Pfad formatiert ist, wird der Eintrag erstellt, jedoch wenn Sie den Inhalt der Zip-Archiv extrahieren, erhalten Sie möglicherweise eine Ausnahme. Wenn ein Eintrag mit dem angegebenen Namen bereits im Archiv vorhanden ist, wird der zweite Eintrag mit dem gleichen Namen erstellt.  
  
 Der Wert des der <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> -Eigenschaft für den neuen Eintrag auf die aktuelle Uhrzeit festgelegt ist. Legen Sie die `compressionLevel` Parameter <xref:System.IO.Compression.CompressionLevel.Optimal> sollten Sie die Datei komprimiert werden so weit wie möglich. Legen Sie die `compressionLevel` Parameter <xref:System.IO.Compression.CompressionLevel.Fastest> nur dann, wenn Sie befürchten, dass der Komprimierungsvorgang für Ihr Szenario nicht schnell genug abgeschlossen wird.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie einen Eintrag mit der eine optimale Komprimierung zu erstellen. Er schreibt auch in den neuen Eintrag mit einem Stream.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="entryName" /> ist <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="entryName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Das Zip-Archiv unterstützt keine Schreibvorgänge.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Zip-Archiv wurde freigegeben.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.IO.Compression.ZipArchive" />-Objekt verwendeten Ressourcen frei.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="zipArchive.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.IO.Compression.ZipArchive" />-Klasse verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode abgeschlossen ist, das Schreiben des Archivs und gibt alle Ressourcen ein, die die <xref:System.IO.Compression.ZipArchive> Objekt. Es sei denn, Sie Erstellen des Objekts mit der <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> Überladung des Konstruktors, und legen seine `leaveOpen` Parameter `true`, alle zugrunde liegenden Streams werden geschlossen und für nachfolgende Schreibvorgänge nicht mehr verfügbar.  
  
 Wenn Sie mithilfe dieser Instanz von haben <xref:System.IO.Compression.ZipArchive>, rufen Sie <xref:System.IO.Compression.ZipArchive.Dispose> alle von dieser Instanz verwendeten Ressourcen freizugeben. Sollten Sie weitere Verweise auf eliminieren <xref:System.IO.Compression.ZipArchive> -Instanz, damit der Garbage Collector den Arbeitsspeicher der Instanz statt jedoch ständig die aktiv auf einen Abschluss warten freigeben kann.  
  
 <xref:System.IO.Compression.ZipArchive.Dispose> Ruft die <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> -Methode, die enthält den Code, um verwaltete und nicht verwaltete Ressourcen freizugeben. Weitere Informationen finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="zipArchive.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> beendet das Schreiben des Archivs, und sowohl nicht verwaltete und verwaltete Ressourcen freizugeben; <see langword="false" /> um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Wird aufgerufen, indem die <see cref="M:System.IO.Compression.ZipArchive.Dispose" /> und <see cref="M:System.Object.Finalize" /> Methoden zum Freigeben von nicht verwalteten Ressourcen von der aktuellen Instanz von der <see cref="T:System.IO.Compression.ZipArchive" /> Klasse, beendet das Schreiben des Archivs und optional die verwalteten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `disposing` nastaven NA hodnotu `true`, alle zugrunde liegenden Streams geschlossen und für nachfolgende Schreibvorgänge, nicht mehr verfügbar sind, es sei denn, Sie Erstellen des Objekts mit der <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> Überladung des Konstruktors, und legen dessen `leaveOpen` Parameter `true`.  
  
 Diese Methode wird aufgerufen, nur von der öffentlichen <xref:System.IO.Compression.ZipArchive.Dispose> und <xref:System.Object.Finalize> Methoden rufen diese Methode nicht direkt.  
  
 Bei der Implementierung des Dispose-Musters, der boolesche Parameter, der die <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> Methode sollte wie folgt verwendet werden:  
  
-   Die <xref:System.IO.Compression.ZipArchive.Dispose> -Methode des aktuellen Objekts aufrufen sollten <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> mit den booleschen Parameter auf `true` , um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben.  
  
-   Die <xref:System.Object.Finalize> -Methode des aktuellen Objekts aufrufen sollten <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> mit den booleschen Parameter auf `false` um ausschließlich nicht verwaltete Ressourcen freizugeben.
  
 Weitere Informationen finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt; Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Compression.ZipArchiveEntry&gt; Entries" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As ReadOnlyCollection(Of ZipArchiveEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Compression::ZipArchiveEntry ^&gt; ^ Entries { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Compression::ZipArchiveEntry ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entries : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt;" Usage="System.IO.Compression.ZipArchive.Entries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von Einträgen ab, die das ZIP-Archiv momentan enthält.</summary>
        <value>Die Auflistung von Einträgen, die das ZIP-Archiv momentan enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.IO.Compression.ZipArchive.Entries%2A> Eigenschaft, um die gesamte Auflistung von Einträgen abzurufen. Verwenden der <xref:System.IO.Compression.ZipArchive.GetEntry%2A> Methode, um einen einzelnen Eintrag anhand des Namens abzurufen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die Zip-Archive öffnen, und die Auflistung von Einträgen zu durchlaufen.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Das Zip-Archiv unterstützt keine Lesevorgänge.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Zip-Archiv wurde freigegeben.</exception>
        <exception cref="T:System.IO.InvalidDataException">Das Zip-Archiv ist beschädigt, und seine Einträge können nicht abgerufen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry GetEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry GetEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.GetEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntry (entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ GetEntry(System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="member this.GetEntry : string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="zipArchive.GetEntry entryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">Ein Pfad relativ zum Stamm des Archivs, das den Eintrag identifiziert, der abgerufen werden soll.</param>
        <summary>Ruft einen Wrapper für den angegebenen Eintrag im Zip-Archiv ab.</summary>
        <returns>Ein Wrapper für den angegebenen Eintrag im Archiv; <see langword="null" /> , wenn der Eintrag nicht im Archiv vorhanden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn mehrere Einträge mit dem angegebenen Namen im Archiv vorhanden ist, wird das erste Abonnement zurückgegeben. Der Name des Eintrags wird im Vergleich zu `entryName` Ordinalvergleich verwenden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.IO.Compression.ZipArchive.GetEntry%2A> Methode, um einen Eintrag abzurufen.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="entryName" /> ist <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="entryName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Das Zip-Archiv unterstützt keine Lesevorgänge.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Zip-Archiv wurde freigegeben.</exception>
        <exception cref="T:System.IO.InvalidDataException">Das Zip-Archiv ist beschädigt, und seine Einträge können nicht abgerufen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Compression.ZipArchiveMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As ZipArchiveMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Compression::ZipArchiveMode Mode { System::IO::Compression::ZipArchiveMode get(); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.IO.Compression.ZipArchiveMode" Usage="System.IO.Compression.ZipArchive.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der den Typ der Aktion beschreibt, die das ZIP-Archiv für Einträge ausführen kann.</summary>
        <value>Einer der Enumerationswerte, der den Typ der Aktion (Lesen, Erstellen oder Update) beschreibt, die das Zip-Archiv bei Einträgen ausführen kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Geben Sie einen Wert für die <xref:System.IO.Compression.ZipArchive> Eigenschaft bei der Erstellung einer Instanz von der <xref:System.IO.Compression.ZipArchive> Klasse. Verwenden der <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%29> oder <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> Konstruktor, um einen Wert für die <xref:System.IO.Compression.ZipArchive.Mode%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>