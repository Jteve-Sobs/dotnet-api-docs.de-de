<Type Name="ZipFile" FullName="System.IO.Compression.ZipFile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f42d501d4a4e27c5f60e5ebfc94999139760a66b" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996904" /></Metadata><TypeSignature Language="C#" Value="public static class ZipFile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ZipFile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipFile" />
  <TypeSignature Language="VB.NET" Value="Public Class ZipFile" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipFile abstract sealed" />
  <TypeSignature Language="F#" Value="type ZipFile = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt statische Methoden zum Erstellen, Extrahieren und Öffnen von Zip-Archiven bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Um die <xref:System.IO.Compression.ZipFile> -Klasse zu verwenden, müssen Sie einen Verweis auf `System.IO.Compression.FileSystem` die-Assembly in Ihrem Projekt hinzufügen. andernfalls erhalten Sie die folgende Fehlermeldung, wenn Sie versuchen, eine Kompilierung durchführen: **Der Name "zipfile" ist im aktuellen Kontext nicht vorhanden**. Weitere Informationen zum Hinzufügen eines Verweises auf das Projekt in Visual Studio finden [Sie unter Gewusst wie: Hinzufügen und Entfernen von Verweisen mit dem Verweis-Manager](https://msdn.microsoft.com/library/1aabb520-99b0-46c6-9368-21b4d84793eb).  
  
 Die Methoden zum Bearbeiten von ZIP-Archiven und deren Dateien sind auf drei Klassen <xref:System.IO.Compression.ZipFile>verteilt <xref:System.IO.Compression.ZipArchive> : <xref:System.IO.Compression.ZipArchiveEntry>, und.  
  
|An...|Empfohlen...|  
|---------|----------|  
|Erstellen eines ZIP-Archivs aus einem Verzeichnis|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=nameWithType>|  
|Extrahieren des Inhalts eines ZIP-Archivs in ein Verzeichnis|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=nameWithType>|  
|Hinzufügen neuer Dateien zu einem vorhandenen ZIP-Archiv|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=nameWithType>|  
|Abrufen einer Datei in einem ZIP-Archiv|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=nameWithType>|  
|Alle Dateien in einem ZIP-Archiv abrufen|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=nameWithType>|  
|So öffnen Sie einen Stream in einer einzelnen Datei, die in einem ZIP-Archiv enthalten ist|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=nameWithType>|  
|Löschen einer Datei aus einem ZIP-Archiv|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=nameWithType>|  
  
 Sie können die <xref:System.IO.Compression.ZipFile> -oder <xref:System.IO.Compression.ZipFileExtensions> -Klassen [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] nicht in-Apps verwenden. In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] -apps sollten Sie die folgenden Klassen verwenden, um mit komprimierten Dateien zu arbeiten.  
  
-   <xref:System.IO.Compression.ZipArchive>  
  
-   <xref:System.IO.Compression.ZipArchiveEntry>  
  
-   <xref:System.IO.Compression.DeflateStream>  
  
-   <xref:System.IO.Compression.GZipStream>  
  
   
  
## Examples  
 Dieses Beispiel zeigt, wie Sie ein ZIP-Archiv mithilfe der <xref:System.IO.Compression.ZipFile> -Klasse erstellen und extrahieren. Der Inhalt eines Ordners wird in ein ZIP-Archiv komprimiert und anschließend in einen neuen Ordner extrahiert.  
  
> [!TIP]
>  Um die <xref:System.IO.Compression.ZipFile>-Klasse zu verwenden, müssen Sie auf die `System.IO.Compression.FileSystem`-Assembly in Ihrem Projekt verweisen.  
  
 [!code-csharp[System.IO.Compression.ZipFile#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/1aabb520-99b0-46c6-9368-21b4d84793eb">Vorgehensweise: Hinzufügen und Entfernen von Verweisen mit dem Verweis-Manager</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateFromDirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt ein ZIP-Archiv, das die Dateien und Verzeichnisse im angegebenen Verzeichnis enthält.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromDirectory">
      <MemberSignature Language="C#" Value="public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateFromDirectory (sourceDirectoryName As String, destinationArchiveFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateFromDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationArchiveFileName);" />
      <MemberSignature Language="F#" Value="static member CreateFromDirectory : string * string -&gt; unit" Usage="System.IO.Compression.ZipFile.CreateFromDirectory (sourceDirectoryName, destinationArchiveFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationArchiveFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">Der Pfad zum Verzeichnis, das archiviert werden soll, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="destinationArchiveFileName">Der Pfad des zu erstellenden Archivs, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <summary>Erstellt ein ZIP-Archiv, das die Dateien und Verzeichnisse im angegebenen Verzeichnis enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Verzeichnisstruktur aus dem Dateisystem wird im Archiv beibehalten. Wenn das Verzeichnis leer ist, wird ein leeres Archiv erstellt. Diese Methoden Überladung enthält nicht das Basisverzeichnis im Archiv und ermöglicht keine Angabe einer Komprimierungs Ebene. Wenn Sie das Basisverzeichnis einschließen oder eine Komprimierungs Ebene angeben möchten, müssen Sie <xref:System.IO.Compression.ZipFile.CreateFromDirectory%28System.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%2CSystem.Boolean%29> die-Methoden Überladung aufrufen.  
  
 Wenn das Archiv bereits vorhanden ist, <xref:System.IO.IOException> wird eine Ausnahme ausgelöst. Wenn im Archiv bereits ein Eintrag mit dem angegebenen Namen vorhanden ist, wird ein zweiter Eintrag mit einem identischen Namen erstellt.  
  
 Wenn eine Datei im Verzeichnis nicht zum Archiv hinzugefügt werden kann, bleibt das Archiv unvollständig und ungültig, und die Methode löst eine <xref:System.IO.IOException> Ausnahme aus.  
  
   
  
## Examples  
 Dieses Beispiel zeigt, wie Sie ein ZIP-Archiv mithilfe der <xref:System.IO.Compression.ZipFile> -Klasse erstellen und extrahieren. Der Inhalt eines Ordners wird in ein ZIP-Archiv komprimiert und anschließend in einen neuen Ordner extrahiert. Um die <xref:System.IO.Compression.ZipFile>-Klasse zu verwenden, müssen Sie auf die `System.IO.Compression.FileSystem`-Assembly in Ihrem Projekt verweisen.  
  
 [!code-csharp[System.IO.Compression.ZipFile#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Im <paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> überschreiten der angegebene Pfad und/oder der Dateiname die vom System vorgegebene Höchstlänge.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceDirectoryName" /> ist ungültig oder nicht vorhanden (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationArchiveFileName" /> ist bereits vorhanden.  
  
- oder - 
Eine Datei im angegebenen Verzeichnis konnte nicht geöffnet werden.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="destinationArchiveFileName" /> gibt ein Verzeichnis an.  
  
- oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf das in <paramref name="sourceDirectoryName" /> angegebene Verzeichnis oder die in <paramref name="destinationArchiveFileName" /> angegebene Datei.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> enthält ein ungültiges Format.  
  
- oder - 
Das ZIP-Archiv unterstützt keine Schreibvorgänge.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromDirectory">
      <MemberSignature Language="C#" Value="public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, valuetype System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateFromDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationArchiveFileName, System::IO::Compression::CompressionLevel compressionLevel, bool includeBaseDirectory);" />
      <MemberSignature Language="F#" Value="static member CreateFromDirectory : string * string * System.IO.Compression.CompressionLevel * bool -&gt; unit" Usage="System.IO.Compression.ZipFile.CreateFromDirectory (sourceDirectoryName, destinationArchiveFileName, compressionLevel, includeBaseDirectory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationArchiveFileName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
        <Parameter Name="includeBaseDirectory" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">Der Pfad zum Verzeichnis, das archiviert werden soll, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="destinationArchiveFileName">Der Pfad des zu erstellenden Archivs, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="compressionLevel">Einer der Enumerationswerte, der angibt, ob Geschwindigkeit oder Komprimierungseffektivität priorisiert wird, wenn der Eintrag erstellt.</param>
        <param name="includeBaseDirectory"><see langword="true" />, um den Verzeichnisnamens von <paramref name="sourceDirectoryName" /> am Stamm des Archivs einzuschließen; <see langword="false" />, um nur der Inhalt des Verzeichnisses einzuschließen.</param>
        <summary>Erstellt ein ZIP-Archiv, das die Dateien und Verzeichnisse im angegebenen Verzeichnis enthält, verwendet die angegebene Komprimierungsebene und optional das Basisverzeichnis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Verzeichnisstruktur aus dem Dateisystem wird im Archiv beibehalten. Wenn das Verzeichnis leer ist, wird ein leeres Archiv erstellt. Verwenden Sie diese Methoden Überladung, um die Komprimierungs Ebene anzugeben und anzugeben, ob das Basisverzeichnis in das Archiv aufgenommen werden soll.  
  
 Wenn das Archiv bereits vorhanden ist, <xref:System.IO.IOException> wird eine Ausnahme ausgelöst. Wenn im Archiv bereits ein Eintrag mit dem angegebenen Namen vorhanden ist, wird ein zweiter Eintrag mit einem identischen Namen erstellt.  
  
 Wenn eine Datei im Verzeichnis nicht zum Archiv hinzugefügt werden kann, bleibt das Archiv unvollständig und ungültig, und die Methode löst eine <xref:System.IO.IOException> Ausnahme aus.  
  
   
  
## Examples  
 Dieses Beispiel zeigt, wie Sie ein ZIP-Archiv mithilfe der <xref:System.IO.Compression.ZipFile> -Klasse erstellen und extrahieren. Der Inhalt eines Ordners wird in ein ZIP-Archiv komprimiert und anschließend in einen neuen Ordner extrahiert. Beim Komprimieren des Archivs ist das Basisverzeichnis enthalten, und die Komprimierungs Ebene wird festgelegt, um die Geschwindigkeit des Vorgangs gegenüber der Effizienz hervorzuheben. Um die <xref:System.IO.Compression.ZipFile>-Klasse zu verwenden, müssen Sie auf die `System.IO.Compression.FileSystem`-Assembly in Ihrem Projekt verweisen.  
  
 [!code-csharp[System.IO.Compression.ZipFile#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipFile#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Im <paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> überschreiten der angegebene Pfad und/oder der Dateiname die vom System vorgegebene Höchstlänge.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceDirectoryName" /> ist ungültig oder nicht vorhanden (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationArchiveFileName" /> ist bereits vorhanden.  
  
- oder - 
Eine Datei im angegebenen Verzeichnis konnte nicht geöffnet werden.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="destinationArchiveFileName" /> gibt ein Verzeichnis an.  
  
- oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf das in <paramref name="sourceDirectoryName" /> angegebene Verzeichnis oder die in <paramref name="destinationArchiveFileName" /> angegebene Datei.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> enthält ein ungültiges Format.  
  
- oder - 
Das ZIP-Archiv unterstützt keine Schreibvorgänge.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromDirectory">
      <MemberSignature Language="C#" Value="public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, valuetype System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateFromDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationArchiveFileName, System::IO::Compression::CompressionLevel compressionLevel, bool includeBaseDirectory, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="static member CreateFromDirectory : string * string * System.IO.Compression.CompressionLevel * bool * System.Text.Encoding -&gt; unit" Usage="System.IO.Compression.ZipFile.CreateFromDirectory (sourceDirectoryName, destinationArchiveFileName, compressionLevel, includeBaseDirectory, entryNameEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationArchiveFileName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
        <Parameter Name="includeBaseDirectory" Type="System.Boolean" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">Der Pfad zum Verzeichnis, das archiviert werden soll, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="destinationArchiveFileName">Der Pfad des zu erstellenden Archivs, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="compressionLevel">Einer der Enumerationswerte, der angibt, ob Geschwindigkeit oder Komprimierungseffektivität priorisiert wird, wenn der Eintrag erstellt.</param>
        <param name="includeBaseDirectory"><see langword="true" />, um den Verzeichnisnamens von <paramref name="sourceDirectoryName" /> am Stamm des Archivs einzuschließen; <see langword="false" />, um nur der Inhalt des Verzeichnisses einzuschließen.</param>
        <param name="entryNameEncoding">Die Codierung, die beim Lesen oder Schreiben von Eintragsnamen in diesem Archiv verwendet werden soll. Geben Sie einen Wert für diesen Parameter nur an, wenn eine Codierung für die Interoperabilität mit ZIP-Archiv-Tools und -Bibliotheken erforderlich ist, die die UTF-8-Codierung für Eintragsnamen nicht unterstützen.</param>
        <summary>Erstellt ein ZIP-Archiv, das die Dateien und Verzeichnisse im angegebenen Verzeichnis enthält, die angegebene Komprimierungsebene und der angegebenen Zeichencodierung für Eintragsnamen verwendet und optional das Basisverzeichnis mit einbezieht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Verzeichnisstruktur aus dem Dateisystem wird im Archiv beibehalten. Wenn das Verzeichnis leer ist, wird ein leeres Archiv erstellt. Verwenden Sie diese Methoden Überladung, um die Komprimierungs Ebene und die Zeichencodierung anzugeben und anzugeben, ob das Basisverzeichnis in das Archiv eingeschlossen werden soll.  
  
 Wenn das Archiv bereits vorhanden ist, <xref:System.IO.IOException> wird eine Ausnahme ausgelöst. Wenn im Archiv bereits ein Eintrag mit dem angegebenen Namen vorhanden ist, wird ein zweiter Eintrag mit einem identischen Namen erstellt.  
  
 Wenn eine Datei im Verzeichnis nicht zum Archiv hinzugefügt werden kann, bleibt das Archiv unvollständig und ungültig, und die Methode löst eine <xref:System.IO.IOException> Ausnahme aus.  
  
 Wenn `entryNameEncoding` auf einen anderen Wert als `null`festgelegt ist, werden die Eintrags Namen mithilfe der angegebenen Codierung codiert. Wenn die angegebene Codierung UTF-8 ist, wird für jeden Eintrag das sprachcodierungsflag (im Bitflag "General Purpose" des lokalen Datei Headers) festgelegt.  
  
 Wenn `entryNameEncoding` auf`null`festgelegt ist, werden die Eintrags Namen gemäß den folgenden Regeln codiert:  
  
-   Für Eintrags Namen, die Zeichen außerhalb des ASCII-Bereichs enthalten, wird das sprachcodierungsflag festgelegt, und UTF-8 wird verwendet, um den Namen des Eintrags zu codieren.  
  
-   Für Eintrags Namen, die nur ASCII-Zeichen enthalten, wird das Language Encoding-Flag festgelegt, und die aktuelle System Standard Codepage wird zum Codieren der Eintrags Namen verwendet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.  
  
- oder - 
 <paramref name="entryNameEncoding" /> wird auf eine andere Unicode-Codierung als UTF-8 festgelegt.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Im <paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> überschreiten der angegebene Pfad und/oder der Dateiname die vom System vorgegebene Höchstlänge.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceDirectoryName" /> ist ungültig oder nicht vorhanden (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationArchiveFileName" /> ist bereits vorhanden.  
  
- oder - 
Eine Datei im angegebenen Verzeichnis konnte nicht geöffnet werden.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="destinationArchiveFileName" /> gibt ein Verzeichnis an.  
  
- oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf das in <paramref name="sourceDirectoryName" /> angegebene Verzeichnis oder die in <paramref name="destinationArchiveFileName" /> angegebene Datei.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> enthält ein ungültiges Format.  
  
- oder - 
Das ZIP-Archiv unterstützt keine Schreibvorgänge.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExtractToDirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Extrahiert alle Dateien im angegebenen ZIP-Archiv in ein Verzeichnis im Dateisystem.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">Der Pfad zum Archiv, das extrahiert werden soll.</param>
        <param name="destinationDirectoryName">Der Pfad zum Verzeichnis, in dem die extrahierten Dateien abgelegt werden sollen, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <summary>Extrahiert alle Dateien im angegebenen ZIP-Archiv in ein Verzeichnis im Dateisystem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode erstellt das angegebene Verzeichnis und alle Unterverzeichnisse. Das Zielverzeichnis darf nicht bereits vorhanden sein. Ausnahmen, die sich auf die Validierung der Pfade `destinationDirectoryName` in `sourceArchiveFileName` den Parametern oder beziehen, werden vor dem Extrahieren ausgelöst. Andernfalls wird das Archiv teilweise extrahiert, wenn ein Fehler während der Extraktion auftritt. Jede extrahierte Datei hat denselben relativen Pfad zu dem Verzeichnis, das `destinationDirectoryName` von angegeben wird, da der Quell Eintrag dem Stamm des Archivs entspricht.  
  
   
  
## Examples  
 Dieses Beispiel zeigt, wie Sie ein ZIP-Archiv mithilfe der <xref:System.IO.Compression.ZipFile> -Klasse erstellen und extrahieren. Er komprimiert den Inhalt eines Ordners in ein ZIP-Archiv und extrahiert diesen Inhalt in einen neuen Ordner. Um die <xref:System.IO.Compression.ZipFile>-Klasse zu verwenden, müssen Sie auf die `System.IO.Compression.FileSystem`-Assembly in Ihrem Projekt verweisen.  
  
 [!code-csharp[System.IO.Compression.ZipFile#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Der in <paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> angegebene Pfad überschreitet die im System definierte maximale Länge ().</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException">Das von <paramref name="destinationDirectoryName" /> angegebene Verzeichnis ist bereits vorhanden.  
  
- oder - 
Der Name eines Eintrags im Archiv ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder enthält mindestens ein ungültiges Zeichen.  
  
- oder - 
Das Extrahieren eines Archiveintrags wird eine Datei erstellen, die sich außerhalb des Verzeichnisses befindet, das von <paramref name="destinationDirectoryName" /> angegeben wird. (Zum Beispiel geschähe dies möglicherweise, wenn der Eintragsname Accessoren des übergeordneten Verzeichnisses enthält.) 
- oder - 
Ein zu extrahierender Archiveintrag hat den gleichen Namen wie ein Eintrag, der bereits vom gleichen Archiv extrahiert wurde.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf das Archiv oder das Zielverzeichnis.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> enthält ein ungültiges Format.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="sourceArchiveFileName" /> wurde nicht gefunden.</exception>
        <exception cref="T:System.IO.InvalidDataException">Das Archiv, das von <paramref name="sourceArchiveFileName" /> angegeben wurde, ist kein gültiges Zip-Archiv.  
  
- oder - 
Ein Archiveintrag wurde nicht gefunden oder ist fehlerhaft.  
  
- oder - 
Ein Archiveintrag wurde mit einer nicht unterstützten Komprimierungsmethode komprimiert.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName, overwriteFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destinationDirectoryName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">Der zu extrahierende Pfad zum Archiv des Dateisystem.</param>
        <param name="destinationDirectoryName">Der Pfad zum Zielverzeichnis im Dateisystem. Das angegebene Verzeichnis darf nicht vorhanden sein, das Verzeichnis, in dem das angegebene Verzeichnis enthalten ist, muss jedoch vorhanden sein.</param>
        <param name="overwriteFiles"><see langword="true" />, wenn Dateien überschrieben werden sollen, andernfalls <see langword="false" />.</param>
        <summary>Extrahiert alle Dateien im angegebenen Archiv in ein Verzeichnis im Dateisystem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das angegebene Verzeichnis darf nicht vorhanden sein. Die-Methode erstellt das angegebene Verzeichnis und alle Unterverzeichnisse.
 
 Wenn beim Extrahieren des Archivs ein Fehler auftritt, bleibt das Archiv teilweise extrahiert.
  
 Jeder Eintrag wird so extrahiert, dass die extrahierte Datei denselben relativen Pfad zu dem `destinationDirectoryName` hat, wie der Eintrag für das Archiv.
 
 Der Pfad kann relative oder absolute Pfadinformationen angeben. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.
 
 Wenn eine zu Archivier Ende Datei einen ungültigen Zeitpunkt der letzten Änderung aufweist, wird das erste Datum und die Uhrzeit verwendet, die im ZIP-Zeitstempel Format (Mitternacht am 1. Januar 1980) dargestellt werden können.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceArchiveFileName" /> oder <paramref name="destinationDirectoryName" /> ist eine leere Zeichenfolge und enthält nur Leerzeichen oder mindestens ein gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" /> ungültiges Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceArchiveFileName" /> oder <paramref name="destinationDirectoryName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException"><paramref name="sourceArchiveFileName" /> oder <paramref name="destinationDirectoryName" /> gibt einen Pfad, einen Dateinamen oder beides an, der bzw. die die vom System definierte Länge überschreiten.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Der von <paramref name="sourceArchiveFileName" /> oder <paramref name="destinationDirectoryName" /> angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException">Das von <paramref name="destinationDirectoryName" /> angegebene Verzeichnis ist bereits vorhanden.

- oder -

Ein E/A-Fehler ist aufgetreten.

- oder -

Der Name von <see cref="T:System.IO.Compression.ZipArchiveEntry" /> ist eine leere Zeichenfolge, die nur Leerzeichen oder mindestens ein gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" /> ungültiges Zeichen enthält.

- oder -

Die Extraktion von <see cref="T:System.IO.Compression.ZipArchiveEntry" /> würde in einem Dateiziel resultieren, das sich außerhalb des Zielverzeichnisses befindet (z. B. aufgrund von Accessoren übergeordneter Verzeichnisse).

- oder -

Ein <see cref="T:System.IO.Compression.ZipArchiveEntry" /> hat denselben Namen wie ein bereits extrahierter Eintrag aus demselben Archiv.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceArchiveFileName" /> oder <paramref name="destinationDirectoryName" /> weist ein ungültiges Format auf.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="sourceArchiveFileName" /> wurde nicht gefunden.</exception>
        <exception cref="T:System.IO.InvalidDataException">Das in <paramref name="sourceArchiveFileName" /> festgelegte Archiv ist keine gültige <see cref="T:System.IO.Compression.ZipArchive" />-Klasse.

- oder -

<see cref="T:System.IO.Compression.ZipArchiveEntry" /> wurde nicht gefunden oder ist fehlerhaft.

- oder -

Eine <see cref="T:System.IO.Compression.ZipArchiveEntry" />-Klasse wurde mit einer nicht unterstützten Komprimierungsmethode komprimiert.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String, entryNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string * System.Text.Encoding -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName, entryNameEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">Der Pfad zum Archiv, das extrahiert werden soll.</param>
        <param name="destinationDirectoryName">Der Pfad zum Verzeichnis, in dem die extrahierten Dateien abgelegt werden sollen, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="entryNameEncoding">Die Codierung, die beim Lesen oder Schreiben von Eintragsnamen in diesem Archiv verwendet werden soll. Geben Sie einen Wert für diesen Parameter nur an, wenn eine Codierung für die Interoperabilität mit ZIP-Archiv-Tools und -Bibliotheken erforderlich ist, die die UTF-8-Codierung für Eintragsnamen nicht unterstützen.</param>
        <summary>Extrahiert alle Dateien im angegebenen ZIP-Archiv in ein Verzeichnis im Dateisystem und verwendet die angegebene Zeichencodierung für Eintragsnamen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode erstellt das angegebene Verzeichnis und alle Unterverzeichnisse. Das Zielverzeichnis darf nicht bereits vorhanden sein. Ausnahmen, die sich auf die Validierung der Pfade `destinationDirectoryName` in `sourceArchiveFileName` den Parametern oder beziehen, werden vor dem Extrahieren ausgelöst. Andernfalls wird das Archiv teilweise extrahiert, wenn ein Fehler während der Extraktion auftritt. Jede extrahierte Datei hat denselben relativen Pfad zu dem Verzeichnis, das `destinationDirectoryName` von angegeben wird, da der Quell Eintrag dem Stamm des Archivs entspricht.  
  
 Wenn `entryNameEncoding` auf einen anderen Wert als `null`festgelegt ist, werden die Eintrags Namen gemäß den folgenden Regeln decodiert:  
  
-   Für Eintrags Namen, bei denen das sprachcodierungsflag (im allgemeinen Bitflag des lokalen Datei Headers) nicht festgelegt ist, werden die Eintrags Namen mithilfe der angegebenen Codierung decodiert.  
  
-   Bei Einträgen, bei denen das sprachcodierungsflag festgelegt ist, werden die Eintrags Namen mithilfe von UTF-8 decodiert.  
  
 Wenn `entryNameEncoding` auf`null`festgelegt ist, werden die Eintrags Namen gemäß den folgenden Regeln decodiert:  
  
-   Bei Einträgen, bei denen das sprachcodierungsflag (im allgemeinen Bitflag des lokalen Datei Headers) nicht festgelegt ist, werden Eintrags Namen mithilfe der aktuellen Standard Codepage des Systems decodiert.  
  
-   Bei Einträgen, bei denen das sprachcodierungsflag festgelegt ist, werden die Eintrags Namen mithilfe von UTF-8 decodiert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.  
  
- oder - 
 <paramref name="entryNameEncoding" /> wird auf eine andere Unicode-Codierung als UTF-8 festgelegt.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Der in <paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> angegebene Pfad überschreitet die im System definierte maximale Länge ().</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException">Das von <paramref name="destinationDirectoryName" /> angegebene Verzeichnis ist bereits vorhanden.  
  
- oder - 
Der Name eines Eintrags im Archiv ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder enthält mindestens ein ungültiges Zeichen.  
  
- oder - 
Das Extrahieren eines Archiveintrags wird eine Datei erstellen, die sich außerhalb des Verzeichnisses befindet, das von <paramref name="destinationDirectoryName" /> angegeben wird. (Zum Beispiel geschähe dies möglicherweise, wenn der Eintragsname Accessoren des übergeordneten Verzeichnisses enthält.) 
- oder - 
Ein zu extrahierender Archiveintrag hat den gleichen Namen wie ein Eintrag, der bereits vom gleichen Archiv extrahiert wurde.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf das Archiv oder das Zielverzeichnis.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> enthält ein ungültiges Format.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="sourceArchiveFileName" /> wurde nicht gefunden.</exception>
        <exception cref="T:System.IO.InvalidDataException">Das Archiv, das von <paramref name="sourceArchiveFileName" /> angegeben wurde, ist kein gültiges Zip-Archiv.  
  
- oder - 
Ein Archiveintrag wurde nicht gefunden oder ist fehlerhaft.  
  
- oder - 
Ein Archiveintrag wurde mit einer nicht unterstützten Komprimierungsmethode komprimiert.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, System.Text.Encoding entryNameEncoding, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, class System.Text.Encoding entryNameEncoding, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String, entryNameEncoding As Encoding, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName, System::Text::Encoding ^ entryNameEncoding, bool overwriteFiles);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string * System.Text.Encoding * bool -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName, entryNameEncoding, overwriteFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destinationDirectoryName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">Der zu extrahierende Pfad zum Archiv des Dateisystem.</param>
        <param name="destinationDirectoryName">Der Pfad zum Zielverzeichnis im Dateisystem. Das angegebene Verzeichnis darf nicht vorhanden sein, das Verzeichnis, in dem das angegebene Verzeichnis enthalten ist, muss jedoch vorhanden sein.</param>
        <param name="entryNameEncoding">Die Codierung, die beim Lesen von Eintragsnamen in <see cref="T:System.IO.Compression.ZipArchive" /> verwendet werden soll.</param>
        <param name="overwriteFiles"><see langword="true" />, wenn Dateien überschrieben werden sollen, andernfalls <see langword="false" />.</param>
        <summary>Extrahiert alle Dateien im angegebenen Archiv in ein Verzeichnis im Dateisystem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das angegebene Verzeichnis darf nicht vorhanden sein. Mit dieser Methode werden das angegebene Verzeichnis und alle Unterverzeichnisse erstellt.

 Wenn beim Extrahieren des Archivs ein Fehler auftritt, bleibt das Archiv teilweise extrahiert.

 Jeder Eintrag wird so extrahiert, dass die extrahierte Datei denselben relativen Pfad zu dem `destinationDirectoryName` hat, wie der Eintrag für das Archiv.

 Der Pfad kann relative oder absolute Pfadinformationen angeben. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.

 Wenn eine zu Archivier Ende Datei einen ungültigen Zeitpunkt der letzten Änderung aufweist, wird das erste Datum und die Uhrzeit verwendet, die im ZIP-Zeitstempel Format (Mitternacht am 1. Januar 1980) dargestellt werden können.
 
]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceArchiveFileName" /> oder <paramref name="destinationDirectoryName" /> ist eine leere Zeichenfolge und enthält nur Leerzeichen oder mindestens ein gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" /> ungültiges Zeichen.
 
- oder - 
 <paramref name="entryNameEncoding" /> wird auf eine andere Unicode-Codierung als UTF-8 festgelegt.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceArchiveFileName" /> oder <paramref name="destinationDirectoryName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException"><paramref name="sourceArchiveFileName" /> oder <paramref name="destinationDirectoryName" /> gibt einen Pfad, einen Dateinamen oder beides an, der bzw. die die vom System definierte Länge überschreiten.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Der von <paramref name="sourceArchiveFileName" /> oder <paramref name="destinationDirectoryName" /> angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException">Das von <paramref name="destinationDirectoryName" /> angegebene Verzeichnis ist bereits vorhanden.

- oder -

Ein E/A-Fehler ist aufgetreten.

- oder -

Der Name von <see cref="T:System.IO.Compression.ZipArchiveEntry" /> ist eine leere Zeichenfolge, die nur Leerzeichen oder mindestens ein gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" /> ungültiges Zeichen enthält.

- oder -

Die Extraktion von <see cref="T:System.IO.Compression.ZipArchiveEntry" /> würde in einem Dateiziel resultieren, das sich außerhalb des Zielverzeichnisses befindet (z. B. aufgrund von Accessoren übergeordneter Verzeichnisse).

- oder -

Ein <see cref="T:System.IO.Compression.ZipArchiveEntry" /> hat denselben Namen wie ein bereits extrahierter Eintrag aus demselben Archiv.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceArchiveFileName" /> oder <paramref name="destinationDirectoryName" /> weist ein ungültiges Format auf.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="sourceArchiveFileName" /> wurde nicht gefunden.</exception>
        <exception cref="T:System.IO.InvalidDataException">Das in <paramref name="sourceArchiveFileName" /> festgelegte Archiv ist keine gültige <see cref="T:System.IO.Compression.ZipArchive" />-Klasse.

- oder -

Ein Archiveintrag wurde nicht gefunden oder ist fehlerhaft.

- oder -

Ein Archiveintrag wurde mit einer Komprimierungsmethode komprimiert, die nicht unterstützt wird.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet ein Zip-Archiv unter dem angegebenen Pfad und im angegebenen Modus.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchive Open(string archiveFileName, valuetype System.IO.Compression.ZipArchiveMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (archiveFileName As String, mode As ZipArchiveMode) As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Compression::ZipArchive ^ Open(System::String ^ archiveFileName, System::IO::Compression::ZipArchiveMode mode);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.Compression.ZipArchiveMode -&gt; System.IO.Compression.ZipArchive" Usage="System.IO.Compression.ZipFile.Open (archiveFileName, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFileName" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
      </Parameters>
      <Docs>
        <param name="archiveFileName">Der Pfad zum Archiv, dass geöffnet werden soll, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="mode">Einer der Enumerationswerte, der die Aktionen angibt, die bei den Einträgen im geöffneten Archiv zulässig sind.</param>
        <summary>Öffnet ein Zip-Archiv unter dem angegebenen Pfad und im angegebenen Modus.</summary>
        <returns>Das geöffnete ZIP-Archiv.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie den `mode` -Parameter auf <xref:System.IO.Compression.ZipArchiveMode.Read>festlegen, wird das Archiv mit <xref:System.IO.FileMode.Open> von der <xref:System.IO.FileMode> -Enumeration als dateimoduswert geöffnet. Wenn das Archiv nicht vorhanden ist, wird <xref:System.IO.FileNotFoundException> eine-Ausnahme ausgelöst. Das Festlegen `mode` des- <xref:System.IO.Compression.ZipArchiveMode.Read> Parameters auf entspricht dem <xref:System.IO.Compression.ZipFile.OpenRead%2A> Aufrufen der-Methode.  
  
 Wenn Sie den `mode` -Parameter auf <xref:System.IO.Compression.ZipArchiveMode.Create>festlegen, wird das Archiv mit <xref:System.IO.FileMode.CreateNew?displayProperty=nameWithType> als Wert für den Dateimodus geöffnet. Wenn das Archiv bereits vorhanden ist, <xref:System.IO.IOException> wird eine ausgelöst.  
  
 Wenn Sie den `mode` -Parameter auf <xref:System.IO.Compression.ZipArchiveMode.Update>festlegen, wird das Archiv mit <xref:System.IO.FileMode.OpenOrCreate?displayProperty=nameWithType> als Wert für den Dateimodus geöffnet. Wenn das Archiv vorhanden ist, wird es geöffnet. Die vorhandenen Einträge können geändert und neue Einträge erstellt werden. Wenn das Archiv nicht vorhanden ist, wird ein neues Archiv erstellt. das Erstellen eines ZIP-Archivs im <xref:System.IO.Compression.ZipArchiveMode.Update> -Modus ist jedoch nicht so effizient wie das <xref:System.IO.Compression.ZipArchiveMode.Create> erstellen im-Modus.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie ein ZIP-Archiv im Aktualisierungs Modus öffnen und dem Archiv einen Eintrag hinzufügen.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="archiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="archiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Im <paramref name="archiveFileName" /> überschreiten der angegebene Pfad und/oder der Dateiname die vom System vorgegebene Höchstlänge.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="archiveFileName" /> ist ungültig oder nicht vorhanden (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="archiveFileName" /> konnte nicht geöffnet werden.  
  
- oder - 
 <paramref name="mode" /> wird auf <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> festgelegt, aber die Datei, die in <paramref name="archiveFileName" /> angegeben ist, ist bereits vorhanden.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="archiveFileName" /> gibt ein Verzeichnis an.  
  
- oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf die in <paramref name="archiveFileName" /> angegebene Datei.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> gibt einen ungültigen Wert an.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="mode" /> wird auf <see cref="F:System.IO.Compression.ZipArchiveMode.Read" /> festgelegt, aber die Datei, die in <paramref name="archiveFileName" /> angegeben wird, wurde nicht gefunden.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="archiveFileName" /> enthält ein ungültiges Format.</exception>
        <exception cref="T:System.IO.InvalidDataException"><paramref name="archiveFileName" /> konnte nicht als ZIP-Archiv interpretiert werden.  
  
- oder - 
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, aber ein Eintrag fehlt oder ist beschädigt und kann nicht gelesen werden.  
  
- oder - 
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, aber ein Eintrag ist zu groß, um in den Arbeitsspeicher zu passen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchive Open(string archiveFileName, valuetype System.IO.Compression.ZipArchiveMode mode, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (archiveFileName As String, mode As ZipArchiveMode, entryNameEncoding As Encoding) As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Compression::ZipArchive ^ Open(System::String ^ archiveFileName, System::IO::Compression::ZipArchiveMode mode, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.Compression.ZipArchiveMode * System.Text.Encoding -&gt; System.IO.Compression.ZipArchive" Usage="System.IO.Compression.ZipFile.Open (archiveFileName, mode, entryNameEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFileName" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="archiveFileName">Der Pfad zum Archiv, dass geöffnet werden soll, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="mode">Einer der Enumerationswerte, der die Aktionen angibt, die bei den Einträgen im geöffneten Archiv zulässig sind.</param>
        <param name="entryNameEncoding">Die Codierung, die beim Lesen oder Schreiben von Eintragsnamen in diesem Archiv verwendet werden soll. Geben Sie einen Wert für diesen Parameter nur an, wenn eine Codierung für die Interoperabilität mit ZIP-Archiv-Tools und -Bibliotheken erforderlich ist, die die UTF-8-Codierung für Eintragsnamen nicht unterstützen.</param>
        <summary>Öffnet ein Zip-Archiv im angegebenen Pfad im angegebenen Modus und mit der angegebenen Zeichencodierung für Eintragsnamen.</summary>
        <returns>Das geöffnete ZIP-Archiv.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie den `mode` -Parameter auf <xref:System.IO.Compression.ZipArchiveMode.Read>festlegen, wird das Archiv mit <xref:System.IO.FileMode.Open?displayProperty=nameWithType> als Wert für den Dateimodus geöffnet. Wenn das Archiv nicht vorhanden ist, wird <xref:System.IO.FileNotFoundException> eine-Ausnahme ausgelöst. Das Festlegen `mode` des- <xref:System.IO.Compression.ZipArchiveMode.Read> Parameters auf entspricht dem <xref:System.IO.Compression.ZipFile.OpenRead%2A> Aufrufen der-Methode.  
  
 Wenn Sie den `mode` -Parameter auf <xref:System.IO.Compression.ZipArchiveMode.Create>festlegen, wird das Archiv mit <xref:System.IO.FileMode.CreateNew?displayProperty=nameWithType> als Wert für den Dateimodus geöffnet. Wenn das Archiv bereits vorhanden ist, <xref:System.IO.IOException> wird eine ausgelöst.  
  
 Wenn Sie den `mode` -Parameter auf <xref:System.IO.Compression.ZipArchiveMode.Update>festlegen, wird das Archiv mit <xref:System.IO.FileMode.OpenOrCreate?displayProperty=nameWithType> als Wert für den Dateimodus geöffnet. Wenn das Archiv vorhanden ist, wird es geöffnet. Die vorhandenen Einträge können geändert und neue Einträge erstellt werden. Wenn das Archiv nicht vorhanden ist, wird ein neues Archiv erstellt. das Erstellen eines ZIP-Archivs im <xref:System.IO.Compression.ZipArchiveMode.Update> -Modus ist jedoch nicht so effizient wie das <xref:System.IO.Compression.ZipArchiveMode.Create> erstellen im-Modus.  
  
 Wenn Sie eine ZIP-Archivdatei zum Lesen öffnen `entryNameEncoding` und auf `null`festgelegt ist, werden die Namen der Einträge gemäß den folgenden Regeln decodiert:  
  
-   Wenn das sprachcodierungsflag (im Bitflag "General Purpose" des lokalen Datei Headers) nicht festgelegt ist, wird die aktuelle System Standard Codepage verwendet, um den Namen des Eintrags zu decodieren.  
  
-   Wenn das sprachcodierungsflag festgelegt ist, wird UTF-8 verwendet, um den Namen des Eintrags zu decodieren.  
  
 Wenn Sie eine ZIP-Archivdatei zum Lesen öffnen `entryNameEncoding` und auf einen anderen Wert als `null`festgelegt ist, werden die Eintrags Namen gemäß den folgenden Regeln decodiert:  
  
-   Wenn das Language Encoding-Flag nicht festgelegt ist, `entryNameEncoding` wird das angegebene verwendet, um den Namen des Eintrags zu decodieren.  
  
-   Wenn das sprachcodierungsflag festgelegt ist, wird UTF-8 verwendet, um den Namen des Eintrags zu decodieren.  
  
 Wenn Sie in Archivdateien schreiben und `entryNameEncoding` auf `null`festgelegt ist, werden die Eintrags Namen gemäß den folgenden Regeln codiert:  
  
-   Für Eintrags Namen, die Zeichen außerhalb des ASCII-Bereichs enthalten, wird das sprachcodierungsflag festgelegt, und Eintrags Namen werden mithilfe von UTF-8 codiert.  
  
-   Für Eintrags Namen, die nur ASCII-Zeichen enthalten, ist das sprachcodierungsflag nicht festgelegt, und Eintrags Namen werden mithilfe der aktuellen Standard Codepage des Systems codiert.  
  
 Wenn Sie in Archivdateien schreiben und `entryNameEncoding` auf einen anderen Wert als `null`festgelegt ist, wird `entryNameEncoding` der angegebene zum Codieren der Eintrags Namen in Bytes verwendet. Das sprachcodierungsflag (im allgemeinen Bitflag des lokalen Datei Headers) wird nur festgelegt, wenn die angegebene Codierung eine UTF-8-Codierung ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="archiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.  
  
- oder - 
 <paramref name="entryNameEncoding" /> wird auf eine andere Unicode-Codierung als UTF-8 festgelegt.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="archiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Im <paramref name="archiveFileName" /> überschreiten der angegebene Pfad und/oder der Dateiname die vom System vorgegebene Höchstlänge.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="archiveFileName" /> ist ungültig oder nicht vorhanden (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="archiveFileName" /> konnte nicht geöffnet werden.  
  
- oder - 
 <paramref name="mode" /> wird auf <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> festgelegt, aber die Datei, die in <paramref name="archiveFileName" /> angegeben ist, ist bereits vorhanden.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="archiveFileName" /> gibt ein Verzeichnis an.  
  
- oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf die in <paramref name="archiveFileName" /> angegebene Datei.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> gibt einen ungültigen Wert an.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="mode" /> wird auf <see cref="F:System.IO.Compression.ZipArchiveMode.Read" /> festgelegt, aber die Datei, die in <paramref name="archiveFileName" /> angegeben wird, wurde nicht gefunden.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="archiveFileName" /> enthält ein ungültiges Format.</exception>
        <exception cref="T:System.IO.InvalidDataException"><paramref name="archiveFileName" /> konnte nicht als ZIP-Archiv interpretiert werden.  
  
- oder - 
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, aber ein Eintrag fehlt oder ist beschädigt und kann nicht gelesen werden.  
  
- oder - 
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, aber ein Eintrag ist zu groß, um in den Arbeitsspeicher zu passen.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchive OpenRead (string archiveFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchive OpenRead(string archiveFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.OpenRead(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenRead (archiveFileName As String) As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Compression::ZipArchive ^ OpenRead(System::String ^ archiveFileName);" />
      <MemberSignature Language="F#" Value="static member OpenRead : string -&gt; System.IO.Compression.ZipArchive" Usage="System.IO.Compression.ZipFile.OpenRead archiveFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="archiveFileName">Der Pfad zum Archiv, dass geöffnet werden soll, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <summary>Öffnet ein Zip-Archiv für das Lesen im angegebenen Pfad.</summary>
        <returns>Das geöffnete ZIP-Archiv.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode entspricht dem Aufrufen der <xref:System.IO.Compression.ZipFile.Open%2A> -Methode und dem Festlegen des `mode` - <xref:System.IO.Compression.ZipArchiveMode.Read>Parameters auf. Das Archiv wird mit <xref:System.IO.FileMode.Open?displayProperty=nameWithType> als Wert für den Dateimodus geöffnet. Wenn das Archiv nicht vorhanden ist, wird <xref:System.IO.FileNotFoundException> eine-Ausnahme ausgelöst.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein ZIP-Archiv zum Lesen geöffnet wird.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="archiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="archiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Im <paramref name="archiveFileName" /> überschreiten der angegebene Pfad und/oder der Dateiname die vom System vorgegebene Höchstlänge.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="archiveFileName" /> ist ungültig oder nicht vorhanden (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="archiveFileName" /> konnte nicht geöffnet werden.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="archiveFileName" /> gibt ein Verzeichnis an.  
  
- oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf die in <paramref name="archiveFileName" /> angegebene Datei.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Die in <paramref name="archiveFileName" /> angegebene Datei wird nicht gefunden.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="archiveFileName" /> enthält ein ungültiges Format.</exception>
        <exception cref="T:System.IO.InvalidDataException"><paramref name="archiveFileName" /> konnte nicht als ZIP-Archiv interpretiert werden.</exception>
      </Docs>
    </Member>
  </Members>
</Type>