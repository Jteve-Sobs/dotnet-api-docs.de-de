<Type Name="ZipFile" FullName="System.IO.Compression.ZipFile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="75175136f64bfabb93d529c2753a2da754a4f576" /><Meta Name="ms.sourcegitcommit" Value="3f21796619d6e69ad383c958cc013ce44c0678de" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/11/2019" /><Meta Name="ms.locfileid" Value="56062249" /></Metadata><TypeSignature Language="C#" Value="public static class ZipFile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ZipFile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipFile" />
  <TypeSignature Language="VB.NET" Value="Public Class ZipFile" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipFile abstract sealed" />
  <TypeSignature Language="F#" Value="type ZipFile = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt statische Methoden zum Erstellen, Extrahieren und Öffnen von Zip-Archiven bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Verwenden der <xref:System.IO.Compression.ZipFile> -Klasse, müssen Sie einen Verweis zum Hinzufügen der `System.IO.Compression.FileSystem` Assembly in Ihrem Projekt; andernfalls erhalten Sie die folgende Fehlermeldung beim Versuch, kompilieren: **Der Name 'Wurde im' ist nicht im aktuellen Kontext**. Weitere Informationen zum Hinzufügen der eines Verweis auf das Projekt in Visual Studio finden Sie unter [Vorgehensweise: Hinzufügen und Entfernen von Verweisen mit dem Verweis-Manager](https://msdn.microsoft.com/library/1aabb520-99b0-46c6-9368-21b4d84793eb).  
  
 Die Methoden für die Bearbeitung von Zip-Archive und der zugehörigen Dateien sind auf drei Klassen verteilt: <xref:System.IO.Compression.ZipFile>, <xref:System.IO.Compression.ZipArchive> und <xref:System.IO.Compression.ZipArchiveEntry>.  
  
|An...|Empfohlen...|  
|---------|----------|  
|Erstellen Sie eine Zip-Archiv aus einem Verzeichnis|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=nameWithType>|  
|Extrahieren Sie den Inhalt der Zip-Archiv in ein Verzeichnis|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=nameWithType>|  
|Fügen Sie neue Dateien hinzu, um eine vorhandene Zip-Archiv|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=nameWithType>|  
|Rufen Sie eine Datei in eine Zip-Archiv|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=nameWithType>|  
|Rufen Sie aller Dateien in einem Zip-Archiv ab|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=nameWithType>|  
|Zum Öffnen eines Datenstroms an eine einzelne Datei, die in einem Zip-Archiv enthalten sind|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=nameWithType>|  
|Löschen einer Datei aus einem Zip-Archiv|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=nameWithType>|  
  
 Sie können keine der <xref:System.IO.Compression.ZipFile> oder <xref:System.IO.Compression.ZipFileExtensions> Klassen im [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps. In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps sollten Sie die folgenden Klassen zum Arbeiten mit komprimierten Dateien verwenden.  
  
-   <xref:System.IO.Compression.ZipArchive>  
  
-   <xref:System.IO.Compression.ZipArchiveEntry>  
  
-   <xref:System.IO.Compression.DeflateStream>  
  
-   <xref:System.IO.Compression.GZipStream>  
  
   
  
## Examples  
 Dieses Beispiel zeigt das Erstellen und extrahieren eine Zip-Archiv mit dem <xref:System.IO.Compression.ZipFile> Klasse. Es werden komprimiert den Inhalt eines Ordners in einem Zip-Archiv und extrahiert diese dann in einen neuen Ordner.  
  
> [!TIP]
>  Um die <xref:System.IO.Compression.ZipFile>-Klasse zu verwenden, müssen Sie auf die `System.IO.Compression.FileSystem`-Assembly in Ihrem Projekt verweisen.  
  
 [!code-csharp[System.IO.Compression.ZipFile#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/1aabb520-99b0-46c6-9368-21b4d84793eb">Vorgehensweise: Hinzufügen und Entfernen von Verweisen mit dem Verweis-Manager</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateFromDirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt ein ZIP-Archiv, das die Dateien und Verzeichnisse im angegebenen Verzeichnis enthält.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromDirectory">
      <MemberSignature Language="C#" Value="public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateFromDirectory (sourceDirectoryName As String, destinationArchiveFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateFromDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationArchiveFileName);" />
      <MemberSignature Language="F#" Value="static member CreateFromDirectory : string * string -&gt; unit" Usage="System.IO.Compression.ZipFile.CreateFromDirectory (sourceDirectoryName, destinationArchiveFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationArchiveFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">Der Pfad zum Verzeichnis, das archiviert werden soll, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="destinationArchiveFileName">Der Pfad des zu erstellenden Archivs, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <summary>Erstellt ein ZIP-Archiv, das die Dateien und Verzeichnisse im angegebenen Verzeichnis enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Verzeichnisstruktur aus dem Dateisystem wird im Archiv beibehalten. Wenn das Verzeichnis leer ist, wird ein leeres Archiv erstellt. Diese methodenüberladung umfasst nicht das Basisverzeichnis des Archivs und erlaubt Ihnen eine Komprimierungsebene an nicht. Wenn Sie das Basisverzeichnis enthalten, oder geben Sie eine Komprimierung Ebene aufrufen möchten die <xref:System.IO.Compression.ZipFile.CreateFromDirectory%28System.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%2CSystem.Boolean%29> -methodenüberladung.  
  
 Wenn Sie das Archiv bereits vorhanden ist, eine <xref:System.IO.IOException> Ausnahme ausgelöst. Wenn ein Eintrag mit dem angegebenen Namen bereits im Archiv vorhanden ist, wird der zweite Eintrag mit einem identischen Namen erstellt.  
  
 Wenn eine Datei in das Verzeichnis nicht werden, in das Archiv hinzugefügt kann, das Archiv unvollständig und ungültig bleibt und die Methode löst eine <xref:System.IO.IOException> Ausnahme.  
  
   
  
## Examples  
 Dieses Beispiel zeigt das Erstellen und extrahieren eine Zip-Archiv mit dem <xref:System.IO.Compression.ZipFile> Klasse. Es werden komprimiert den Inhalt eines Ordners in einem Zip-Archiv und extrahiert diese dann in einen neuen Ordner. Um die <xref:System.IO.Compression.ZipFile>-Klasse zu verwenden, müssen Sie auf die `System.IO.Compression.FileSystem`-Assembly in Ihrem Projekt verweisen.  
  
 [!code-csharp[System.IO.Compression.ZipFile#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Im <paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> überschreiten der angegebene Pfad und/oder der Dateiname die vom System vorgegebene Höchstlänge.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceDirectoryName" /> ist ungültig oder nicht vorhanden (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationArchiveFileName" /> ist bereits vorhanden.  
  
- oder - 
Eine Datei im angegebenen Verzeichnis konnte nicht geöffnet werden.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="destinationArchiveFileName" /> gibt ein Verzeichnis an.  
  
- oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf das in <paramref name="sourceDirectoryName" /> angegebene Verzeichnis oder die in <paramref name="destinationArchiveFileName" /> angegebene Datei.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> enthält ein ungültiges Format.  
  
- oder - 
Das ZIP-Archiv unterstützt keine Schreibvorgänge.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromDirectory">
      <MemberSignature Language="C#" Value="public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, valuetype System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateFromDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationArchiveFileName, System::IO::Compression::CompressionLevel compressionLevel, bool includeBaseDirectory);" />
      <MemberSignature Language="F#" Value="static member CreateFromDirectory : string * string * System.IO.Compression.CompressionLevel * bool -&gt; unit" Usage="System.IO.Compression.ZipFile.CreateFromDirectory (sourceDirectoryName, destinationArchiveFileName, compressionLevel, includeBaseDirectory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationArchiveFileName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
        <Parameter Name="includeBaseDirectory" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">Der Pfad zum Verzeichnis, das archiviert werden soll, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="destinationArchiveFileName">Der Pfad des zu erstellenden Archivs, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="compressionLevel">Einer der Enumerationswerte, der angibt, ob Geschwindigkeit oder Komprimierungseffektivität priorisiert wird, wenn der Eintrag erstellt.</param>
        <param name="includeBaseDirectory"><see langword="true" />, um den Verzeichnisnamens von <paramref name="sourceDirectoryName" /> am Stamm des Archivs einzuschließen; <see langword="false" />, um nur der Inhalt des Verzeichnisses einzuschließen.</param>
        <summary>Erstellt ein ZIP-Archiv, das die Dateien und Verzeichnisse im angegebenen Verzeichnis enthält, verwendet die angegebene Komprimierungsebene und optional das Basisverzeichnis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Verzeichnisstruktur aus dem Dateisystem wird im Archiv beibehalten. Wenn das Verzeichnis leer ist, wird ein leeres Archiv erstellt. Verwenden Sie diese methodenüberladung, um die Komprimierungsebene und angibt, ob das Basisverzeichnis in das Archiv eingeschlossen anzugeben.  
  
 Wenn Sie das Archiv bereits vorhanden ist, eine <xref:System.IO.IOException> Ausnahme ausgelöst. Wenn ein Eintrag mit dem angegebenen Namen bereits im Archiv vorhanden ist, wird der zweite Eintrag mit einem identischen Namen erstellt.  
  
 Wenn eine Datei in das Verzeichnis nicht werden, in das Archiv hinzugefügt kann, das Archiv unvollständig und ungültig bleibt und die Methode löst eine <xref:System.IO.IOException> Ausnahme.  
  
   
  
## Examples  
 Dieses Beispiel zeigt das Erstellen und extrahieren eine Zip-Archiv mit dem <xref:System.IO.Compression.ZipFile> Klasse. Es werden komprimiert den Inhalt eines Ordners in einem Zip-Archiv und extrahiert diese dann in einen neuen Ordner. Das Basisverzeichnis ist enthalten, wenn Sie das Archiv komprimieren, und die Komprimierungsebene wird festgelegt, um die Geschwindigkeit des Vorgangs über Effizienz hervorzuheben. Um die <xref:System.IO.Compression.ZipFile>-Klasse zu verwenden, müssen Sie auf die `System.IO.Compression.FileSystem`-Assembly in Ihrem Projekt verweisen.  
  
 [!code-csharp[System.IO.Compression.ZipFile#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipFile#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Im <paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> überschreiten der angegebene Pfad und/oder der Dateiname die vom System vorgegebene Höchstlänge.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceDirectoryName" /> ist ungültig oder nicht vorhanden (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationArchiveFileName" /> ist bereits vorhanden.  
  
- oder - 
Eine Datei im angegebenen Verzeichnis konnte nicht geöffnet werden.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="destinationArchiveFileName" /> gibt ein Verzeichnis an.  
  
- oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf das in <paramref name="sourceDirectoryName" /> angegebene Verzeichnis oder die in <paramref name="destinationArchiveFileName" /> angegebene Datei.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> enthält ein ungültiges Format.  
  
- oder - 
Das ZIP-Archiv unterstützt keine Schreibvorgänge.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromDirectory">
      <MemberSignature Language="C#" Value="public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, valuetype System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateFromDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationArchiveFileName, System::IO::Compression::CompressionLevel compressionLevel, bool includeBaseDirectory, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="static member CreateFromDirectory : string * string * System.IO.Compression.CompressionLevel * bool * System.Text.Encoding -&gt; unit" Usage="System.IO.Compression.ZipFile.CreateFromDirectory (sourceDirectoryName, destinationArchiveFileName, compressionLevel, includeBaseDirectory, entryNameEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationArchiveFileName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
        <Parameter Name="includeBaseDirectory" Type="System.Boolean" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">Der Pfad zum Verzeichnis, das archiviert werden soll, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="destinationArchiveFileName">Der Pfad des zu erstellenden Archivs, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="compressionLevel">Einer der Enumerationswerte, der angibt, ob Geschwindigkeit oder Komprimierungseffektivität priorisiert wird, wenn der Eintrag erstellt.</param>
        <param name="includeBaseDirectory"><see langword="true" />, um den Verzeichnisnamens von <paramref name="sourceDirectoryName" /> am Stamm des Archivs einzuschließen; <see langword="false" />, um nur der Inhalt des Verzeichnisses einzuschließen.</param>
        <param name="entryNameEncoding">Die Codierung, die beim Lesen oder Schreiben von Eintragsnamen in diesem Archiv verwendet werden soll. Geben Sie einen Wert für diesen Parameter nur an, wenn eine Codierung für die Interoperabilität mit ZIP-Archiv-Tools und -Bibliotheken erforderlich ist, die die UTF-8-Codierung für Eintragsnamen nicht unterstützen.</param>
        <summary>Erstellt ein ZIP-Archiv, das die Dateien und Verzeichnisse im angegebenen Verzeichnis enthält, die angegebene Komprimierungsebene und der angegebenen Zeichencodierung für Eintragsnamen verwendet und optional das Basisverzeichnis mit einbezieht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Verzeichnisstruktur aus dem Dateisystem wird im Archiv beibehalten. Wenn das Verzeichnis leer ist, wird ein leeres Archiv erstellt. Verwenden Sie diese methodenüberladung, um die Komprimierungsebene und zeichencodierung und angibt, ob das Basisverzeichnis in das Archiv eingeschlossen anzugeben.  
  
 Wenn Sie das Archiv bereits vorhanden ist, eine <xref:System.IO.IOException> Ausnahme ausgelöst. Wenn ein Eintrag mit dem angegebenen Namen bereits im Archiv vorhanden ist, wird der zweite Eintrag mit einem identischen Namen erstellt.  
  
 Wenn eine Datei in das Verzeichnis nicht werden, in das Archiv hinzugefügt kann, das Archiv unvollständig und ungültig bleibt und die Methode löst eine <xref:System.IO.IOException> Ausnahme.  
  
 Wenn `entryNameEncoding` auf einen Wert festgelegt ist anders als `null`, die Eintragsnamen werden durch die Verwendung der angegebenen Codierung codiert. Wenn die angegebene Codierung eine UTF-8 ist, wird die sprachcodierung-Flag (in der allgemeinen Bitflag des Headers lokale Datei) für jeden Eintrag festgelegt,  
  
 Wenn `entryNameEncoding` nastaven NA hodnotu `null`, die Eintragsnamen codiert werden, gemäß den folgenden Regeln:  
  
-   Für Eintragsnamen, die außerhalb des Bereichs der ASCII-Zeichen, das Language-encoding-Flag festgelegt ist, und UTF-8 wird verwendet, um den Eintragsnamen zu codieren.  
  
-   Für Eintragsnamen, die nur ASCII-Zeichen enthalten, das Language-encoding-Flag festgelegt ist, und die aktuelle System-Standardcodepage wird verwendet, um den Eintragsnamen zu codieren.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.  
  
- oder - 
 <paramref name="entryNameEncoding" /> wird auf eine andere Unicode-Codierung als UTF-8 festgelegt.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Im <paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> überschreiten der angegebene Pfad und/oder der Dateiname die vom System vorgegebene Höchstlänge.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceDirectoryName" /> ist ungültig oder nicht vorhanden (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationArchiveFileName" /> ist bereits vorhanden.  
  
- oder - 
Eine Datei im angegebenen Verzeichnis konnte nicht geöffnet werden.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="destinationArchiveFileName" /> gibt ein Verzeichnis an.  
  
- oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf das in <paramref name="sourceDirectoryName" /> angegebene Verzeichnis oder die in <paramref name="destinationArchiveFileName" /> angegebene Datei.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceDirectoryName" /> oder <paramref name="destinationArchiveFileName" /> enthält ein ungültiges Format.  
  
- oder - 
Das ZIP-Archiv unterstützt keine Schreibvorgänge.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExtractToDirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Extrahiert alle Dateien im angegebenen ZIP-Archiv in ein Verzeichnis im Dateisystem.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">Der Pfad zum Archiv, das extrahiert werden soll.</param>
        <param name="destinationDirectoryName">Der Pfad zum Verzeichnis, in dem die extrahierten Dateien abgelegt werden sollen, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <summary>Extrahiert alle Dateien im angegebenen ZIP-Archiv in ein Verzeichnis im Dateisystem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode erstellt das angegebene Verzeichnis und alle Unterverzeichnisse. Das Zielverzeichnis kann nicht bereits vorhanden sein. Ausnahmen im Zusammenhang mit der Überprüfung der Pfade in der `destinationDirectoryName` oder `sourceArchiveFileName` Parameter vor der Extraktion ausgelöst werden. Andernfalls tritt ein Fehler während der Extraktion, bleibt das Archiv teilweise extrahiert. Jede extrahierten Datei hat den gleichen relativen Pfad im angegebenen Verzeichnis `destinationDirectoryName` als Quelle Eintrag muss der Stamm des Archivs.  
  
   
  
## Examples  
 Dieses Beispiel zeigt das Erstellen und extrahieren eine Zip-Archiv mit dem <xref:System.IO.Compression.ZipFile> Klasse. Komprimiert den Inhalt eines Ordners in einem Zip-Archiv dabei, dass der Inhalt in einen neuen Ordner extrahiert. Um die <xref:System.IO.Compression.ZipFile>-Klasse zu verwenden, müssen Sie auf die `System.IO.Compression.FileSystem`-Assembly in Ihrem Projekt verweisen.  
  
 [!code-csharp[System.IO.Compression.ZipFile#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Der in <paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> angegebene Pfad überschreitet die im System definierte maximale Länge ().</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException">Das von <paramref name="destinationDirectoryName" /> angegebene Verzeichnis ist bereits vorhanden.  
  
- oder - 
Der Name eines Eintrags im Archiv ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder enthält mindestens ein ungültiges Zeichen.  
  
- oder - 
Das Extrahieren eines Archiveintrags wird eine Datei erstellen, die sich außerhalb des Verzeichnisses befindet, das von <paramref name="destinationDirectoryName" /> angegeben wird. (Zum Beispiel geschähe dies möglicherweise, wenn der Eintragsname Accessoren des übergeordneten Verzeichnisses enthält.) 
- oder - 
Ein zu extrahierender Archiveintrag hat den gleichen Namen wie ein Eintrag, der bereits vom gleichen Archiv extrahiert wurde.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf das Archiv oder das Zielverzeichnis.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> enthält ein ungültiges Format.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="sourceArchiveFileName" /> wurde nicht gefunden.</exception>
        <exception cref="T:System.IO.InvalidDataException">Das Archiv, das von <paramref name="sourceArchiveFileName" /> angegeben wurde, ist kein gültiges Zip-Archiv.  
  
- oder - 
Ein Archiveintrag wurde nicht gefunden oder ist fehlerhaft.  
  
- oder - 
Ein Archiveintrag wurde mit einer nicht unterstützten Komprimierungsmethode komprimiert.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName, overwriteFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">To be added.</param>
        <param name="destinationDirectoryName">To be added.</param>
        <param name="overwriteFiles">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String, entryNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string * System.Text.Encoding -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName, entryNameEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">Der Pfad zum Archiv, das extrahiert werden soll.</param>
        <param name="destinationDirectoryName">Der Pfad zum Verzeichnis, in dem die extrahierten Dateien abgelegt werden sollen, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="entryNameEncoding">Die Codierung, die beim Lesen oder Schreiben von Eintragsnamen in diesem Archiv verwendet werden soll. Geben Sie einen Wert für diesen Parameter nur an, wenn eine Codierung für die Interoperabilität mit ZIP-Archiv-Tools und -Bibliotheken erforderlich ist, die die UTF-8-Codierung für Eintragsnamen nicht unterstützen.</param>
        <summary>Extrahiert alle Dateien im angegebenen ZIP-Archiv in ein Verzeichnis im Dateisystem und verwendet die angegebene Zeichencodierung für Eintragsnamen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode erstellt das angegebene Verzeichnis und alle Unterverzeichnisse. Das Zielverzeichnis kann nicht bereits vorhanden sein. Ausnahmen im Zusammenhang mit der Überprüfung der Pfade in der `destinationDirectoryName` oder `sourceArchiveFileName` Parameter vor der Extraktion ausgelöst werden. Andernfalls tritt ein Fehler während der Extraktion, bleibt das Archiv teilweise extrahiert. Jede extrahierten Datei hat den gleichen relativen Pfad im angegebenen Verzeichnis `destinationDirectoryName` als Quelle Eintrag muss der Stamm des Archivs.  
  
 Wenn `entryNameEncoding` auf einen Wert festgelegt ist anders als `null`, Eintragsnamen decodiert werden, gemäß den folgenden Regeln:  
  
-   Für Eintragsnamen, in denen die sprachcodierung-Flag (in der allgemeinen Bitflag des Headers lokale Datei) nicht festgelegt ist, werden die Eintragsnamen unter Verwendung der angegebenen Codierung decodiert.  
  
-   Für die Einträge, in dem das Language-encoding-Flag festgelegt ist, werden die Eintragsnamen decodiert, mithilfe von UTF-8.  
  
 Wenn `entryNameEncoding` nastaven NA hodnotu `null`, Eintragsnamen decodiert werden, gemäß den folgenden Regeln:  
  
-   Für die Einträge, in denen die sprachcodierung-Flag (in der allgemeinen Bitflag des Headers lokale Datei) nicht festgelegt ist, werden Eintragsnamen decodiert, mit dem aktuellen System-Standardcodepage.  
  
-   Für die Einträge, in dem das Language-encoding-Flag festgelegt ist, werden die Eintragsnamen decodiert, mithilfe von UTF-8.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.  
  
- oder - 
 <paramref name="entryNameEncoding" /> wird auf eine andere Unicode-Codierung als UTF-8 festgelegt.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Der in <paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> angegebene Pfad überschreitet die im System definierte maximale Länge ().</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException">Das von <paramref name="destinationDirectoryName" /> angegebene Verzeichnis ist bereits vorhanden.  
  
- oder - 
Der Name eines Eintrags im Archiv ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder enthält mindestens ein ungültiges Zeichen.  
  
- oder - 
Das Extrahieren eines Archiveintrags wird eine Datei erstellen, die sich außerhalb des Verzeichnisses befindet, das von <paramref name="destinationDirectoryName" /> angegeben wird. (Zum Beispiel geschähe dies möglicherweise, wenn der Eintragsname Accessoren des übergeordneten Verzeichnisses enthält.) 
- oder - 
Ein zu extrahierender Archiveintrag hat den gleichen Namen wie ein Eintrag, der bereits vom gleichen Archiv extrahiert wurde.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf das Archiv oder das Zielverzeichnis.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationDirectoryName" /> oder <paramref name="sourceArchiveFileName" /> enthält ein ungültiges Format.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="sourceArchiveFileName" /> wurde nicht gefunden.</exception>
        <exception cref="T:System.IO.InvalidDataException">Das Archiv, das von <paramref name="sourceArchiveFileName" /> angegeben wurde, ist kein gültiges Zip-Archiv.  
  
- oder - 
Ein Archiveintrag wurde nicht gefunden oder ist fehlerhaft.  
  
- oder - 
Ein Archiveintrag wurde mit einer nicht unterstützten Komprimierungsmethode komprimiert.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, System.Text.Encoding entryNameEncoding, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, class System.Text.Encoding entryNameEncoding, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String, entryNameEncoding As Encoding, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName, System::Text::Encoding ^ entryNameEncoding, bool overwriteFiles);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string * System.Text.Encoding * bool -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName, entryNameEncoding, overwriteFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">To be added.</param>
        <param name="destinationDirectoryName">To be added.</param>
        <param name="entryNameEncoding">To be added.</param>
        <param name="overwriteFiles">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet ein Zip-Archiv unter dem angegebenen Pfad und im angegebenen Modus.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchive Open(string archiveFileName, valuetype System.IO.Compression.ZipArchiveMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (archiveFileName As String, mode As ZipArchiveMode) As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Compression::ZipArchive ^ Open(System::String ^ archiveFileName, System::IO::Compression::ZipArchiveMode mode);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.Compression.ZipArchiveMode -&gt; System.IO.Compression.ZipArchive" Usage="System.IO.Compression.ZipFile.Open (archiveFileName, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFileName" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
      </Parameters>
      <Docs>
        <param name="archiveFileName">Der Pfad zum Archiv, dass geöffnet werden soll, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="mode">Einer der Enumerationswerte, der die Aktionen angibt, die bei den Einträgen im geöffneten Archiv zulässig sind.</param>
        <summary>Öffnet ein Zip-Archiv unter dem angegebenen Pfad und im angegebenen Modus.</summary>
        <returns>Das geöffnete ZIP-Archiv.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Festlegen der `mode` Parameter <xref:System.IO.Compression.ZipArchiveMode.Read>, das Archiv wird geöffnet, mit <xref:System.IO.FileMode.Open> aus der <xref:System.IO.FileMode> Enumeration als der Wert für die Modus. Wenn Sie das Archiv nicht vorhanden ist, eine <xref:System.IO.FileNotFoundException> Ausnahme ausgelöst. Festlegen der `mode` Parameter <xref:System.IO.Compression.ZipArchiveMode.Read> entspricht dem Aufrufen der <xref:System.IO.Compression.ZipFile.OpenRead%2A> Methode.  
  
 Beim Festlegen der `mode` Parameter <xref:System.IO.Compression.ZipArchiveMode.Create>, wird das Archiv mit geöffnet <xref:System.IO.FileMode.CreateNew?displayProperty=nameWithType> als der Wert für die Modus. Wenn Sie das Archiv bereits vorhanden ist, eine <xref:System.IO.IOException> ausgelöst.  
  
 Beim Festlegen der `mode` Parameter <xref:System.IO.Compression.ZipArchiveMode.Update>, wird das Archiv mit geöffnet <xref:System.IO.FileMode.OpenOrCreate?displayProperty=nameWithType> als der Wert für die Modus. Wenn das Archiv vorhanden ist, wird es geöffnet. Die vorhandenen Einträge geändert werden können, und neue Einträge können erstellt werden. Wenn Sie das Archiv nicht vorhanden ist, wird ein neues Archiv erstellt. Allerdings erstellen Sie ein Zip-Archiv in <xref:System.IO.Compression.ZipArchiveMode.Update> Modus ist nicht so effizient wie erstellen sie in <xref:System.IO.Compression.ZipArchiveMode.Create> Modus.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie ein Zip-Archiv im Aktualisierungsmodus zu öffnen, und fügen Sie einen Eintrag in das Archiv.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="archiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="archiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Im <paramref name="archiveFileName" /> überschreiten der angegebene Pfad und/oder der Dateiname die vom System vorgegebene Höchstlänge.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="archiveFileName" /> ist ungültig oder nicht vorhanden (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="archiveFileName" /> konnte nicht geöffnet werden.  
  
- oder - 
 <paramref name="mode" /> wird auf <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> festgelegt, aber die Datei, die in <paramref name="archiveFileName" /> angegeben ist, ist bereits vorhanden.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="archiveFileName" /> gibt ein Verzeichnis an.  
  
- oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf die in <paramref name="archiveFileName" /> angegebene Datei.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> gibt einen ungültigen Wert an.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="mode" /> wird auf <see cref="F:System.IO.Compression.ZipArchiveMode.Read" /> festgelegt, aber die Datei, die in <paramref name="archiveFileName" /> angegeben wird, wurde nicht gefunden.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="archiveFileName" /> enthält ein ungültiges Format.</exception>
        <exception cref="T:System.IO.InvalidDataException"><paramref name="archiveFileName" /> konnte nicht als ZIP-Archiv interpretiert werden.  
  
- oder - 
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, aber ein Eintrag fehlt oder ist beschädigt und kann nicht gelesen werden.  
  
- oder - 
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, aber ein Eintrag ist zu groß, um in den Arbeitsspeicher zu passen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchive Open(string archiveFileName, valuetype System.IO.Compression.ZipArchiveMode mode, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (archiveFileName As String, mode As ZipArchiveMode, entryNameEncoding As Encoding) As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Compression::ZipArchive ^ Open(System::String ^ archiveFileName, System::IO::Compression::ZipArchiveMode mode, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.Compression.ZipArchiveMode * System.Text.Encoding -&gt; System.IO.Compression.ZipArchive" Usage="System.IO.Compression.ZipFile.Open (archiveFileName, mode, entryNameEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFileName" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="archiveFileName">Der Pfad zum Archiv, dass geöffnet werden soll, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="mode">Einer der Enumerationswerte, der die Aktionen angibt, die bei den Einträgen im geöffneten Archiv zulässig sind.</param>
        <param name="entryNameEncoding">Die Codierung, die beim Lesen oder Schreiben von Eintragsnamen in diesem Archiv verwendet werden soll. Geben Sie einen Wert für diesen Parameter nur an, wenn eine Codierung für die Interoperabilität mit ZIP-Archiv-Tools und -Bibliotheken erforderlich ist, die die UTF-8-Codierung für Eintragsnamen nicht unterstützen.</param>
        <summary>Öffnet ein Zip-Archiv im angegebenen Pfad im angegebenen Modus und mit der angegebenen Zeichencodierung für Eintragsnamen.</summary>
        <returns>Das geöffnete ZIP-Archiv.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Festlegen der `mode` Parameter <xref:System.IO.Compression.ZipArchiveMode.Read>, wird das Archiv mit geöffnet <xref:System.IO.FileMode.Open?displayProperty=nameWithType> als der Wert für die Modus. Wenn Sie das Archiv nicht vorhanden ist, eine <xref:System.IO.FileNotFoundException> Ausnahme ausgelöst. Festlegen der `mode` Parameter <xref:System.IO.Compression.ZipArchiveMode.Read> entspricht dem Aufrufen der <xref:System.IO.Compression.ZipFile.OpenRead%2A> Methode.  
  
 Beim Festlegen der `mode` Parameter <xref:System.IO.Compression.ZipArchiveMode.Create>, wird das Archiv mit geöffnet <xref:System.IO.FileMode.CreateNew?displayProperty=nameWithType> als der Wert für die Modus. Wenn Sie das Archiv bereits vorhanden ist, eine <xref:System.IO.IOException> ausgelöst.  
  
 Beim Festlegen der `mode` Parameter <xref:System.IO.Compression.ZipArchiveMode.Update>, wird das Archiv mit geöffnet <xref:System.IO.FileMode.OpenOrCreate?displayProperty=nameWithType> als der Wert für die Modus. Wenn das Archiv vorhanden ist, wird es geöffnet. Die vorhandenen Einträge geändert werden können, und neue Einträge können erstellt werden. Wenn Sie das Archiv nicht vorhanden ist, wird ein neues Archiv erstellt. Allerdings erstellen Sie ein Zip-Archiv in <xref:System.IO.Compression.ZipArchiveMode.Update> Modus ist nicht so effizient wie erstellen sie in <xref:System.IO.Compression.ZipArchiveMode.Create> Modus.  
  
 Wenn Sie eine Zip-Archiv-Datei zum Lesen öffnen und `entryNameEncoding` nastaven NA hodnotu `null`, Eintragsnamen decodiert werden, gemäß den folgenden Regeln:  
  
-   Wenn die sprachcodierung-Flag (in der allgemeinen Bitflag des Headers lokale Datei) nicht festgelegt ist, wird die aktuelle System-Standardcodepage verwendet, der Name des Eintrags zu decodieren.  
  
-   Bei der Codierung Language-Flag festgelegt ist, wird UTF-8 verwendet, der Name des Eintrags zu decodieren.  
  
 Wenn Sie eine Zip-Archiv-Datei zum Lesen öffnen und `entryNameEncoding` auf einen Wert festgelegt ist anders als `null`, Eintragsnamen decodiert werden, gemäß den folgenden Regeln:  
  
-   Wenn die sprachcodierung-Flag nicht festgelegt ist, den angegebenen `entryNameEncoding` wird verwendet, um der Name des Eintrags zu decodieren.  
  
-   Bei der Codierung Language-Flag festgelegt ist, wird UTF-8 verwendet, der Name des Eintrags zu decodieren.  
  
 Beim Erstellen von Dateien archivieren und `entryNameEncoding` nastaven NA hodnotu `null`, Eintragsnamen codiert werden, gemäß den folgenden Regeln:  
  
-   Für Eintragsnamen, die außerhalb des Bereichs der ASCII-Zeichen, das Language-encoding-Flag festgelegt ist, und Eintragsnamen mithilfe von UTF-8 codiert sind.  
  
-   Für Eintragsnamen, die nur ASCII-Zeichen enthalten, die Language-encoding-Flag nicht festgelegt, und Eintragsnamen werden codiert, indem Sie die aktuelle System-Standardcodepage.  
  
 Beim Erstellen von Dateien archivieren und `entryNameEncoding` auf einen Wert festgelegt ist anders als `null`, dem angegebenen `entryNameEncoding` wird verwendet, um den Eintragsnamen in Bytes zu codieren. Nur, wenn die angegebene Codierung UTF-8-Codierung ist, wird die sprachcodierung-Flag (in der allgemeinen Bitflag der lokale Dateiheader) festgelegt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="archiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.  
  
- oder - 
 <paramref name="entryNameEncoding" /> wird auf eine andere Unicode-Codierung als UTF-8 festgelegt.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="archiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Im <paramref name="archiveFileName" /> überschreiten der angegebene Pfad und/oder der Dateiname die vom System vorgegebene Höchstlänge.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="archiveFileName" /> ist ungültig oder nicht vorhanden (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="archiveFileName" /> konnte nicht geöffnet werden.  
  
- oder - 
 <paramref name="mode" /> wird auf <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> festgelegt, aber die Datei, die in <paramref name="archiveFileName" /> angegeben ist, ist bereits vorhanden.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="archiveFileName" /> gibt ein Verzeichnis an.  
  
- oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf die in <paramref name="archiveFileName" /> angegebene Datei.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> gibt einen ungültigen Wert an.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="mode" /> wird auf <see cref="F:System.IO.Compression.ZipArchiveMode.Read" /> festgelegt, aber die Datei, die in <paramref name="archiveFileName" /> angegeben wird, wurde nicht gefunden.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="archiveFileName" /> enthält ein ungültiges Format.</exception>
        <exception cref="T:System.IO.InvalidDataException"><paramref name="archiveFileName" /> konnte nicht als ZIP-Archiv interpretiert werden.  
  
- oder - 
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, aber ein Eintrag fehlt oder ist beschädigt und kann nicht gelesen werden.  
  
- oder - 
 <paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, aber ein Eintrag ist zu groß, um in den Arbeitsspeicher zu passen.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchive OpenRead (string archiveFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchive OpenRead(string archiveFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.OpenRead(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenRead (archiveFileName As String) As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Compression::ZipArchive ^ OpenRead(System::String ^ archiveFileName);" />
      <MemberSignature Language="F#" Value="static member OpenRead : string -&gt; System.IO.Compression.ZipArchive" Usage="System.IO.Compression.ZipFile.OpenRead archiveFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="archiveFileName">Der Pfad zum Archiv, dass geöffnet werden soll, angegeben als relativer oder absoluter Pfad. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <summary>Öffnet ein Zip-Archiv für das Lesen im angegebenen Pfad.</summary>
        <returns>Das geöffnete ZIP-Archiv.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode entspricht dem Aufrufen der <xref:System.IO.Compression.ZipFile.Open%2A> -Methode verwendet wird und die `mode` Parameter <xref:System.IO.Compression.ZipArchiveMode.Read>. Das Archiv wird geöffnet, mit <xref:System.IO.FileMode.Open?displayProperty=nameWithType> als der Wert für die Modus. Wenn Sie das Archiv nicht vorhanden ist, eine <xref:System.IO.FileNotFoundException> Ausnahme ausgelöst.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie ein Zip-Archiv zum Lesen öffnen.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="archiveFileName" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum oder mindestens ein ungültiges Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="archiveFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Im <paramref name="archiveFileName" /> überschreiten der angegebene Pfad und/oder der Dateiname die vom System vorgegebene Höchstlänge.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="archiveFileName" /> ist ungültig oder nicht vorhanden (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="archiveFileName" /> konnte nicht geöffnet werden.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="archiveFileName" /> gibt ein Verzeichnis an.  
  
- oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung für den Zugriff auf die in <paramref name="archiveFileName" /> angegebene Datei.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Die in <paramref name="archiveFileName" /> angegebene Datei wird nicht gefunden.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="archiveFileName" /> enthält ein ungültiges Format.</exception>
        <exception cref="T:System.IO.InvalidDataException"><paramref name="archiveFileName" /> konnte nicht als ZIP-Archiv interpretiert werden.</exception>
      </Docs>
    </Member>
  </Members>
</Type>