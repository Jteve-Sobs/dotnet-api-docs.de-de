<Type Name="SectionHeader" FullName="System.Reflection.PortableExecutable.SectionHeader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="55136e6181968a1a906d019c1143feda42451e9d" /><Meta Name="ms.sourcegitcommit" Value="367e1eae0725e6da7136cd073aaa856ded5d5c29" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/13/2019" /><Meta Name="ms.locfileid" Value="75026104" /></Metadata><TypeSignature Language="C#" Value="public struct SectionHeader" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SectionHeader extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.PortableExecutable.SectionHeader" />
  <TypeSignature Language="VB.NET" Value="Public Structure SectionHeader" />
  <TypeSignature Language="C++ CLI" Value="public value class SectionHeader" />
  <TypeSignature Language="F#" Value="type SectionHeader = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.0.22.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Informationen zum Abschnittsheader einer PE/COFF-Datei bereit.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.SectionHeader.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.PortableExecutable.SectionHeader.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Abschnitts ab.</summary>
        <value>Der Name des Abschnitts.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfLineNumbers">
      <MemberSignature Language="C#" Value="public ushort NumberOfLineNumbers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int16 NumberOfLineNumbers" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.SectionHeader.NumberOfLineNumbers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberOfLineNumbers As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt16 NumberOfLineNumbers { System::UInt16 get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfLineNumbers : uint16" Usage="System.Reflection.PortableExecutable.SectionHeader.NumberOfLineNumbers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Zeilennummereinträge für den Abschnitt ab.</summary>
        <value>Die Anzahl der Zeilennummern Einträge für den Abschnitt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Dieser Wert sollte für ein Bild 0 (null) sein, da COFF-Debuginformationen veraltet sind.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfRelocations">
      <MemberSignature Language="C#" Value="public ushort NumberOfRelocations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int16 NumberOfRelocations" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.SectionHeader.NumberOfRelocations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberOfRelocations As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt16 NumberOfRelocations { System::UInt16 get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfRelocations : uint16" Usage="System.Reflection.PortableExecutable.SectionHeader.NumberOfRelocations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Verschiebungseinträge für den Abschnitt ab.</summary>
        <value>Die Anzahl der Verschiebungs Einträge für den Abschnitt. Der Wert für PE-Images ist 0 (null).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointerToLineNumbers">
      <MemberSignature Language="C#" Value="public int PointerToLineNumbers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointerToLineNumbers" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.SectionHeader.PointerToLineNumbers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointerToLineNumbers As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointerToLineNumbers { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PointerToLineNumbers : int" Usage="System.Reflection.PortableExecutable.SectionHeader.PointerToLineNumbers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Dateizeiger auf den Anfang der Zeilennummereinträge für den Abschnitt ab.</summary>
        <value>Der Dateizeiger auf den Anfang der Zeilennummern Einträge für den Abschnitt, oder 0 (null), wenn keine COFF-Zeilennummern vorhanden sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Dieser Wert sollte für ein Bild 0 (null) sein, da COFF-Debuginformationen veraltet sind.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointerToRawData">
      <MemberSignature Language="C#" Value="public int PointerToRawData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointerToRawData" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.SectionHeader.PointerToRawData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointerToRawData As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointerToRawData { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PointerToRawData : int" Usage="System.Reflection.PortableExecutable.SectionHeader.PointerToRawData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Dateizeiger auf die erste Seite des Abschnitts in der COFF-Datei ab.</summary>
        <value>Der Dateizeiger auf die erste Seite des Abschnitts in der COFF-Datei.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

 Bei PE-Images muss dies ein Vielfaches von <xref:System.Reflection.PortableExecutable.PEHeader.FileAlignment?displayProperty=nameWithType>sein. Bei Objektdateien sollte der Wert an einer 4-Byte-Grenze ausgerichtet werden, um eine optimale Leistung zu erzielen. Wenn ein Abschnitt nur nicht initialisierte Daten enthält, muss dieses Feld den Wert 0 (null) aufweisen.

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointerToRelocations">
      <MemberSignature Language="C#" Value="public int PointerToRelocations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointerToRelocations" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.SectionHeader.PointerToRelocations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointerToRelocations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointerToRelocations { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PointerToRelocations : int" Usage="System.Reflection.PortableExecutable.SectionHeader.PointerToRelocations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Dateizeiger auf den Anfang der Verschiebungseinträge für den Abschnitt ab.</summary>
        <value>Der Dateizeiger auf den Anfang der Verschiebungs Einträge für den Abschnitt. Es ist für PE-Images auf 0 (null) festgelegt, oder wenn keine Umsetzungen vorhanden sind.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SectionCharacteristics">
      <MemberSignature Language="C#" Value="public System.Reflection.PortableExecutable.SectionCharacteristics SectionCharacteristics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.PortableExecutable.SectionCharacteristics SectionCharacteristics" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.SectionHeader.SectionCharacteristics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SectionCharacteristics As SectionCharacteristics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::PortableExecutable::SectionCharacteristics SectionCharacteristics { System::Reflection::PortableExecutable::SectionCharacteristics get(); };" />
      <MemberSignature Language="F#" Value="member this.SectionCharacteristics : System.Reflection.PortableExecutable.SectionCharacteristics" Usage="System.Reflection.PortableExecutable.SectionHeader.SectionCharacteristics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PortableExecutable.SectionCharacteristics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Flags ab, die die Merkmale des Abschnitts beschreiben.</summary>
        <value>Die Flags, die die Merkmale des Abschnitts beschreiben.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeOfRawData">
      <MemberSignature Language="C#" Value="public int SizeOfRawData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SizeOfRawData" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.SectionHeader.SizeOfRawData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SizeOfRawData As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SizeOfRawData { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SizeOfRawData : int" Usage="System.Reflection.PortableExecutable.SectionHeader.SizeOfRawData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe des Abschnitts (für Objektdateien) oder die Größe der initialisierten Daten auf dem Datenträger (für Bilddateien) ab.</summary>
        <value>Die Größe des Abschnitts (für Objektdateien) oder die Größe der initialisierten Daten auf dem Datenträger (für Bilddateien).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

Bei PE-Images muss `SizeOfRawData` ein Vielfaches von <xref:System.Reflection.PortableExecutable.PEHeader.FileAlignment?displayProperty=nameWithType>sein. Wenn Sie kleiner als <xref:System.Reflection.PortableExecutable.SectionHeader.VirtualSize?displayProperty=nameWithType>ist, wird der Rest des Abschnitts mit NULL gefüllt.

Da das <xref:System.Reflection.PortableExecutable.SectionHeader.SizeOfRawData?displayProperty=nameWithType> Feld gerundet ist, das <xref:System.Reflection.PortableExecutable.SectionHeader.VirtualSize?displayProperty=nameWithType> Feld jedoch nicht ist, ist es möglich, dass <xref:System.Reflection.PortableExecutable.SectionHeader.SizeOfRawData> größer als <xref:System.Reflection.PortableExecutable.SectionHeader.VirtualSize> ist.

Wenn ein Abschnitt nur nicht initialisierte Daten enthält, muss dieses Feld den Wert 0 (null) aufweisen.

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualAddress">
      <MemberSignature Language="C#" Value="public int VirtualAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualAddress" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.SectionHeader.VirtualAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualAddress As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VirtualAddress { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualAddress : int" Usage="System.Reflection.PortableExecutable.SectionHeader.VirtualAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die virtuelle Adresse des Abschnitts ab.</summary>
        <value>Die virtuelle Adresse des Abschnitts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

Bei PE-Images ist das `VirtualAddress` die Adresse des ersten Byte des Abschnitts relativ zur Bildbasis, wenn der Abschnitt in den Arbeitsspeicher geladen wird. Bei Objektdateien ist dies die Adresse des ersten Bytes vor dem Anwenden der Verschiebung. der Einfachheit halber sollten Compiler diesen Wert auf 0 festlegen. Andernfalls handelt es sich um einen beliebigen Wert, der während der Verlagerung von Offsets subtrahiert wird.

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualSize">
      <MemberSignature Language="C#" Value="public int VirtualSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualSize" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.SectionHeader.VirtualSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VirtualSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualSize : int" Usage="System.Reflection.PortableExecutable.SectionHeader.VirtualSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Gesamtgröße des Abschnitts ab, wenn dieser in den Arbeitsspeicher geladen wird.</summary>
        <value>Die Gesamtgröße des Abschnitts beim Laden in den Arbeitsspeicher.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

Wenn der `VirtualSize`-Eigenschafts Wert größer als < Xref: System. Reflection. portableexe. sectionheader. sizeofrawdata ist, wird der Abschnitt mit 0 (null) aufgefüllt. Dieses Feld ist nur für PE-Images gültig und sollte für Objektdateien auf 0 (null) festgelegt werden.

         ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
