<Type Name="Chart" FullName="System.Web.UI.DataVisualization.Charting.Chart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10a79b47747f7afc4b055f7836ec2d24d05301aa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550894" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Chart : System.Web.UI.WebControls.DataBoundControl, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Chart extends System.Web.UI.WebControls.DataBoundControl implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.Chart" />
  <TypeSignature Language="VB.NET" Value="Public Class Chart&#xA;Inherits DataBoundControl&#xA;Implements IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Chart : System::Web::UI::WebControls::DataBoundControl, System::Web::UI::IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.DataVisualization.Charting.ChartWebDesigner, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DisplayName("Chart")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.DataVisualization.Charting.Chart), "ChartControl.ico")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Chart runat=server&gt;&lt;Series&gt;&lt;{0}:Series Name="Series1"&gt;&lt;/{0}:Series&gt;&lt;/Series&gt;&lt;ChartAreas&gt;&lt;{0}:ChartArea Name="ChartArea1"&gt;&lt;/{0}:ChartArea&gt;&lt;/ChartAreas&gt;&lt;/{0}:Chart&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fungiert als die Stammklasse des <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelements.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse macht alle Eigenschaften, Methoden und Ereignisse des Steuerelements Diagramm Web verfügbar.  
  
 Zwei wichtige Eigenschaften der der <xref:System.Web.UI.DataVisualization.Charting.Chart> Klasse werden die <xref:System.Web.UI.DataVisualization.Charting.Chart.Series%2A> und <xref:System.Web.UI.DataVisualization.Charting.Chart.ChartAreas%2A> Eigenschaften, die beide Auflistungseigenschaften sind. Die <xref:System.Web.UI.DataVisualization.Charting.Chart.Series%2A> Speicherorte für Datensammlungen-Eigenschaft <xref:System.Web.UI.DataVisualization.Charting.Series> Objekte, die zum Speichern von Daten, die angezeigt werden soll, sowie Attribute von Daten verwendet werden. Die <xref:System.Web.UI.DataVisualization.Charting.Chart.ChartAreas%2A> Speicherorte für Datensammlungen-Eigenschaft <xref:System.Web.UI.DataVisualization.Charting.ChartArea> Objekte, die in erster Linie verwendet werden, eine oder mehrere Diagramme mit einer Menge von Achsen gezeichnet werden soll.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Chart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Chart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor zum Erstellen einer neuen Instanz von der <xref:System.Web.UI.DataVisualization.Charting.Chart> Klasse zur Laufzeit.  
  
 Der Einfachheit halber wird jedoch empfohlen, Sie erstellen eine <xref:System.Web.UI.DataVisualization.Charting.Chart> Instanz zur Entwurfszeit.  
  
 Dies ist das Stammobjekt der <xref:System.Web.UI.DataVisualization.Charting.Chart> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AlignDataPointsByAxisLabel">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Richtet Datenpunkte anhand ihrer Achsenbezeichnungen aus.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Richtet Datenpunkte anhand ihrer Achsenbezeichnungen an der x-Achse aus. Anwendbar, wenn mehrere Reihen indiziert sind und ihre x-Werte Zeichenfolgen sind.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (string series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(string series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel (series As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel(System::String ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="series">Eine durch Trennzeichen getrennte Liste von Reihen, deren Datenpunkte anhand der Datenpunkt-Achsenbezeichnungen an der x-Achse ausgerichtet werden.</param>
        <summary>Richtet Datenpunkte aus unterschiedlichen Reihen anhand ihrer Achsenbezeichnungen an der x-Achse aus. Die angegebenen Reihen im Diagramm werden mit aufsteigender Sortierreihenfolge ausgerichtet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird zum Ausrichten von Datenpunkten aus verschiedenen Reihen entlang der x-Achse, verwenden die achsenbezeichnungen und ist anwendbar, wenn:  
  
-   Mehrere Reihen werden angezeigt und indiziert; Das heißt, alle Datenpunkte haben eine <xref:System.Web.UI.DataVisualization.Charting.DataPoint.XValue%2A> von 0 (null) oder die <xref:System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed%2A> Eigenschaft ist `true`.  
  
-   Alle Datenpunkte haben, nicht leere achsenbezeichnungen, der nur für ihre <xref:System.Web.UI.DataVisualization.Charting.Series>. Wenn sie nicht eindeutig sind, wird eine Ausnahme ausgelöst.  
  
 Diese Situation ist üblich, wenn die Datenbindung bei der Erstellung mehrerer Reihen führt und `string` für die Werte der X-Achse verwendet werden.  
  
 Zwei Aspekte zu beachten, wenn mehrere, indizierte Reihen gezeichnet werden und die X-Werte festgelegt sind, mithilfe von `string` Werte:  
  
-   Es kann nicht garantiert werden, dass Datenpunkte aus unterschiedlichen Reihen mit derselben Zeichenfolge X-Werte im selben Index entlang der x-Achse gezeichnet werden.  
  
-   Nur die achsenbezeichnung für die Datenpunkte in der ersten Reihe wird angezeigt werden, obwohl Datenpunkte aus anderen Reihen mit dem gleichen Index achsenbezeichnungen zu haben.  
  
 Standardmäßig sind Punkte in der Reihenfolge gezeichnet, in denen sie in ihrer Reihe gespeichert werden. Verwenden Sie zum Angeben einer Sortierreihenfolge einer `AlignDataPointsByAxisLabel` methodenüberladung mit einem `sortingOrder` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.Web.UI.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel (sortingOrder As PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel(System::Web::UI::DataVisualization::Charting::PointSortOrder sortingOrder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="sortingOrder">Ein <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" />-Objekt, das angibt, ob für Achsenbezeichnungen eine aufsteigende oder absteigende Sortierreihenfolge verwendet wird. Dies wiederum bestimmt die Reihenfolge, in der Punkte angezeigt werden, die sich zuvor in dem gleichen Achsenbereich befunden haben.</param>
        <summary>Richtet Datenpunkte anhand ihrer Achsenbezeichnungen aus. Alle Reihen im Diagramm werden mit der angegebenen Sortierreihenfolge ausgerichtet.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (string series, System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(string series, valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.String,System.Web.UI.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel (series As String, sortingOrder As PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel(System::String ^ series, System::Web::UI::DataVisualization::Charting::PointSortOrder sortingOrder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.String" />
        <Parameter Name="sortingOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="series">Eine durch Trennzeichen getrennte Liste von Reihen, die anhand der Achsenbezeichnung ausgerichtet werden sollen.</param>
        <param name="sortingOrder">Ein <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" />-Enumerationswert, der bestimmt, ob für Achsenbezeichnungen eine aufsteigende oder absteigende Sortierreihenfolge verwendet wird. Dies wiederum bestimmt die Reihenfolge, in der Punkte angezeigt werden, die sich zuvor in dem gleichen Achsenbereich befunden haben.</param>
        <summary>Richtet Datenpunkte anhand ihrer Achsenbezeichnungen aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird zum Ausrichten von Datenpunkten aus verschiedenen Reihen entlang der x-Achse, verwenden die achsenbezeichnungen und ist anwendbar, wenn:  
  
-   Mehrere Reihen werden angezeigt und indiziert; Das heißt, alle Datenpunkte haben eine <xref:System.Web.UI.DataVisualization.Charting.DataPoint.XValue%2A> von 0 (null) oder die <xref:System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed%2A> Eigenschaft ist `true`.  
  
-   Alle Datenpunkte haben, nicht leere achsenbezeichnungen, der nur für ihre <xref:System.Web.UI.DataVisualization.Charting.Series>. Wenn sie nicht eindeutig sind, wird eine Ausnahme ausgelöst.  
  
 Diese Situation ist üblich, wenn die Datenbindung bei der Erstellung mehrerer Reihen führt und `string` für die Werte der X-Achse verwendet werden.  
  
 Zwei Aspekte zu beachten, wenn mehrere, indizierte Reihen gezeichnet werden und die X-Werte festgelegt sind, mithilfe von `string` Werte:  
  
-   Es kann nicht garantiert werden, dass Datenpunkte aus unterschiedlichen Reihen mit derselben Zeichenfolge X-Werte im selben Index entlang der x-Achse gezeichnet werden.  
  
-   Nur die achsenbezeichnung für die Datenpunkte in der ersten Reihe wird angezeigt werden, obwohl Datenpunkte aus anderen Reihen mit dem gleichen Index achsenbezeichnungen zu haben.  
  
 Standardmäßig sind Punkte in der Reihenfolge gezeichnet, in denen sie in ihrer Reihe gespeichert werden. Verwenden Sie zum Angeben einer Sortierreihenfolge einer `AlignDataPointsByAxisLabel` methodenüberladung mit einem `sortingOrder` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternateText">
      <MemberSignature Language="C#" Value="public string AlternateText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlternateText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.AlternateText" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternateText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AlternateText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Alternativtext ab, der im <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement angezeigt wird, wenn das Diagrammbild nicht verfügbar ist, oder legt diesen fest.</summary>
        <value>Ein <see langword="string" />-Wert, der den Alternativtext darstellt, der im <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement angezeigt wird, wenn das Diagrammbild nicht verfügbar ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Annotations">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AnnotationCollection Annotations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.AnnotationCollection Annotations" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Annotations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Annotations As AnnotationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::AnnotationCollection ^ Annotations { System::Web::UI::DataVisualization::Charting::AnnotationCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.AnnotationCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AnnotationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Übernimmt oder bestimmt das <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationCollection" />-Objekt, das zum Speichern von Diagrammanmerkungen verwendet wird.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationCollection" />-Objekt, das zum Speichern von Diagrammanmerkungen verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle dem Diagramm-Anmerkungen werden in dieser Auflistungseigenschaft gespeichert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AntiAliasing">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AntiAliasingStyles AntiAliasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.AntiAliasingStyles AntiAliasing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.AntiAliasing" />
      <MemberSignature Language="VB.NET" Value="Public Property AntiAliasing As AntiAliasingStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::AntiAliasingStyles AntiAliasing { System::Web::UI::DataVisualization::Charting::AntiAliasingStyles get(); void set(System::Web::UI::DataVisualization::Charting::AntiAliasingStyles value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.AntiAliasingStyles), "All")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AntiAliasingStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob beim Zeichnen von Text und Grafiken Antialiasing verwendet wird, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.AntiAliasingStyles" />-Enumerationswert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Antialiasing "Flatterrändern" indem Pixel mit intermediate Farben glättet und ist besonders effektiv für Glätten Kanten für Diagramme, die nicht als Rechtecke gezeichnet werden. Beispielsweise Anti-Aliasing ist sehr gut für Liniendiagramme und Kreisdiagramme, jedoch ist nicht effektiv für Balken- und Säulendiagramme.  
  
 Anti-Aliasing kann auf Text und Grafiken primitive Typen wie Rechtecken, Kreise usw. angewendet werden.  
  
 Beachten Sie, dass Anti-Aliasing wirkt sich auf Leistung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPaletteColors">
      <MemberSignature Language="C#" Value="public void ApplyPaletteColors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyPaletteColors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.ApplyPaletteColors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyPaletteColors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyPaletteColors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legt die automatisch zugewiesenen Reihen- und Datenpunktfarben fest, um zur Laufzeit programmgesteuerten Zugriff zuzulassen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.DataVisualization.Charting.Chart> Farben automatisch zur Laufzeit zugewiesen ist, besteht keine Möglichkeit zu wissen, was die Farben vor der Zeit werden beim Rendern des Diagramms; die `Color` Eigenschaft eines automatisch zugewiesenen Werts zurück <xref:System.Drawing.Color.Empty> zu diesem Zeitpunkt.  
  
 Beim Aufrufen der <xref:System.Web.UI.DataVisualization.Charting.Chart.ApplyPaletteColors%2A> -Methode, die Farben für die Reihe und Datenpunkte werden festgelegt, dadurch wird für den programmgesteuerten Zugriff.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "White")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hintergrundfarbe des <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Objekts ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Color" />-Wert, der die Hintergrundfarbe eines Diagrammobjekts darstellt. Die Standardfarbe ist <see cref="System.Drawing.Color.White" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft auf einen beliebigen gültigen ARGB (Alpha, Rot, Grün, Blau) Wert festlegen. Beachten Sie, dass für die <xref:System.Web.UI.DataVisualization.Charting.Chart> -Objekt, mit dem Alphaanteil kann nicht auf einen anderen Wert als 255 festgelegt werden. Dies bedeutet auch, dass, für die <xref:System.Web.UI.DataVisualization.Charting.Chart> -Objekt nur einen <xref:System.Drawing.Color.Transparent%2A> Wert kann nicht verwendet werden.  
  
 Die <xref:System.Web.UI.DataVisualization.Charting.Chart.BackColor%2A> Wert wird der ersten Farbe verwendet, wenn Sie für den Hintergrund Verlaufsfarben verwenden werden.  
  
 Der Alphawert steuert die Deckkraft einer Farbe. Wenn Sie diese Farbe auf "transparent" festlegen – d. h. bei Verwendung der Alphawert 0 – dem Hintergrund des Titels wird keine Farbe zugewiesen werden. Daher wird der Hintergrund transparent sein.  
  
 Die folgende Tabelle stellt die <xref:System.Web.UI.DataVisualization.Charting.Series> Typen, die Farbverläufe unterstützen:  
  
|Typen von Reihen|2D|3D|  
|------------------|--------|--------|  
|Balken|X|-|  
|Boxplot|X|X|  
|Blasendiagramm|-|-|  
|Kerze|X|X|  
|Spalte|X|X|  
|Ring|X|-|  
|Fehlerindikatoren|-|-|  
|Schnelle Zeile|-|-|  
|Fast-Punkt|-|-|  
|Trichter|X|X|  
|Gantt|X|-|  
|Kagi|-|-|  
|Linie|-|-|  
|Segment|X|-|  
|Punkt|-|-|  
|Punkt und Zeichen|X|-|  
|Polar|-|-|  
|Pyramide|X|X|  
|Netz|X|X|  
|Spaltenbereich|X|-|  
|Renko|X|-|  
|Spline|-|-|  
|Spline-Bereich|X|-|  
|Splinebereich|X|-|  
|Gestapelte Fläche|X|-|  
|Ein gestapeltes Flächendiagramm 100|X|-|  
|Gestapelter Balken|X|-|  
|Gestapelter Balken 100|X|-|  
|Gestapelte Säule|X|-|  
|Gestapelte Säule 100|X|-|  
|Schrittzeile|-|-|  
|Kurs|-|-|  
|ThreeLineBreak|X|-|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackGradientStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackGradientStyle As GradientStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::GradientStyle BackGradientStyle { System::Web::UI::DataVisualization::Charting::GradientStyle get(); void set(System::Web::UI::DataVisualization::Charting::GradientStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.GradientEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ausrichtung für den Hintergrundfarbverlauf eines <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelements ab oder legt diese fest. Bestimmt außerdem, ob ein Farbverlauf verwendet wird.</summary>
        <value>Eine <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" />-Enumeration. Der Standardwert ist <see cref="F:System.Web.UI.DataVisualization.Charting.GradientStyle.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.DataVisualization.Charting.Chart.BackGradientStyle%2A> -Eigenschaft können Sie bestimmen, ob ein <xref:System.Web.UI.DataVisualization.Charting.Chart> Steuerelement zeigt einen Farbverlauf und in die Ausrichtung des Verlaufs zu bestimmen, ob verwendet.  
  
 Eine Liste der verfügbaren Muster, finden Sie in der <xref:System.Web.UI.DataVisualization.Charting.GradientStyle> Enumeration.  
  
 So verwenden Sie Verlaufsfarben:  
  
 Legen Sie die primäre Farbe des Diagrammhintergrunds mit den <xref:System.Web.UI.DataVisualization.Charting.Chart.BackColor%2A> Eigenschaft.  
  
 Legen Sie die Sekundärfarbe des Diagrammhintergrunds mit der <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> Eigenschaft.  
  
 Legen Sie diese <xref:System.Web.UI.DataVisualization.Charting.Chart.BackGradientStyle%2A> Eigenschaft, um die gewünschte Art des Farbverlaufs.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackHatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackHatchStyle As ChartHatchStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartHatchStyle BackHatchStyle { System::Web::UI::DataVisualization::Charting::ChartHatchStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartHatchStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.HatchStyleEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schraffurart des <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelements ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" />-Enumeration. Der Standardwert ist <see cref="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle> Enumeration gibt an, die von einem Pinsel des Typs verwendete Schraffur <xref:System.Drawing.Drawing2D.HatchBrush>. Die Schraffur besteht aus einer Hintergrundfarbe und über dem Hintergrund gezeichneten Linien verwendet werden.  
  
 Eine Liste der verfügbaren schraffurstile, finden Sie in der <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle> Enumeration.  
  
 **Hinweis** die Farbe der Linien Schraffurmuster richtet sich nach der <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImage">
      <MemberSignature Language="C#" Value="public string BackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackImage" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BackImage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.UrlValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Hintergrundbild des <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelements ab oder legt dieses fest.</summary>
        <value>Ein <see langword="string" />-Wert, der die URL einer Bilddatei darstellt. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft definiert einen Pfad zu einem Hintergrundbild für einen <xref:System.Web.UI.DataVisualization.Charting.Chart> Legende, und kann eine absolute oder relative URL.  
  
 Um das Bild zu positionieren, verwenden die <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageAlignment%2A> und <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageWrapMode%2A> Eigenschaften.  
  
 Sie können auch angeben einer der Farben im Bild als "transparent" angezeigt wird, indem die <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageTransparentColor%2A> Eigenschaft.  
  
 Ein Bild kann eine beliebige gültige Grafikdatei unterstützt von .NET Framework, einschließlich der Symbole stammen.  
  
 Hintergrundbilder haben Vorrang vor anderen Hintergrundeigenschaften, z. B. Farbverlauf.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageAlignment">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackImageAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageAlignment As ChartImageAlignmentStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle BackImageAlignment { System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die für den <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled" />-Zeichnungsmodus verwendete Ausrichtung des Hintergrundbilds ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle" />-Enumerationswert. Der Standardwert ist <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft bestimmt die Ausrichtung des Hintergrundbilds für die <xref:System.Web.UI.DataVisualization.Charting.Chart> Steuerelement; es wird nur angewendet, wenn die <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageWrapMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Farbe des <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelements ab, die transparent angezeigt wird, oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Color" />-Wert, der beim Zeichnen des Diagrammbilds transparent angezeigt wird. Der Standardwert ist <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageWrapMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackImageWrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageWrapMode As ChartImageWrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageWrapMode BackImageWrapMode { System::Web::UI::DataVisualization::Charting::ChartImageWrapMode get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageWrapMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageWrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zeichnungsmodus für das Hintergrundbild des <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelements ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode" />-Enumerationswert. Der Standardwert ist <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Tile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft bestimmt, wie das Bild, z. B. unterteilte, skalierte usw. angezeigt wird.  
  
 Wenn ein Bild skaliert wird, wird es gestreckt werden innerhalb der Grenzen des Diagramms. Wenn das Bild wird gekachelt, ist, wird es wiederholt gezeichnet, beginnend mit der linken oberen Ecke des Diagramms.  
  
 Weitere Informationen zu den verfügbaren Wrapping-Modi, finden Sie unter der <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode> Enumerationsthema.  
  
 Wenn die <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageWrapMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>, der Speicherort, in dem das Bild gezeichnet wird, richtet sich nach der <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageAlignment%2A> Einstellung der Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackSecondaryColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackSecondaryColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die sekundäre Farbe des Diagrammhintergrunds ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Color" />-Wert. Der Standardwert ist <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> Eigenschaft bestimmt die sekundäre Hintergrundfarbe vieler <xref:System.Web.UI.DataVisualization.Charting.Chart> -Objekte und wird verwendet, wenn Farbverlauf übernommen werden.  
  
 Sie können festlegen, <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> auf einen beliebigen gültigen ARGB (Alpha, Rot, Grün, Blau)-Wert.  
  
 Wenn Schraffuren verwendet wird, die <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> Eigenschaft bestimmt die Farbe der Linien Schraffur für das Diagramm.  
  
 Farbverlauf für den Hintergrund eines Diagramms zu verwenden:  
  
-   Legen Sie die primäre Farbe mit der <xref:System.Web.UI.DataVisualization.Charting.Chart.BackColor%2A> Eigenschaft.  
  
-   Legen Sie die sekundäre Farbe, mit der <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> Eigenschaft.  
  
-   Legen Sie die <xref:System.Web.UI.DataVisualization.Charting.Chart.BackGradientStyle%2A> Eigenschaft, um die gewünschte Art des Farbverlaufs.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Farbe des Diagrammrahmens ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Color" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie zum Abrufen oder Festlegen der Farbe des Rahmens, <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderlineColor%2A> stattdessen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderlineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderlineColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderlineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderlineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderlineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "White")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Farbe des gesamten Diagrammbildrahmens ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Farbe des gesamten Diagrammbildrahmens darstellt. Der Standardwert ist <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft auf einen beliebigen gültigen ARGB-Wert (Alpha, Rot, Grün und Blau-Wert) festlegen.  
  
 Diese Eigenschaft ähnelt der <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderColor%2A> -Eigenschaft, der einzige Unterschied ist, dass die <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderColor%2A> Eigenschaft ist nicht verfügbar im Fenster Eigenschaften zur Entwurfszeit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineDashStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderlineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderlineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderlineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderlineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartDashStyle BorderlineDashStyle { System::Web::UI::DataVisualization::Charting::ChartDashStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Stil der gesamten Rahmenlinie des Diagrammbilds ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" />-Enumerationswert, der den Rahmenlinienstil des Diagrammbilds bestimmt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft bestimmt die Linienart für die Rahmenlinie Diagramm verwendet. Die Zeile kann einfarbig, gepunktet usw. sein.  
  
 Weitere Formatoptionen finden Sie unter der <xref:System.Web.UI.DataVisualization.Charting.ChartDashStyle> Enumerationsthema.  
  
 Diese Eigenschaft ähnelt der <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderStyle%2A> -Eigenschaft, der einzige Unterschied ist, dass die <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderStyle%2A> Eigenschaft ist nicht verfügbar im Fenster Eigenschaften zur Entwurfszeit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineWidth">
      <MemberSignature Language="C#" Value="public int BorderlineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderlineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderlineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderlineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BorderlineWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Breite der Rahmenlinie für das gesamte Diagrammbild ab oder legt diese fest.</summary>
        <value>Ein <see langword="integer" />-Wert, der die Breite in Pixel der Rahmenlinie des Diagrammbilds bestimmt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderSkin">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.BorderSkin BorderSkin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.BorderSkin BorderSkin" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderSkin" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderSkin As BorderSkin" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::BorderSkin ^ BorderSkin { System::Web::UI::DataVisualization::Charting::BorderSkin ^ get(); void set(System::Web::UI::DataVisualization::Charting::BorderSkin ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.LegendConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.BorderSkin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.DataVisualization.Charting.BorderSkin" />-Objekt ab, das Rahmenskinfunktionen für das <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement bereitstellt, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.BorderSkin" />-Objekt, das Rahmenskinfunktionen für das Diagrammsteuerelement bereitstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um ein Rahmendesign für das Diagramm anzugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rahmenart des <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.BorderStyle" /> des Diagramms.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Breite des Diagrammrahmens ab oder legt diese fest.</summary>
        <value>Ein <see langword="integer" />-Wert, der die Rahmenbreite in Pixel des Diagramms bestimmt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie zum Abrufen oder Festlegen der Breite des Rahmens, <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderlineWidth%2A> stattdessen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildNumber">
      <MemberSignature Language="C#" Value="public string BuildNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BuildNumber" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BuildNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuildNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BuildNumber { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Buildnummer des <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelements ab.</summary>
        <value>Ein <see langword="string" />, der die Buildnummer darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartAreas">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartAreaCollection ChartAreas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.ChartAreaCollection ChartAreas" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ChartAreas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChartAreas As ChartAreaCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartAreaCollection ^ ChartAreas { System::Web::UI::DataVisualization::Charting::ChartAreaCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartAreaCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein schreibgeschütztes <see cref="T:System.Web.UI.DataVisualization.Charting.ChartAreaCollection" />-Objekt ab, das zum Speichern von <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />-Objekten verwendet wird.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartAreaCollection" />-Objekt, das verwendet wird, um <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />-Objekte zu speichern.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Auflistung Eigenschaft ermöglicht den Zugriff auf die <xref:System.Web.UI.DataVisualization.Charting.ChartAreaCollection> -Objekt, das speichert <xref:System.Web.UI.DataVisualization.Charting.ChartArea> Objekte und bietet auch Methoden und Eigenschaften, die zum Bearbeiten der Auflistung verwendet werden.  
  
 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> Objekte werden verwendet, um eine oder mehrere Diagramme zu zeichnen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ImageMapEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ImageMapEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As ImageMapEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ImageMapEventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ImageMapEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf den Imagemapbereich im <see cref="P:System.Web.UI.DataVisualization.Charting.DataPoint.PostBackValue" />-Steuerelement geklickt wird, der durch den <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> definiert wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compression">
      <MemberSignature Language="C#" Value="public int Compression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Compression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Compression" />
      <MemberSignature Language="VB.NET" Value="Public Property Compression As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Compression { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Betrag der Komprimierung für das Diagrammbild ab oder legt diesen fest.</summary>
        <value>Ein <see langword="integer" />, der den Betrag der Komprimierung für das gesamte Diagrammbild darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Komprimierung wird als Prozentsatz ausgedrückt; Legen Sie z. B. um 50 % Komprimierung verwenden, diese Eigenschaft auf 50.  
  
 Komprimierung wird für alle Methoden für die Wiedergabe verwendet, gemäß der <xref:System.Web.UI.DataVisualization.Charting.Chart.RenderType%2A> Eigenschaft jedoch nur für die JPEG-Bilder, die von angegeben sind die <xref:System.Web.UI.DataVisualization.Charting.ChartImageType.Jpeg> -Enumerationswert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentImageLocation">
      <MemberSignature Language="C#" Value="public string CurrentImageLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentImageLocation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.CurrentImageLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentImageLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentImageLocation { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL des aktuellen Bilds ab, in dem das <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement gerendert wird.</summary>
        <value>Ein <see langword="string" />-Wert, der die URL des aktuellen Diagrammbilds darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft hat keine Auswirkung, wenn die <xref:System.Web.UI.DataVisualization.Charting.Chart.ImageStorageMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.DataVisualization.Charting.ImageStorageMode.UseHttpHandler?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Customize">
      <MemberSignature Language="C#" Value="public event EventHandler Customize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Customize" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.Customize" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Customize As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Customize;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt direkt vor dem Zeichnen des Diagrammbilds ein. Alle Diagrammdaten sind verfügbar, und alle Diagrammeigenschaften wurden festgelegt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis hat zwei eindeutige Funktionen:  
  
-   Alle Diagrammdaten ist verfügbar. d. h. die Reihe und ihre Datenpunkte werden aufgefüllt. Dies ist besonders hilfreich, wenn die Datenbindung verwendet wird, da die Daten analysiert werden, und das Diagramm angepasst werden kann, unmittelbar vor dem gezeichnet werden.  
  
-   Alle Diagrammeigenschaften wurden festgelegt, einschließlich diejenigen Eigenschaften, die auf "Auto" festgelegt sein. Das heißt, können "Auto" Eigenschaften jetzt die automatisch berechneten Werte speichern untersucht und geändert werden, bevor Sie das Diagramm gezeichnet werden. Beispiele sind die <xref:System.Web.UI.DataVisualization.Charting.Axis.Minimum%2A> und <xref:System.Web.UI.DataVisualization.Charting.Axis.Maximum%2A> Eigenschaften der <xref:System.Web.UI.DataVisualization.Charting.Axis> Klasse.  
  
 Verwenden Sie dieses Ereignis, um zu ändern oder das Diagrammbild anpassen, bevor es gezeichnet wird.  
  
 Wenn Änderungen an einer Diagrammfläche vorgenommen werden, müssen z. B. auf der Achsenskala den diagrammflächeneigenschaften neu berechnet werden um das Diagramm ordnungsgemäß zu rendern. Um das Diagramm neu zu berechnen, rufen Sie die <xref:System.Web.UI.DataVisualization.Charting.ChartArea.RecalculateAxesScale%2A> Methode nach dem Herstellen der Änderungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomizeLegend">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs&gt; CustomizeLegend;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs&gt; CustomizeLegend" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CustomizeLegend As EventHandler(Of CustomizeLegendEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::DataVisualization::Charting::CustomizeLegendEventArgs ^&gt; ^ CustomizeLegend;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt direkt vor dem Zeichnen der Diagrammlegende ein. Verwenden Sie dieses Ereignis, um die Elemente der Diagrammlegende anzupassen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend> Ereignis wird hauptsächlich verwendet, um die Legende anzupassen, kurz bevor es gezeichnet wird. Sowohl Standard-als auch benutzerdefinierte Legendenelemente können entfernt oder geändert werden, und benutzerdefinierte Elemente können auch hinzugefügt werden. Darüber hinaus kann die Reihenfolge der Legendenelemente geändert werden.  
  
 Das Diagrammbild kann auch geändert werden, bevor Sie mithilfe von Absenderargument gezeichnet werden.  
  
 Beachten Sie, dass ein Standardelement für die Legende ein Element, das für eine Datenreihe oder Datenpunkt erstellt wird, aber ein benutzerdefiniertes Legendenelement ist in keiner Weise mit den Diagrammdaten nicht verbunden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomizeMapAreas">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs&gt; CustomizeMapAreas;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs&gt; CustomizeMapAreas" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.CustomizeMapAreas" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CustomizeMapAreas As EventHandler(Of CustomizeMapAreasEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::DataVisualization::Charting::CustomizeMapAreasEventArgs ^&gt; ^ CustomizeMapAreas;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt direkt vor dem Rendern der Diagrammimagemap ein. Verwenden Sie dieses Ereignis, um die Elemente des Zuordnungsbereichs anzupassen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs.MapAreaItems%2A> Eigenschaft von der <xref:System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs> -Klasse kann verwendet werden:  
  
-   Löschen Sie oder ändern Sie Zuordnungselemente, die automatisch für ein Diagrammobjekt erstellt wurden; Zeigen Sie alle Daten, Reihen, Legende Element oder Streifen Line-Objekt, das eine nicht leere `Url`, `MapAreaAttributes` oder `ToolTip` Eigenschaft hat einen zugeordneten Bereich Zuordnungsobjekt.  
  
-   Fügen Sie benutzerdefinierte Zuordnungsbereiche, die eine benutzerdefinierte Form und Koordinaten aufweisen.  
  
> [!NOTE]
>  Die Absenderargument des Typs <xref:System.Web.UI.DataVisualization.Charting.Chart> ist schreibgeschützt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindCrossTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Daten binden ein Diagramm an die Tabelle, wobei in einer angegebenen Spalte eine Reihe pro eindeutigem Wert erstellt wird.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindCrossTable">
      <MemberSignature Language="C#" Value="public void DataBindCrossTable (System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindCrossTable(class System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindCrossTable (dataSource As IEnumerable, seriesGroupByField As String, xField As String, yFields As String, otherFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindCrossTable(System::Collections::IEnumerable ^ dataSource, System::String ^ seriesGroupByField, System::String ^ xField, System::String ^ yFields, System::String ^ otherFields);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="seriesGroupByField" Type="System.String" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">Die Datenquelle, von der das Diagramm gebunden wird.</param>
        <param name="seriesGroupByField">Der Name des Felds, das zum Gruppieren der Daten in die Reihe verwendet wird.</param>
        <param name="xField">Der Name des Felds für X-Werte.</param>
        <param name="yFields">Eine durch Trennzeichen getrennte Liste des Namens/der Namen des Feldes/der Felder für den/die Y-Wert(e).</param>
        <param name="otherFields">Die anderen Datenpunkteigenschaften, die gebunden werden können.</param>
        <summary>Daten binden ein Diagramm an die Tabelle, wobei in einer angegebenen Spalte eine Reihe pro eindeutigem Wert erstellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Reihen werden automatisch hinzugefügt werden, auf das Diagramm, abhängig von der Anzahl der eindeutigen Werte in der angegebenen `seriesGroupByField` Spalte von der Datenquelle in anderen Worten: die Erstellung von Reihen hängt von Gruppierung einer Spalte.  
  
 Die Datenquelle kann ein <xref:System.Data.OleDb.OleDbDataReader>, <xref:System.Data.SqlClient.SqlDataReader> oder ein <xref:System.Data.DataView> Objekt. Beachten Sie, dass alle Auflistungen, implementieren die <xref:System.Collections.IEnumerable> Schnittstelle verwendet werden kann.  
  
 Andere Datenpunkteigenschaften neben X- und Y-Werte gebunden werden kann. Das Format lautet: Punkteigenschaft = Feld [{Format}] [, Punkteigenschaft = Feld [{Format}]]. Zum Beispiel: "QuickInfo = Price {C1} Href angegebenen" Websitename "=".  
  
Diese Datenpunkteigenschaften umfassen: 

- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.AxisLabel%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.ToolTip%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Url%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.PostBackValue%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Label%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendToolTip%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.CustomProperties%2A?displayProperty=nameWithType>, wobei es sich um den Namen der benutzerdefinierten Eigenschaften.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindCrossTable">
      <MemberSignature Language="C#" Value="public void DataBindCrossTable (System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields, System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindCrossTable(class System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields, valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String,System.Web.UI.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindCrossTable (dataSource As IEnumerable, seriesGroupByField As String, xField As String, yFields As String, otherFields As String, sortingOrder As PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindCrossTable(System::Collections::IEnumerable ^ dataSource, System::String ^ seriesGroupByField, System::String ^ xField, System::String ^ yFields, System::String ^ otherFields, System::Web::UI::DataVisualization::Charting::PointSortOrder sortingOrder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="seriesGroupByField" Type="System.String" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
        <Parameter Name="sortingOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="dataSource">Die Datenquelle, von der das Diagramm gebunden wird.</param>
        <param name="seriesGroupByField">Der Name des Felds, das zum Gruppieren der Daten in die Reihe verwendet wird.</param>
        <param name="xField">Der Name des Felds für X-Werte.</param>
        <param name="yFields">Eine durch Trennzeichen getrennte Liste des Namens/der Namen des Feldes/der Felder für den/die Y-Wert(e).</param>
        <param name="otherFields">Die anderen Datenpunkteigenschaften, die gebunden werden können.</param>
        <param name="sortingOrder">Reihen werden nach Gruppenfeldwerten in der angegebenen Reihenfolge sortiert.</param>
        <summary>Daten binden ein Diagramm an die Tabelle, wobei in einer angegebenen Spalte eine Reihe pro eindeutigem Wert erstellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Reihen werden automatisch hinzugefügt werden, auf das Diagramm, abhängig von der Anzahl der eindeutigen Werte in der angegebenen `seriesGroupByField` Spalte von der Datenquelle in anderen Worten: die Erstellung von Reihen hängt von Gruppierung einer Spalte.  
  
 Die Datenquelle kann ein <xref:System.Data.OleDb.OleDbDataReader>, <xref:System.Data.SqlClient.SqlDataReader> oder ein <xref:System.Data.DataView> Objekt.  
  
 Beachten Sie, dass alle Auflistungen, implementieren die <xref:System.Collections.IEnumerable> Schnittstelle verwendet werden kann.  
  
 Andere Datenpunkteigenschaften neben X- und Y-Werte gebunden werden kann. Das Format lautet: Punkteigenschaft = Feld [{Format}] [, Punkteigenschaft = Feld [{Format}]]. Zum Beispiel: "QuickInfo = Price {C1} Href angegebenen" Websitename "=".  
  
 Eine Liste dieser Datenpunkteigenschaften lautet wie folgt: <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.AxisLabel%2A>, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.ToolTip%2A>, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Url%2A>, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Label%2A>, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A>, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendToolTip%2A> und <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.CustomProperties%2A>, wobei es sich um den Namen der benutzerdefinierten Eigenschaften.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt automatisch Reihendaten und bindet diese an die angegebene Datentabelle.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindTable">
      <MemberSignature Language="C#" Value="public void DataBindTable (System.Collections.IEnumerable dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindTable(class System.Collections.IEnumerable dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindTable(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindTable (dataSource As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindTable(System::Collections::IEnumerable ^ dataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="dataSource">Die Datenquelle, die ein beliebiges <see cref="T:System.Collections.IEnumerable" />-Objekt sein kann.</param>
        <summary>Erstellt automatisch Reihendaten und bindet diese an die angegebene Datentabelle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jede Spalte der Tabelle wird ein Y-Wert für eine Reihe, die eine Reihe pro Spalte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindTable">
      <MemberSignature Language="C#" Value="public void DataBindTable (System.Collections.IEnumerable dataSource, string xField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindTable(class System.Collections.IEnumerable dataSource, string xField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindTable(System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindTable (dataSource As IEnumerable, xField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindTable(System::Collections::IEnumerable ^ dataSource, System::String ^ xField);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">Die Datenquelle, die ein beliebiges <see cref="T:System.Collections.IEnumerable" />-Objekt sein kann.</param>
        <param name="xField">Der Name des für die Reihen-x-Werte verwendeten Felds.</param>
        <summary>Erstellt automatisch Reihendaten, bindet diese an die angegebene Datentabelle und füllt optional x-Werte auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jede Spalte der Tabelle wird ein Y-Wert für eine Reihe, die eine Reihe pro Spalte.  
  
 Die X-Wert Reihenfeld kann auch angegeben werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataManipulator">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataManipulator DataManipulator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.DataManipulator DataManipulator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.DataManipulator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataManipulator As DataManipulator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::DataManipulator ^ DataManipulator { System::Web::UI::DataVisualization::Charting::DataManipulator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataManipulator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.DataVisualization.Charting.DataManipulator" />-Objekt ab, das Methoden und Eigenschaften zum Behandeln von Daten bereitstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.DataManipulator" />-Objekt, das Methoden und Eigenschaften zum Behandeln von Daten bereitstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft zur Laufzeit auf:  
  
-   Kopieren Sie die Y-Werte.  
  
-   Filtern von Daten.  
  
-   Gruppieren von Daten.  
  
-   Ersetzen Sie fehlende Daten durch leere Punkte.  
  
-   Exportieren von Daten in einem <xref:System.Data.DataSet> Objekt.  
  
-   Sortieren von Daten.  
  
-   Eine finanzformel Berechnung auf Daten anwenden.  
  
 Finden Sie in der <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> klassenüberblick Weitere Details.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ChartDataSourceConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Datenquelle für das <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Objekt ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Object" />, das die Datenquelle für das <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Objekt darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Datenpunkte in einer Reihe gebunden werden können, um eine Datenquelle einem beliebigen Zeitpunkt die <xref:System.Web.UI.DataVisualization.Charting.Chart.DataSource%2A> Eigenschaft.  
  
 Um das Diagramm zum Binden an die Datenquelle zu erzwingen, rufen Sie die <xref:System.Web.UI.DataVisualization.Charting.Chart.DataBindTable%2A> Methode.  
  
 Im folgenden finden eine Liste von Objekten, die Sie als Datenquelle verwenden können:  
  
-   DataView  
  
-   Datenreader (SQL, OleDB)  
  
-   DataSet  
  
-   DataTable  
  
-   Bindungsquelle  
  
-   IDataSource  
  
-   Arrays  
  
-   Listen  
  
-   Alle aufzählbaren Objekte  
  
-   "SqlCommand" / OleDbCommand (DataSource-Datenbindung nur)  
  
-   SqlDataAdapter / OleDbDataAdapter (DataSource-Datenbindung nur)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DescriptionUrl">
      <MemberSignature Language="C#" Value="public string DescriptionUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DescriptionUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.DescriptionUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DescriptionUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DescriptionUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.UrlValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Speicherort für eine ausführliche Beschreibung der <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> ab oder legt diesen fest.</summary>
        <value>Ein <see langword="string" />-Wert, der die URL einer ausführlichen Beschreibung des Diagramms darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die von der <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Klasse verwendeten Ressourcen frei.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt das Objekt mithilfe der <see cref="T:System.IDisposable" />-Schnittstelle frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" />, um sowohl nicht verwaltete als auch verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt nicht verwaltete und optional verwaltete Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableViewState">
      <MemberSignature Language="C#" Value="public override bool EnableViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.EnableViewState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableViewState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das bestimmt, ob die Zustandsverwaltung aktiviert ist, oder legt dieses fest.</summary>
        <value>
          <see langword="true" />, wenn Zustandsverwaltung aktiviert ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Legen Sie diese Eigenschaft auf `true` zum Aktivieren der Verwaltung von Status für die <xref:System.Web.UI.DataVisualization.Charting.Chart> Steuerelement.  
  
 Richtet der Ansichtszustand, der gespeichert wird entweder durch die <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateContent%2A> oder <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> Eigenschaften.  
  
> [!NOTE]
>  Diese Eigenschaft muss vor dem Page_Load (Page_Init oder der Konstruktor funktioniert) festgelegt werden, oder er hat keine Auswirkungen.  
  
 Für Weitere Informationen finden Sie in der Dokumentation zu Visual Studio behandelt, die Ansichtszustand oder Zustandsverwaltung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schriftarteigenschaften des Steuerelements ab.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.FontInfo" />-Objekt, das die Schriftarteigenschaften des Steuerelements darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Textfarbe des <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelements ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Color" />-Wert, der die Textfarbe des Diagramms darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gilt nicht für diese Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatNumber">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs&gt; FormatNumber;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs&gt; FormatNumber" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.FormatNumber" />
      <MemberSignature Language="VB.NET" Value="Public Event FormatNumber As EventHandler(Of FormatNumberEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::DataVisualization::Charting::FormatNumberEventArgs ^&gt; ^ FormatNumber;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird aufgerufen, wenn ein numerischer Wert in eine Zeichenfolge konvertiert werden muss.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChartElementOutline">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartElementOutline GetChartElementOutline (object chartElement, System.Web.UI.DataVisualization.Charting.ChartElementType elementType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.ChartElementOutline GetChartElementOutline(object chartElement, valuetype System.Web.UI.DataVisualization.Charting.ChartElementType elementType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.GetChartElementOutline(System.Object,System.Web.UI.DataVisualization.Charting.ChartElementType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChartElementOutline (chartElement As Object, elementType As ChartElementType) As ChartElementOutline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::ChartElementOutline ^ GetChartElementOutline(System::Object ^ chartElement, System::Web::UI::DataVisualization::Charting::ChartElementType elementType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartElementOutline</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chartElement" Type="System.Object" />
        <Parameter Name="elementType" Type="System.Web.UI.DataVisualization.Charting.ChartElementType" />
      </Parameters>
      <Docs>
        <param name="chartElement">Das Diagrammelement.</param>
        <param name="elementType">Der Typ des Elements.</param>
        <summary>Gibt den Umriss des Diagrammelements zurück.</summary>
        <returns>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElementOutline" />-Objekt, das folgende Elemente enthält:  
  
-   Ein Array von Punkten in absoluten Koordinaten, die als Umrissmarker um das Diagrammelement verwendet werden können.  
  
-   Ein <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />-Objekt zum Zeichnen eines Umrisses um das Diagrammelement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die `chartElement` ist nicht Teil des Diagramms, oder die `elementType` kombiniert werden `chartElement`, im Ergebnis wird ein leeres Array vom Markerpunkte enthalten. Marker-Punkte werden im Uhrzeigersinn sortiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHtmlImageMap">
      <MemberSignature Language="C#" Value="public string GetHtmlImageMap (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetHtmlImageMap(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.GetHtmlImageMap(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHtmlImageMap (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetHtmlImageMap(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Imagemaptags.</param>
        <summary>Gibt die HTML-Imagemap des gegenwärtig gerenderten Diagramms zurück. Vor dem Aufruf dieser Methode muss eine der überladenen <c>SaveImage</c>-Methoden in der <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> aufgerufen werden.</summary>
        <returns>Ein <see langword="string" />-Wert, der die HTML-Imagemap darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Der Typ des angeforderten Diagrammdiensts.</param>
        <summary>Gibt den angeforderten Diagrammdienst zurück.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den Diensttyp darstellt, oder <see langword="null" />, wenn der Dienst nicht gefunden wird.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "300")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Höhe des gesamten Diagrammbilds in Pixel ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.Unit" />-Wert, der die Höhe in Pixel des gesamten Diagrammbilds darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Geben Sie den Wert nicht in Prozent (%) "oder" Point (pt). Andernfalls wird eine Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bestimmt ggf. das Diagrammelement, das sich an einem von der angegebenen x-Koordinate und y-Koordinate definierten Punkt befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode, um das Diagrammelement, sofern vorhanden, zu bestimmen, die an einem angegebenen Punkt befindet.  
  
 Diese Methode wird häufig verwendet, in einigen Ereignissen zur mausbezogenen – z. B. MouseDown, um zu bestimmen, welches Diagrammelement den Endbenutzer geklickt. Die X- und Y-Mauskoordinaten auf Basis der Ereignisparameter abgerufen werden dann verwendet, für die `x` und `y` Parameterwerte dieses Methodenaufrufs.  
  
 Die Eigenschaften des zurückgegebenen <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> Objekt kann dann verwendet werden, um zu bestimmen, welche Diagrammelement geklickt wurde; der <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> Objekt bietet auch eine Instanz des eigentlichen Objekts ausgewählt, sofern vorhanden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.HitTestResult HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::HitTestResult ^ HitTest(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Der x-Koordinatenwert des Punkts, auf den der Benutzer geklickt hat.</param>
        <param name="y">Der y-Koordinatenwert des Punkts, auf den der Benutzer geklickt hat.</param>
        <summary>Bestimmt ggf. das Diagrammelement, das sich an einem von der angegebenen x-Koordinate und y-Koordinate definierten Punkt befindet.</summary>
        <returns>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.HitTestResult" />-Objekt, das ggf. Informationen zum Diagrammelement am angegebenen Ort bereitstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode, um das Diagrammelement ggf. zu bestimmen, der sich an einem angegebenen Punkt befindet.  
  
> [!IMPORTANT]
>  Damit diese Methode ordnungsgemäß funktioniert die <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> Eigenschaft muss festgelegt werden, um `false`.  
  
 Diese Methode kann verwendet werden, mit der <xref:System.Web.UI.DataVisualization.Charting.Chart.Click> serverseitige-Ereignis, wenn Sie Drilldown implementieren. Es wird jedoch dringend empfohlen, dass Sie clientseitige Imagemaps für den Drilldown Bedienung verwenden.  
  
 Die Eigenschaften des zurückgegebenen <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> Objekt kann dann verwendet werden, um zu bestimmen, welche Diagrammelement geklickt wurde; der <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> Objekt bietet auch eine Instanz des eigentlichen Objekts ausgewählt, sofern vorhanden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.HitTestResult HitTest (int x, int y, bool ignoreTransparent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y, bool ignoreTransparent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer, ignoreTransparent As Boolean) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::HitTestResult ^ HitTest(int x, int y, bool ignoreTransparent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ignoreTransparent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="x">Der x-Koordinatenwert des Punkts, auf den der Benutzer geklickt hat.</param>
        <param name="y">Der y-Koordinatenwert des Punkts, auf den der Benutzer geklickt hat.</param>
        <param name="ignoreTransparent">Ein Flag, das bestimmt, ob transparente Elemente ignoriert werden.</param>
        <summary>Bestimmt ggf. das Diagrammelement, das sich an einem von der angegebenen x-Koordinate und y-Koordinate definierten Punkt befindet. Transparente Elemente können optional ignoriert werden.</summary>
        <returns>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.HitTestResult" />-Objekt, das ggf. Informationen zum Diagrammelement am angegebenen Ort bereitstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode, um das Diagrammelement ggf. zu bestimmen, der sich an einem angegebenen Punkt befindet.  
  
 Um transparente Elemente ignorieren möchten, legen die `ignoreTransparent` Parameter `true`.  
  
> [!IMPORTANT]
>  Damit diese Methode ordnungsgemäß funktioniert die <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> Eigenschaft muss festgelegt werden, um `false`.  
  
 Diese Methode kann verwendet werden, mit der <xref:System.Web.UI.DataVisualization.Charting.Chart.Click> serverseitige-Ereignis, wenn Sie Drilldown implementieren. Es wird jedoch dringend empfohlen, dass Sie clientseitige Imagemaps für den Drilldown Bedienung verwenden.  
  
 Die Eigenschaften des zurückgegebenen <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> Objekt kann dann verwendet werden, um zu bestimmen, welche Diagrammelement geklickt wurde; der <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> Objekt bietet auch eine Instanz des eigentlichen Objekts ausgewählt, sofern vorhanden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.HitTestResult HitTest (int x, int y, System.Web.UI.DataVisualization.Charting.ChartElementType requestedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y, valuetype System.Web.UI.DataVisualization.Charting.ChartElementType requestedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Web.UI.DataVisualization.Charting.ChartElementType)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer, requestedElement As ChartElementType) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::HitTestResult ^ HitTest(int x, int y, System::Web::UI::DataVisualization::Charting::ChartElementType requestedElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="requestedElement" Type="System.Web.UI.DataVisualization.Charting.ChartElementType" />
      </Parameters>
      <Docs>
        <param name="x">Der x-Koordinatenwert des Punkts, auf den der Benutzer geklickt hat.</param>
        <param name="y">Der y-Koordinatenwert des Punkts, auf den der Benutzer geklickt hat.</param>
        <param name="requestedElement">Ein Flag, das den zu überprüfenden Diagrammelementtyp bestimmt.</param>
        <summary>Bestimmt, ob sich ein Diagrammelement eines angegebenen Typs an einem von der angegebenen x- und y-Koordinate definierten Punkt befindet.</summary>
        <returns>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.HitTestResult" />-Objekt, das ggf. Informationen zu dem an der angegebenen Position gefundenen Diagrammelement bereitstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode, um zu bestimmen, ob ein Diagrammelement des angegebenen Typs an einem angegebenen Punkt befindet.  
  
> [!IMPORTANT]
>  Damit diese Methode ordnungsgemäß funktioniert die <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> Eigenschaft muss festgelegt werden, um `false`.  
  
 Diese Methode kann verwendet werden, mit der <xref:System.Web.UI.DataVisualization.Charting.Chart.Click> serverseitige-Ereignis, wenn Sie Drilldown implementieren. Es wird jedoch dringend empfohlen, dass Sie clientseitige Imagemaps für den Drilldown Bedienung verwenden.  
  
 Die Eigenschaften des zurückgegebenen <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> Objekt kann dann verwendet werden, um zu bestimmen, welche Diagrammelement geklickt wurde; der <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> Objekt bietet auch eine Instanz des eigentlichen Objekts ausgewählt, sofern vorhanden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.HitTestResult[] HitTest (int x, int y, bool ignoreTransparent, params System.Web.UI.DataVisualization.Charting.ChartElementType[] requestedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.HitTestResult[] HitTest(int32 x, int32 y, bool ignoreTransparent, valuetype System.Web.UI.DataVisualization.Charting.ChartElementType[] requestedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Boolean,System.Web.UI.DataVisualization.Charting.ChartElementType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer, ignoreTransparent As Boolean, ParamArray requestedElement As ChartElementType()) As HitTestResult()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Web::UI::DataVisualization::Charting::HitTestResult ^&gt; ^ HitTest(int x, int y, bool ignoreTransparent, ... cli::array &lt;System::Web::UI::DataVisualization::Charting::ChartElementType&gt; ^ requestedElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.HitTestResult[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ignoreTransparent" Type="System.Boolean" />
        <Parameter Name="requestedElement" Type="System.Web.UI.DataVisualization.Charting.ChartElementType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="x">Die X-Koordinate für den angegebenen Datenpunkt.</param>
        <param name="y">Die Y-Koordinate für den angegebenen Datenpunkt.</param>
        <param name="ignoreTransparent">Ein Flag, das angibt, dass transparente Elemente ignoriert werden sollen.</param>
        <param name="requestedElement">Ein Array aus <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElementType" />-Objekten, die die zu testenden Typen angeben, um das Ergebnis zu filtern. Wenn dies nicht angegeben wird, wird die Überprüfung von Elementtypen ignoriert und alle Elementtypen sind gültig.</param>
        <summary>Bestimmt, ob sich ein Diagrammelement, bei dem es sich um einen der angegebenen Typen handelt, an einem von den angegebenen X- und Y-Koordinaten definierten Punkt befindet.</summary>
        <returns>Ein Array aus <see cref="T:System.Web.UI.DataVisualization.Charting.HitTestResult" />-Objekten, die Informationen über das Diagrammelement bereitstellen, sofern ein solches Element an der angegebenen Position gefunden wird. Das Array enthält mindestens ein Element, das <see cref="F:System.Web.UI.DataVisualization.Charting.ChartElementType.Nothing" /> sein kann. Die Objekte im Ergebnis werden hinsichtlich der verschiedenen Steuerungsebenen von oben nach unten sortiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode, um das messgerätelement ggf. zu bestimmen, der sich an einem angegebenen Punkt befindet. Diese Methode wird häufig in einem mausbezogenen Ereignis, z. B. MouseDown, verwendet, um zu bestimmen, welches Element gauge der Endbenutzer geklickt hat. Die X- und Y-Mauskoordinaten auf Basis der Ereignisparameter abgerufen werden für die X- und Y-Parameterwerte dieses Methodenaufrufs verwendet.  
  
 Die Eigenschaften des zurückgegebenen <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> Objekt kann dann verwendet werden, um zu bestimmen, welche Diagrammelement geklickt wurde; der <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> Objekt bietet auch eine Instanz des eigentlichen Objekts ausgewählt, sofern vorhanden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageLocation">
      <MemberSignature Language="C#" Value="public string ImageLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageLocation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ImageLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("ChartPic_#SEQ(300,3)")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ImageValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Speicherort einer Bilddatei ab, wenn <see cref="F:System.Web.UI.DataVisualization.Charting.RenderType.ImageTag" />-Rendering ausgeführt wird, oder legt diesen fest.</summary>
        <value>Ein <see langword="string" />-Wert, der die URL des Speicherorts der Bilddatei auf dem Server darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft hat keine Auswirkung, wenn <xref:System.Web.UI.DataVisualization.Charting.Chart.ImageStorageMode%2A> festgelegt ist, um <xref:System.Web.UI.DataVisualization.Charting.ImageStorageMode.UseHttpHandler?displayProperty=nameWithType>.  
  
 Beim Rendern eines Diagrammbilds mithilfe der Image-Tag-Methode wird ein Diagrammbild generiert und dann auf den Datenträger auf dem Server in einem Format, das nach richtet gespeichert die <xref:System.Web.UI.DataVisualization.Charting.ChartImageType> Eigenschaft.  
  
 Die URL, in dem die Datei gespeichert ist, kann absolut oder relativ sein; die Dateierweiterung, die der Bilddatei richtet sich nach der <xref:System.Web.UI.DataVisualization.Charting.ChartImageType> Eigenschaft.  
  
 Die Bilddatei kann fest programmiert, dass immer ein Dateiname sein, oder können Sie die Zeichen "#", Benutzer-IDs (UIDs) oder eine angegebene Anzahl von eindeutig benannte Dateien, der sogenannten Round-Robin-Prinzip zu verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Images">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.NamedImagesCollection Images { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.NamedImagesCollection Images" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Images" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Images As NamedImagesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::NamedImagesCollection ^ Images { System::Web::UI::DataVisualization::Charting::NamedImagesCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.NamedImagesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.DataVisualization.Charting.NamedImagesCollection" />-Objekt ab, in dem <see cref="T:System.Web.UI.DataVisualization.Charting.NamedImage" />-Objekte für das Diagramm gespeichert werden.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.NamedImagesCollection" />-Objekt ab, in dem <see cref="T:System.Web.UI.DataVisualization.Charting.NamedImage" />-Objekte für das Diagramm gespeichert werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft hinzufügen <xref:System.Web.UI.DataVisualization.Charting.NamedImage> -Objekten, und entfernen <xref:System.Web.UI.DataVisualization.Charting.NamedImage> Objekte aus der <xref:System.Web.UI.DataVisualization.Charting.NamedImagesCollection> Objekt von der <xref:System.Web.UI.DataVisualization.Charting.Chart>. Diese Auflistungseigenschaft ist nur zur Laufzeit verfügbar.  
  
 Ein Bild – d. h. ein Objekt vom Typ abgeleitet <xref:System.Drawing.Image>, wie z. B. <xref:System.Drawing.Bitmap>, d. h. dynamisch erstellt – kann in dieser Auflistung gespeichert, und klicken Sie dann zu einem späteren Zeitpunkt auf alle Image-bezogene zugewiesen <xref:System.Web.UI.DataVisualization.Charting.Chart> -Eigenschaft, z. B. <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImage%2A>.  
  
 Wenn Sie Zuweisen einer <xref:System.Web.UI.DataVisualization.Charting.NamedImage> Objekt auf eine Image-bezogene-Eigenschaft in der <xref:System.Web.UI.DataVisualization.Charting.Chart> Klasse, verwenden Sie den Namen des der <xref:System.Web.UI.DataVisualization.Charting.NamedImage> -Objekt für die `string` Wert der Eigenschaft Image-bezogene.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageStorageMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ImageStorageMode ImageStorageMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ImageStorageMode ImageStorageMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ImageStorageMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageStorageMode As ImageStorageMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ImageStorageMode ImageStorageMode { System::Web::UI::DataVisualization::Charting::ImageStorageMode get(); void set(System::Web::UI::DataVisualization::Charting::ImageStorageMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ImageStorageMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Speichermodus für das Rendern eines Diagrammbilds ab, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ImageStorageMode" />-Enumerationswert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft definiert den Typ des Speichers rendert Diagrammbilder verwendet. Finden Sie unter <xref:System.Web.UI.DataVisualization.Charting.ImageStorageMode> für Optionen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageType ImageType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageType ImageType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ImageType" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageType As ChartImageType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageType ImageType { System::Web::UI::DataVisualization::Charting::ChartImageType get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft bei Verwendung von <see cref="F:System.Web.UI.DataVisualization.Charting.RenderType.ImageTag" />-Rendering den Typ des Bilds ab, in dem das Diagramm gerendert wird, bzw. legt ihn fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageType" />-Enumerationswert, der den Typ des Bilds angibt, in dem das Diagramm gerendert wird. Der Standardwert ist <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageType.Jpeg" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft bestimmt den Typ der Bilddatei, die für das Rendering verwendet wird.  
  
 Mögliche Dateiformate sind <xref:System.Web.UI.DataVisualization.Charting.ChartImageType.Bmp>, <xref:System.Web.UI.DataVisualization.Charting.ChartImageType.Emf>, <xref:System.Web.UI.DataVisualization.Charting.ChartImageType.Jpeg>, und <xref:System.Web.UI.DataVisualization.Charting.ChartImageType.Png>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMapAreaAttributesEncoded">
      <MemberSignature Language="C#" Value="public bool IsMapAreaAttributesEncoded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMapAreaAttributesEncoded" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.IsMapAreaAttributesEncoded" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMapAreaAttributesEncoded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMapAreaAttributesEncoded { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das bestimmt, ob Zuordnungsbereichsattribute codiert werden, oder legt dieses fest. Die Zuordnungsbereichsattribute können Daten aus verschiedenen Datenquellen laden. Das Chart-Steuerelements verhindert nicht, dass ein Endbenutzer nicht vertrauenswürdige Daten aus verschiedenen Datenquellen lädt. Aus diesem Grund wird empfohlen, die Daten zu überprüfen und manuell zu codieren.</summary>
        <value>
          <see langword="true" />, wenn Zuordnungsbereichsattribute codiert werden, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMapEnabled">
      <MemberSignature Language="C#" Value="public bool IsMapEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMapEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMapEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMapEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das bestimmt, ob clientseitige Imagemaps aktiviert sind, oder legt dieses fest.</summary>
        <value>
          <see langword="true" />, wenn Imagemaps aktiviert sind, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf `false` Imagemaps wird deaktiviert. Dies wird auch unter den folgenden Umständen auftreten:  
  
-   Die `Url`, `MapAreaAttributes`, `LabelMapAreaAttributes`, `LegendMapAreaAttributes` oder `ToolTip` eines Diagrammelements festgelegt wird.  
  
-   Ein <xref:System.Web.UI.DataVisualization.Charting.MapArea> Objekt wurde hinzugefügt, um die <xref:System.Web.UI.DataVisualization.Charting.MapAreasCollection> Objekt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSoftShadows">
      <MemberSignature Language="C#" Value="public bool IsSoftShadows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSoftShadows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.IsSoftShadows" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSoftShadows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSoftShadows { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das bestimmt, ob beim Zeichnen von Schatten ein glatter Farbverlauf angewendet wird, oder legt dieses fest.</summary>
        <value>
          <see langword="true" />, wenn Schatten mit Glättung gezeichnet werden, <see langword="false" />, wenn sie ohne Glättung gezeichnet werden. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Wert der `ShadowOffset` Eigenschaft für eine Reihe, einen Datenpunkt, Diagrammfläche oder eine Legende ist ungleich NULL, ein Schatten angewendet, die mit einer Farbe festlegen, indem ihre `ShadowColor` Eigenschaft.  
  
 Wenn der Wert von der <xref:System.Web.UI.DataVisualization.Charting.Chart.IsSoftShadows%2A> Eigenschaft ist `true`, smooth Farbverlauf gelten für die Schattenkopie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Legends">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendCollection Legends { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.LegendCollection Legends" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Legends" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Legends As LegendCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendCollection ^ Legends { System::Web::UI::DataVisualization::Charting::LegendCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.LegendCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.DataVisualization.Charting.LegendCollection" />-Objekt ab (bzw. legt es fest), in dem alle <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" />-Objekte gespeichert werden, die vom <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement verwendet werden.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.LegendCollection" />-Objekt, das verwendet wird, um alle <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" />-Objekte zu speichern.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Auflistungseigenschaft speichert alle <xref:System.Web.UI.DataVisualization.Charting.Legend> Objekte, die die <xref:System.Web.UI.DataVisualization.Charting.Chart> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadTemplate">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt eine Vorlage in das <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadTemplate">
      <MemberSignature Language="C#" Value="public void LoadTemplate (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadTemplate(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadTemplate(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Der Stream, aus dem geladen werden soll.</param>
        <summary>Lädt eine Vorlage aus einem Bildstream in das <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, wenn Sie eine Vorlage aus einem Stream, z. B. ein Speicherstream, Dateidatenstrom usw. laden möchten.  
  
 Stellen Sie sicher, dass die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> Eigenschaft `true` , und speichern Sie die Vorlage mit der <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> Methode.  
  
 Wenn eine geladene Vorlage zwei Datenreihen aufweist, werden die Darstellungseigenschaften der Reihe sequenziell für das Diagramm übernommen. Das heißt, die Darstellungseigenschaften der ersten Vorlage Reihen der ersten Reihe des Diagramms zugewiesen sind, die Darstellungseigenschaften der zweiten Vorlage Reihe gelten für die zweite Reihe des Diagramms, wird die erste Vorlage Reihe erneut verwendet, für die dritte die Reihe des Diagramms, und So weiter. Das gleiche gilt für Diagrammflächen und andere Sammlungen an, die Darstellungseigenschaften verfügen.  
  
 Vorlagen können verwendet werden, um benutzerdefinierte Paletten zu simulieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTemplate">
      <MemberSignature Language="C#" Value="public void LoadTemplate (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadTemplate(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadTemplate (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadTemplate(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Dateiname der Vorlage, die geladen werden soll. Sie müssen den vollständigen Pfad der Vorlage angeben, die vom Datenträger geladen werden soll.</param>
        <summary>Lädt eine Vorlage mit dem angegebenen Dateinamen vom Datenträger.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `name` Parameter muss einen vollständigen Pfad, z. B. C:\MyPic.jpg verwenden. Beachten Sie, dass Sie auch die Dateierweiterung angeben müssen.  
  
 Diese Methode lädt eine Vorlage vom Datenträger, der gespeichert wurde, mithilfe der <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> Methode.  
  
 Stellen Sie sicher, dass die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> Eigenschaft `true` , und speichern Sie die Vorlage mit der <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> Methode.  
  
 Wenn eine geladene Vorlage zwei Datenreihen aufweist, werden die Darstellungseigenschaften der Reihe sequenziell für das Diagramm übernommen. Das heißt, die Darstellungseigenschaften der ersten Vorlage Reihen der ersten Reihe des Diagramms zugewiesen sind, die Darstellungseigenschaften der zweiten Vorlage Reihe gelten für die zweite Reihe des Diagramms, wird die erste Vorlage Reihe erneut verwendet, für die dritte die Reihe des Diagramms, und So weiter. Das gleiche gilt für Diagrammflächen und andere Sammlungen an, die Darstellungseigenschaften verfügen.  
  
 Vorlagen können verwendet werden, um benutzerdefinierte Paletten zu simulieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein <see cref="T:System.Object" />, das den wiederherzustellenden Steuerelementzustand darstellt.</param>
        <summary>Stellt die Informationen über den Ansichtszustand aus einer früheren Seitenanforderung wieder her, die mit der <see cref="M:System.Web.UI.DataVisualization.Charting.Chart.SaveViewState" />-Methode gespeichert wurden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapAreas">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.MapAreasCollection MapAreas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.MapAreasCollection MapAreas" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.MapAreas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MapAreas As MapAreasCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::MapAreasCollection ^ MapAreas { System::Web::UI::DataVisualization::Charting::MapAreasCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.MapAreasCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.DataVisualization.Charting.MapAreasCollection" />-Objekt ab, in dem die Zuordnungsbereiche für das Diagramm gespeichert werden.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.MapAreasCollection" />-Objekt, in dem die Zuordnungsbereiche für das Diagramm gespeichert werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft zur Entwurfszeit oder zur Laufzeit benutzerdefinierte Zuordnungsbereiche auf das Diagramm hinzuzufügen. Benutzerdefinierte Zuordnungsbereiche haben im Gegensatz zu Zuordnungsbereiche, die ein Diagrammelement entsprechen, eine benutzerdefinierte Form und Koordinaten.  
  
 Um das Diagramm als Imagemap, verwenden die <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> Eigenschaft des Stamms <xref:System.Web.UI.DataVisualization.Charting.Chart> muss festgelegt werden, um `true`, dies ist die Standardeinstellung.  
  
 Wenn Sie das Diagramm als binärer Stream gerendert werden, muss eine spezielle Technik verwendet werden, um die clientseitige Imagemaps zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (System.Web.UI.WebControls.ImageMapEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.Web.UI.WebControls.ImageMapEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnClick(System.Web.UI.WebControls.ImageMapEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As ImageMapEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(System::Web::UI::WebControls::ImageMapEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ImageMapEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.ImageMapEventArgs" />-Objekt, das Daten für das Ereignis bereitstellt.</param>
        <summary>Ruft Delegaten auf, die bei dem <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" />-Ereignis registriert wurden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomize">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnCustomize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCustomize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCustomize(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.EventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
        <summary>Tritt ein, wenn alle Diagrammdaten zum Anpassen vor dem Zeichnen vorbereitet sind.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomizeLegend">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomizeLegend (System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomizeLegend(class System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnCustomizeLegend(System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCustomizeLegend (e As CustomizeLegendEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCustomizeLegend(System::Web::UI::DataVisualization::Charting::CustomizeLegendEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
        <summary>Tritt ein, wenn alle Diagrammlegendendaten zum Anpassen vor dem Zeichnen vorbereitet sind.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomizeMapAreas">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomizeMapAreas (System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomizeMapAreas(class System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnCustomizeMapAreas(System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCustomizeMapAreas (e As CustomizeMapAreasEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCustomizeMapAreas(System::Web::UI::DataVisualization::Charting::CustomizeMapAreasEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
        <summary>Tritt ein, wenn alle Diagrammdaten zum Anpassen vor dem Zeichnen vorbereitet sind.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFormatNumber">
      <MemberSignature Language="C#" Value="protected virtual void OnFormatNumber (object caller, System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormatNumber(object caller, class System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnFormatNumber(System.Object,System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormatNumber (caller As Object, e As FormatNumberEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormatNumber(System::Object ^ caller, System::Web::UI::DataVisualization::Charting::FormatNumberEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caller" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs" />
      </Parameters>
      <Docs>
        <param name="caller">Der Ereignisaufrufer. Dies kann ein Diagrammbildobjekt, ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />-Objekt oder ein <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" />-Objekt sein.</param>
        <param name="e">Ein <see cref="T:System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs" />-Objekt, das die Ereignisargumente enthält.</param>
        <summary>Tritt ein, wenn ein numerischer Wert in eine Zeichenfolge konvertiert werden muss.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPostPaint (System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostPaint(class System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnPostPaint(System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostPaint (e As ChartPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostPaint(System::Web::UI::DataVisualization::Charting::ChartPaintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs" />-Objekt, das für das Ereignis Daten bereitstellt.</param>
        <summary>Tritt ein, nachdem ein Diagrammelement gezeichnet wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrePaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPrePaint (System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrePaint(class System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnPrePaint(System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPrePaint (e As ChartPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPrePaint(System::Web::UI::DataVisualization::Charting::ChartPaintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs" />-Objekt, das für das Ereignis Daten bereitstellt.</param>
        <summary>Tritt ein, nachdem der Diagrammelementhintergrund gezeichnet wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, unmittelbar vor ein Diagrammelement gezeichnet werden und wird einmal für das Diagrammbild und einmal für jede ausgelöst der <xref:System.Web.UI.DataVisualization.Charting.ChartArea>, <xref:System.Web.UI.DataVisualization.Charting.Legend>, <xref:System.Web.UI.DataVisualization.Charting.Series> und <xref:System.Web.UI.DataVisualization.Charting.DataPoint> Objekte, die innerhalb des Diagrammbilds vorhanden sind. Beachten Sie, die für dieses Ereignis nicht ausgelöst wird <xref:System.Web.UI.DataVisualization.Charting.Series> und <xref:System.Web.UI.DataVisualization.Charting.DataPoint> Objekte für 3D-Diagramme.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.Paint(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paint(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="position" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">Das Grafikobjekt, in dem das Diagrammbild gezeichnet werden soll.</param>
        <param name="position">Die Position des Diagrammbilds in der Grafik.</param>
        <summary>Zeichnet das Diagrammbild in der Grafik.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartColorPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartColorPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Property Palette As ChartColorPalette" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartColorPalette Palette { System::Web::UI::DataVisualization::Charting::ChartColorPalette get(); void set(System::Web::UI::DataVisualization::Charting::ChartColorPalette value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ColorPaletteEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartColorPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Palette für das <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartColorPalette" />-Enumerationswert, der die zu verwendende Palette bestimmt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Palette wird verwendet, um die Datenelemente automatisch Farben zugewiesen, wenn beide der folgenden Bedingungen erfüllt sind:  
  
-   die Datenpunkte selbst keine Farben zugewiesen sind.  
  
-   die Datenreihe, die die Datenpunkte zu gehören muss nicht auch eine zugewiesene Farbe.  
  
 Wenn keine Reihe oder Datenpunktfarben explizit angegeben werden, hängen die verwendeten Farben den Diagrammtyp und den <xref:System.Web.UI.DataVisualization.Charting.Chart> Palette des Objekts oder der Palette einer zugeordneten Reihe, wenn ein solcher festgelegt wurde.  
  
> [!NOTE]
>  Wenn die `Palette` -Eigenschaft für beide die <xref:System.Web.UI.DataVisualization.Charting.Chart> und <xref:System.Web.UI.DataVisualization.Charting.Series> Objekte festgelegt ist, um <xref:System.Web.UI.DataVisualization.Charting.ChartColorPalette.None>, und keine Farbe zugewiesen wird, um die relevanten Datenreihen oder Datenpunkte, die Datenpunkte nicht gezeichnet werden und werden als "empty" Bereichen angezeigt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaletteCustomColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] PaletteCustomColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] PaletteCustomColors" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.PaletteCustomColors" />
      <MemberSignature Language="VB.NET" Value="Public Property PaletteCustomColors As Color()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Color&gt; ^ PaletteCustomColors { cli::array &lt;System::Drawing::Color&gt; ^ get(); void set(cli::array &lt;System::Drawing::Color&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ColorArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array benutzerdefinierter Palettenfarben ab oder legt dieses fest.</summary>
        <value>Ein Array von <see cref="T:System.Drawing.Color" />-Objekten, die den Satz der Farben darstellen, die für Reihen im Diagramm verwendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie mehr als 16 Farben benötigen, oder Sie eigene Farben für das Diagramm zuweisen möchten, müssen Sie eine benutzerdefinierte Palette definieren. Einer benutzerdefinierten Palette können Sie eigene Farben in der Reihenfolge an, dass Sie im Diagramm angezeigt werden sollen. Dieser Typ der Palette ist besonders hilfreich, wenn die Anzahl der Reihen im Diagramm zur Entwurfszeit bekannt ist.  
  
 Diese Eigenschaft hat keine Wirkung, wenn die <xref:System.Web.UI.DataVisualization.Charting.Chart.Palette%2A> Eigenschaft *nicht* festgelegt <xref:System.Web.UI.DataVisualization.Charting.ChartColorPalette.None>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">Ein <see cref="T:System.Collections.IEnumerable" />-Objekt, das die Datenquelle darstellt, die an das Diagrammsteuerelement gebunden ist.</param>
        <summary>Stellt die Datenbindung der angegebenen Datenquelle an das <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement her.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostPaint">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt; PostPaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt; PostPaint" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.PostPaint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostPaint As EventHandler(Of ChartPaintEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::DataVisualization::Charting::ChartPaintEventArgs ^&gt; ^ PostPaint;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem ein Diagrammelement gezeichnet wurde. Dieses Ereignis wird beispielsweise für die Elemente <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> und <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> ausgelöst.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrePaint">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt; PrePaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt; PrePaint" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.PrePaint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PrePaint As EventHandler(Of ChartPaintEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::DataVisualization::Charting::ChartPaintEventArgs ^&gt; ^ PrePaint;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem der Diagrammelementhintergrund gezeichnet wurde. Dieses Ereignis wird beispielsweise für die Elemente <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> und <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> ausgelöst.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ein Ereignisargument als <see langword="string" />-Objekt.</param>
        <summary>Löst Ereignisse für das <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement aus, wenn ein Formular an den Server zurückgesendet wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt.</param>
        <summary>Rendert das <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement in den angegebenen Ausgabeparameter.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.RenderType RenderType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.RenderType RenderType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.RenderType" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderType As RenderType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::RenderType RenderType { System::Web::UI::DataVisualization::Charting::RenderType get(); void set(System::Web::UI::DataVisualization::Charting::RenderType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.RenderType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Renderingverfahren zum Anzeigen eines Diagrammbilds ab oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.RenderType" />-Enumerationswert, der die Darstellungsmethode darstellt, mit der ein Diagrammbild anzuzeigen ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Liste beschreibt die drei Methoden, die in denen ein Diagrammbild gerendert werden kann:  
  
-   Die <xref:System.Web.UI.DataVisualization.Charting.RenderType.ImageTag> Rendertyp verursacht, dass eine temporäre Datei gespeichert werden, auf den Datenträger auf dem Server. Das Diagramm wird angezeigt, auf dem Client mithilfe einer \<IMG >-Tag entspricht, durch das SRC-Attribut festgelegt, durch die angegebene URL der <xref:System.Web.UI.DataVisualization.Charting.Chart.ImageLocation%2A> Eigenschaft.  
  
-   Wenn die <xref:System.Web.UI.DataVisualization.Charting.RenderType.BinaryStreaming> Rendern angegeben wird, es sind keine temporären Bilds-Dateien auf dem Server. Stattdessen das Diagrammbild wird als binärer Stream gesendet und wird angezeigt, mit einer \<IMG >-Tag mit seinem SRC-Attribut festlegen, um eine andere ASPX-Seite, die für das Generieren des Diagrammbilds zuständig ist.  
  
-   Ein Rendertyp von <xref:System.Web.UI.DataVisualization.Charting.RenderType.ImageMap> bewirkt, dass eine Imagemap erstellt, aber nicht in der Anzeige des tatsächlichen Diagrammbilds zu. Diese Option sollte nur durchgeführt werden, wenn eine Imagemap verwenden und die ist einen Rendertyp von <xref:System.Web.UI.DataVisualization.Charting.RenderType.BinaryStreaming>.  
  
 Beachten Sie, dass Sie steuern können, wie temporäre Dateien des quellstartabbilds gespeichert, die Datenträger mit der <xref:System.Web.UI.DataVisualization.Charting.Chart.ImageLocation%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAutoValues">
      <MemberSignature Language="C#" Value="public void ResetAutoValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAutoValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.ResetAutoValues" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAutoValues ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAutoValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt automatisch berechnete Diagrammeigenschaftswerte auf "Auto" zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mehrere Diagrammeigenschaften können auf "Auto" festgelegt werden – z. B. <xref:System.Web.UI.DataVisualization.Charting.Axis.Minimum%2A>; diese Eigenschaften werden vor dem Rendern des Diagramms berechnet. "Auto" liegt in der Regel als ein <xref:System.Double.NaN> Wert.  
  
 Rufen Sie diese Methode, um diese Eigenschaften von ihrem berechneten Wert auf "Auto" zurückgesetzt (<xref:System.Double.NaN>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::RightToLeft RightToLeft { System::Web::UI::DataVisualization::Charting::RightToLeft get(); void set(System::Web::UI::DataVisualization::Charting::RightToLeft value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement für Sprachen mit Leserichtung von rechts nach links (RTL) von rechts nach links zeichnen soll.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.RightToLeft" />-Enumerationswert, der angibt, ob das Steuerelement für Sprachen mit Leserichtung von rechts nach links (RTL) von rechts nach links zeichnen soll. Der Standardwert ist <see cref="T:System.Web.UI.DataVisualization.Charting.RightToLeft.No" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wirkt sich auf die Richtung der Legende Farbe Schlüssel.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveImage">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Speichert das Diagrammbild in einem Stream oder einer Datei.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (System.IO.Stream imageStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(class System.IO.Stream imageStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::IO::Stream ^ imageStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="imageStream">Der Bildstream.</param>
        <summary>Speichert das Diagrammbild im angegebenen Stream. Es werden die Eigenschaften <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.ImageType" />, <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Compression" /> und weitere <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelementeigenschaften verwendet.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (string imageFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(string imageFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::String ^ imageFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFileName">Der Bilddateiname.</param>
        <summary>Speichert das Diagrammbild in der angegebenen Datei. Es werden die Eigenschaften <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.ImageType" />, <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Compression" /> und weitere <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelementeigenschaften verwendet.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (System.IO.Stream imageStream, System.Web.UI.DataVisualization.Charting.ChartImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(class System.IO.Stream imageStream, valuetype System.Web.UI.DataVisualization.Charting.ChartImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.IO.Stream,System.Web.UI.DataVisualization.Charting.ChartImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageStream As Stream, format As ChartImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::IO::Stream ^ imageStream, System::Web::UI::DataVisualization::Charting::ChartImageFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageStream" Type="System.IO.Stream" />
        <Parameter Name="format" Type="System.Web.UI.DataVisualization.Charting.ChartImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageStream">Der Bildstream.</param>
        <param name="format">Das Diagrammbildformat.</param>
        <summary>Speichert das Diagrammbild im angegebenen Stream.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (string imageFileName, System.Web.UI.DataVisualization.Charting.ChartImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(string imageFileName, valuetype System.Web.UI.DataVisualization.Charting.ChartImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.String,System.Web.UI.DataVisualization.Charting.ChartImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageFileName As String, format As ChartImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::String ^ imageFileName, System::Web::UI::DataVisualization::Charting::ChartImageFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFileName" Type="System.String" />
        <Parameter Name="format" Type="System.Web.UI.DataVisualization.Charting.ChartImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageFileName">Der Bilddateiname.</param>
        <param name="format">Das Diagrammbildformat.</param>
        <summary>Speichert ein Diagrammbild in der Datei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert alle Ansichtszustandsänderungen des Serversteuerelements, die seit dem Zeitpunkt aufgetreten sind, zu dem die Seite an den Server zurückgesendet wurde.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den aktuellen Ansichtszustand für das Serversteuerelement darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveXml">
      <MemberSignature Language="C#" Value="public void SaveXml (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveXml(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveXml (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveXml(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der zu speichernden Datei.</param>
        <summary>Speichert den aktuellen Zustand des Diagramms in einer XML-Datei. Diese Methode wird hauptsächlich zu Unterstützungszwecken verwendet. Der ausführende Thread muss über die Berechtigung zum Schreiben in die Datei verfügen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serializer">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartSerializer Serializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.ChartSerializer Serializer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Serializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Serializer As ChartSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartSerializer ^ Serializer { System::Web::UI::DataVisualization::Charting::ChartSerializer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" />-Objekt ab, das für die Diagrammserialisierung verwendet wird.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" />-Objekt, das für die Diagrammserialisierung verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft zur Entwurfszeit oder zur Laufzeit, um das Diagramm zu serialisieren.  
  
 Für eine ausführliche Erläuterung der <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> Klasse, finden Sie in der Übersicht über die Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Series">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SeriesCollection Series { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.SeriesCollection Series" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Series" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Series As SeriesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SeriesCollection ^ Series { System::Web::UI::DataVisualization::Charting::SeriesCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.SeriesCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SeriesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.DataVisualization.Charting.SeriesCollection" />-Objekt ab, das <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Objekte enthält.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.SeriesCollection" />-Objekt, das <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Objekte enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Auflistungseigenschaft ermöglicht es Ihnen den Zugriff auf die <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> Klasse, welche Geschäfte <xref:System.Web.UI.DataVisualization.Charting.Series> Objekte und bietet auch Methoden und Eigenschaften, die zur Bearbeitung von dieser Sammlung.  
  
 <xref:System.Web.UI.DataVisualization.Charting.Series> -Objekte speichern <xref:System.Web.UI.DataVisualization.Charting.DataPoint> Objekte sowie Datenattribute.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressExceptions">
      <MemberSignature Language="C#" Value="public bool SuppressExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.SuppressExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressExceptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das bestimmt, ob nicht schwerwiegende Ausnahmen unterdrückt werden sollen, oder legt dieses fest.</summary>
        <value>
          <see langword="true" />, wenn nicht schwerwiegende Ausnahmen unterdrückt werden sollen, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie diese Eigenschaft, um festlegen `true`, nicht schwerwiegende Ausnahmen werden unterdrückt.  
  
 Wenn die <xref:System.Web.UI.DataVisualization.Charting.Chart> Steuerelement kann nicht ordnungsgemäß dargestellt werden soll im Diagramm mit den Daten und andere Einstellungen bereitgestellt, wird eine Ausnahme ausgelöst. Obwohl Ausnahmen anzeigen nützlich ist, während die Anwendung testen, sollten sie nicht angezeigt werden, wenn die Anwendung veröffentlicht wird.  
  
> [!NOTE]
>  Wenn diese Eigenschaft auf `true` kann schwerwiegende Probleme in den Anwendungsquellcode für Benutzer auszublenden. Diese Einstellung kann auch ein Diagrammbild zu generierenden verursachen, die Ihre Daten verfälscht werden können. Es wird dringend empfohlen, dass es sich bei diesem Modus werden nur in Releasebuilds verwendet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Die Ereignisargumente als ein <see langword="string" />-Objekt.</param>
        <summary>Löst Ereignisse für das <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement aus, wenn ein Formular an den Server zurückgesendet wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAntiAliasingQuality">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality TextAntiAliasingQuality { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality TextAntiAliasingQuality" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.TextAntiAliasingQuality" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAntiAliasingQuality As TextAntiAliasingQuality" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::TextAntiAliasingQuality TextAntiAliasingQuality { System::Web::UI::DataVisualization::Charting::TextAntiAliasingQuality get(); void set(System::Web::UI::DataVisualization::Charting::TextAntiAliasingQuality value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality), "High")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality" />-Typ ab, der beim Anwenden von Antialiasing auf Text verwendet werden soll, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality" />-Enumerationswert, der verwendet wird, wenn Antialiasing auf Text angewendet wird. Der Standardwert ist <see cref="F:System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality.High" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Antialiasing auf Text angewendet wird die <xref:System.Web.UI.DataVisualization.Charting.Chart> Steuerelement verwendet diese Eigenschaft zum Bestimmen des Typs von Text Anti-Aliasing anwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Titles">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.TitleCollection Titles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.TitleCollection Titles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Titles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Titles As TitleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::TitleCollection ^ Titles { System::Web::UI::DataVisualization::Charting::TitleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.TitleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.DataVisualization.Charting.TitleCollection" />-Objekt ab bzw. legt dieses fest, das alle <see cref="T:System.Web.UI.DataVisualization.Charting.Title" />-Objekte speichert, die vom <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement verwendet werden.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.TitleCollection" />-Objekt, das alle <see cref="T:System.Web.UI.DataVisualization.Charting.Title" />-Objekte speichert, die vom <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement verwendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Chart.Titles%2A> Eigenschaft speichert alle <xref:System.Web.UI.DataVisualization.Charting.Title> Objekte, die die <xref:System.Web.UI.DataVisualization.Charting.Chart> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateDataSource">
      <MemberSignature Language="C#" Value="protected override void ValidateDataSource (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateDataSource(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.ValidateDataSource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateDataSource (dataSource As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateDataSource(System::Object ^ dataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource">Das zu überprüfende Objekt.</param>
        <summary>Überprüft, ob ein datengebundenes Steuerelement das Objekt verwenden kann, an das es gebunden wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateContent">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationContents ViewStateContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationContents ViewStateContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ViewStateContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewStateContent As SerializationContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationContents ViewStateContent { System::Web::UI::DataVisualization::Charting::SerializationContents get(); void set(System::Web::UI::DataVisualization::Charting::SerializationContents value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationContents), "Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der den Ansichtszustand bestimmt, der auf dem Client beibehalten werden soll, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" />-Enumerationswert, der den Ansichtszustand darstellt. Der Standardwert ist <see cref="F:System.Web.UI.DataVisualization.Charting.SerializationContents.Default" />. Dieser gibt an, dass der Ansichtszustand aus allen Diagrammeigenschaften besteht.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft zum Festlegen des Status anzeigen, der die <xref:System.Web.UI.DataVisualization.Charting.Chart> Steuerelement.  
  
 Wenn Sie diese Eigenschaft festlegen, wird der Ansichtszustand automatisch vom gespeichert die <xref:System.Web.UI.DataVisualization.Charting.Chart> steuern und bei einem Postback automatisch geladen.  
  
 Verwenden Sie zur Erhöhung der Flexibilität der <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> -Eigenschaft für eine benutzerdefinierte Ansichtszustand.  
  
 Legen Sie zum Aktivieren der Verwaltung der <xref:System.Web.UI.DataVisualization.Charting.Chart.EnableViewState%2A> Eigenschaft `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateData">
      <MemberSignature Language="C#" Value="public string ViewStateData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewStateData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewStateData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewStateData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("ViewStateData has been deprecated. Please investigate Control.ViewState instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Ansichtszustand des Steuerelements ab oder legt diesen fest.</summary>
        <value>Ein <see langword="string" />-Wert, der den Ansichtszustand des Steuerelements darstellt, der in das Webdokument auf dem Client integriert ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der Angabe von Daten, auf dem Client beizubehalten, wird diese Eigenschaft ermöglicht mehr Flexibilität im Vergleich mit der <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateContent%2A> Eigenschaft.  
  
 Bei der Implementierung des benutzerdefinierten Ansichtszustands ist es obliegt dem Entwickler zum Festlegen des Anzeigestatus, und um den Ansichtszustand, wenn ein Postback nutzen tritt auf.  
  
 Die `Save` und `Load` Methoden die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> Objekt kann optional verwendet werden, sowie den Ansichtszustand festzulegende hinsichtlich der Ansichtszustand geladen werden, wenn ein Postback erfolgt. Ein Beispiel hierfür finden Sie im nachstehenden Beispielcode.  
  
 Bei der Angabe der Diagrammzustand gespeichert werden sollen, verwenden Sie zur Vereinfachung der <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateContent%2A> -Eigenschaft, die auf die Daten, die visuelle Darstellungseigenschaften an, oder beides festgelegt werden kann.  
  
 Legen Sie zum Aktivieren der Verwaltung der <xref:System.Web.UI.DataVisualization.Charting.Chart.EnableViewState%2A> Eigenschaft `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "300")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Breite des gesamten Diagrammbilds in Pixel ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.Unit" />-Wert, der die Breite in Pixel des gesamten Diagrammbilds darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Geben Sie den Wert nicht in Prozent (%) "oder" Point (pt). Andernfalls wird eine Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>