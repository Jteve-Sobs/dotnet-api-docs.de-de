<Type Name="Point3D" FullName="System.Web.UI.DataVisualization.Charting.Point3D">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7ced2b7c2bf7fc0c7eb79c805eb105da1ee055c" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55368770" /></Metadata><TypeSignature Language="C#" Value="public class Point3D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Point3D extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.Point3D" />
  <TypeSignature Language="VB.NET" Value="Public Class Point3D" />
  <TypeSignature Language="C++ CLI" Value="public ref class Point3D" />
  <TypeSignature Language="F#" Value="type Point3D = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die Koordinaten eines dreidimensionalen Datenpunkts (3D-Datenpunkts) dar. Diese Klasse wird verwendet, wenn benutzerdefinierte Zeichnungen für 3D-Diagramme ausgeführt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Point3D> Klasse stellt die Koordinaten eines Punkts 3D Daten dar.  
  
 Jeder in benutzerdefinierten 3D-Zeichnung – was erfolgt mithilfe von GDI + - verwendete Punkt von relativen X-, Y- und Z (3D) Koordinaten in relative X transformiert werden muss und Koordinaten Y (2D), mit der <xref:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints%2A> Methode. Durch Aufrufen von <xref:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints%2A>, die X- und Y-Werte, der die <xref:System.Web.UI.DataVisualization.Charting.Point3D> Objekte werden geändert, sodass sie die 3-dimensionalen Raum enthalten. Die neue X und Y Punkte können dann für GDI +-Methodenaufrufe - der Z-Wert wird dann ignoriert - verwendet werden, nach dem in absolute Pixelkoordinaten mit geändert wird die <xref:System.Web.UI.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> Methode.  
  
 Beachten Sie, die möglicherweise die Z-Koordinate, die kleiner als 0 (null) (befindet sich hinter einer Diagrammfläche) oder größer als 100 (befindet sich vor einer Diagrammfläche).  
  
 Um 3D-Diagramme zu aktivieren und mit ihren Formaten zu arbeiten, verwenden Sie die <xref:System.Web.UI.DataVisualization.Charting.ChartArea.Area3DStyle%2A> Eigenschaft. Die <xref:System.Web.UI.DataVisualization.Charting.Point3D> Klasse wird nicht für 3D-Formate verwendet.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataVisualization.Charting.Point3D" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point3D ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Point3D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point3D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataVisualization.Charting.Point3D" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point3D (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 x, float32 y, float32 z) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Point3D.#ctor(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Single, y As Single, z As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point3D(float x, float y, float z);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.Point3D : single * single * single -&gt; System.Web.UI.DataVisualization.Charting.Point3D" Usage="new System.Web.UI.DataVisualization.Charting.Point3D (x, y, z)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">Die x-Koordinate des 3D-Punkts.</param>
        <param name="y">Die y-Koordinate des 3D-Punkts.</param>
        <param name="z">Die z-Koordinate, die die Tiefe des 3D-Punkts darstellt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationPathPoint" />-Klasse mit der angegebenen x-, y- und z-Koordinate.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointF">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF PointF { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF PointF" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Point3D.PointF" />
      <MemberSignature Language="VB.NET" Value="Public Property PointF As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::PointF PointF { System::Drawing::PointF get(); void set(System::Drawing::PointF value); };" />
      <MemberSignature Language="F#" Value="member this.PointF : System.Drawing.PointF with get, set" Usage="System.Web.UI.DataVisualization.Charting.Point3D.PointF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see cref="T:System.Drawing.PointF" />-Struktur ab, in der die x- und y-Koordinate eines 3D-Punkts gespeichert werden, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.PointF" />-Struktur, die x- und y-Koordinaten eines 3D- Punkts darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Muss einem beliebigen Punkt in einer benutzerdefinierten 3D-Zeichnung – was erfolgt mithilfe von GDI + - verwendet transformiert werden von X-, Y- und Z (3D)-Koordinaten in X- und Y (2D)-Koordinaten mithilfe der <xref:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints%2A> Methode. Diese Methode akzeptiert ein Array von <xref:System.Web.UI.DataVisualization.Charting.Point3D> Objekte als deren einziger Parameter. Durch Aufrufen von <xref:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints%2A>, die X- und Y-Eigenschaftswerte werden entsprechend der 3-dimensionalen Raum geändert.  
  
 Diese neue X- und Y-Koordinaten werden dann in absoluten Koordinaten konvertiert mithilfe einer Methode wie z. B. die <xref:System.Web.UI.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> Methode. Nach der Konvertierung von der Koordinaten der <xref:System.Web.UI.DataVisualization.Charting.Point3D.PointF%2A> Eigenschaft der einzelnen Point3D-Objekte kann verwendet werden, für eine GDI +-Methode, die annehmen einer <xref:System.Drawing.PointF> -Objekt als Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public float X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 X" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Point3D.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float X { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.X : single with get, set" Usage="System.Web.UI.DataVisualization.Charting.Point3D.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die x-Koordinate eines 3D-Punkts ab oder legt diese fest.</summary>
        <value>Ein <see langword="float" />, das die x-Koordinate eines 3D-Punkts darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Muss einem beliebigen Punkt in einer benutzerdefinierten 3D-Zeichnung – was erfolgt mithilfe von GDI + - verwendet transformiert werden von X-, Y- und Z (3D)-Koordinaten in X- und Y (2D)-Koordinaten mithilfe der <xref:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints%2A> Methode. Diese Methode akzeptiert ein Array von Point3D-Objekten als deren einziger Parameter ein. Durch Aufrufen der <xref:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints%2A> -Methode, die X- und Y-Eigenschaftswerte werden entsprechend der 3-dimensionalen Raum geändert.  
  
 Diese neue X- und Y-Koordinaten werden dann in absoluten Koordinaten mithilfe der <xref:System.Web.UI.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> Methode. Sie werden dann für GDI +-Methodenaufrufe verwendet werden.  
  
 Eine Relative X-Koordinate aus einen Achsenwert abgerufen werden kann, durch den Aufruf der <xref:System.Web.UI.DataVisualization.Charting.Axis.ValueToPosition%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public float Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Point3D.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Y { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Y : single with get, set" Usage="System.Web.UI.DataVisualization.Charting.Point3D.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die y-Koordinate eines 3D-Punkts ab oder legt diese fest.</summary>
        <value>Ein <see langword="float" />-Wert, der die y-Koordinate eines 3D-Punkts darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Muss einem beliebigen Punkt in einer benutzerdefinierten 3D-Zeichnung – was erfolgt mithilfe von GDI + - verwendet transformiert werden von X-, Y- und Z (3D)-Koordinaten in X- und Y (2D)-Koordinaten mithilfe der <xref:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints%2A> Methode. Diese Methode akzeptiert ein Array von Point3D-Objekten als deren einziger Parameter ein. Durch Aufrufen der <xref:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints%2A> -Methode, die X- und Y-Eigenschaftswerte werden entsprechend der 3-dimensionalen Raum geändert.  
  
 Diese neue X- und Y-Koordinaten werden dann in absolute Koordinaten konvertiert mithilfe der <xref:System.Web.UI.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> Methode. Sie werden dann für GDI +-Methodenaufrufe verwendet werden.  
  
 Eine relative Y-Koordinate erhalten Sie von einer Achse Wert mittels der <xref:System.Web.UI.DataVisualization.Charting.Axis.ValueToPosition%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Z">
      <MemberSignature Language="C#" Value="public float Z { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Z" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Point3D.Z" />
      <MemberSignature Language="VB.NET" Value="Public Property Z As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Z { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Z : single with get, set" Usage="System.Web.UI.DataVisualization.Charting.Point3D.Z" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die z-Koordinate eines 3D-Punkts ab oder legt diese fest.</summary>
        <value>Die z-Koordinate eines 3D-Punkts, die als Prozentsatz der Tiefe des relevanten Diagrammbereichs angegeben wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Z-Eigenschaft wird immer als Prozentsatz der Tiefe der relevanten Diagrammbereichs ausgedrückt. Für 3D-Diagramme Z-Koordinaten sind relativ, und weisen den Wert 0 für die Rückwand des Diagrammbereichs, und einen Wert von 100 für die Front-Lasche des Diagrammbereichs.  
  
 **Beachten Sie** diese Z-Eigenschaft ist möglicherweise kleiner als 0 (null) (befindet sich hinter einer Diagrammfläche) oder größer als 100 (befindet sich vor einer Diagrammfläche).  
  
 Muss einem beliebigen Punkt in einer benutzerdefinierten 3D-Zeichnung – was erfolgt mithilfe von GDI + - verwendet transformiert werden von X-, Y- und Z (3D)-Koordinaten in X- und Y (2D)-Koordinaten mithilfe der <xref:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints%2A> Methode. Diese Methode akzeptiert ein Array von Point3D-Objekten als deren einziger Parameter ein. Durch Aufrufen der <xref:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints%2A> -Methode, die X- und Y-Eigenschaftswerte werden entsprechend der 3-dimensionalen Raum geändert.  
  
 Diese neue X- und Y-Koordinaten werden dann in absolute Koordinaten konvertiert mithilfe der <xref:System.Web.UI.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> Methode. Sie werden dann für GDI +-Methodenaufrufe verwendet werden.  
  
 Relative Z-Koordinaten für die Serie abgerufen werden können, mithilfe der <xref:System.Web.UI.DataVisualization.Charting.ChartArea.GetSeriesDepth%2A> und <xref:System.Web.UI.DataVisualization.Charting.ChartArea.GetSeriesZPosition%2A> Methoden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>