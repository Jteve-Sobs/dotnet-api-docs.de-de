<Type Name="ChartSerializer" FullName="System.Web.UI.DataVisualization.Charting.ChartSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5dc6f9864c992b43270b3679a6662105f78e679c" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86665238" /></Metadata><TypeSignature Language="C#" Value="public class ChartSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class ChartSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChartSerializer" />
  <TypeSignature Language="F#" Value="type ChartSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("Format")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("Format")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Aktiviert die Serialisierung des <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelements.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse wird als- <xref:System.Web.UI.DataVisualization.Charting.Chart.Serializer%2A> Eigenschaft der Stamm Klasse verfügbar gemacht <xref:System.Web.UI.DataVisualization.Charting.Chart> .  
  
 Die Serialisierung speichert den Status des Diagramms und bietet außerdem die Option zum Laden der serialisierten Daten in das Diagramm. Alle Diagramm Eigenschaften können persistent gespeichert werden, einschließlich der Daten des Diagramms. Außerdem können alle für die Serialisierung markierten Diagramm Eigenschaften zurückgesetzt werden.  
  
 Diese Klasse kann optional beim Verwalten des benutzerdefinierten Ansichts Zustands verwendet werden. Eine der `Load` Methoden kann verwendet werden, um den Ansichts Zustand zu laden, und eine der `Save` Methoden kann verwendet werden, wenn der Ansichts Zustand festgelegt wird.  
  
 Die XML-oder Binär Formate können verwendet werden, um serialisierte Daten zu speichern. XML wird standardmäßig verwendet, aber Sie können das Format mit der- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> Eigenschaft ändern.  
  
 Diagrammeigenschaften werden gespeichert und geladen, mit der `Save` und `Load` Methoden bzw. Beachten Sie, dass nur Eigenschaften mit nicht standardmäßigen Werten gespeichert werden. Daten können mit einem Datei-, Stream <xref:System.IO.TextWriter> <xref:System.IO.TextReader> -,-, <xref:System.Xml.XmlWriter> -und- <xref:System.Xml.XmlReader> Objekt gespeichert und/oder geladen werden. Beim Speichern und/oder Laden von Daten mit einem Objekt, das von der- <xref:System.IO.TextReader> Klasse, der- <xref:System.IO.TextWriter> Klasse oder der-Klasse abgeleitet <xref:System.Xml.XmlReader> <xref:System.Xml.XmlWriter> ist, muss das Format der Daten XML lauten.  
  
 In der folgenden Liste werden drei Techniken beschrieben, von Basic bis erweitert, die zum Definieren von serialisierbaren Daten verwendet werden. Beachten Sie, dass es auch möglich ist, nicht serialisierbare Daten zu definieren. Dieses Verfahren wird im nächsten Absatz beschrieben.  
  
-   Serialisieren <xref:System.Web.UI.DataVisualization.Charting.Chart> Sie mithilfe der `Save` -Methode und der- `Load` Methode, ohne dass Sie serialisierbare Eigenschaften angeben. Alle Diagramm Eigenschaften mit nicht standardmäßigen Werten, die Diagramm Daten enthalten, werden serialisiert.  
  
-   Serialisieren Sie die Diagramm Eigenschaften, die von der-Eigenschaft angegeben werden <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> . Die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaft gruppiert die zu serialisierenden Diagramm Eigenschaften in Kategorien wie z. b. Daten, Darstellung usw. Beachten Sie, dass die Namen von <xref:System.Web.UI.DataVisualization.Charting.ChartArea> -und- <xref:System.Web.UI.DataVisualization.Charting.Series> Objekten automatisch serialisiert werden. die serialisierten Daten werden dann beim Laden auf vorhandene Diagramm Flächen und-Reihen angewendet.  
  
> [!IMPORTANT]
>  Die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaft wird vom-Steuerelement intern <xref:System.Web.UI.DataVisualization.Charting.Chart> als-Eigenschaft implementiert. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>  
  
-   Die Serialisierung von Diagramm Eigenschaften, die von der-Eigenschaft angegeben werden <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> . Dies ist eine durch Trennzeichen getrennte Liste aller Diagramm Eigenschaften, die serialisierbar sind. Wenn diese Eigenschaft auf einen expliziten Wert festgelegt ist, liegt es in der Verantwortung des Entwicklers, alle Eigenschaften anzugeben, die gespeichert werden sollen. Anders ausgedrückt: anders als bei der- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaft werden die Namen von Diagramm Bereichen und Reihen nicht automatisch persistent gespeichert. Die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> -Eigenschaft und die-Eigenschaft <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> können auch in Verbindung verwendet werden. Stellen Sie jedoch sicher, dass <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> bei der Festlegung mit sich selbst verkettet wird. andernfalls werden die von der-Eigenschaft angegebenen Diagramm Eigenschaften <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> überschrieben.  
  
 Verwenden Sie die-Eigenschaft, um zu verhindern, dass bestimmte Eigenschaften serialisiert werden <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> . Wenn eine Eigenschaft als serialisierbar und nicht serialisierbar festgelegt wird, was bei der Verwendung von Platzhaltern häufig der Fall ist, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> hat die Eigenschaft Vorrang. Die Rangfolge hängt jedoch auch davon ab, wie viele Platzhalter verwendet wurden, als eine Eigenschaft angegeben wurde.  
  
 Standardmäßig werden serialisierbare Eigenschaften auf ihre Standardwerte zurückgesetzt, bevor Sie geladen werden. Dieses Verhalten kann mithilfe der-Eigenschaft geändert werden <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> . Die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset%2A> Methode kann auch verwendet werden, um Diagramm Eigenschaften explizit auf ihre Standardwerte zurückzusetzen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationContents Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationContents Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As SerializationContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationContents Content { System::Web::UI::DataVisualization::Charting::SerializationContents get(); void set(System::Web::UI::DataVisualization::Charting::SerializationContents value); };" />
      <MemberSignature Language="F#" Value="member this.Content : System.Web.UI.DataVisualization.Charting.SerializationContents with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationContents), "Default")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationContents), "Default")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ des zu serialisierenden Diagramminhalts ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" />-Enumerationswert, der den Diagramminhalt darstellt, der während des Ladens, Speicherns oder Zurücksetzens serialisiert werden soll. Standardmäßig werden alle nicht standardmäßigen Diagrammeigenschaften, einschließlich der Daten, beibehalten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden alle Diagramm Eigenschaften serialisiert, wenn eine der `Save` -und- `Load` Methoden aufgerufen wird. Verwenden Sie die-Eigenschaft, um mehr Kontrolle darüber zu erhalten, was serialisiert wird <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> . Beachten Sie, dass die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaften und auch zusammen mit der-Eigenschaft verwendet werden können <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> .  
  
 > [!IMPORTANT]
 > Die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> -Eigenschaft bestimmt die Typen von Diagramm Merkmalen, z. b. "Darstellung", die serialisiert werden sollen, und wird intern als- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaft implementiert. Dies bedeutet, dass das Festlegen der <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> -Eigenschaft und das anschließende Festlegen der-Eigenschaft dazu <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> führt, dass der-Eigenschafts Wert außer Kraft gesetzt wird <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , sofern nicht <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> verkettet ist. Ein Beispiel für diese Prozedur finden Sie im folgenden Beispielcode.  
  
 Wenn Sie die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> -Eigenschaft festlegen, werden alle <xref:System.Web.UI.DataVisualization.Charting.ChartArea> -und- <xref:System.Web.UI.DataVisualization.Charting.Series> Objektnamen automatisch serialisiert. Dies bedeutet, dass die serialisierten Daten, die sich auf Diagramm Bereiche und Reihen beziehen, beim Laden auf vorhandene Objekte angewendet werden.  
  
 Das Festlegen dieser Eigenschaft wirkt sich auf alle Vorgänge zum Laden, speichern und zurücksetzen aus.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationFormat Format" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationFormat Format { System::Web::UI::DataVisualization::Charting::SerializationFormat get(); void set(System::Web::UI::DataVisualization::Charting::SerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.Format : System.Web.UI.DataVisualization.Charting.SerializationFormat with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationFormat), "Xml")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationFormat), "Xml")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das beim Serialisieren des Diagramms verwendete Format ab oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationFormat" />-Enumerationswert, der das Format der serialisierten Daten darstellt. Der Standardwert ist XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Daten können entweder in einem XML-oder Binärformat serialisiert werden. Das Binärformat ist kompakt und benötigt weniger Speicher als XML. XML ist jedoch ein Textformat, das für Menschen lesbar ist.  
  
 Wenn Sie serialisierte Daten speichern oder laden, muss das Format "XML" lauten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentString">
      <MemberSignature Language="C#" Value="protected string GetContentString (System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetContentString(valuetype System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetContentString (content As SerializationContents, serializable As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetContentString(System::Web::UI::DataVisualization::Charting::SerializationContents content, bool serializable);" />
      <MemberSignature Language="F#" Value="member this.GetContentString : System.Web.UI.DataVisualization.Charting.SerializationContents * bool -&gt; string" Usage="chartSerializer.GetContentString (content, serializable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Web.UI.DataVisualization.Charting.SerializationContents" />
        <Parameter Name="serializable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="content">Der serialisierbare Inhalt.</param>
        <param name="serializable"><see langword="true" />, um eine serialisierbare Zeichenfolge abzurufen; <see langword="false" />, um eine nicht serialisierbare Zeichenfolge abzurufen.</param>
        <summary>Gibt je nach dem spezifischen Flagwert serialisierbare oder nicht serialisierbare Klassen- und/oder Eigenschaftennamen zurück.</summary>
        <returns>Ein <see langword="string" />-Wert, der die serialisierbaren oder nicht serialisierbaren Klassen- und/oder Eigenschaftennamen darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResetWhenLoading">
      <MemberSignature Language="C#" Value="public bool IsResetWhenLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResetWhenLoading" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property IsResetWhenLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResetWhenLoading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsResetWhenLoading : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob Objekteigenschaften vor dem Laden auf Standardwerte zurückgesetzt werden, oder legt dieses fest.</summary>
        <value><see langword="true" />, wenn Objekteigenschaften vor dem Laden auf Standardwerte zurückgesetzt werden, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemplateMode">
      <MemberSignature Language="C#" Value="public bool IsTemplateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemplateMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTemplateMode : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob das Diagrammserialisierungsprogramm im Modus für die Vorlagenerstellung ausgeführt wird, oder legt dieses fest.</summary>
        <value><see langword="true" />, wenn das Diagrammserialisierungsprogramm im Modus für die Vorlagenerstellung ausgeführt wird, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknownAttributeIgnored">
      <MemberSignature Language="C#" Value="public bool IsUnknownAttributeIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknownAttributeIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnknownAttributeIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknownAttributeIgnored { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknownAttributeIgnored : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob unbekannte XML-Eigenschaften und -Elemente ignoriert werden, ohne eine Ausnahme auszulösen, oder legt dieses fest.</summary>
        <value><see langword="true" />, wenn unbekannte XML-Eigenschaften und -Elemente ignoriert werden, ohne eine Ausnahme auszulösen, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt serialisierte Daten in das <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.Stream -&gt; unit" Usage="chartSerializer.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Ein von der <see cref="T:System.IO.Stream" />-Klasse abgeleitetes Objekt, z. B ein <see cref="T:System.IO.MemoryStream" />-Objekt.</param>
        <summary>Lädt serialisierte Daten aus einem Objekt, das von der <see cref="T:System.IO.Stream" />-Klasse abgeleitet wurde, in das Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ruft diese Methode auf, um serialisierte Daten in das-Steuerelement zu laden <xref:System.Web.UI.DataVisualization.Charting.Chart> .  
  
 Wenn ein Ladevorgang ausgeführt wird, werden serialisierbare Eigenschaften standardmäßig zuerst auf ihre Standardwerte zurückgesetzt, bevor Sie auf die beibehaltenen Werte festgelegt werden, wenn Sie gespeichert werden. Um dieses Verhalten zu ändern, verwenden Sie die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> Eigenschaft.  
  
 Standardmäßig werden alle serialisierten Diagramm Eigenschaften geladen. Um bestimmte serialisierte Eigenschaften zu laden, legen Sie die-Eigenschaft oder die-Eigenschaft <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> vor dem Laden der Daten fest.  
  
 Beachten Sie, dass beim Speichern von Daten mit einer `Save` Methode nur die Eigenschaften serialisiert werden, die nicht standardmäßige Werte aufweisen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.TextReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">Ein Reader, z. B. <see cref="T:System.IO.StringReader" />, der von der abstrakten <see cref="T:System.IO.TextReader" />-Klasse abgeleitet wurde.</param>
        <summary>Lädt serialisierte Daten aus einem Readerobjekt, das von der <see cref="T:System.IO.TextReader" />-Klasse abgeleitet wurde, in das Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ruft diese Methode auf, um serialisierte Daten in das-Steuerelement zu laden <xref:System.Web.UI.DataVisualization.Charting.Chart> .  
  
 Wenn ein Ladevorgang ausgeführt wird, werden die serialisierbaren Eigenschaften standardmäßig auf ihre Standardwerte zurückgesetzt, bevor Sie auf die beibehaltenen Werte festgelegt werden, wenn Sie gespeichert werden. Um dieses Verhalten zu ändern, verwenden Sie die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> Eigenschaft.  
  
 Standardmäßig werden alle serialisierten Diagramm Eigenschaften geladen. Durch Festlegen der <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaften, oder <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> kann ein bestimmter Satz von Eigenschaften geladen werden.  
  
 Wenn Sie diese Definition verwenden, beachten Sie, dass das Format, das von der-Eigenschaft festgelegt wird <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> , XML lauten muss.  
  
 Wenn die- <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> Eigenschaft des- <xref:System.Web.UI.DataVisualization.Charting.Chart> Steuer Elements verwendet wird, um den Zustand beizubehalten, kann diese Methode verwendet werden, um die serialisierten Daten, die vom Client zurückgesendet werden, an das-Steuerelement zu laden <xref:System.Web.UI.DataVisualization.Charting.Chart> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="chartSerializer.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Der relative oder absolute Pfad der zum Speichern der serialisierten Daten verwendeten Datei. Bei Verwendung eines relativen Pfads ist dieser relativ zum aktuellen Verzeichnis.</param>
        <summary>Lädt auf dem Datenträger gespeicherte serialisierte Daten in das <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ruft diese Methode auf, um serialisierte Daten in das-Steuerelement zu laden <xref:System.Web.UI.DataVisualization.Charting.Chart> .  
  
 Wenn ein Ladevorgang ausgeführt wird, werden serialisierbare Eigenschaften standardmäßig zuerst auf ihre Standardwerte zurückgesetzt, bevor Sie auf die beibehaltenen Werte festgelegt werden, wenn Sie gespeichert werden. Um dieses Verhalten zu ändern, verwenden Sie die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> Eigenschaft.  
  
 Standardmäßig werden alle serialisierten Diagramm Eigenschaften geladen. Um bestimmte serialisierte Eigenschaften zu laden, legen Sie die-Eigenschaft oder die-Eigenschaft <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> vor dem Laden der Daten fest.  
  
 Beachten Sie, dass beim Speichern von Daten mit einer `Save` Methode nur die Eigenschaften serialisiert werden, die nicht standardmäßige Werte aufweisen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Ein Objekt, aus dem die beibehaltenen Daten gelesen werden sollen. Das Objekt wird von der <see cref="T:System.Xml.XmlReader" />-Klasse abgeleitet, und es kann ein .NET Framework-Objekt oder ein benutzerdefiniertes Objekt sein.</param>
        <summary>Lädt serialisierte Daten aus einem Objekt, das von der <see cref="T:System.Xml.XmlReader" />-Klasse abgeleitet wurde, in das Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ruft diese Methode auf, um serialisierte Daten in das-Steuerelement zu laden <xref:System.Web.UI.DataVisualization.Charting.Chart> .  
  
 Wenn ein Ladevorgang ausgeführt wird, werden serialisierbare Eigenschaften standardmäßig auf ihre Standardwerte zurückgesetzt, bevor Sie auf die beibehaltenen Werte festgelegt werden, wenn Sie gespeichert werden. Um dieses Verhalten zu ändern, verwenden Sie die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> Eigenschaft.  
  
 Standardmäßig werden alle serialisierten Diagramm Eigenschaften geladen. Wenn Sie die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaften, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> oder festlegen <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> , kann ein bestimmter Satz von Eigenschaften geladen werden.  
  
 Wenn Sie diese Definition verwenden, muss das Format "XML" lauten. Sie kann mit der-Eigenschaft geändert werden <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> .  
  
 Wenn Sie mit Textdateien im XML-Format arbeiten, verwenden Sie zur Vereinfachung stattdessen die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NonSerializableContent">
      <MemberSignature Language="C#" Value="public string NonSerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NonSerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property NonSerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NonSerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NonSerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Diagrammeigenschaften ab, die nicht serialisiert werden, oder legt diese fest.</summary>
        <value>Ein durch Trennzeichen getrennter <see langword="string" />-Ausdruck, der die Diagrammeigenschaften darstellt, die nicht serialisiert werden. Die Syntax lautet "Klasse.Eigenschaft[,Klasse.Eigenschaft]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden alle Diagramm Eigenschaften serialisiert, wenn die `Save` -Methode und die- `Load` Methode aufgerufen werden. Sie können die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> -Eigenschaft verwenden, um die zu serialisierenden Diagramm Merkmale zusammen mit den <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> -und- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaften einzuschränken.  
  
 Diese Eigenschaft bestimmt, welche Diagramm Merkmale nicht serialisiert werden. Platzhalter können im Zeichen folgen Ausdruck auf die gleiche Weise wie die-Eigenschaft verwendet werden <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> . Wenn Sie z. b. alle Diagramm `BackColor` Eigenschaften von der Serialisierung ausschließen möchten, legen Sie diese Eigenschaft auf "*" fest. BackColor ".  
  
 Manchmal kann eine Eigenschaft so festgelegt werden, dass Sie serialisiert und nicht serialisiert wird. Dies ist bei Verwendung von Platzhaltern üblich. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>Im Vergleich zum Ausdruck hat der Ausdruck eine niedrigere Priorität <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> . Beachten Sie jedoch, dass Zeichen folgen Ausdrücken, die Platzhalter verwenden, weniger Gewicht eingeräumt wird. Wenn beispielsweise die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaft auf "*" festgelegt ist. BackColor "und die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaft auf festgelegt ist <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A> , werden alle B- `ackColor` Eigenschaften mit Ausnahme von <xref:System.Web.UI.DataVisualization.Charting.ChartArea> Objekten serialisiert.  
  
 Wenn die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaft festgelegt wurde, hängt die Priorität davon ab, wie viele Platzhalter im <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Ausdruck verwendet werden. Wenn Sie z. b <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> . die-Eigenschaft auf festlegen, <xref:System.Web.UI.DataVisualization.Charting.SerializationContents.Appearance> wird die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaft mit dem Wert "angezeigt \* . Zurück \* "-Ausdruck. , Wenn die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaft auf festgelegt ist \* . Zurück \* ", werden alle `Back*` Diagramm Eigenschaften, wie z `BackColor` . b `BackGradient` ., usw., trotzdem serialisiert. Dies liegt daran, dass der- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschafts Wert im Vergleich zur-Eigenschaft eine höhere Priorität hat <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> .  
  
 Diese Eigenschaft wirkt sich auf alle Vorgänge zum Speichern, laden und zurücksetzen aus.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="chartSerializer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt alle für die Serialisierung markierten Diagrammeigenschaften zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig setzt diese Methode alle Diagramm Eigenschaften auf ihre Standardwerte zurück.  
  
 Verwenden Sie die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaften, und, um die Diagramm Eigenschaften einzuschränken, die auf ihre Standardwerte zurückgesetzt werden <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> .  
  
 Beachten Sie, dass diese Methode auch automatisch aufgerufen wird, wenn eine `Load` Methode verwendet wird und die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> Eigenschaft auf festgelegt ist `true` .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Speichert Diagrammeigenschaften, deren Werte vom Standard abweichen. Alle Diagrammeigenschaften, u. a. Daten, können serialisiert werden.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream -&gt; unit" Usage="chartSerializer.Save stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Ein von der <see cref="T:System.IO.Stream" />-Klasse abgeleitetes Objekt, z. B. <see cref="T:System.IO.MemoryStream" />, das zum Speichern von Diagrammeigenschaften verwendet wird.</param>
        <summary>Speichert Diagrammdaten und -eigenschaften mit nicht standardmäßigen Werten in einem von der <see cref="T:System.IO.Stream" />-Klasse abgeleiteten Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden alle Diagramm Eigenschaften mit nicht standardmäßigen Werten, die Datenpunkte enthalten, serialisiert, wenn diese Methode aufgerufen wird. Um die zu serialisierenden Diagramm Merkmale zu steuern, verwenden Sie die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaften, und <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> .  
  
 Wenn diese Methode verwendet wird, um Darstellungs Eigenschaften als Vorlage zu speichern, stellen Sie sicher, dass die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> Eigenschaft des- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> Objekts zuerst auf festgelegt wird, `true` bevor Sie diese Methode aufrufen.  
  
 Die Serialisierung eines Diagramms als Vorlage erfolgt anders als bei der nicht-Vorlagen-Serialisierung. die vorlagenserialisierung konzentriert sich auf Darstellungs Eigenschaften.  
  
 Wenn eine Vorlage serialisiert wird, kann die- <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> Methode zum Laden der Vorlage verwendet werden, um die Darstellungs Eigenschaften für ein Diagramm bereitzustellen.  
  
 Vorlagen können verwendet werden, um benutzerdefinierte Paletten zu simulieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein von der <see cref="T:System.IO.TextWriter" />-Klasse abgeleitetes Objekt, z. B. <see cref="T:System.IO.StringWriter" />, das zum Speichern von Diagrammeigenschaften verwendet wird.</param>
        <summary>Speichert Diagrammdaten und -eigenschaften mit nicht standardmäßigen Werten im angegebenen Objekt, das von der <see cref="T:System.IO.TextWriter" />-Klasse abgeleitet wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden alle Diagramm Eigenschaften mit nicht standardmäßigen Werten, die Datenpunkte enthalten, serialisiert, wenn diese Methode aufgerufen wird. Verwenden Sie die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaften, und, um zu steuern, welche Diagramm Merkmale serialisiert werden <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> .  
  
 Wenn Sie diese Definition verwenden, muss das Format "XML" lauten. das Format kann mit der-Eigenschaft festgelegt werden <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> .  
  
 Wenn die- <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> Eigenschaft des- <xref:System.Web.UI.DataVisualization.Charting.Chart> Steuer Elements verwendet wird, um den Zustand beizubehalten, kann diese Methode zum Speichern der serialisierten Daten in einem von abgeleiteten Objekt verwendet werden <xref:System.IO.TextWriter> , das dann verwendet wird, um die Daten in die-Eigenschaft zu schreiben <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="chartSerializer.Save fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Der relative oder absolute Pfad der zum Speichern der serialisierten Daten verwendeten Datei. Beachten Sie, dass bei Verwendung eines relativen Pfads dieser relativ zum aktuellen Verzeichnis ist.</param>
        <summary>Speichert Diagrammdaten und -eigenschaften mit nicht standardmäßigen Werten in der angegebenen Datei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden alle Diagramm Eigenschaften mit nicht standardmäßigen Werten, die Datenpunkte enthalten, serialisiert, wenn diese Methode aufgerufen wird. Um die zu serialisierenden Diagramm Merkmale zu steuern, verwenden Sie die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaften, und <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> .  
  
 Standardmäßig werden Daten in einem XML-Format gespeichert. Um die Daten in einem Binärformat zu speichern, verwenden Sie die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> Eigenschaft.  
  
 Beachten Sie, dass Schreibberechtigungen für das Verzeichnis aktiviert werden müssen, in dem die Datei gespeichert ist. Standardmäßig handelt es sich hierbei um den bin-Ordner der Anwendung.  
  
 Wenn diese Methode verwendet wird, um Darstellungs Eigenschaften als Vorlage zu speichern, stellen Sie sicher, dass die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> Eigenschaft zuerst auf festgelegt wird, `true` bevor Sie diese Methode aufrufen.  
  
 Die Serialisierung eines Diagramms als Vorlage verläuft anders als die nicht-Vorlagen-Serialisierung, hauptsächlich weil die vorlagenserialisierung auf Darstellungs Eigenschaften konzentriert.  
  
 Wenn eine Vorlage serialisiert wird, kann die- <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> Methode zum Laden der Vorlage verwendet werden, um die Darstellungs Eigenschaften für ein Diagramm bereitzustellen.  
  
 Vorlagen können verwendet werden, um benutzerdefinierte Paletten zu simulieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Xml.XmlWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein von <see cref="T:System.Xml.XmlWriter" /> abgeleitetes Objekt zum Speichern von <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />-Eigenschaften.</param>
        <summary>Speichert Diagrammdaten und -eigenschaften mit nicht standardmäßigen Werten im angegebenen Objekt, das von der <see cref="T:System.Xml.XmlWriter" />-Klasse abgeleitet wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden alle Diagramm Eigenschaften mit nicht standardmäßigen Werten, die Datenpunkte enthalten, serialisiert, wenn diese Methode aufgerufen wird. Verwenden Sie die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaften, und, um zu steuern, welche Diagramm Merkmale serialisiert werden <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> .  
  
 Wenn Sie diese Definition verwenden, muss das Format "XML" lauten. das Format kann mit der-Eigenschaft geändert werden <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> .  
  
 Wenn Sie mit Textdateien im XML-Format arbeiten, verwenden Sie zur Vereinfachung stattdessen die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializableContent">
      <MemberSignature Language="C#" Value="public string SerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Diagrammeigenschaften ab, die serialisiert werden können, oder legt diese fest.</summary>
        <value>Ein durch Trennzeichen getrennter <see langword="string" />-Ausdruck, der die zu serialisierenden Diagrammeigenschaften darstellt. Die Syntax lautet "Klasse.Eigenschaft[,Klasse.Eigenschaft]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden alle Diagramm Eigenschaften serialisiert, wenn die `Save` -Methode und die- `Load` Methode aufgerufen werden. Sie können die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> -Eigenschaft verwenden, um die zu serialisierenden Diagramm Merkmale zusammen mit den <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> -und- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaften einzuschränken.  
  
 Die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaft bestimmt, welche Diagramm Merkmale serialisiert werden. Platzhalter können im Zeichen folgen Ausdruck auf die gleiche Weise wie die-Eigenschaft verwendet werden <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> . Wenn Sie z. b. alle Diagramm Eigenschaften serialisieren möchten `BackColor` , legen Sie diese Eigenschaft auf "*" fest. BackColor ".  
  
 Wenn <xref:System.Web.UI.DataVisualization.Charting.ChartArea> die untergeordneten Eigenschaften und/oder <xref:System.Web.UI.DataVisualization.Charting.Series> angegeben werden, müssen die Namen aller <xref:System.Web.UI.DataVisualization.Charting.ChartArea> -und- <xref:System.Web.UI.DataVisualization.Charting.Series> Objekte ebenfalls angegeben werden, damit die beibehaltenen Daten auf vorhandene-Objekte und-Objekte angewendet werden können, d <xref:System.Web.UI.DataVisualization.Charting.ChartArea> . h <xref:System.Web.UI.DataVisualization.Charting.Series> ., Sie müssen die Ausdrücke "Series.Name" und "ChartArea.Name" angeben. Ein Beispiel für diese Prozedur finden Sie im folgenden Beispielcode. Ebenso muss, wenn mehrere Diagramm Flächen verwendet werden, auch die- <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> Eigenschaft aller geplotteten Diagramme <xref:System.Web.UI.DataVisualization.Charting.Series> gespeichert werden.  
  
 Manchmal kann eine Eigenschaft so festgelegt werden, dass Sie serialisiert und nicht serialisiert wird. Dies ist bei Verwendung von Platzhaltern üblich. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>Im Vergleich zum Ausdruck hat der Ausdruck eine niedrigere Priorität <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> . Beachten Sie jedoch, dass Zeichen folgen Ausdrücken, die Platzhalter verwenden, weniger Gewicht eingeräumt wird. Wenn beispielsweise die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaft auf "*" festgelegt ist. BackColor "und die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaft auf festgelegt ist <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A> , werden alle B- `ackColor` Eigenschaften mit Ausnahme von <xref:System.Web.UI.DataVisualization.Charting.ChartArea> Objekten serialisiert.  
  
 Wenn Sie die- <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaft festlegen, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> wird die-Eigenschaft intern festgelegt. Wenn die <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaft bereits festgelegt ist, aber eine andere Eigenschaft serialisiert werden muss, stellen Sie sicher, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> dass die Eigenschaft beim Angeben dieser zusätzlichen Eigenschaft verkettet wird. Ein Beispiel für diese Prozedur finden Sie im folgenden Beispielcode.  
  
 Diese Eigenschaft wirkt sich auf alle Vorgänge zum Speichern, laden und zurücksetzen aus.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
