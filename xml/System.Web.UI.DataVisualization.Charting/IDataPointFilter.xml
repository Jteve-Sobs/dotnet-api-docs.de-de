<Type Name="IDataPointFilter" FullName="System.Web.UI.DataVisualization.Charting.IDataPointFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="85a3589181e4fccd22593afef8051166f66ddd01" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70660662" /></Metadata><TypeSignature Language="C#" Value="public interface IDataPointFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataPointFilter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.IDataPointFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataPointFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataPointFilter" />
  <TypeSignature Language="F#" Value="type IDataPointFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Macht die <see cref="M:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.Series,System.Int32)" />-Methode verfügbar, die die benutzerdefinierte Filterung von <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Daten ermöglicht.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> -Schnittstelle <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> macht die-Methode verfügbar, die einen bestimmten Datenpunkt innerhalb einer Reihe `Boolean` verwendet und einen Wert zurückgibt, der bestimmt, ob der Datenpunkt gefiltert wird.  
  
 So führen Sie benutzerdefinierte Filterung aus:  
  
-   Leiten Sie eine neue oder vorhandene Klasse von dieser Schnittstelle ab.  
  
-   Überschreiben <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> Sie die Methode, um die benutzerdefinierte Filter Logik bereitzustellen.  
  
-   Um den Filter Vorgang zu initiieren, müssen Sie eine `Filter` der Methoden in <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> der-Klasse aufrufen <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> , die ein-Objekt als ersten Parameter annimmt.  
  
 Beispiel Quell Code finden Sie unter der <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> -Methode.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FilterDataPoint">
      <MemberSignature Language="C#" Value="public bool FilterDataPoint (System.Web.UI.DataVisualization.Charting.DataPoint point, System.Web.UI.DataVisualization.Charting.Series series, int pointIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterDataPoint(class System.Web.UI.DataVisualization.Charting.DataPoint point, class System.Web.UI.DataVisualization.Charting.Series series, int32 pointIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.Series,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterDataPoint(System::Web::UI::DataVisualization::Charting::DataPoint ^ point, System::Web::UI::DataVisualization::Charting::Series ^ series, int pointIndex);" />
      <MemberSignature Language="F#" Value="abstract member FilterDataPoint : System.Web.UI.DataVisualization.Charting.DataPoint * System.Web.UI.DataVisualization.Charting.Series * int -&gt; bool" Usage="iDataPointFilter.FilterDataPoint (point, series, pointIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Web.UI.DataVisualization.Charting.DataPoint" />
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="pointIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="point">Das zu filternde <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />-Objekt.</param>
        <param name="series">Das <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Objekt, zu dem der Datenpunkt gehört.</param>
        <param name="pointIndex">Der Index des Datenpunkts, der dessen Position in der Reihe bestimmt.</param>
        <summary>Bestimmt, ob ein bestimmter Datenpunkt in der Reihe gefiltert wird.</summary>
        <returns><see langword="true" />, wenn der Datenpunkt entfernt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sollte für jeden Datenpunkt in einer Reihe aufgerufen werden und gibt einen `Boolean` Wert zurück, der angibt, ob ein Datenpunkt gefiltert werden soll.  
  
 Zum Bereitstellen einer benutzerdefinierten Filterung leiten Sie eine neue oder vorhandene <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> Klasse von der-Schnittstelle ab, und implementieren Sie dann diese Methode. Geben Sie benutzerdefinierte Kriterien für die Logik `true` an `false` , und geben Sie dann die zu filternden Datenpunkte an. Nachdem diese Methode implementiert wurde, verwenden Sie eine der `Filter` Methoden Definitionen in der <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> -Klasse, die ein <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> -Objekt als Parameter zum Durchführen der Filterung annimmt.  
  
 Gefilterte Punkte werden standardmäßig aus einer Reihe entfernt. Sie können auch als leere Punkte angezeigt werden, indem Sie den Wert der <xref:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A> -Eigenschaft `true`auf festlegen.  
  
 Gefilterte Punkte können auch als gefiltert gekennzeichnet werden, wenn Sie nicht mit den Filterkriterien übereinstimmen, <xref:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A> die durch den-Wert bestimmt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
