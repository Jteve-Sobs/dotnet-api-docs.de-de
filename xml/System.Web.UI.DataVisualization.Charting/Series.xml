<Type Name="Series" FullName="System.Web.UI.DataVisualization.Charting.Series">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79fe21a66c78bf047e57f37007edc1b43bff5d2c" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55308109" /></Metadata><TypeSignature Language="C#" Value="public class Series : System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Series extends System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.Series" />
  <TypeSignature Language="VB.NET" Value="Public Class Series&#xA;Inherits DataPointCustomProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class Series : System::Web::UI::DataVisualization::Charting::DataPointCustomProperties" />
  <TypeSignature Language="F#" Value="type Series = class&#xA;    inherit DataPointCustomProperties" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.DataPointCustomProperties</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Points")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Speichert Datenpunkte und Reihenattribute.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Web.UI.DataVisualization.Charting.Series> Objekt stellt eine Datenreihe und befindet sich in der <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> Klasse.  
  
 Ein <xref:System.Web.UI.DataVisualization.Charting.Series> speichert <xref:System.Web.UI.DataVisualization.Charting.DataPoint> -Objekte mithilfe der <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection> Klasse. Sie speichert auch die Attribute der Datenreihe. Beispielsweise hat eine Datenreihe ein Farbattribut, Background-Image-Attribut, gradient Background-Attribut und So weiter.  
  
 Die <xref:System.Web.UI.DataVisualization.Charting.DataPoint> Objekte, die auf eine Reihe gehören verfügen außerdem über eigene Attribute. Wenn das gleiche Attribut für einen Datenpunkt, und der Reihe, zu denen er gehört, festgelegt ist, hat das Attribut Punkt in der Regel Vorrang.  
  
 Eine Reihe nicht unbedingt in einem Diagramm gezeichnet; Sie können Datenpunktwerte speichern, die verwendet werden, um eine Berechnung durchzuführen, von der einer anderen Reihe erstellt und dann gezeichnet wird. Z. B. möglicherweise Serie A, die gezeichnet wird, das Ergebnis der summierten Reihe B und C der Reihe von Datenpunkten, obwohl keine dieser Reihe gezeichnet wird. Zum Zeichnen eine <xref:System.Web.UI.DataVisualization.Charting.Series> -Objekt, das <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> Eigenschaft muss festgelegt werden, auf den Namen des der <xref:System.Web.UI.DataVisualization.Charting.ChartArea> Objekt zum Zeichnen der Reihe verwendet wird.  
  
 Wenn eine Reihe erstellt wird, wird es automatisch zugewiesen die <xref:System.Web.UI.DataVisualization.Charting.ChartArea> Objekt mit dem Namen "Default", oder klicken Sie auf die erste verfügbare Diagrammfläche in der diagrammflächenauflistung, wenn das Objekt "Default" nicht vorhanden ist.  
  
 Legen Sie zum Deaktivieren der Anzeige einer Reihe der <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> Eigenschaft, um eine Zeichenfolge der Länge 0 (null).  
  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.ChartType%2A> Eigenschaft bestimmt den Typ des Diagramms, das verwendet wird, um diese Reihe zu zeichnen, wenn es gezeichnet wird.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Series();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Series(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.Series : string -&gt; System.Web.UI.DataVisualization.Charting.Series" Usage="new System.Web.UI.DataVisualization.Charting.Series name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des zu erstellenden <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Objekts. Dies muss ein eindeutiger Name sein, andernfalls wird eine Ausnahme ausgelöst.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Klasse mit dem angegebenen Reihennamen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor kann verwendet werden, erstellen Sie eine neue Instanz der dem <xref:System.Web.UI.DataVisualization.Charting.Series> Klasse.  
  
> [!NOTE]
>  Diese Serie kann nur zum Speichern von <xref:System.Web.UI.DataVisualization.Charting.DataPoint> Objekte, die einen Y-Wert aufweisen. Wenn ein Datenpunkt, die mehrere Y-Werte in dieser Reihe hinzugefügt wird, wird eine Ausnahme ausgelöst werden.  
  
 Verwenden Sie zum Erstellen einer Reihe zur Laufzeit die <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection.Add%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series (string name, int yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, yValues As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Series(System::String ^ name, int yValues);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.Series : string * int -&gt; System.Web.UI.DataVisualization.Charting.Series" Usage="new System.Web.UI.DataVisualization.Charting.Series (name, yValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="yValues" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des zu erstellenden <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Objekts.</param>
        <param name="yValues">Die maximale Anzahl von y-Werten, die für die <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />-Objekte zulässig sind, die zu dieser Reihe gehören.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Klasse mit dem angegebenen Namen und der angegebenen maximalen Anzahl von y-Werten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor erstellt und initialisiert eine neue Instanz der dem <xref:System.Web.UI.DataVisualization.Charting.Series> Klasse.  
  
> [!IMPORTANT]
>  Dieser Serie wird nur in der Lage, zum Speichern von <xref:System.Web.UI.DataVisualization.Charting.DataPoint> Objekte, die keine weitere Y-Werte als die maximale Anzahl festlegen, indem die `yValues` Parameter. Wenn Sie einen Datenpunkt, der mehrere Y-Werte als maximum festgelegt wurde hinzufügen, wird eine Ausnahme ausgelöst werden.  
  
 Zum Erstellen einer <xref:System.Web.UI.DataVisualization.Charting.Series> Objekt zur Laufzeit die `Add` und `Insert` Methoden der Auflistungseigenschaft Reihe können auch verwendet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisLabel">
      <MemberSignature Language="C#" Value="public override string AxisLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AxisLabel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.AxisLabel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AxisLabel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AxisLabel { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AxisLabel : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.AxisLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Achsenbezeichnungstext für die Reihe ab oder legt diesen fest.</summary>
        <value>Ein <see langword="string" />-Wert. Der Standardwert ist eine Zeichenfolge der Länge 0 (null).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartArea">
      <MemberSignature Language="C#" Value="public string ChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChartArea : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.ChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.SeriesAreaNameConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ggf. den Namen des zum Zeichnen der Datenreihe verwendeten <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />-Objekts ab oder legt diesen fest.</summary>
        <value>Ein <see langword="string" />-Wert, der ein zum Zeichnen der Reihe verwendetes <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />-Objekt darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Reihe zur Entwurfszeit und zur Laufzeit hinzugefügt wird, wird es automatisch zugewiesen zu "Standard" <xref:System.Web.UI.DataVisualization.Charting.ChartArea> Objekt oder der ersten verfügbaren Diagrammfläche in das <xref:System.Web.UI.DataVisualization.Charting.ChartAreaCollection> ist "Default" nicht vorhanden.  
  
 Legen Sie diese Eigenschaft auf eine Zeichenfolge der Länge 0 (null), wenn Sie nicht möchten, dass die Reihe gezeichnet werden sollen.  
  
   
  
## Examples  
  
```vb  
' Create a new legend and associate three series with the legend.  
Public Sub CreateSecondLegend()  
    ' Attach the first series to a chart area.  
    Chart1.Series["Series1"].ChartArea = "Chart Area 1";  
  
    ' Attach the second series to a chart area.  
    Chart1.Series["Series2"].ChartArea = "Chart Area 2";  
  
End Sub 'CreateSecondLegend  
```  
  
```csharp  
// Create a new legend and associate three series with the legend.  
public void CreateSecondLegend()  
{  
     // Attach the first series to a chart area.  
     Chart1.Series["Series1"].ChartArea = "Chart Area 1";  
  
     // Attach the second series to a chart area.  
     Chart1.Series["Series2"].ChartArea = "Chart Area 2";  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SeriesChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SeriesChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ChartType" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartType As SeriesChartType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SeriesChartType ChartType { System::Web::UI::DataVisualization::Charting::SeriesChartType get(); void set(System::Web::UI::DataVisualization::Charting::SeriesChartType value); };" />
      <MemberSignature Language="F#" Value="member this.ChartType : System.Web.UI.DataVisualization.Charting.SeriesChartType with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.ChartType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartTypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartTypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SeriesChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Diagrammtyp einer Reihe ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.SeriesChartType" />-Enumerationswert, der den Typ des Diagramms angibt, mit dem die Reihe dargestellt wird. Der Standardwert ist <see cref="F:System.Web.UI.DataVisualization.Charting.SeriesChartType.Column" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft bestimmt den Typ des der <xref:System.Web.UI.DataVisualization.Charting.Series> Objekts ist der Wert ist Groß-/Kleinschreibung beachtet. Finden Sie unter den <xref:System.Web.UI.DataVisualization.Charting.SeriesChartType> Enumeration eine Liste aller möglichen Diagrammtypen für eine Reihe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartTypeName">
      <MemberSignature Language="C#" Value="public string ChartTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChartTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ChartTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChartTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChartTypeName : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.ChartTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("Column")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartTypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ChartTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartTypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des zum Zeichnen der Reihe verwendeten Diagrammtyps ab oder legt diesen fest.</summary>
        <value>Ein <see langword="string" />-Wert, der den Namen des Diagrammtyps darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="series.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die von <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyPointStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPointCustomProperties EmptyPointStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.DataPointCustomProperties EmptyPointStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.EmptyPointStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property EmptyPointStyle As DataPointCustomProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::DataPointCustomProperties ^ EmptyPointStyle { System::Web::UI::DataVisualization::Charting::DataPointCustomProperties ^ get(); void set(System::Web::UI::DataVisualization::Charting::DataPointCustomProperties ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyPointStyle : System.Web.UI.DataVisualization.Charting.DataPointCustomProperties with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.EmptyPointStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPointCustomProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zeichnungsstil von Punkten ab, die als leer markiert sind, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.EmptyPointStyle%2A> Eigenschaft bestimmt den Zeichnungsstil von Punkten, die als leer ist, z. B. in die Rahmenfarbe, klicken Sie im Marker-Images, Background-Farbe oder Bilder und So weiter.  
  
 Bestimmte Eigenschaften gelten nur für bestimmte Diagrammtypen. Z. B. die <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImage%2A> Eigenschaft gilt nicht für Liniendiagramme, aber es gilt für ein Flächendiagramm.  
  
 Verwenden, um ein Bild anzuzeigen, die einen leeren Punkt gibt an, die <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerImage%2A> und <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerStyle%2A> Eigenschaften, und nicht die <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackImage%2A> Eigenschaft.  
  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.AxisLabel%2A> Eigenschaft bestimmt die achsenbezeichnung für leere Punkte. Beachten Sie, dass der achsenbezeichnung für gestapelte Diagrammtypen nach richtet die <xref:System.Web.UI.DataVisualization.Charting.Series.AxisLabel%2A> Eigenschaft der ersten gezeichnete Reihe, die diese Eigenschaft festgelegt ist.  
  
 Datenpunkte können manuell als leer markiert werden, durch Festlegen der <xref:System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty%2A> Eigenschaft `true`. Sie können auch eine der der `InsertEmptyPoints` Methoden in der <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> Klasse kann verwendet werden, um fehlende Daten überprüfen und fügt leere Punkte, wenn ein Datenpunkt nicht vorhanden ist.  
  
> [!NOTE]
>  Im Fall von Line-Type-Diagramme, richtet sich die Linienfarbe für Zeilen, die Verbindung mit einen leeren Punkt nach dem <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Color%2A> Einstellung der Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob die Reihe im gerenderten Diagramm sichtbar ist, oder legt dieses fest.</summary>
        <value><see langword="true" />, wenn die Reihe im gerenderten Diagramm sichtbar ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ruft ab oder legt einen Wert, der bestimmt, ob die Reihe im gerenderten sichtbar sind <xref:System.Web.UI.DataVisualization.Charting.ChartArea>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXValueIndexed">
      <MemberSignature Language="C#" Value="public bool IsXValueIndexed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXValueIndexed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsXValueIndexed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXValueIndexed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsXValueIndexed : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob als x-Werte Datenpunktindizes verwendet werden, oder legt dieses fest.</summary>
        <value><see langword="true" />, wenn die Indizes von Datenpunkten, die zur Reihe gehören, als x-Werte verwendet werden, <see langword="false" />, wenn sie nicht als x-Werte verwendet werden. Der Standardwert ist <see langword="false" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Datenpunkte in einer Reihe verwenden sequenzielle Indizes, und wenn diese Eigenschaft `true` dann unabhängig von ihrer zugeordneten X-Werte nacheinander von Datenpunkten gezeichnet werden. Dies bedeutet, dass es keine "fehlenden" Daten erstellt werden.  
  
 Nehmen wir beispielsweise an, dass es gibt drei (3) von Datenpunkten in einer Reihe mit X-Werte von 1, 2 und 4. Wenn diese Eigenschaft wurde `false`, gäbe es einen Datenpunkt, der an der X-Achse Position mit der Bezeichnung "3" fehlt. Aber wenn Sie diese Eigenschaft auf `true`, der drei Datenpunkte an Punkten, 1, 2 und 4 nacheinander, und es wird keine fehlenden Datenpunkt. Die Achsenposition, die mit der Bezeichnung "3" wird nicht im Diagramm angezeigt.  
  
 Dies ist nützlich, wenn Sie nicht möchten, haben Sie die fehlenden Datenpunkte für Intervalle an, dass Sie wissen, dass Sie keine Daten, z. B. Wochenenden werden.  
  
> [!IMPORTANT]
>  Wenn Sie mehrere Reihen anzeigen und mindestens eine Reihe verwendet indizierte X-Werte, aus, und klicken Sie dann alle Reihen ausgerichtet werden müssen –, also haben die gleiche Anzahl von Data Points –, und der entsprechenden Punkte müssen die gleichen X-Werte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Legend">
      <MemberSignature Language="C#" Value="public string Legend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Legend" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Legend" />
      <MemberSignature Language="VB.NET" Value="Public Property Legend As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Legend { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Legend : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.Legend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.SeriesLegendNameConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der dem <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" />-Objekt zugeordneten Reihe ab oder legt diesen fest.</summary>
        <value>Ein <see langword="string" />-Wert, der den Namen eines <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" />-Objekts darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Reihe zur Entwurfszeit und zur Laufzeit hinzugefügt wird, werden diese automatisch zugewiesen, der Standardwert ist <xref:System.Web.UI.DataVisualization.Charting.Legend> Objekt.  
  
 Wenn Sie nicht möchten, die Reihe in einer Legende angezeigt wird, legen Sie diese Eigenschaft auf eine Zeichenfolge der Länge 0 (null) fest oder die <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.IsVisibleInLegend%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerStep">
      <MemberSignature Language="C#" Value="public int MarkerStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerStep" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.MarkerStep" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerStep As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerStep { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MarkerStep : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.MarkerStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, mit welcher Häufigkeit Datenpunktmarker angezeigt werden sollen, oder legt diesen fest.</summary>
        <value>Ein <see langword="integer" />-Wert, der bestimmt, mit welcher Häufigkeit Datenpunktmarker angezeigt werden sollen. Der Standardwert ist 1 (eins).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.MarkerStep%2A> Eigenschaft gibt an, die Häufigkeit, mit der Marker angezeigt werden. Wenn Sie diese Eigenschaft festlegen, um z. B. zwei (2), jeden anderen Datenpunkt verwendet einen Marker.  
  
 Diese Eigenschaft wird nur verwendet, wenn Marker aktiviert werden, mithilfe der <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerStyle%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den eindeutigen Namen eines <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Objekts ab oder legt diesen fest.</summary>
        <value>Ein <see langword="string" />-Wert, der den eindeutigen Namen der Datenreihe darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name einer Datenreihe muss eindeutig sein; Andernfalls wird eine Ausnahme ausgelöst werden.  
  
 Diese Eigenschaft kann wie der Indexer verwendet werden, beim Abrufen einer <xref:System.Web.UI.DataVisualization.Charting.Series> -Objekt aus der <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> Objekt.  
  
 Wenn diese Eigenschaft auf eine Zeichenfolge der Länge 0 (null) festgelegt ist, wird eine Ausnahme ausgelöst werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartColorPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartColorPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Property Palette As ChartColorPalette" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartColorPalette Palette { System::Web::UI::DataVisualization::Charting::ChartColorPalette get(); void set(System::Web::UI::DataVisualization::Charting::ChartColorPalette value); };" />
      <MemberSignature Language="F#" Value="member this.Palette : System.Web.UI.DataVisualization.Charting.ChartColorPalette with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.Palette" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ColorPaletteEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ColorPaletteEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartColorPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Farbpalette eines <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Objekts ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartColorPalette" />-Enumerationswert, der die Palette für die Datenreihe bestimmt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Palette wird verwendet, um automatisch die Farben auf Datenelemente zuzuweisen, wenn die Datenpunkte selbst keine Farben zugewiesen werden und die Daten <xref:System.Web.UI.DataVisualization.Charting.Series> -Objekt, das die Datenpunkte zu gehören auch keine Farbe zugewiesene.  
  
 Wenn keine Reihen-oder Farben explizit angegeben werden, hängen die verwendeten Farben des Diagrammtyps und die Diagrammpalette-Steuerelement oder die Palette der Reihe, sofern angegeben. Finden Sie in der Tabelle unten für Weitere Informationen:  
  
|Diagrammtyp|Reihenpalette verwendet?|Farben von Datenpunkten angezeigt werden.|  
|----------------|--------------------------|-------------------------------------|  
|Einem Formdiagramm (z. B. Kreis- und Ringdiagramme Diagramme)|Nein|Ersten verfügbaren Farben aus <xref:System.Web.UI.DataVisualization.Charting.Chart> Steuerelementpalette. Eine Farbe pro Datenpunkt.|  
|Alle Diagramme mit Ausnahme von Formdiagrammen|Nein|Ersten verfügbaren Farben aus <xref:System.Web.UI.DataVisualization.Charting.Chart> Steuerelementpalette. Eine Farbe pro Datenreihe.|  
|Einem Formdiagramm (z. B. Kreis- und Ringdiagramme Diagramme)|Ja|Ersten verfügbaren Farben aus <xref:System.Web.UI.DataVisualization.Charting.Series> Palette. Eine Farbe pro Datenpunkt.|  
|Alle Diagramme mit Ausnahme von Formdiagrammen|Ja|Ersten verfügbaren Farben aus <xref:System.Web.UI.DataVisualization.Charting.Series> Palette. Eine Farbe pro Datenreihe.|  
  
 Dies <xref:System.Web.UI.DataVisualization.Charting.Series.Palette%2A> Eigenschaft hat Vorrang vor den <xref:System.Web.UI.DataVisualization.Charting.Chart.Palette%2A> Eigenschaft des Stamms <xref:System.Web.UI.DataVisualization.Charting.Chart> -Objekt, in Bezug auf die Anzeige der Daten.  
  
 HINWEIS: Wenn die `Palette` -Eigenschaft für beide die <xref:System.Web.UI.DataVisualization.Charting.Chart> und <xref:System.Web.UI.DataVisualization.Charting.Series> Objekte auf "None" festgelegt ist, und der entsprechenden Reihe/Datenpunkte, der Standardpalette "" leuchtendes Pastell "" ist keine Farbe zugewiesen oder <xref:System.Web.UI.DataVisualization.Charting.Chart.PaletteCustomColors%2A> verwendet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Points">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPointCollection Points { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.DataPointCollection Points" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Points" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Points As DataPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::DataPointCollection ^ Points { System::Web::UI::DataVisualization::Charting::DataPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Points : System.Web.UI.DataVisualization.Charting.DataPointCollection" Usage="System.Web.UI.DataVisualization.Charting.Series.Points" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.DataPointCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.DataPointCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" />-Objekt ab.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" />-Objekt, das eine Auflistung von <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />-Objekten darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> Auflistungseigenschaft können Sie zum Hinzufügen und Entfernen von Datenpunkten einer Reihe. Diese Eigenschaft bietet auch Methoden und Eigenschaften, die zum Bearbeiten dieser Auflistung, z. B. Suchen von Datenpunkten ausführen, Datenbindung und usw. verwendet werden können.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ShadowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ShadowColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ShadowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ShadowColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.ShadowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128,0,0,0")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schattenfarbe einer Reihe ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Color" />-Wert. Die Standardfarbe ist <see cref="P:System.Drawing.Color.Black" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Übernimmt oder bestimmt die Schattenfarbe einer Reihe, die auf einen beliebigen gültigen über den ARGB (Alpha, Rot, Grün, Blau) Wert sein kann.  
  
 Der alpha-Wert kann verwendet werden, um eine realistische Schatteneffekt zu erzielen; Verwenden Sie einen Farbwert "128,0,0,0" für Schatten.  
  
 Um einen Schatten zu implementieren, legen Sie die <xref:System.Web.UI.DataVisualization.Charting.Series.ShadowOffset%2A> Eigenschaft auf einen Wert ungleich 0 (null).  
  
   
  
## Examples  
  
```  
' Set series shadow color and offset  
Public Sub SetSeriesShadow()  
     Chart1.Series("Default"}.ShadowColor = Color.Blue  
     Chart1.Series("Default"}.ShadowOffset = 2  
End Sub 'SetSeriesShadow  
```  
  
```csharp  
// Set series shadow color and offset   
public void SetSeriesShadow()  
{      
    Chart1.Series("Default"}.ShadowColor = Color.Blue;  
    Chart1.Series["Default"].ShadowOffset = 2;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowOffset">
      <MemberSignature Language="C#" Value="public int ShadowOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ShadowOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ShadowOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowOffset : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.ShadowOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schattenoffset in Pixel einer Reihe ab oder legt diesen fest.</summary>
        <value>Ein <see langword="integer" />-Wert, der den Schattenoffset in Pixel der Reihe darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie einen anderen Wert als 0 (null), um Schatten zu implementieren. Ein positiver Wert führt zu einem Schatten, der auf der rechten Seite nach unten verläuft. Ein negativer Wert führt zu einem Schatten, der auf der linken Seite nach oben verläuft.  
  
   
  
## Examples  
 Das folgende Codebeispiel legt fest, der visuellen Attribute einer Reihe.  
  
```vb  
' Set series shadow offset  
Public Sub SetSeriesShadowOffset()  
    Chart1.Series("Default"}.ShadowOffset = 2  
End Sub 'SetSeriesVisualAttributes  
```  
  
```csharp  
// Set series shadow offset   
public void SetSeriesShadowOffset ()  
{      
    Chart1.Series["Default"].ShadowOffset = 2;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartLabelStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SmartLabelStyle SmartLabelStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.SmartLabelStyle SmartLabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.SmartLabelStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property SmartLabelStyle As SmartLabelStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SmartLabelStyle ^ SmartLabelStyle { System::Web::UI::DataVisualization::Charting::SmartLabelStyle ^ get(); void set(System::Web::UI::DataVisualization::Charting::SmartLabelStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SmartLabelStyle : System.Web.UI.DataVisualization.Charting.SmartLabelStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.SmartLabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SmartLabelStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Stil der intelligenten Bezeichnungen ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.SmartLabelStyle" />-Enumerationswert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Führt eine Sortierung in einer <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> aus. Beachten Sie, dass die <see cref="T:System.Web.UI.DataVisualization.Charting.DataManipulator" />-Klasse Sortiermethoden bereitstellt, die eine größere Flexibilität als diese Sortiermethoden bieten.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Sort(System.Collections.Generic.IComparer{System.Web.UI.DataVisualization.Charting.DataPoint})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of DataPoint))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Collections.Generic.IComparer&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; -&gt; unit" Usage="series.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">Die <see cref="T:System.Collections.IComparer" />-Schnittstelle.</param>
        <summary>Sortiert die Punkte in der Reihe mithilfe der <see cref="T:System.Collections.IComparer" />-Schnittstelle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Web::UI::DataVisualization::Charting::PointSortOrder pointSortOrder);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Web.UI.DataVisualization.Charting.PointSortOrder -&gt; unit" Usage="series.Sort pointSortOrder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">Die Sortierreihenfolge.</param>
        <summary>Sortiert die Datenpunkte in der Reihe mit der angegebenen Sortierreihenfolge.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Web::UI::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ sortBy);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Web.UI.DataVisualization.Charting.PointSortOrder * string -&gt; unit" Usage="series.Sort (pointSortOrder, sortBy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">Die Sortierreihenfolge.</param>
        <param name="sortBy">Der für die Sortierung verwendete Wert (X, Y, Y2, ...).</param>
        <summary>Sortiert die Punkte in der Reihe mit der angegebenen Sortierreihenfolge und dem angegebenen Wert, der für die Sortierung verwendet werden soll.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XAxisType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AxisType XAxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.AxisType XAxisType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.XAxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property XAxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::AxisType XAxisType { System::Web::UI::DataVisualization::Charting::AxisType get(); void set(System::Web::UI::DataVisualization::Charting::AxisType value); };" />
      <MemberSignature Language="F#" Value="member this.XAxisType : System.Web.UI.DataVisualization.Charting.AxisType with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.XAxisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den x-Achsentyp der Reihe ab oder legt diesen fest.</summary>
        <value>Ein <see cref="P:System.Web.UI.DataVisualization.Charting.Series.XAxisType" />-Enumerationswert, der bestimmt, ob für die Reihe die primäre oder die sekundäre x-Achse verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für alle außer horizontal ausgerichteten Diagrammen wie z. B. Diagrammtypen Balken- und gestapelte Balkendiagramme, und Formdiagramme, z. B. Kreis-, Ring-, Trichter-und Pyramidendiagramme, das die primäre X-Achse ist immer die niedrigere Achse, und die sekundäre Achse ist die obere Achse. Für Balken- und gestapelte Balkendiagramme, das die primäre X-Achse wird die linke Achse, und die sekundäre X-Achse ist die rechte Achse.  
  
 Wenn Daten mit der sekundären X-Achse gezeichnet werden, müssen Sie verwenden die <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX2%2A> Achseneigenschaften festzulegende Eigenschaft und nicht die <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValueMember">
      <MemberSignature Language="C#" Value="public string XValueMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XValueMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.XValueMember" />
      <MemberSignature Language="VB.NET" Value="Public Property XValueMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XValueMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XValueMember : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.XValueMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldXConvertor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Memberspalte der Diagrammdatenquelle ab, die für die Datenbindung an den x-Wert der Reihe verwendet wird, oder legt diese fest.</summary>
        <value>Ein <see langword="string" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft akzeptiert entweder den Namen der Memberspalte oder dem Wert der Spalte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValueType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartValueType XValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartValueType XValueType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.XValueType" />
      <MemberSignature Language="VB.NET" Value="Public Property XValueType As ChartValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartValueType XValueType { System::Web::UI::DataVisualization::Charting::ChartValueType get(); void set(System::Web::UI::DataVisualization::Charting::ChartValueType value); };" />
      <MemberSignature Language="F#" Value="member this.XValueType : System.Web.UI.DataVisualization.Charting.ChartValueType with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.XValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die auf der x-Achse gezeichneten Werttypen ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartValueType" />-Enumerationswert, der den Typ der in der Reihe gespeicherten x-Wertdaten bestimmt. Der Standardwert ist <see cref="F:System.Web.UI.DataVisualization.Charting.ChartValueType.Auto" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.XValueType%2A> -Eigenschaft bestimmt den Typ der von der Reihe gespeicherten Daten.  
  
 Legen Sie diese Eigenschaft auf <xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime> zu den X-Wert, der als eingegeben werden eine <xref:System.DateTime> Wert und nicht als eine <xref:System.Double>. Datum und Uhrzeit-Werte werden intern gespeichert, von .NET Framework als <xref:System.Double> Werte. Gleiches gilt für die <xref:System.Web.UI.DataVisualization.Charting.CustomLabel.ToPosition%2A> und <xref:System.Web.UI.DataVisualization.Charting.CustomLabel.FromPosition%2A> Eigenschaften <xref:System.Web.UI.DataVisualization.Charting.CustomLabel> Objekte.  
  
 Die `IntervalType` Eigenschaft finden Sie in der achsenbezeichnung, Teilstriche und Grid-Klassen bestimmt den Typ.  
  
> [!NOTE]
>  Ordnungsgemäß Anwenden einer <xref:System.DateTime> Format achsenbezeichnungen, die aus Daten Zeitpunkt X-Werte, mit generiert werden die <xref:System.Web.UI.DataVisualization.Charting.LabelStyle.Format%2A> -Eigenschaft, diese Eigenschaft muss festgelegt werden <xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime>.  
  
 Diese Eigenschaft kann auch verwendet werden, um den Datentyp zu ermitteln, an dem die X-Werte gebunden sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YAxisType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AxisType YAxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.AxisType YAxisType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YAxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property YAxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::AxisType YAxisType { System::Web::UI::DataVisualization::Charting::AxisType get(); void set(System::Web::UI::DataVisualization::Charting::AxisType value); };" />
      <MemberSignature Language="F#" Value="member this.YAxisType : System.Web.UI.DataVisualization.Charting.AxisType with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.YAxisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den y-Achsentyp einer Reihe ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.AxisType" />-Enumerationswert, der bestimmt, ob für eine Reihe die primäre oder die sekundäre y-Achse verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.YAxisType%2A> Eigenschaft bestimmt, ob eine Reihe unter Verwendung der primären oder sekundären Y-Achse gezeichnet wird.  
  
 Für alle Diagrammtypen außer Kreis-, Ring-, Diagramm, Leiste und gestapelte Balkendiagramme, ist die primäre Y-Achse die linke vertikale Achse, und die sekundäre Achse ist die rechte vertikale Achse. Für Balken- und gestapelte Balkendiagramme, die primäre Achse wird der niedrigere der horizontalen Achse, und die sekundäre Y-Achse ist die obere-Horizontalachse.  
  
 Wenn Daten mit der sekundären Y-Achse gezeichnet werden, müssen Sie verwenden die <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY2%2A> Achseneigenschaften festzulegende Eigenschaft und nicht die <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValueMembers">
      <MemberSignature Language="C#" Value="public string YValueMembers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YValueMembers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YValueMembers" />
      <MemberSignature Language="VB.NET" Value="Public Property YValueMembers As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YValueMembers { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YValueMembers : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.YValueMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldValueAxisUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldYConvertor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldValueAxisUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Memberspalten der Diagrammdatenquelle ab, die zum Binden von Daten an die y-Werte der Reihe verwendet werden, oder legt diese fest.</summary>
        <value>Ein <see langword="string" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft akzeptiert eine durch Trennzeichen getrennte Zeichenfolge, die den Namen oder die vorherzusagenden Werte der Spalten enthält.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValuesPerPoint">
      <MemberSignature Language="C#" Value="public int YValuesPerPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 YValuesPerPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YValuesPerPoint" />
      <MemberSignature Language="VB.NET" Value="Public Property YValuesPerPoint As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int YValuesPerPoint { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.YValuesPerPoint : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.YValuesPerPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Anzahl von y-Werten ab, die für <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />-Objekte in einer <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> zulässig sind, oder legt diese fest.</summary>
        <value>Ein <see langword="integer" />-Wert, der die maximale Anzahl von y-Werten darstellt, die für die Datenpunkte in einer Reihe zulässig sind. Der Standardwert ist 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie beim Hinzufügen einer <xref:System.Web.UI.DataVisualization.Charting.DataPoint> -Objekt, das mehrere Y-Werte ist als diese Eigenschaft gibt an, die überzähligen Y-Werte ignoriert werden.  
  
 Die Anzahl von Y-Werten, die erforderlich sind, um das Diagramm ordnungsgemäß anzuzeigen hängt vom ausgewählten Diagrammtyp ab.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValueType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartValueType YValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartValueType YValueType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YValueType" />
      <MemberSignature Language="VB.NET" Value="Public Property YValueType As ChartValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartValueType YValueType { System::Web::UI::DataVisualization::Charting::ChartValueType get(); void set(System::Web::UI::DataVisualization::Charting::ChartValueType value); };" />
      <MemberSignature Language="F#" Value="member this.YValueType : System.Web.UI.DataVisualization.Charting.ChartValueType with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.YValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.SeriesYValueTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der y-Wertdaten in den in einer Reihe gespeicherten Datenpunkten ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartValueType" />-Enumerationswert, der den Typ der in der Reihe gespeicherten Y-Wertdaten bestimmt. Der Standardwert ist <see cref="F:System.Web.UI.DataVisualization.Charting.ChartValueType.Auto" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.YValueType%2A> -Eigenschaft bestimmt den Typ der von der Reihe gespeicherten Daten. Der Wert dieser Eigenschaft wird normalerweise festgelegt entweder <xref:System.Web.UI.DataVisualization.Charting.ChartValueType.Auto> oder <xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime>.  
  
 Die `IntervalType` Eigenschaft finden Sie in der achsenbezeichnung, Teilstriche und Grid-Klassen bestimmt den Typ.  
  
 Diese Eigenschaft kann auch verwendet werden, um den Datentyp zu ermitteln, an dem die Y-Werte gebunden sind.  
  
 Kann für die Darstellung von Datumsausdrücke als die Werte der Datenpunkte, obwohl dies selten genutzt wird. Wenn Sie diese Eigenschaft auf <xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime>, die Y-Wert kann dann als Eingabe eine <xref:System.DateTime> Wert und nicht als eine <xref:System.Double>. Datum und Uhrzeit-Werte werden intern gespeichert, von .NET Framework als <xref:System.Double> Werte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>