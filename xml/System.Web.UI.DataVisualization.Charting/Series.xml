<Type Name="Series" FullName="System.Web.UI.DataVisualization.Charting.Series">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8a017038353a4f55a3f20433d91605e7f7fd39a4" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70510931" /></Metadata><TypeSignature Language="C#" Value="public class Series : System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Series extends System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.Series" />
  <TypeSignature Language="VB.NET" Value="Public Class Series&#xA;Inherits DataPointCustomProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class Series : System::Web::UI::DataVisualization::Charting::DataPointCustomProperties" />
  <TypeSignature Language="F#" Value="type Series = class&#xA;    inherit DataPointCustomProperties" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.DataPointCustomProperties</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Points")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Speichert Datenpunkte und Reihenattribute.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Web.UI.DataVisualization.Charting.Series> -Objekt stellt eine Datenreihe dar und wird in <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> der-Klasse gespeichert.  
  
 Ein <xref:System.Web.UI.DataVisualization.Charting.Series> <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection> speichert <xref:System.Web.UI.DataVisualization.Charting.DataPoint> -Objekte mithilfe der-Klasse. Außerdem werden Attribute der Datenreihe gespeichert. Beispielsweise enthält eine Datenreihe ein Farb Attribut, ein Hintergrundbild Attribut, ein Attribut für den Hintergrund Farbverlauf usw.  
  
 Die <xref:System.Web.UI.DataVisualization.Charting.DataPoint> Objekte, die zu einer Reihe gehören, verfügen auch über eigene Attribute. Wenn für einen Datenpunkt und die Reihe, zu der er gehört, das gleiche Attribut festgelegt ist, hat das Datenpunkt Attribut in der Regel Vorrang.  
  
 Eine Reihe ist nicht notwendigerweise in einem Diagramm gezeichnet. Sie kann Datenpunkt Werte speichern, die verwendet werden, um eine Berechnung auszuführen, aus der eine andere Reihe erstellt und anschließend gezeichnet wird. Beispielsweise kann Series A, das gezeichnet wird, das Ergebnis des Hinzufügens von Datenpunkten der Reihe B und der Reihe C sein, obwohl keine dieser Reihen gezeichnet wird. Um ein <xref:System.Web.UI.DataVisualization.Charting.Series> -Objekt zu zeichnen, muss <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> die-Eigenschaft <xref:System.Web.UI.DataVisualization.Charting.ChartArea> auf den Namen des-Objekts festgelegt werden, das zum Zeichnen der Reihe verwendet wird.  
  
 Wenn eine Reihe erstellt wird, wird Sie automatisch dem <xref:System.Web.UI.DataVisualization.Charting.ChartArea> Objekt mit dem Namen "Default" oder dem ersten verfügbaren Diagrammbereich in der Diagramm Flächen Auflistung zugewiesen, wenn das "Default"-Objekt nicht vorhanden ist.  
  
 Um die Anzeige einer Reihe zu deaktivieren, legen Sie <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> deren-Eigenschaft auf eine Zeichenfolge der Länge 0 (null) fest.  
  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.ChartType%2A> -Eigenschaft bestimmt den Diagrammtyp, der zum Zeichnen dieser Reihe verwendet wird, wenn Sie gezeichnet wird.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Series();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Series(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.Series : string -&gt; System.Web.UI.DataVisualization.Charting.Series" Usage="new System.Web.UI.DataVisualization.Charting.Series name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des zu erstellenden <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Objekts. Dies muss ein eindeutiger Name sein, andernfalls wird eine Ausnahme ausgelöst.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Klasse mit dem angegebenen Reihennamen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor kann verwendet werden, um eine neue Instanz der <xref:System.Web.UI.DataVisualization.Charting.Series> -Klasse zu erstellen.  
  
> [!NOTE]
>  Diese Reihe ist nur in der Lage <xref:System.Web.UI.DataVisualization.Charting.DataPoint> , Objekte zu speichern, die einen Y-Wert aufweisen. Wenn dieser Reihe ein Datenpunkt mit mehreren Y-Werten hinzugefügt wird, wird eine Ausnahme ausgelöst.  
  
 Verwenden Sie die <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection.Add%2A> -Methode, um zur Laufzeit eine Reihe zu erstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series (string name, int yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, yValues As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Series(System::String ^ name, int yValues);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.Series : string * int -&gt; System.Web.UI.DataVisualization.Charting.Series" Usage="new System.Web.UI.DataVisualization.Charting.Series (name, yValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="yValues" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des zu erstellenden <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Objekts.</param>
        <param name="yValues">Die maximale Anzahl von y-Werten, die für die <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />-Objekte zulässig sind, die zu dieser Reihe gehören.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Klasse mit dem angegebenen Namen und der angegebenen maximalen Anzahl von y-Werten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.DataVisualization.Charting.Series> -Klasse zu erstellen und zu initialisieren.  
  
> [!IMPORTANT]
>  Diese Reihe ist nur in der Lage, <xref:System.Web.UI.DataVisualization.Charting.DataPoint> Objekte zu speichern, die nicht mehr Y-Werte aufweisen, als `yValues` vom-Parameter festgelegt werden. Wenn Sie einen Datenpunkt mit mehr Y-Werten als das festgelegte Maximum hinzufügen, wird eine Ausnahme ausgelöst.  
  
 Zum Erstellen eines <xref:System.Web.UI.DataVisualization.Charting.Series> -Objekts zur Laufzeit können auch `Add` die `Insert` -Methode und die-Methode der Reihen Sammlungs Eigenschaft verwendet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisLabel">
      <MemberSignature Language="C#" Value="public override string AxisLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AxisLabel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.AxisLabel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AxisLabel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AxisLabel { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AxisLabel : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.AxisLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Achsenbezeichnungstext für die Reihe ab oder legt diesen fest.</summary>
        <value>Ein <see langword="string" />-Wert. Der Standardwert ist eine Zeichenfolge der Länge 0 (null).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartArea">
      <MemberSignature Language="C#" Value="public string ChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChartArea : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.ChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.SeriesAreaNameConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ggf. den Namen des zum Zeichnen der Datenreihe verwendeten <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />-Objekts ab oder legt diesen fest.</summary>
        <value>Ein <see langword="string" />-Wert, der ein zum Zeichnen der Reihe verwendetes <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />-Objekt darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Reihe sowohl zur Entwurfszeit als auch zur Laufzeit hinzugefügt wird, wird Sie automatisch dem "Default" <xref:System.Web.UI.DataVisualization.Charting.ChartArea> -Objekt zugewiesen, oder die erste verfügbare Diagramm <xref:System.Web.UI.DataVisualization.Charting.ChartAreaCollection> Flächen im, wenn "Standard" nicht vorhanden ist.  
  
 Legen Sie diese Eigenschaft auf eine Zeichenfolge der Länge 0 (null) fest, wenn Sie nicht möchten, dass die Reihe gezeichnet wird.  
  
   
  
## Examples  
  
```vb  
' Create a new legend and associate three series with the legend.  
Public Sub CreateSecondLegend()  
    ' Attach the first series to a chart area.  
    Chart1.Series["Series1"].ChartArea = "Chart Area 1";  
  
    ' Attach the second series to a chart area.  
    Chart1.Series["Series2"].ChartArea = "Chart Area 2";  
  
End Sub 'CreateSecondLegend  
```  
  
```csharp  
// Create a new legend and associate three series with the legend.  
public void CreateSecondLegend()  
{  
     // Attach the first series to a chart area.  
     Chart1.Series["Series1"].ChartArea = "Chart Area 1";  
  
     // Attach the second series to a chart area.  
     Chart1.Series["Series2"].ChartArea = "Chart Area 2";  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SeriesChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SeriesChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ChartType" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartType As SeriesChartType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SeriesChartType ChartType { System::Web::UI::DataVisualization::Charting::SeriesChartType get(); void set(System::Web::UI::DataVisualization::Charting::SeriesChartType value); };" />
      <MemberSignature Language="F#" Value="member this.ChartType : System.Web.UI.DataVisualization.Charting.SeriesChartType with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.ChartType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartTypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartTypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SeriesChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Diagrammtyp einer Reihe ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.SeriesChartType" />-Enumerationswert, der den Typ des Diagramms angibt, mit dem die Reihe dargestellt wird. Der Standardwert ist <see cref="F:System.Web.UI.DataVisualization.Charting.SeriesChartType.Column" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft bestimmt den Diagrammtyp des <xref:System.Web.UI.DataVisualization.Charting.Series> Objekts. bei dem Wert wird die Groß-/Kleinschreibung beachtet. Eine Liste <xref:System.Web.UI.DataVisualization.Charting.SeriesChartType> aller möglichen Diagrammtypen für eine Reihe finden Sie unter der-Enumeration.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartTypeName">
      <MemberSignature Language="C#" Value="public string ChartTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChartTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ChartTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChartTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChartTypeName : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.ChartTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("Column")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartTypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ChartTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartTypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des zum Zeichnen der Reihe verwendeten Diagrammtyps ab oder legt diesen fest.</summary>
        <value>Ein <see langword="string" />-Wert, der den Namen des Diagrammtyps darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="series.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die von <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyPointStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPointCustomProperties EmptyPointStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.DataPointCustomProperties EmptyPointStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.EmptyPointStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property EmptyPointStyle As DataPointCustomProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::DataPointCustomProperties ^ EmptyPointStyle { System::Web::UI::DataVisualization::Charting::DataPointCustomProperties ^ get(); void set(System::Web::UI::DataVisualization::Charting::DataPointCustomProperties ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyPointStyle : System.Web.UI.DataVisualization.Charting.DataPointCustomProperties with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.EmptyPointStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPointCustomProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zeichnungsstil von Punkten ab, die als leer markiert sind, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.EmptyPointStyle%2A> -Eigenschaft bestimmt die Zeichnungs Art von Punkten, die als leer markiert sind, z. b. in der Rahmenfarbe, in den markerbildern, in der Hintergrundfarbe oder in Bildern usw.  
  
 Bestimmte Eigenschaften sind nur für bestimmte Diagrammtypen anwendbar. Die <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImage%2A> -Eigenschaft gilt z. b. nicht für Liniendiagramme, gilt jedoch für ein Flächen Diagramm.  
  
 Zum Anzeigen eines Bilds, das einen leeren Punkt angibt, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerImage%2A> verwenden <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerStyle%2A> Sie die-Eigenschaft und <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackImage%2A> die-Eigenschaft und nicht die-Eigenschaft.  
  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.AxisLabel%2A> -Eigenschaft bestimmt die Achsen Bezeichnung für leere Punkte. Beachten Sie, dass für gestapelte Diagrammtypen die Achsen Bezeichnung durch die <xref:System.Web.UI.DataVisualization.Charting.Series.AxisLabel%2A> -Eigenschaft der ersten zeichnungsreihe bestimmt wird, für die diese Eigenschaft festgelegt ist.  
  
 Datenpunkte können manuell als leer gekennzeichnet werden, indem die <xref:System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty%2A> -Eigenschaft auf `true`festgelegt wird. Alternativ kann eine der `InsertEmptyPoints` Methoden in der <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> -Klasse verwendet werden, um nach fehlenden Daten zu suchen und leere Punkte einzufügen, wenn ein Datenpunkt fehlt.  
  
> [!NOTE]
>  Im Fall von Zeittyp Diagrammen wird die Linien Farbe für Linien, die eine Verbindung mit einem leeren Punkt herstellen, von <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Color%2A> der-Eigenschafts Einstellung bestimmt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob die Reihe im gerenderten Diagramm sichtbar ist, oder legt dieses fest.</summary>
        <value><see langword="true" />, wenn die Reihe im gerenderten Diagramm sichtbar ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ruft einen Wert ab, der bestimmt, ob die Reihe auf dem gerenderten <xref:System.Web.UI.DataVisualization.Charting.ChartArea>sichtbar ist, oder legt diesen fest.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXValueIndexed">
      <MemberSignature Language="C#" Value="public bool IsXValueIndexed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXValueIndexed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsXValueIndexed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXValueIndexed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsXValueIndexed : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob als x-Werte Datenpunktindizes verwendet werden, oder legt dieses fest.</summary>
        <value><see langword="true" />, wenn die Indizes von Datenpunkten, die zur Reihe gehören, als x-Werte verwendet werden, <see langword="false" />, wenn sie nicht als x-Werte verwendet werden. Der Standardwert ist <see langword="false" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Datenpunkte in einer Reihe verwenden sequenzielle Indizes. wenn diese Eigenschaft ist `true` , werden Datenpunkte sequenziell gezeichnet, unabhängig von ihren zugeordneten X-Werten. Dies bedeutet, dass keine "fehlenden" Datenpunkte vorhanden sind.  
  
 Angenommen, es gibt drei (3) Datenpunkte in einer Reihe mit X-Werten von 1, 2 und 4. Wenn diese Eigenschaft war `false`, würde ein Datenpunkt am Speicherort der X-Achse mit der Bezeichnung "3" fehlen. Wenn Sie diese Eigenschaft jedoch auf `true`festlegen, werden die drei Datenpunkte an den Punkten 1, 2 und 4 sequenziell dargestellt, und es gibt keinen fehlenden Datenpunkt. Der Speicherort der X-Achse mit der Bezeichnung "3" wird im Diagramm nicht angezeigt.  
  
 Dies ist hilfreich, wenn Sie keine Datenpunkte für Intervalle benötigen, für die Sie nicht über Daten verfügen, z. b. Wochenenden.  
  
> [!IMPORTANT]
>  Wenn Sie mehrere Reihen anzeigen und mindestens eine Reihe indizierte x-Werte verwendet, müssen alle Reihen ausgerichtet werden, d. h. die gleiche Anzahl von Datenpunkten, und die entsprechenden Punkte müssen die gleichen X-Werte aufweisen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Legend">
      <MemberSignature Language="C#" Value="public string Legend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Legend" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Legend" />
      <MemberSignature Language="VB.NET" Value="Public Property Legend As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Legend { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Legend : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.Legend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.SeriesLegendNameConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der dem <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" />-Objekt zugeordneten Reihe ab oder legt diesen fest.</summary>
        <value>Ein <see langword="string" />-Wert, der den Namen eines <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" />-Objekts darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Reihe zur Entwurfszeit und zur Laufzeit hinzugefügt wird, wird Sie automatisch dem Standard <xref:System.Web.UI.DataVisualization.Charting.Legend> Objekt zugewiesen.  
  
 Wenn Sie nicht möchten, dass die Reihe in einer Legende angezeigt wird, legen Sie diese Eigenschaft auf eine Zeichenfolge der Länge 0 <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.IsVisibleInLegend%2A> (NULL `false`) fest, oder legen Sie die Eigenschaft auf fest.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerStep">
      <MemberSignature Language="C#" Value="public int MarkerStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerStep" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.MarkerStep" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerStep As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerStep { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MarkerStep : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.MarkerStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, mit welcher Häufigkeit Datenpunktmarker angezeigt werden sollen, oder legt diesen fest.</summary>
        <value>Ein <see langword="integer" />-Wert, der bestimmt, mit welcher Häufigkeit Datenpunktmarker angezeigt werden sollen. Der Standardwert ist 1 (eins).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.MarkerStep%2A> -Eigenschaft gibt die Häufigkeit an, mit der Marker angezeigt werden. Wenn Sie diese Eigenschaft beispielsweise auf zwei (2) festlegen, wird für jeden anderen Datenpunkt ein Marker verwendet.  
  
 Diese Eigenschaft wird nur verwendet, wenn Marker mithilfe der <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerStyle%2A> -Eigenschaft aktiviert werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den eindeutigen Namen eines <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Objekts ab oder legt diesen fest.</summary>
        <value>Ein <see langword="string" />-Wert, der den eindeutigen Namen der Datenreihe darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name einer Datenreihe muss eindeutig sein. Andernfalls wird eine Ausnahme ausgelöst.  
  
 Diese Eigenschaft kann als Indexer verwendet werden, wenn Sie ein <xref:System.Web.UI.DataVisualization.Charting.Series> -Objekt aus dem <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> -Objekt abrufen.  
  
 Wenn diese Eigenschaft auf eine Zeichenfolge der Länge 0 (null) festgelegt ist, wird eine Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartColorPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartColorPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Property Palette As ChartColorPalette" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartColorPalette Palette { System::Web::UI::DataVisualization::Charting::ChartColorPalette get(); void set(System::Web::UI::DataVisualization::Charting::ChartColorPalette value); };" />
      <MemberSignature Language="F#" Value="member this.Palette : System.Web.UI.DataVisualization.Charting.ChartColorPalette with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.Palette" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ColorPaletteEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ColorPaletteEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartColorPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Farbpalette eines <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />-Objekts ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartColorPalette" />-Enumerationswert, der die Palette für die Datenreihe bestimmt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum automatischen Zuweisen von Farben zu Datenelementen wird eine Palette verwendet, wenn den Datenpunkten selbst keine Farben zugewiesen sind, und wenn das Daten <xref:System.Web.UI.DataVisualization.Charting.Series> Objekt, zu dem die Datenpunkte gehören, auch nicht über eine zugewiesene Farbe verfügt.  
  
 Wenn keine Reihen-oder Datenpunkt Farben explizit angegeben werden, hängen die verwendeten Farben vom Diagrammtyp und der Diagramm Steuerelement Palette oder Reihen Palette ab, sofern eine angegeben ist. Weitere Informationen finden Sie in der folgenden Tabelle:  
  
|Diagrammtyp|Verwendete Reihen Palette?|Von Datenpunkten angezeigte Farben|  
|----------------|--------------------------|-------------------------------------|  
|Beliebige Form Diagramme (z. b. Kreis-und Ring Diagramme)|Nein|Die ersten von der <xref:System.Web.UI.DataVisualization.Charting.Chart> Steuerungs Palette verwendeten Farben. Eine Farbe pro Datenpunkt.|  
|Alle Diagramme mit Ausnahme von Form Diagrammen|Nein|Die ersten verfügbaren <xref:System.Web.UI.DataVisualization.Charting.Chart> Farben aus der Steuerungs Palette. Eine Farbe pro Datenreihe.|  
|Beliebige Form Diagramme (z. b. Kreis-und Ring Diagramme)|Ja|Die ersten verfügbaren Farben <xref:System.Web.UI.DataVisualization.Charting.Series> aus der Palette. Eine Farbe pro Datenpunkt.|  
|Alle Diagramme mit Ausnahme von Form Diagrammen|Ja|Die ersten verfügbaren Farben <xref:System.Web.UI.DataVisualization.Charting.Series> aus der Palette. Eine Farbe pro Datenreihe.|  
  
 Diese <xref:System.Web.UI.DataVisualization.Charting.Series.Palette%2A> Eigenschaft hat Vorrang <xref:System.Web.UI.DataVisualization.Charting.Chart.Palette%2A> vor der-Eigenschaft des root <xref:System.Web.UI.DataVisualization.Charting.Chart> -Objekts in Bezug auf die Anzeige von Daten.  
  
 Hinweis: Wenn die `Palette` -Eigenschaft für das <xref:System.Web.UI.DataVisualization.Charting.Chart> - <xref:System.Web.UI.DataVisualization.Charting.Series> Objekt und das-Objekt auf None festgelegt ist und der relevanten Datenreihen/Datenpunkte keine Farbe zugewiesen ist, wird die Standardpalette "brightpastell" oder <xref:System.Web.UI.DataVisualization.Charting.Chart.PaletteCustomColors%2A> verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Points">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPointCollection Points { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.DataPointCollection Points" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Points" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Points As DataPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::DataPointCollection ^ Points { System::Web::UI::DataVisualization::Charting::DataPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Points : System.Web.UI.DataVisualization.Charting.DataPointCollection" Usage="System.Web.UI.DataVisualization.Charting.Series.Points" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.DataPointCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.DataPointCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" />-Objekt ab.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" />-Objekt, das eine Auflistung von <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />-Objekten darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> -Auflistungs Eigenschaft ermöglicht Ihnen das Hinzufügen und Entfernen von Datenpunkten zu einer Reihe. Diese Eigenschaft stellt auch Methoden und Eigenschaften bereit, mit denen diese Auflistung bearbeitet werden kann, z. b. das Suchen von Datenpunkten, das Durchführen von Daten Bindungen usw.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ShadowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ShadowColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ShadowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ShadowColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.ShadowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128,0,0,0")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schattenfarbe einer Reihe ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Color" />-Wert. Die Standardfarbe ist <see cref="P:System.Drawing.Color.Black" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ruft die Schatten Farbe einer Reihe ab oder legt Sie fest, wobei jeder gültige ARGB-Wert (Alpha, rot, grün, blau) sein kann.  
  
 Der Alpha-Wert kann verwendet werden, um einen realistischen Schatteneffekt zu erzielen. Verwenden Sie den Farbwert "128, 0, 0, 0" für Schatten.  
  
 Um einen Schatten zu implementieren, legen <xref:System.Web.UI.DataVisualization.Charting.Series.ShadowOffset%2A> Sie die-Eigenschaft auf einen anderen Wert als NULL (0) fest.  
  
   
  
## Examples  
  
```  
' Set series shadow color and offset  
Public Sub SetSeriesShadow()  
     Chart1.Series("Default"}.ShadowColor = Color.Blue  
     Chart1.Series("Default"}.ShadowOffset = 2  
End Sub 'SetSeriesShadow  
```  
  
```csharp  
// Set series shadow color and offset   
public void SetSeriesShadow()  
{      
    Chart1.Series("Default"}.ShadowColor = Color.Blue;  
    Chart1.Series["Default"].ShadowOffset = 2;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowOffset">
      <MemberSignature Language="C#" Value="public int ShadowOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ShadowOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ShadowOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowOffset : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.ShadowOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schattenoffset in Pixel einer Reihe ab oder legt diesen fest.</summary>
        <value>Ein <see langword="integer" />-Wert, der den Schattenoffset in Pixel der Reihe darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie zum Implementieren von shadowingeinen anderen Wert als NULL (0). Ein positiver Wert führt zu einem Schatten, der sich nach unten und nach rechts verschiebt. Ein negativer Wert führt zu einem Schatten, der sich nach oben und nach links verschiebt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden die visuellen Attribute einer Reihe festgelegt.  
  
```vb  
' Set series shadow offset  
Public Sub SetSeriesShadowOffset()  
    Chart1.Series("Default"}.ShadowOffset = 2  
End Sub 'SetSeriesVisualAttributes  
```  
  
```csharp  
// Set series shadow offset   
public void SetSeriesShadowOffset ()  
{      
    Chart1.Series["Default"].ShadowOffset = 2;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartLabelStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SmartLabelStyle SmartLabelStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.SmartLabelStyle SmartLabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.SmartLabelStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property SmartLabelStyle As SmartLabelStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SmartLabelStyle ^ SmartLabelStyle { System::Web::UI::DataVisualization::Charting::SmartLabelStyle ^ get(); void set(System::Web::UI::DataVisualization::Charting::SmartLabelStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SmartLabelStyle : System.Web.UI.DataVisualization.Charting.SmartLabelStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.SmartLabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SmartLabelStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Stil der intelligenten Bezeichnungen ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.SmartLabelStyle" />-Enumerationswert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Führt eine Sortierung in einer <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> aus. Beachten Sie, dass die <see cref="T:System.Web.UI.DataVisualization.Charting.DataManipulator" />-Klasse Sortiermethoden bereitstellt, die eine größere Flexibilität als diese Sortiermethoden bieten.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Sort(System.Collections.Generic.IComparer{System.Web.UI.DataVisualization.Charting.DataPoint})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of DataPoint))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Collections.Generic.IComparer&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; -&gt; unit" Usage="series.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">Die <see cref="T:System.Collections.IComparer" />-Schnittstelle.</param>
        <summary>Sortiert die Punkte in der Reihe mithilfe der <see cref="T:System.Collections.IComparer" />-Schnittstelle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Web::UI::DataVisualization::Charting::PointSortOrder pointSortOrder);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Web.UI.DataVisualization.Charting.PointSortOrder -&gt; unit" Usage="series.Sort pointSortOrder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">Die Sortierreihenfolge</param>
        <summary>Sortiert die Datenpunkte in der Reihe mit der angegebenen Sortierreihenfolge.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Web::UI::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ sortBy);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Web.UI.DataVisualization.Charting.PointSortOrder * string -&gt; unit" Usage="series.Sort (pointSortOrder, sortBy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">Die Sortierreihenfolge</param>
        <param name="sortBy">Der für die Sortierung verwendete Wert (X, Y, Y2, ...).</param>
        <summary>Sortiert die Punkte in der Reihe mit der angegebenen Sortierreihenfolge und dem angegebenen Wert, der für die Sortierung verwendet werden soll.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XAxisType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AxisType XAxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.AxisType XAxisType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.XAxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property XAxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::AxisType XAxisType { System::Web::UI::DataVisualization::Charting::AxisType get(); void set(System::Web::UI::DataVisualization::Charting::AxisType value); };" />
      <MemberSignature Language="F#" Value="member this.XAxisType : System.Web.UI.DataVisualization.Charting.AxisType with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.XAxisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den x-Achsentyp der Reihe ab oder legt diesen fest.</summary>
        <value>Ein <see cref="P:System.Web.UI.DataVisualization.Charting.Series.XAxisType" />-Enumerationswert, der bestimmt, ob für die Reihe die primäre oder die sekundäre x-Achse verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für alle Diagrammtypen mit Ausnahme von horizontal ausgerichteten Diagrammen, z. b. Balken-und gestapelte Balkendiagramme, und Form Diagrammen wie Kreis-, Ring-, Trichter-und Pyramiden Diagramme, ist die primäre X-Achse immer die untere Achse, und die sekundäre Achse ist die obere Achse. Bei Balkendiagrammen und gestapelten Balkendiagrammen ist die primäre x-Achse die linke Achse, und die sekundäre x-Achse ist die Rechte Achse.  
  
 Wenn Daten mithilfe der sekundären X-Achse gezeichnet werden, müssen Sie die <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX2%2A> -Eigenschaft verwenden, um die Achsen Eigenschaften und nicht die <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX%2A> -Eigenschaft festzulegen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValueMember">
      <MemberSignature Language="C#" Value="public string XValueMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XValueMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.XValueMember" />
      <MemberSignature Language="VB.NET" Value="Public Property XValueMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XValueMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XValueMember : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.XValueMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldXConvertor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Memberspalte der Diagrammdatenquelle ab, die für die Datenbindung an den x-Wert der Reihe verwendet wird, oder legt diese fest.</summary>
        <value>Ein <see langword="string" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft akzeptiert entweder den Namen der Mitglieds Spalte oder den Ordinalwert der Mitglieds Spalte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValueType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartValueType XValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartValueType XValueType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.XValueType" />
      <MemberSignature Language="VB.NET" Value="Public Property XValueType As ChartValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartValueType XValueType { System::Web::UI::DataVisualization::Charting::ChartValueType get(); void set(System::Web::UI::DataVisualization::Charting::ChartValueType value); };" />
      <MemberSignature Language="F#" Value="member this.XValueType : System.Web.UI.DataVisualization.Charting.ChartValueType with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.XValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die auf der x-Achse gezeichneten Werttypen ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartValueType" />-Enumerationswert, der den Typ der in der Reihe gespeicherten x-Wertdaten bestimmt. Der Standardwert ist <see cref="F:System.Web.UI.DataVisualization.Charting.ChartValueType.Auto" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.XValueType%2A> -Eigenschaft bestimmt den Typ der von der Reihe gespeicherten Daten.  
  
 Legen Sie diese Eigenschaft <xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime> auf fest, um zuzulassen <xref:System.Double>, dass der X-Wert <xref:System.DateTime> als Wert eingegeben wird, nicht als. Datums-und Uhrzeitwerte werden intern durch .NET Framework <xref:System.Double> als Werte gespeichert. Das gleiche gilt für die- <xref:System.Web.UI.DataVisualization.Charting.CustomLabel.ToPosition%2A> Eigenschaft <xref:System.Web.UI.DataVisualization.Charting.CustomLabel.FromPosition%2A> und die <xref:System.Web.UI.DataVisualization.Charting.CustomLabel> -Eigenschaft von-Objekten.  
  
 Die `IntervalType` Eigenschaft, die in Achsen Bezeichnung, Teil Strich und Raster Klassen gefunden wird, bestimmt den Intervalltyp.  
  
> [!NOTE]
>  Wenn Sie ein <xref:System.DateTime> Format ordnungsgemäß mithilfe der-Eigenschaft auf die Achsen Bezeichnungen anwenden möchten, die aus den <xref:System.Web.UI.DataVisualization.Charting.LabelStyle.Format%2A> X-Werten des Daten Punkts generiert werden <xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime>, muss diese Eigenschaft auf festgelegt werden.  
  
 Diese Eigenschaft kann auch verwendet werden, um den Datentyp zu bestimmen, an den die X-Werte gebunden werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YAxisType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AxisType YAxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.AxisType YAxisType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YAxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property YAxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::AxisType YAxisType { System::Web::UI::DataVisualization::Charting::AxisType get(); void set(System::Web::UI::DataVisualization::Charting::AxisType value); };" />
      <MemberSignature Language="F#" Value="member this.YAxisType : System.Web.UI.DataVisualization.Charting.AxisType with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.YAxisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den y-Achsentyp einer Reihe ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.AxisType" />-Enumerationswert, der bestimmt, ob für eine Reihe die primäre oder die sekundäre y-Achse verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.YAxisType%2A> -Eigenschaft bestimmt, ob eine Reihe mithilfe der primären oder sekundären Y-Achse gezeichnet wird.  
  
 Für alle Diagrammtypen mit Ausnahme von Kreis-, Ring-, Balken-, Balken-und gestapelten Balkendiagrammen ist die primäre Y-Achse die linke vertikale Achse, und die sekundäre Achse ist die Rechte vertikale Achse. Bei Balkendiagrammen und gestapelten Balkendiagrammen ist die primäre Achse die untere horizontale Achse, und die sekundäre Y-Achse ist die obere horizontale Achse.  
  
 Wenn Daten mithilfe der sekundären Y-Achse gezeichnet werden, müssen Sie die <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY2%2A> -Eigenschaft verwenden, um die Achsen Eigenschaften und nicht die <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY%2A> -Eigenschaft festzulegen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValueMembers">
      <MemberSignature Language="C#" Value="public string YValueMembers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YValueMembers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YValueMembers" />
      <MemberSignature Language="VB.NET" Value="Public Property YValueMembers As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YValueMembers { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YValueMembers : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.YValueMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldValueAxisUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldYConvertor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldValueAxisUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Memberspalten der Diagrammdatenquelle ab, die zum Binden von Daten an die y-Werte der Reihe verwendet werden, oder legt diese fest.</summary>
        <value>Ein <see langword="string" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft akzeptiert eine durch Kommas getrennte Zeichenfolge, die die Namen oder Ordinalwerte der Spalten enthält.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValuesPerPoint">
      <MemberSignature Language="C#" Value="public int YValuesPerPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 YValuesPerPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YValuesPerPoint" />
      <MemberSignature Language="VB.NET" Value="Public Property YValuesPerPoint As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int YValuesPerPoint { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.YValuesPerPoint : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.YValuesPerPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Anzahl von y-Werten ab, die für <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />-Objekte in einer <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> zulässig sind, oder legt diese fest.</summary>
        <value>Ein <see langword="integer" />-Wert, der die maximale Anzahl von y-Werten darstellt, die für die Datenpunkte in einer Reihe zulässig sind. Der Standardwert ist 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie ein <xref:System.Web.UI.DataVisualization.Charting.DataPoint> -Objekt hinzufügen, das mehr y-Werte aufweist, als diese Eigenschaft angibt, werden die überzähligen y-Werte ignoriert.  
  
 Die Anzahl der Y-Werte, die erforderlich sind, um ein Diagramm ordnungsgemäß anzuzeigen, hängt vom ausgewählten Diagrammtyp ab.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValueType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartValueType YValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartValueType YValueType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YValueType" />
      <MemberSignature Language="VB.NET" Value="Public Property YValueType As ChartValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartValueType YValueType { System::Web::UI::DataVisualization::Charting::ChartValueType get(); void set(System::Web::UI::DataVisualization::Charting::ChartValueType value); };" />
      <MemberSignature Language="F#" Value="member this.YValueType : System.Web.UI.DataVisualization.Charting.ChartValueType with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.YValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.SeriesYValueTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der y-Wertdaten in den in einer Reihe gespeicherten Datenpunkten ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.DataVisualization.Charting.ChartValueType" />-Enumerationswert, der den Typ der in der Reihe gespeicherten Y-Wertdaten bestimmt. Der Standardwert ist <see cref="F:System.Web.UI.DataVisualization.Charting.ChartValueType.Auto" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataVisualization.Charting.Series.YValueType%2A> -Eigenschaft bestimmt den Typ der von der Reihe gespeicherten Daten. Der Wert dieser Eigenschaft ist normalerweise auf <xref:System.Web.UI.DataVisualization.Charting.ChartValueType.Auto> oder <xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime>festgelegt.  
  
 Die `IntervalType` Eigenschaft, die in Achsen Bezeichnung, Teil Strich und Raster Klassen gefunden wird, bestimmt den Intervalltyp.  
  
 Diese Eigenschaft kann auch verwendet werden, um den Datentyp zu bestimmen, an den die Y-Werte gebunden sind.  
  
 Es ist möglich, Datums Ausdrücke als Werte von Datenpunkten zu zeichnen, obwohl dies nur selten erfolgt. Wenn Sie diese Eigenschaft auf <xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime>festlegen, kann der Y-Wert <xref:System.DateTime> als-Wert und nicht als-Wert eingegeben <xref:System.Double>werden. Datums-und Uhrzeitwerte werden intern durch .NET Framework <xref:System.Double> als Werte gespeichert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
