<Type Name="PrintProperty" FullName="System.Printing.IndexedProperties.PrintProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd57cf952f259817d689f7be63f785142ae02917" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PrintProperty : IDisposable, System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit PrintProperty extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Printing.IndexedProperties.PrintProperty" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PrintProperty&#xA;Implements IDeserializationCallback, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintProperty abstract : IDisposable, System::Runtime::Serialization::IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f1b9c-101">Stellt eine Eigenschaft (und den Wert der Eigenschaft) einer Hardware- oder Softwarekomponente eines Drucksystems dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f1b9c-101">Represents a property (and the value of the property) of a printing system hardware or software component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f1b9c-102">Das folgende Beispiel zeigt, wie Sie diese Klasse verwenden, um zur Laufzeit die Eigenschaften und die Typen der Eigenschaften eines Objekts Drucksystem ermitteln ohne Verwendung von Reflektion.</span><span class="sxs-lookup"><span data-stu-id="f1b9c-102">The following example shows how to use this class to discover at run time the properties, and the types of those properties, of a print system object, without using reflection.</span></span>  
  
 [!code-csharp[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/csharp/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/CSharp/Program.cs#showpropertytypeswithoutreflection)]
 [!code-vb[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/visualbasic/program.vb#showpropertytypeswithoutreflection)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PrintProperty (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PrintProperty(System::String ^ attributeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName">
          <span data-ttu-id="f1b9c-103">Der Name der von diesem Objekt dargestellten Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-103">The name of the property that this object represents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1b9c-104">Initialisiert eine neue Instanz der <see cref="T:System.Printing.IndexedProperties.PrintProperty" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-104">Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1b9c-105">Die `attributeName` sollten genauso wie der Name einer bestimmten Eigenschaft eines Objekts Drucksystem, einschließlich der Schreibweise geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f1b9c-105">The `attributeName` should be spelled exactly the same as the name of some particular property of a print system object, including casing.</span></span> <span data-ttu-id="f1b9c-106">Z. B. die <xref:System.Printing.PrintQueue.QueuePort%2A> Eigenschaft ein <xref:System.Printing.PrintQueue> Objekt muss "QueuePort", nicht "PrintPort", "Port" oder "Queueport" geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f1b9c-106">For example, the <xref:System.Printing.PrintQueue.QueuePort%2A> property of a <xref:System.Printing.PrintQueue> object must be spelled "QueuePort", not "PrintPort", "Port", or "Queueport".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f1b9c-107">Gibt die von der <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-107">Releases the resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1b9c-108">Gibt alle von der <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-108">Releases all resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">To be added.</param>
        <summary>
          <span data-ttu-id="f1b9c-109">Gibt die von der <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> verwendeten nicht verwalteten Ressourcen und optional die verwaltete Ressource frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-109">Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> and optionally releases the managed resource.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1b9c-110">Diese Methode wird aufgerufen, der öffentlich `Dispose()` Methode und die <xref:System.Object.Finalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f1b9c-110">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="f1b9c-111">`Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode mit den unbenannten booleschen Parametersatz hinzu `true`.</span><span class="sxs-lookup"><span data-stu-id="f1b9c-111">`Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`.</span></span> <span data-ttu-id="f1b9c-112"><xref:System.Object.Finalize%2A> Ruft `Dispose` mit den Parametersatz hinzu `false`.</span><span class="sxs-lookup"><span data-stu-id="f1b9c-112"><xref:System.Object.Finalize%2A> invokes `Dispose` with the parameter set to `false`.</span></span>  
  
 <span data-ttu-id="f1b9c-113">Wenn der boolesche Parameter ist `true`, diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte frei, die von diesem <xref:System.Printing.IndexedProperties.PrintProperty> Verweise.</span><span class="sxs-lookup"><span data-stu-id="f1b9c-113">When the Boolean parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Printing.IndexedProperties.PrintProperty> references.</span></span> <span data-ttu-id="f1b9c-114">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="f1b9c-114">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f1b9c-115">
              <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f1b9c-115">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="f1b9c-116">Beim Überschreiben von <see langword="Dispose(Boolean)" /> müssen Sie darauf achten, nicht auf Objekte zu verweisen, die durch einen früheren Aufruf von <see langword="Dispose" /> freigegeben wurden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f1b9c-116">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="f1b9c-117">Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="f1b9c-117">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="f1b9c-118">Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Überschreiben der Finalize-Methode](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            <span class="sxs-lookup">
              <span data-stu-id="f1b9c-118">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~PrintProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!PrintProperty ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1b9c-119">Ermöglicht der <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> den Versuch, Ressourcen freizugeben und andere Bereinigungsvorgänge durchzuführen, bevor die <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> durch die Garbage Collection wieder zugänglich gemacht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-119">Enables a <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> to attempt to free resources and to perform other cleanup operations before the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDispose">
      <MemberSignature Language="C#" Value="protected virtual void InternalDispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InternalDispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.InternalDispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InternalDispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InternalDispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f1b9c-120">
            <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-120">
              <see langword="true" /> to release both the managed resources and the unmanaged resources; <see langword="false" /> to release only the unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1b9c-121">Gibt die vom <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-121">Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Printing.IndexedProperties.PrintProperty.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1b9c-122">Ruft einen Wert ab, mit dem angegeben wird, ob das Objekt freigegeben wurde, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-122">Gets or sets a value that indicates whether the object has been disposed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1b9c-123">
            <see langword="true" />, wenn das Objekt freigegeben wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-123">
              <see langword="true" /> if the object has been disposed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f1b9c-124">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-124">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="protected bool IsInitialized { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Printing.IndexedProperties.PrintProperty.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Protected Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsInitialized {  void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1b9c-125">Ruft einen Wert ab, mit dem angegeben wird, ob das Objekt initialisiert wurde, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-125">Gets or sets a value that indicates whether the object has been initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1b9c-126">
            <see langword="true" />, wenn das Objekt initialisiert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-126">
              <see langword="true" /> if the object has been initialized; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f1b9c-127">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-127">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Printing.IndexedProperties.PrintProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1b9c-128">Ruft beim Überschreiben in einer abgeleiteten Klasse den Namen der Eigenschaft ab, die das Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-128">When overridden in a derived class, gets the name of the property that the object represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1b9c-129">Ein <see cref="T:System.String" />, der den Namen der Eigenschaft darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-129">A <see cref="T:System.String" /> that represents the name of the property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f1b9c-130">Das folgende Beispiel zeigt, wie diese Eigenschaft verwendet, um zur Laufzeit die Eigenschaften und die Typen der Eigenschaften eines Objekts Drucksystem ermitteln ohne Verwendung der Reflektion.</span><span class="sxs-lookup"><span data-stu-id="f1b9c-130">The following example shows how to use this property to discover at run time the properties, and the types of those properties, of a print system object, without using reflection.</span></span>  
  
 [!code-csharp[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/csharp/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/CSharp/Program.cs#showpropertytypeswithoutreflection)]
 [!code-vb[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/visualbasic/program.vb#showpropertytypeswithoutreflection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="f1b9c-131">Die Quelle des Ereignisses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-131">The source of the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1b9c-132">Implementiert beim Überschreiben in einer abgeleiteten Klasse die <see cref="T:System.Runtime.Serialization.ISerializable" />-Schnittstelle und löst das Deserialisierungsereignis aus, wenn die Deserialisierung abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-132">When overridden in a derived class, implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Printing.IndexedProperties.PrintProperty.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1b9c-133">Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der Eigenschaft ab, die das Objekt darstellt, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1b9c-133">When overridden in a derived class, gets or sets the value of the property that the object represents.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f1b9c-134">Das folgende Beispiel zeigt, wie diese Eigenschaft verwendet, um zur Laufzeit die Eigenschaften und die Typen der Eigenschaften eines Objekts Drucksystem ermitteln ohne Verwendung der Reflektion.</span><span class="sxs-lookup"><span data-stu-id="f1b9c-134">The following example shows how to use this property to discover at run time the properties, and the types of those properties, of a print system object, without using reflection.</span></span>  
  
 [!code-csharp[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/csharp/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/CSharp/Program.cs#showpropertytypeswithoutreflection)]
 [!code-vb[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/visualbasic/program.vb#showpropertytypeswithoutreflection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>