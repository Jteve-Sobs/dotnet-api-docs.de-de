<Type Name="TaskCompletionSource&lt;TResult&gt;" FullName="System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="83187e8819f7675a900c9704b41b244b9077e2ff" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58686697" /></Metadata><TypeSignature Language="C#" Value="public class TaskCompletionSource&lt;TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskCompletionSource`1&lt;TResult&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskCompletionSource`1" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskCompletionSource(Of TResult)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class TaskCompletionSource" />
  <TypeSignature Language="F#" Value="type TaskCompletionSource&lt;'Result&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResult"><span data-ttu-id="28aa2-101">Der Typ des Ergebniswerts zugeordneten <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span><span class="sxs-lookup"><span data-stu-id="28aa2-101">The type of the result value associated with this <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></typeparam>
    <summary><span data-ttu-id="28aa2-102">Stellt die Producerseite eines <see cref="T:System.Threading.Tasks.Task`1" />-Objekts dar, dessen Bindung an einen Delegaten aufgehoben wurde. Das Element ermöglicht mithilfe der <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" />-Eigenschaft den Zugriff auf die Consumerseite.</span><span class="sxs-lookup"><span data-stu-id="28aa2-102">Represents the producer side of a <see cref="T:System.Threading.Tasks.Task`1" /> unbound to a delegate, providing access to the consumer side through the <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aa2-103">In vielen Szenarien ist es eignet sich zum Aktivieren einer <xref:System.Threading.Tasks.Task%601> einen externen asynchronen Vorgang darstellen.</span><span class="sxs-lookup"><span data-stu-id="28aa2-103">In many scenarios, it is useful to enable a <xref:System.Threading.Tasks.Task%601> to represent an external asynchronous operation.</span></span> <span data-ttu-id="28aa2-104"><xref:System.Threading.Tasks.TaskCompletionSource%601> wird für diesen Zweck bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="28aa2-104"><xref:System.Threading.Tasks.TaskCompletionSource%601> is provided for this purpose.</span></span> <span data-ttu-id="28aa2-105">Dadurch wird die Erstellung einer Aufgabe, die an Consumer übergeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="28aa2-105">It enables the creation of a task that can be handed out to consumers.</span></span> <span data-ttu-id="28aa2-106">Die Kunden können die Elemente der Aufgabe die gleiche Weise verwenden, wie in allen anderen Szenarien, die Verarbeitung von Task-Membervariablen.</span><span class="sxs-lookup"><span data-stu-id="28aa2-106">The consumers can use the members of the task the same way as they would in any other scenario handling task member variables.</span></span> <span data-ttu-id="28aa2-107">Im Gegensatz zu den meisten Aufgaben der Status einer Aufgabe, die von einer TaskCompletionSource erstellt jedoch explizit durch die Methoden für TaskCompletionSource gesteuert.</span><span class="sxs-lookup"><span data-stu-id="28aa2-107">However, unlike most tasks, the state of a task created by a TaskCompletionSource is controlled explicitly by the methods on TaskCompletionSource.</span></span> <span data-ttu-id="28aa2-108">Dies ermöglicht den Abschluss des asynchronen Vorgangs externen an die zugrunde liegende Aufgabe weitergegeben werden.</span><span class="sxs-lookup"><span data-stu-id="28aa2-108">This enables the completion of the external asynchronous operation to be propagated to the underlying Task.</span></span> <span data-ttu-id="28aa2-109">Die Trennung sichergestellt, dass Kunden nicht den Zustand ohne Zugriff auf die entsprechende TaskCompletionSource wechseln können.</span><span class="sxs-lookup"><span data-stu-id="28aa2-109">The separation also ensures that consumers are not able to transition the state without access to the corresponding TaskCompletionSource.</span></span> <span data-ttu-id="28aa2-110">Weitere Informationen finden Sie im Eintrag [die Art der TaskCompletionSource\<TResult >](https://devblogs.microsoft.com/pfxteam/the-nature-of-taskcompletionsourcetresult/) im zur parallelen Programmierung mit .NET Blog.</span><span class="sxs-lookup"><span data-stu-id="28aa2-110">For more information, see the entry [The Nature of TaskCompletionSource\<TResult>](https://devblogs.microsoft.com/pfxteam/the-nature-of-taskcompletionsourcetresult/) in the Parallel Programming with .NET blog.</span></span>  
  
 <span data-ttu-id="28aa2-111">Die [Parallel Extensions Samples](https://go.microsoft.com/fwlink/?LinkID=165717) auch enthalten Beispiele zur Verwendung von <xref:System.Threading.Tasks.TaskCompletionSource%601>.</span><span class="sxs-lookup"><span data-stu-id="28aa2-111">The [Parallel Extensions samples](https://go.microsoft.com/fwlink/?LinkID=165717) also contain examples of how to use <xref:System.Threading.Tasks.TaskCompletionSource%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aa2-112">Das folgende Beispiel zeigt, wie Sie mit einem <xref:System.Threading.Tasks.TaskCompletionSource%601>:</span><span class="sxs-lookup"><span data-stu-id="28aa2-112">The following example shows how to use a <xref:System.Threading.Tasks.TaskCompletionSource%601>:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.TaskCompletionSource#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.taskcompletionsource/cs/taskcompletionsource.cs#01)]
 [!code-vb[System.Threading.Tasks.TaskCompletionSource#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.taskcompletionsource/vb/taskcompletionsource.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="28aa2-113">Alle Mitglieder der <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> sind threadsicher und können von mehreren Threads gleichzeitig verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="28aa2-113">All members of <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> are thread-safe and may be used from multiple threads concurrently.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="28aa2-114">Verwenden von TPL mit anderen asynchronen Mustern</span><span class="sxs-lookup"><span data-stu-id="28aa2-114">Using TPL with Other Asynchronous Patterns</span></span></related>
    <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="28aa2-115">Gewusst wie: Umschließen von EAP-Mustern in einer Aufgabe</span><span class="sxs-lookup"><span data-stu-id="28aa2-115">How to: Wrap EAP Patterns in a Task</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28aa2-116">Erstellt ein <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="28aa2-116">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28aa2-117">Erstellt eine <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span><span class="sxs-lookup"><span data-stu-id="28aa2-117">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="28aa2-118">Verwenden von TPL mit anderen asynchronen Mustern</span><span class="sxs-lookup"><span data-stu-id="28aa2-118">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="28aa2-119">Gewusst wie: Umschließen von EAP-Mustern in einer Aufgabe</span><span class="sxs-lookup"><span data-stu-id="28aa2-119">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; : obj -&gt; System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="28aa2-120">Der Zustand, der als zugrunde liegender AsyncState von <see cref="T:System.Threading.Tasks.Task`1" /> verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="28aa2-120">The state to use as the underlying <see cref="T:System.Threading.Tasks.Task`1" />'s AsyncState.</span></span></param>
        <summary><span data-ttu-id="28aa2-121">Erstellt ein <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />-Objekt mit dem angegebenen Zustand.</span><span class="sxs-lookup"><span data-stu-id="28aa2-121">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> with the specified state.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="28aa2-122">Verwenden von TPL mit anderen asynchronen Mustern</span><span class="sxs-lookup"><span data-stu-id="28aa2-122">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="28aa2-123">Gewusst wie: Umschließen von EAP-Mustern in einer Aufgabe</span><span class="sxs-lookup"><span data-stu-id="28aa2-123">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource (System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource(System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; : System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; creationOptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="creationOptions"><span data-ttu-id="28aa2-124">Die Optionen, die beim Erstellen des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task`1" />-Objekts zu verwenden sind.</span><span class="sxs-lookup"><span data-stu-id="28aa2-124">The options to use when creating the underlying <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="28aa2-125">Erstellt ein <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />-Objekt mit den angegebenen Optionen.</span><span class="sxs-lookup"><span data-stu-id="28aa2-125">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> with the specified options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aa2-126">Die <xref:System.Threading.Tasks.Task%601> von dieser Instanz erstellt und über seine <xref:System.Threading.Tasks.TaskCompletionSource%601.Task%2A> Eigenschaft unter Verwendung des angegebenen instanziiert `creationOptions`.</span><span class="sxs-lookup"><span data-stu-id="28aa2-126">The <xref:System.Threading.Tasks.Task%601> created by this instance and accessible through its <xref:System.Threading.Tasks.TaskCompletionSource%601.Task%2A> property will be instantiated using the specified `creationOptions`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="28aa2-127">Der <paramref name="creationOptions" /> stellt Optionen dar, die für die Verwendung mit einem <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> ungültig sind.</span><span class="sxs-lookup"><span data-stu-id="28aa2-127">The <paramref name="creationOptions" /> represent options invalid for use with a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="28aa2-128">Verwenden von TPL mit anderen asynchronen Mustern</span><span class="sxs-lookup"><span data-stu-id="28aa2-128">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="28aa2-129">Gewusst wie: Umschließen von EAP-Mustern in einer Aufgabe</span><span class="sxs-lookup"><span data-stu-id="28aa2-129">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource (object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As Object, creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource(System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; : obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; (state, creationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="28aa2-130">Der Zustand, der als zugrunde liegender AsyncState von <see cref="T:System.Threading.Tasks.Task`1" /> verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="28aa2-130">The state to use as the underlying <see cref="T:System.Threading.Tasks.Task`1" />'s AsyncState.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="28aa2-131">Die Optionen, die beim Erstellen des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task`1" />-Objekts zu verwenden sind.</span><span class="sxs-lookup"><span data-stu-id="28aa2-131">The options to use when creating the underlying <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="28aa2-132">Erstellt ein <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />-Objekt mit dem angegebenen Zustand und den angegebenen Optionen.</span><span class="sxs-lookup"><span data-stu-id="28aa2-132">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> with the specified state and options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="28aa2-133">Der <paramref name="creationOptions" /> stellt Optionen dar, die für die Verwendung mit einem <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> ungültig sind.</span><span class="sxs-lookup"><span data-stu-id="28aa2-133">The <paramref name="creationOptions" /> represent options invalid for use with a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="28aa2-134">Verwenden von TPL mit anderen asynchronen Mustern</span><span class="sxs-lookup"><span data-stu-id="28aa2-134">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="28aa2-135">Gewusst wie: Umschließen von EAP-Mustern in einer Aufgabe</span><span class="sxs-lookup"><span data-stu-id="28aa2-135">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetCanceled">
      <MemberSignature Language="C#" Value="public void SetCanceled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCanceled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetCanceled" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCanceled ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCanceled();" />
      <MemberSignature Language="F#" Value="member this.SetCanceled : unit -&gt; unit" Usage="taskCompletionSource.SetCanceled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28aa2-136">Sorgt für den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task`1" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />-Zustand.</span><span class="sxs-lookup"><span data-stu-id="28aa2-136">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28aa2-137">Der zugrunde liegende <see cref="T:System.Threading.Tasks.Task`1" /> befindet sich bereits in einem der drei Endzustände: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> oder <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />, oder wenn der zugrunde liegende <see cref="T:System.Threading.Tasks.Task`1" /> bereits freigegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="28aa2-137">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />, or if the underlying <see cref="T:System.Threading.Tasks.Task`1" /> has already been disposed.</span></span></exception>
        <altmember cref="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled" />
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="28aa2-138">Verwenden von TPL mit anderen asynchronen Mustern</span><span class="sxs-lookup"><span data-stu-id="28aa2-138">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="28aa2-139">Gewusst wie: Umschließen von EAP-Mustern in einer Aufgabe</span><span class="sxs-lookup"><span data-stu-id="28aa2-139">How to: Wrap EAP Patterns in a Task</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="28aa2-140">Aufgabenabbruch</span><span class="sxs-lookup"><span data-stu-id="28aa2-140">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetException">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28aa2-141">Sorgt für den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task`1" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />-Zustand.</span><span class="sxs-lookup"><span data-stu-id="28aa2-141">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> object into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetException">
      <MemberSignature Language="C#" Value="public void SetException (System.Collections.Generic.IEnumerable&lt;Exception&gt; exceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetException(class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; exceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetException (exceptions As IEnumerable(Of Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetException(System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ exceptions);" />
      <MemberSignature Language="F#" Value="member this.SetException : seq&lt;Exception&gt; -&gt; unit" Usage="taskCompletionSource.SetException exceptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="exceptions"><span data-ttu-id="28aa2-142">Die Auflistung der Ausnahmen, die an das <see cref="T:System.Threading.Tasks.Task`1" />-Objekt gebunden werden sollen.</span><span class="sxs-lookup"><span data-stu-id="28aa2-142">The collection of exceptions to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="28aa2-143">Sorgt für den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task`1" /> in den <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />-Status und bindet eine Sammlung von Ausnahmeobjekten daran.</span><span class="sxs-lookup"><span data-stu-id="28aa2-143">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds a collection of exception objects to it.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28aa2-144"><see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="28aa2-144">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28aa2-145">Das <paramref name="exceptions" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="28aa2-145">The <paramref name="exceptions" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28aa2-146"><paramref name="exceptions" /> enthält mindestens ein NULL-Element.</span><span class="sxs-lookup"><span data-stu-id="28aa2-146">There are one or more null elements in <paramref name="exceptions" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28aa2-147">Der zugrunde liegende <see cref="T:System.Threading.Tasks.Task`1" /> ist bereits in einem der drei Endzustände: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> oder <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span><span class="sxs-lookup"><span data-stu-id="28aa2-147">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="28aa2-148">Verwenden von TPL mit anderen asynchronen Mustern</span><span class="sxs-lookup"><span data-stu-id="28aa2-148">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="28aa2-149">Gewusst wie: Umschließen von EAP-Mustern in einer Aufgabe</span><span class="sxs-lookup"><span data-stu-id="28aa2-149">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetException">
      <MemberSignature Language="C#" Value="public void SetException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="member this.SetException : Exception -&gt; unit" Usage="taskCompletionSource.SetException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="28aa2-150">Die Ausnahme, die an das <see cref="T:System.Threading.Tasks.Task`1" />-Objekt gebunden werden soll.</span><span class="sxs-lookup"><span data-stu-id="28aa2-150">The exception to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="28aa2-151">Lässt den zugrunde liegenden <see cref="T:System.Threading.Tasks.Task`1" /> in den <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />-Status übergehen und bindet ihn an eine angegebene Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="28aa2-151">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds it to a specified exception.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28aa2-152"><see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="28aa2-152">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28aa2-153">Das <paramref name="exception" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="28aa2-153">The <paramref name="exception" /> argument is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28aa2-154">Der zugrunde liegende <see cref="T:System.Threading.Tasks.Task`1" /> ist bereits in einem der drei Endzustände: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> oder <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span><span class="sxs-lookup"><span data-stu-id="28aa2-154">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="28aa2-155">Verwenden von TPL mit anderen asynchronen Mustern</span><span class="sxs-lookup"><span data-stu-id="28aa2-155">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="28aa2-156">Gewusst wie: Umschließen von EAP-Mustern in einer Aufgabe</span><span class="sxs-lookup"><span data-stu-id="28aa2-156">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetResult">
      <MemberSignature Language="C#" Value="public void SetResult (TResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResult(!TResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResult (result As TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResult(TResult result);" />
      <MemberSignature Language="F#" Value="member this.SetResult : 'Result -&gt; unit" Usage="taskCompletionSource.SetResult result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="TResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="28aa2-157">Der Ergebniswert, der an das <see cref="T:System.Threading.Tasks.Task`1" />-Objekt gebunden werden soll.</span><span class="sxs-lookup"><span data-stu-id="28aa2-157">The result value to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="28aa2-158">Sorgt für den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task`1" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />-Zustand.</span><span class="sxs-lookup"><span data-stu-id="28aa2-158">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" /> state.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28aa2-159"><see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="28aa2-159">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28aa2-160">Der zugrunde liegende <see cref="T:System.Threading.Tasks.Task`1" /> ist bereits in einem der drei Endzustände: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> oder <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span><span class="sxs-lookup"><span data-stu-id="28aa2-160">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="28aa2-161">Verwenden von TPL mit anderen asynchronen Mustern</span><span class="sxs-lookup"><span data-stu-id="28aa2-161">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="28aa2-162">Gewusst wie: Umschließen von EAP-Mustern in einer Aufgabe</span><span class="sxs-lookup"><span data-stu-id="28aa2-162">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Task">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; Task { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; Task" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskCompletionSource`1.Task" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Task As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task&lt;TResult&gt; ^ Task { System::Threading::Tasks::Task&lt;TResult&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Task : System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;.Task" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aa2-163">Ruft den von der <see cref="T:System.Threading.Tasks.Task`1" /> erstellten <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> ab.</span><span class="sxs-lookup"><span data-stu-id="28aa2-163">Gets the <see cref="T:System.Threading.Tasks.Task`1" /> created by this <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></summary>
        <value><span data-ttu-id="28aa2-164">Gibt den von dieser <see cref="T:System.Threading.Tasks.Task`1" /> erstellten <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="28aa2-164">Returns the <see cref="T:System.Threading.Tasks.Task`1" /> created by this <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aa2-165">Diese Eigenschaft ermöglicht einem Consumer, den Zugriff auf die <xref:System.Threading.Tasks.Task%601> gesteuert, die von dieser Instanz.</span><span class="sxs-lookup"><span data-stu-id="28aa2-165">This property enables a consumer to access the <xref:System.Threading.Tasks.Task%601> that is controlled by this instance.</span></span> <span data-ttu-id="28aa2-166">Bei der Erstellung eine <xref:System.Threading.Tasks.TaskCompletionSource%601> -Objekt, das <xref:System.Threading.Tasks.Task.Status%2A> -Eigenschaft dieses <xref:System.Threading.Tasks.Task%601> gibt-Objekt <xref:System.Threading.Tasks.TaskStatus.WaitingForActivation></span><span class="sxs-lookup"><span data-stu-id="28aa2-166">When you create a <xref:System.Threading.Tasks.TaskCompletionSource%601> object, the <xref:System.Threading.Tasks.Task.Status%2A> property of this <xref:System.Threading.Tasks.Task%601> object returns <xref:System.Threading.Tasks.TaskStatus.WaitingForActivation></span></span>  
  
 <span data-ttu-id="28aa2-167">Die <xref:System.Threading.Tasks.TaskCompletionSource%601.SetResult%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, und <xref:System.Threading.Tasks.TaskCompletionSource%601.SetCanceled%2A> Methoden (und deren Varianten "Try") auf dieser Instanz alle Ergebnis in die entsprechenden Zustandsübergänge dazu zugrunde liegende Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="28aa2-167">The <xref:System.Threading.Tasks.TaskCompletionSource%601.SetResult%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, and <xref:System.Threading.Tasks.TaskCompletionSource%601.SetCanceled%2A> methods (and their "Try" variants) on this instance all result in the relevant state transitions on this underlying Task.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="28aa2-168">Verwenden von TPL mit anderen asynchronen Mustern</span><span class="sxs-lookup"><span data-stu-id="28aa2-168">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="28aa2-169">Gewusst wie: Umschließen von EAP-Mustern in einer Aufgabe</span><span class="sxs-lookup"><span data-stu-id="28aa2-169">How to: Wrap EAP Patterns in a Task</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="28aa2-170">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="28aa2-170">Task-based Asynchronous Programming</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TrySetCanceled">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28aa2-171">Versucht, den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task`1" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />-Zustand auszuführen.</span><span class="sxs-lookup"><span data-stu-id="28aa2-171">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TrySetCanceled">
      <MemberSignature Language="C#" Value="public bool TrySetCanceled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetCanceled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetCanceled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetCanceled();" />
      <MemberSignature Language="F#" Value="member this.TrySetCanceled : unit -&gt; bool" Usage="taskCompletionSource.TrySetCanceled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28aa2-172">Versucht, den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task`1" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />-Zustand auszuführen.</span><span class="sxs-lookup"><span data-stu-id="28aa2-172">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</span></span></summary>
        <returns><span data-ttu-id="28aa2-173">True, wenn der Vorgang erfolgreich war, false, wenn der Vorgang nicht erfolgreich war oder das Objekt bereits freigegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="28aa2-173">True if the operation was successful; false if the operation was unsuccessful or the object has already been disposed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aa2-174">Dieser Vorgang gibt "false" zurück, wenn die <xref:System.Threading.Tasks.Task%601> ist bereits in einem der drei Endzustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span><span class="sxs-lookup"><span data-stu-id="28aa2-174">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 <span data-ttu-id="28aa2-175">Diese Methode gibt auch False zurück, wenn die zugrunde liegende <xref:System.Threading.Tasks.Task%601> wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="28aa2-175">This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="28aa2-176">Verwenden von TPL mit anderen asynchronen Mustern</span><span class="sxs-lookup"><span data-stu-id="28aa2-176">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="28aa2-177">Gewusst wie: Umschließen von EAP-Mustern in einer Aufgabe</span><span class="sxs-lookup"><span data-stu-id="28aa2-177">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TrySetCanceled">
      <MemberSignature Language="C#" Value="public bool TrySetCanceled (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetCanceled(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetCanceled(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.TrySetCanceled : System.Threading.CancellationToken -&gt; bool" Usage="taskCompletionSource.TrySetCanceled cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="28aa2-178">Ein Abbruchtoken.</span><span class="sxs-lookup"><span data-stu-id="28aa2-178">A cancellation token.</span></span></param>
        <summary><span data-ttu-id="28aa2-179">Versucht, den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task`1" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />-Zustand auszuführen, und ermöglicht das Speichern eines Abbruchtokens in der abgebrochenen Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="28aa2-179">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state and enables a cancellation token to be stored in the canceled task.</span></span></summary>
        <returns><span data-ttu-id="28aa2-180"><see langword="true" />, wenn der Vorgang erfolgreich ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aa2-180"><see langword="true" /> if the operation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aa2-181">Gibt die Methode "false" zurück, wenn die zugrunde liegende <xref:System.Threading.Tasks.Task%601> Objekt ist bereits in einem der folgenden drei Endzustände.</span><span class="sxs-lookup"><span data-stu-id="28aa2-181">The method returns false if the underlying <xref:System.Threading.Tasks.Task%601> object is already in one of the following three final states.</span></span>  
  
-   <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType>  
  
-   <xref:System.Threading.Tasks.TaskStatus.Faulted?displayProperty=nameWithType>  
  
-   <xref:System.Threading.Tasks.TaskStatus.RanToCompletion?displayProperty=nameWithType>  
  
 <span data-ttu-id="28aa2-182">Diese Methode gibt auch zurück `false` Wenn die zugrunde liegende <xref:System.Threading.Tasks.Task%601> Objekt wurde bereits verworfen wurde.</span><span class="sxs-lookup"><span data-stu-id="28aa2-182">This method also returns `false` if the underlying <xref:System.Threading.Tasks.Task%601> object has already been disposed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TrySetException">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28aa2-183">Versucht, den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task`1" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />-Zustand auszuführen.</span><span class="sxs-lookup"><span data-stu-id="28aa2-183">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> object into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TrySetException">
      <MemberSignature Language="C#" Value="public bool TrySetException (System.Collections.Generic.IEnumerable&lt;Exception&gt; exceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetException(class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; exceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetException (exceptions As IEnumerable(Of Exception)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetException(System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ exceptions);" />
      <MemberSignature Language="F#" Value="member this.TrySetException : seq&lt;Exception&gt; -&gt; bool" Usage="taskCompletionSource.TrySetException exceptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="exceptions"><span data-ttu-id="28aa2-184">Die Auflistung der Ausnahmen, die an das <see cref="T:System.Threading.Tasks.Task`1" />-Objekt gebunden werden sollen.</span><span class="sxs-lookup"><span data-stu-id="28aa2-184">The collection of exceptions to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="28aa2-185">Versucht den Übergang der zugrunde liegenden <see cref="T:System.Threading.Tasks.Task`1" /> in den <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />-Status und bindet eine Sammlung von Ausnahmeobjekten daran.</span><span class="sxs-lookup"><span data-stu-id="28aa2-185">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds a collection of exception objects to it.</span></span></summary>
        <returns><span data-ttu-id="28aa2-186">True, wenn der Vorgang erfolgreich war, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="28aa2-186">True if the operation was successful; otherwise, false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aa2-187">Dieser Vorgang gibt "false" zurück, wenn die <xref:System.Threading.Tasks.Task%601> ist bereits in einem der drei Endzustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span><span class="sxs-lookup"><span data-stu-id="28aa2-187">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28aa2-188"><see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="28aa2-188">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28aa2-189">Das <paramref name="exceptions" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="28aa2-189">The <paramref name="exceptions" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28aa2-190"><paramref name="exceptions" /> enthält mindestens ein NULL-Element.</span><span class="sxs-lookup"><span data-stu-id="28aa2-190">There are one or more null elements in <paramref name="exceptions" />.</span></span>  
  
<span data-ttu-id="28aa2-191">- oder -</span><span class="sxs-lookup"><span data-stu-id="28aa2-191">-or-</span></span> 
<span data-ttu-id="28aa2-192">Die <paramref name="exceptions" />-Sammlung ist leer.</span><span class="sxs-lookup"><span data-stu-id="28aa2-192">The <paramref name="exceptions" /> collection is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="28aa2-193">Verwenden von TPL mit anderen asynchronen Mustern</span><span class="sxs-lookup"><span data-stu-id="28aa2-193">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="28aa2-194">Gewusst wie: Umschließen von EAP-Mustern in einer Aufgabe</span><span class="sxs-lookup"><span data-stu-id="28aa2-194">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TrySetException">
      <MemberSignature Language="C#" Value="public bool TrySetException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="member this.TrySetException : Exception -&gt; bool" Usage="taskCompletionSource.TrySetException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="28aa2-195">Die Ausnahme, die an das <see cref="T:System.Threading.Tasks.Task`1" />-Objekt gebunden werden soll.</span><span class="sxs-lookup"><span data-stu-id="28aa2-195">The exception to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="28aa2-196">Versucht den Übergang der zugrunde liegenden <see cref="T:System.Threading.Tasks.Task`1" /> in den <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />-Status und bindet sie an eine angegebene Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="28aa2-196">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds it to a specified exception.</span></span></summary>
        <returns><span data-ttu-id="28aa2-197">True, wenn der Vorgang erfolgreich war, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="28aa2-197">True if the operation was successful; otherwise, false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aa2-198">Dieser Vorgang gibt "false" zurück, wenn die <xref:System.Threading.Tasks.Task%601> ist bereits in einem der drei Endzustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span><span class="sxs-lookup"><span data-stu-id="28aa2-198">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28aa2-199"><see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="28aa2-199">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28aa2-200">Das <paramref name="exception" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="28aa2-200">The <paramref name="exception" /> argument is null.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="28aa2-201">Verwenden von TPL mit anderen asynchronen Mustern</span><span class="sxs-lookup"><span data-stu-id="28aa2-201">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="28aa2-202">Gewusst wie: Umschließen von EAP-Mustern in einer Aufgabe</span><span class="sxs-lookup"><span data-stu-id="28aa2-202">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TrySetResult">
      <MemberSignature Language="C#" Value="public bool TrySetResult (TResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetResult(!TResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetResult (result As TResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetResult(TResult result);" />
      <MemberSignature Language="F#" Value="member this.TrySetResult : 'Result -&gt; bool" Usage="taskCompletionSource.TrySetResult result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="TResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="28aa2-203">Der Ergebniswert, der an das <see cref="T:System.Threading.Tasks.Task`1" />-Objekt gebunden werden soll.</span><span class="sxs-lookup"><span data-stu-id="28aa2-203">The result value to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="28aa2-204">Versucht, den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task`1" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />-Zustand auszuführen.</span><span class="sxs-lookup"><span data-stu-id="28aa2-204">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" /> state.</span></span></summary>
        <returns><span data-ttu-id="28aa2-205">True, wenn der Vorgang erfolgreich war, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="28aa2-205">True if the operation was successful; otherwise, false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aa2-206">Dieser Vorgang gibt "false" zurück, wenn die <xref:System.Threading.Tasks.Task%601> ist bereits in einem der drei Endzustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span><span class="sxs-lookup"><span data-stu-id="28aa2-206">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 <span data-ttu-id="28aa2-207">Diese Methode gibt auch False zurück, wenn die zugrunde liegende <xref:System.Threading.Tasks.Task%601> wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="28aa2-207">This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="28aa2-208">Verwenden von TPL mit anderen asynchronen Mustern</span><span class="sxs-lookup"><span data-stu-id="28aa2-208">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="28aa2-209">Gewusst wie: Umschließen von EAP-Mustern in einer Aufgabe</span><span class="sxs-lookup"><span data-stu-id="28aa2-209">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>