<Type Name="TaskFactory&lt;TResult&gt;" FullName="System.Threading.Tasks.TaskFactory&lt;TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ac256f08add3803f1dba5244ff8fa5e37774f807" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TaskFactory&lt;TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskFactory`1&lt;TResult&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskFactory(Of TResult)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class TaskFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResult">
      <span data-ttu-id="44830-101">Der Rückgabewert der <see cref="T:System.Threading.Tasks.Task`1" />-Objekte, die von den Methoden dieser Klasse erstellt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="44830-101">The return value of the <see cref="T:System.Threading.Tasks.Task`1" /> objects that the methods of this class create.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="44830-102">Provides support for creating and scheduling <see cref="T:System.Threading.Tasks.Task`1" /> objects.</span>
      <span class="sxs-lookup">
        <span data-stu-id="44830-102">Provides support for creating and scheduling <see cref="T:System.Threading.Tasks.Task`1" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-103">.NET Framework stellt zwei Factorys zum Erstellen und Planen von Aufgaben bereit:</span><span class="sxs-lookup"><span data-stu-id="44830-103">The .NET Framework provides two factories for creating and scheduling tasks:</span></span>  
  
-   <span data-ttu-id="44830-104">Die <xref:System.Threading.Tasks.TaskFactory> -Klasse, die erstellt <xref:System.Threading.Tasks.Task> und <xref:System.Threading.Tasks.Task%601> Objekte.</span><span class="sxs-lookup"><span data-stu-id="44830-104">The <xref:System.Threading.Tasks.TaskFactory> class, which creates <xref:System.Threading.Tasks.Task> and <xref:System.Threading.Tasks.Task%601> objects.</span></span>  
  
-   <span data-ttu-id="44830-105">Die <xref:System.Threading.Tasks.TaskFactory%601> -Klasse, die erstellt <xref:System.Threading.Tasks.Task%601> Objekte.</span><span class="sxs-lookup"><span data-stu-id="44830-105">The <xref:System.Threading.Tasks.TaskFactory%601> class, which creates <xref:System.Threading.Tasks.Task%601> objects.</span></span>  
  
 <span data-ttu-id="44830-106">Die <xref:System.Threading.Tasks.TaskFactory%601> -Klasse können Sie die folgenden Schritte ausführen:</span><span class="sxs-lookup"><span data-stu-id="44830-106">The <xref:System.Threading.Tasks.TaskFactory%601> class allows you to do the following:</span></span>  
  
-   <span data-ttu-id="44830-107">Eine Aufgabe erstellt, und starten Sie ihn sofort durch Aufrufen der <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="44830-107">Create a task and start it immediately by calling the <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> method.</span></span> <span data-ttu-id="44830-108">Sie können die Überladungen dieser Methode zum Erstellen und Ausführen eines Tasks, das nicht standardmäßigen Argumente erfordert aufrufen.</span><span class="sxs-lookup"><span data-stu-id="44830-108">You can call the overloads of this method to create and execute a task that requires non-default arguments.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="44830-109">Beginnend mit der [!INCLUDE[net_v45](~/includes/net-v45-md.md)]die <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> Methode bietet die einfachste Möglichkeit zum Erstellen einer Aufgabe mit Konfigurationswerte, und starten Sie ihn sofort.</span><span class="sxs-lookup"><span data-stu-id="44830-109">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method provides the easiest way to create a task with default configuration values and start it immediately.</span></span>  
  
-   <span data-ttu-id="44830-110">Erstellen Sie eine Aufgabe, die beginnt, wenn eine der Aufgaben in einem Array, durch Aufrufen abgeschlossen wurde der <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> oder <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="44830-110">Create a task that starts when any one of the tasks in an array has completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> or   <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> method.</span></span>  
  
-   <span data-ttu-id="44830-111">Erstellen Sie eine Aufgabe, die beginnt, wenn alle Aufgaben in einem Array, durch Aufrufen abgeschlossen wurden der <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> oder <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="44830-111">Create a task that starts when all the tasks in an array have completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> or <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> method.</span></span>  
  
 <span data-ttu-id="44830-112">Die statische <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> Eigenschaft gibt den Standardwert <xref:System.Threading.Tasks.TaskFactory%601> Objekt.</span><span class="sxs-lookup"><span data-stu-id="44830-112">The static <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property returns a default <xref:System.Threading.Tasks.TaskFactory%601> object.</span></span> <span data-ttu-id="44830-113">Sie können auch rufen Sie eine der der <xref:System.Threading.Tasks.TaskFactory%601> Klassenkonstruktoren so konfigurieren Sie die <xref:System.Threading.Tasks.Task%601> Objekte, die <xref:System.Threading.Tasks.TaskFactory%601> Klasse erstellt.</span><span class="sxs-lookup"><span data-stu-id="44830-113">You can also call one of the <xref:System.Threading.Tasks.TaskFactory%601> class constructors to configure the <xref:System.Threading.Tasks.Task%601> objects that  the <xref:System.Threading.Tasks.TaskFactory%601> class creates.</span></span> <span data-ttu-id="44830-114">Das folgende Beispiel konfiguriert eine neue <xref:System.Threading.Tasks.TaskFactory%601> Objekt, das Aufgaben zu erstellen, die einem angegebenen Abbruchtoken, Aufgabenerstellungsoptionen Fortsetzungsoptionen und eines benutzerdefinierten Taskplaners verfügen.</span><span class="sxs-lookup"><span data-stu-id="44830-114">The following example configures a new <xref:System.Threading.Tasks.TaskFactory%601> object to create tasks that have a specified cancellation token, task creation options, continuation options, and a customized task scheduler.</span></span>  
  
 [!code-csharp[TPL_Factories#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_factories/cs/factoriestresult.cs#2)]
 [!code-vb[TPL_Factories#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_factories/vb/factoriestresult.vb#2)]  
  
 <span data-ttu-id="44830-115">In den meisten Fällen, Sie müssen keine zum Instanziieren einer neuen <xref:System.Threading.Tasks.TaskFactory%601> Instanz.</span><span class="sxs-lookup"><span data-stu-id="44830-115">In most cases, you do not have to instantiate a new <xref:System.Threading.Tasks.TaskFactory%601> instance.</span></span> <span data-ttu-id="44830-116">Stattdessen können Sie die statische <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> Eigenschaft, die ein Factoryobjekt zurückgibt, die Standardwerte verwendet.</span><span class="sxs-lookup"><span data-stu-id="44830-116">Instead, you can use the static <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property, which returns a factory object that uses default values.</span></span> <span data-ttu-id="44830-117">Sie können dann Aufrufen ihrer Methoden zu den neue Aufgaben gestartet oder aufgabenfortsetzungen definieren.</span><span class="sxs-lookup"><span data-stu-id="44830-117">You can then call its methods to start new tasks or define task continuations.</span></span> <span data-ttu-id="44830-118">Eine Veranschaulichung finden Sie im Beispiel.</span><span class="sxs-lookup"><span data-stu-id="44830-118">For an illustration, see the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44830-119">Im folgenden Beispiel wird die statische <xref:System.Threading.Tasks.Task%601.Factory%2A> Eigenschaft zwei Aufrufe an die <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="44830-119">The following example uses the static <xref:System.Threading.Tasks.Task%601.Factory%2A> property to make two calls to the <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="44830-120">Die erste Aufgabe gibt ein Array von Zeichenfolgen, die mit den Namen der Dateien im Verzeichnis Eigene Dateien des Benutzers, aufgefüllt wird, während das zweite ein Array von Zeichenfolgen zurückgibt, das die Namen von Unterverzeichnissen des Verzeichnisses für die Benutzer eigene Dateien enthält.</span><span class="sxs-lookup"><span data-stu-id="44830-120">The first task returns a string array that is populated with the names of files in the user's MyDocuments directory, while the second returns a string array that is populated with the names of subdirectories of the user's MyDocuments directory.</span></span> <span data-ttu-id="44830-121">Er ruft dann die <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> -Methode, die zeigt Informationen über die Anzahl von Dateien und Verzeichnissen in den Arrays, die von den beiden Tasks zurückgegeben wird, nachdem sie die Ausführung abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="44830-121">It then calls the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> method, which displays information about the number of files and directories in the arrays returned by the two tasks after they have completed execution.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.Factory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.factory/cs/factory2.cs#2)]
 [!code-vb[System.Threading.Tasks.Task.Factory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.factory/vb/factory2.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="44830-122">Alle öffentlichen und geschützten Member der <see cref="T:System.Threading.Tasks.TaskFactory`1" /> sind threadsicher und können von mehreren Threads gleichzeitig verwendet werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="44830-122">All public and protected members of <see cref="T:System.Threading.Tasks.TaskFactory`1" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44830-123">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-123">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44830-124">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the default configuration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-124">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the default configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-125">Dieser Konstruktor erstellt ein <xref:System.Threading.Tasks.TaskFactory%601> Instanz mit einer Standardkonfiguration.</span><span class="sxs-lookup"><span data-stu-id="44830-125">This constructor creates a <xref:System.Threading.Tasks.TaskFactory%601> instance with a default configuration.</span></span> <span data-ttu-id="44830-126">Die <xref:System.Threading.Tasks.TaskCreationOptions> -Eigenschaft wird mit initialisiert <xref:System.Threading.Tasks.TaskCreationOptions.None>, <xref:System.Threading.Tasks.TaskContinuationOptions> -Eigenschaft wird mit initialisiert <xref:System.Threading.Tasks.TaskContinuationOptions.None>, und die <xref:System.Threading.Tasks.TaskScheduler> -Eigenschaft wird auf den aktuellen Planer initialisiert (finden Sie unter <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="44830-126">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="44830-127">The default cancellation token that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another cancellation token is explicitly specified when calling the factory methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-127">The default cancellation token that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another cancellation token is explicitly specified when calling the factory methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-128">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the default configuration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-128">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the default configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-129">Dieser Konstruktor erstellt ein <xref:System.Threading.Tasks.TaskFactory%601> Instanz mit einer Standardkonfiguration.</span><span class="sxs-lookup"><span data-stu-id="44830-129">This constructor creates a <xref:System.Threading.Tasks.TaskFactory%601> instance with a default configuration.</span></span> <span data-ttu-id="44830-130">Die <xref:System.Threading.Tasks.TaskCreationOptions> -Eigenschaft wird mit initialisiert <xref:System.Threading.Tasks.TaskCreationOptions.None>, <xref:System.Threading.Tasks.TaskContinuationOptions> -Eigenschaft wird mit initialisiert <xref:System.Threading.Tasks.TaskContinuationOptions.None>, und die <xref:System.Threading.Tasks.TaskScheduler> -Eigenschaft wird auf den aktuellen Planer initialisiert (finden Sie unter <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="44830-130">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scheduler As TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="scheduler">
          <span data-ttu-id="44830-131">The scheduler to use to schedule any tasks created with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-131">The scheduler to use to schedule any tasks created with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
          <span data-ttu-id="44830-132">A null value indicates that the current <see cref="T:System.Threading.Tasks.TaskScheduler" /> should be used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-132">A null value indicates that the current <see cref="T:System.Threading.Tasks.TaskScheduler" /> should be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-133">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-133">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-134">Mit diesem Konstruktor die <xref:System.Threading.Tasks.TaskCreationOptions> -Eigenschaft wird mit initialisiert <xref:System.Threading.Tasks.TaskCreationOptions.None>, die <xref:System.Threading.Tasks.TaskContinuationOptions> -Eigenschaft wird mit initialisiert <xref:System.Threading.Tasks.TaskContinuationOptions.None>, und die <xref:System.Threading.Tasks.TaskScheduler> -Eigenschaft wird mit initialisiert `scheduler`, es sei denn, es `null`in wobei die Eigenschaft auf den aktuellen Planer initialisiert werden (siehe <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="44830-134">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's `null`, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (creationOptions As TaskCreationOptions, continuationOptions As TaskContinuationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="creationOptions">
          <span data-ttu-id="44830-135">The default options to use when creating tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-135">The default options to use when creating tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="44830-136">The default options to use when creating continuation tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-136">The default options to use when creating continuation tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-137">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-137">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-138">Mit diesem Konstruktor die <xref:System.Threading.Tasks.TaskCreationOptions> -Eigenschaft wird mit initialisiert `creationOptions`, <xref:System.Threading.Tasks.TaskContinuationOptions> -Eigenschaft wird mit initialisiert `continuationOptions`, und die <xref:System.Threading.Tasks.TaskScheduler> -Eigenschaft wird auf den aktuellen Planer initialisiert (finden Sie unter <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="44830-138">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-139">
            <paramref name="creationOptions" /> or <paramref name="continuationOptions" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-139">
              <paramref name="creationOptions" /> or <paramref name="continuationOptions" /> specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="44830-140">The default cancellation token that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another cancellation token is explicitly specified when calling the factory methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-140">The default cancellation token that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another cancellation token is explicitly specified when calling the factory methods.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="44830-141">The default options to use when creating tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-141">The default options to use when creating tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="44830-142">The default options to use when creating continuation tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-142">The default options to use when creating continuation tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="44830-143">The default scheduler to use to schedule any tasks created with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-143">The default scheduler to use to schedule any tasks created with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
          <span data-ttu-id="44830-144">A null value indicates that <see cref="P:System.Threading.Tasks.TaskScheduler.Current" /> should be used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-144">A null value indicates that <see cref="P:System.Threading.Tasks.TaskScheduler.Current" /> should be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-145">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-145">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-146">Mit diesem Konstruktor die <xref:System.Threading.Tasks.TaskCreationOptions> -Eigenschaft wird mit initialisiert `creationOptions`, die <xref:System.Threading.Tasks.TaskContinuationOptions> -Eigenschaft wird mit initialisiert `continuationOptions`, und die <xref:System.Threading.Tasks.TaskScheduler> -Eigenschaft wird mit initialisiert `scheduler`, es sei denn, es `null`in wobei die Eigenschaft auf den aktuellen Planer initialisiert werden (siehe <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="44830-146">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's `null`, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-147">
            <paramref name="creationOptions" /> or <paramref name="continuationOptions" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-147">
              <paramref name="creationOptions" /> or <paramref name="continuationOptions" /> specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44830-148">Gets the default cancellation token for this task factory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-148">Gets the default cancellation token for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44830-149">Das Standardabbruchtoken für diese Aufgabenfactory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-149">The default cancellation token for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-150">Diese Eigenschaft gibt das Standardabbruchtoken, das zugewiesen werden soll, für alle Aufgaben, die von dieser Factory erstellt werden, es sei denn, eine andere Abbruch Tokenwert beim Aufrufen der Factorymethoden Vorgang explizit angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="44830-150">This property returns the default cancellation token that will be assigned to all tasks created by this factory unless another cancellation token value is explicitly specified during the call to the task factory methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinuationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskContinuationOptions ContinuationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskContinuationOptions ContinuationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.ContinuationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContinuationOptions As TaskContinuationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskContinuationOptions ContinuationOptions { System::Threading::Tasks::TaskContinuationOptions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44830-151">Gets the <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> enumeration value for this task factory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-151">Gets the <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> enumeration value for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44830-152">Einer der Enumerationswerte, die die Standardfortsetzungsoptionen für diese Aufgabenfactory angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-152">One of the enumeration values that specifies the default continuation options for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-153">Diese Eigenschaft gibt die Standardfortsetzungsoptionen für diese Factory zurück.</span><span class="sxs-lookup"><span data-stu-id="44830-153">This property returns the default continuation options for this factory.</span></span> <span data-ttu-id="44830-154">Sie werden verwendet werden, um alle Fortsetzungsaufgaben zu erstellen, es sei denn, andere Optionen während Aufrufen der Methoden dieser Factory explizit angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="44830-154">They will be used to create all continuation tasks unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAll">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44830-155">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-155">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationFunction As Func(Of Task(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="44830-156">The array of tasks from which to continue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-156">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-157">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-157">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-158">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-158">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-159">The new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-159">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-160">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-160">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-161">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-161">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-162">
            <paramref name="tasks" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-162">
              <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-163">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-163">-or-</span>
          </span>
          <span data-ttu-id="44830-164">The <paramref name="continuationFunction" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-164">The <paramref name="continuationFunction" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-165">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-165">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="44830-166">The array of tasks from which to continue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-166">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-167">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-167">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44830-168">The cancellation token that will be assigned to the new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-168">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-169">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-169">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-170">The new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-170">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-171">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-171">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-172">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-172">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="44830-173">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-173">-or-</span>
          </span>
          <span data-ttu-id="44830-174">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-174">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-175">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-175">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-176">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-176">-or-</span>
          </span>
          <span data-ttu-id="44830-177">
            <paramref name="continuationFunction" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-177">
              <paramref name="continuationFunction" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-178">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-178">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationFunction As Func(Of Task(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="44830-179">The array of tasks from which to continue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-179">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-180">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-180">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="44830-181">One of the enumeration values that controls the behavior of the created continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-181">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="44830-182">The NotOn* or OnlyOn* values are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-182">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-183">Creates a continuation task that will be started upon the completion of a set of provided Tasks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-183">Creates a continuation task that will be started upon the completion of a set of provided Tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-184">The new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-184">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-185">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-185">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-186">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-186">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-187">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-187">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-188">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-188">-or-</span>
          </span>
          <span data-ttu-id="44830-189">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-189">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-190">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-190">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-191">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-191">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="44830-192">The array of tasks from which to continue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-192">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-193">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-193">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44830-194">The cancellation token that will be assigned to the new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-194">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="44830-195">One of the enumeration values that controls the behavior of the created continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-195">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="44830-196">The NotOn* or OnlyOn* values are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-196">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="44830-197">The scheduler that is used to schedule the created continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-197">The scheduler that is used to schedule the created continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-198">Creates a continuation task that will be started upon the completion of a set of provided Tasks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-198">Creates a continuation task that will be started upon the completion of a set of provided Tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-199">The new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-199">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-200">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-200">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-201">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-201">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-202">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-202">-or-</span>
          </span>
          <span data-ttu-id="44830-203">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-203">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-204">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-204">-or-</span>
          </span>
          <span data-ttu-id="44830-205">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-205">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-206">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-206">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-207">
            <paramref name="continuationOptions" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-207">
              <paramref name="continuationOptions" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-208">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-208">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="44830-209">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-209">-or-</span>
          </span>
          <span data-ttu-id="44830-210">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-210">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="44830-211">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-211">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="44830-212">The array of tasks from which to continue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-212">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-213">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-213">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-214">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-214">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-215">The new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-215">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-216">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-216">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-217">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-217">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-218">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-218">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-219">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-219">-or-</span>
          </span>
          <span data-ttu-id="44830-220">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-220">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-221">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-221">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="44830-222">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-222">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="44830-223">The array of tasks from which to continue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-223">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-224">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-224">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44830-225">The cancellation token that will be assigned to the new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-225">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-226">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-226">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-227">The new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-227">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-228">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-228">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-229">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-229">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="44830-230">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-230">-or-</span>
          </span>
          <span data-ttu-id="44830-231">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-231">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-232">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-232">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-233">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-233">-or-</span>
          </span>
          <span data-ttu-id="44830-234">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-234">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-235">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-235">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="44830-236">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-236">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="44830-237">The array of tasks from which to continue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-237">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-238">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-238">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="44830-239">One of the enumeration values that controls the behavior of the created continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-239">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="44830-240">The NotOn* or OnlyOn* values are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-240">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-241">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-241">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-242">The new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-242">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-243">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-243">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-244">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-244">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-245">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-245">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-246">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-246">-or-</span>
          </span>
          <span data-ttu-id="44830-247">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-247">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-248">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-248">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-249">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-249">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="44830-250">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-250">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="44830-251">The array of tasks from which to continue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-251">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-252">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-252">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44830-253">The cancellation token that will be assigned to the new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-253">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="44830-254">One of the enumeration values that controls the behavior of the created continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-254">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="44830-255">The NotOn* or OnlyOn* values are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-255">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="44830-256">The scheduler that is used to schedule the created continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-256">The scheduler that is used to schedule the created continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-257">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-257">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-258">The new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-258">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-259">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-259">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-260">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-260">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-261">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-261">-or-</span>
          </span>
          <span data-ttu-id="44830-262">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-262">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-263">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-263">-or-</span>
          </span>
          <span data-ttu-id="44830-264">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-264">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-265">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-265">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-266">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-266">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-267">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-267">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="44830-268">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-268">-or-</span>
          </span>
          <span data-ttu-id="44830-269">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-269">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAny">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44830-270">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-270">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationFunction As Func(Of Task, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="44830-271">The array of tasks from which to continue when one task completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-271">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-272">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-272">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-273">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-273">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-274">The new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-274">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-275">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-275">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-276">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-276">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-277">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-277">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-278">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-278">-or-</span>
          </span>
          <span data-ttu-id="44830-279">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-279">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-280">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-280">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="44830-281">The array of tasks from which to continue when one task completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-281">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-282">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-282">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44830-283">The cancellation token that will be assigned to the new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-283">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-284">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-284">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-285">The new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-285">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-286">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-286">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-287">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-287">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="44830-288">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-288">-or-</span>
          </span>
          <span data-ttu-id="44830-289">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-289">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-290">The <paramref name="tasks" /> array is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-290">The <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="44830-291">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-291">-or-</span>
          </span>
          <span data-ttu-id="44830-292">The <paramref name="continuationFunction" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-292">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-293">The <paramref name="tasks" /> array contains a null value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-293">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="44830-294">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-294">-or-</span>
          </span>
          <span data-ttu-id="44830-295">The <paramref name="tasks" /> array is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-295">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationFunction As Func(Of Task, TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="44830-296">The array of tasks from which to continue when one task completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-296">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-297">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-297">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="44830-298">One of the enumeration values that controls the behavior of the created continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-298">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="44830-299">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-299">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-300">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-300">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-301">The new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-301">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-302">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-302">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-303">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-303">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-304">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-304">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-305">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-305">-or-</span>
          </span>
          <span data-ttu-id="44830-306">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-306">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-307">The <paramref name="continuationOptions" /> argument specifies an invalid enumeration value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-307">The <paramref name="continuationOptions" /> argument specifies an invalid enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-308">The <paramref name="tasks" /> array contains a null value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-308">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="44830-309">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-309">-or-</span>
          </span>
          <span data-ttu-id="44830-310">The <paramref name="tasks" /> array is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-310">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="44830-311">The array of tasks from which to continue when one task completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-311">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-312">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-312">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44830-313">The cancellation token that will be assigned to the new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-313">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="44830-314">One of the enumeration values that controls the behavior of the created continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-314">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="44830-315">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-315">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="44830-316">The task scheduler that is used to schedule the created continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-316">The task scheduler that is used to schedule the created continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-317">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-317">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-318">The new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-318">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-319">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-319">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-320">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-320">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-321">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-321">-or-</span>
          </span>
          <span data-ttu-id="44830-322">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-322">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-323">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-323">-or-</span>
          </span>
          <span data-ttu-id="44830-324">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-324">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-325">The <paramref name="tasks" /> array contains a null value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-325">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="44830-326">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-326">-or-</span>
          </span>
          <span data-ttu-id="44830-327">The <paramref name="tasks" /> array is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-327">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-328">The <paramref name="continuationOptions" /> argument specifies an invalid <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-328">The <paramref name="continuationOptions" /> argument specifies an invalid <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-329">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-329">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="44830-330">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-330">-or-</span>
          </span>
          <span data-ttu-id="44830-331">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-331">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="44830-332">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-332">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="44830-333">The array of tasks from which to continue when one task completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-333">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-334">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-334">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-335">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-335">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-336">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-336">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-337">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-337">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-338">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-338">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-339">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-339">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-340">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-340">-or-</span>
          </span>
          <span data-ttu-id="44830-341">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-341">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-342">The <paramref name="tasks" /> array contains a null value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-342">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="44830-343">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-343">-or-</span>
          </span>
          <span data-ttu-id="44830-344">The <paramref name="tasks" /> array is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-344">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="44830-345">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-345">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="44830-346">The array of tasks from which to continue when one task completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-346">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-347">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-347">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44830-348">The cancellation token that will be assigned to the new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-348">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-349">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-349">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-350">The new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-350">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-351">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-351">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-352">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-352">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="44830-353">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-353">-or-</span>
          </span>
          <span data-ttu-id="44830-354">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-354">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-355">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-355">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-356">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-356">-or-</span>
          </span>
          <span data-ttu-id="44830-357">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-357">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-358">The <paramref name="tasks" /> array contains a null value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-358">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="44830-359">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-359">-or-</span>
          </span>
          <span data-ttu-id="44830-360">The <paramref name="tasks" /> array is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-360">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="44830-361">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-361">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="44830-362">The array of tasks from which to continue when one task completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-362">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-363">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-363">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="44830-364">One of the enumeration values that controls the behavior of the created continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-364">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="44830-365">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-365">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-366">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-366">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-367">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-367">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-368">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-368">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-369">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-369">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-370">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-370">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-371">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-371">-or-</span>
          </span>
          <span data-ttu-id="44830-372">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-372">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-373">The <paramref name="continuationOptions" /> argument specifies an invalid enumeration value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-373">The <paramref name="continuationOptions" /> argument specifies an invalid enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-374">The <paramref name="tasks" /> array contains a null value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-374">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="44830-375">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-375">-or-</span>
          </span>
          <span data-ttu-id="44830-376">The <paramref name="tasks" /> array is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-376">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="44830-377">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-377">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="44830-378">The array of tasks from which to continue when one task completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-378">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="44830-379">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-379">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44830-380">The cancellation token that will be assigned to the new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-380">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="44830-381">One of the enumeration values that controls the behavior of the created continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-381">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="44830-382">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-382">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="44830-383">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-383">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-384">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-384">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-385">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-385">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-386">Nach Abschluss des Vorgangs ist eine Aufgabe in einem dieser Zustände: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Status.</span><span class="sxs-lookup"><span data-stu-id="44830-386">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-387">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-387">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-388">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-388">-or-</span>
          </span>
          <span data-ttu-id="44830-389">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-389">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-390">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-390">-or-</span>
          </span>
          <span data-ttu-id="44830-391">The <paramref name="scheduler" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-391">The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44830-392">The <paramref name="tasks" /> array contains a null value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-392">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="44830-393">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-393">-or-</span>
          </span>
          <span data-ttu-id="44830-394">The <paramref name="tasks" /> array is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-394">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-395">The <paramref name="continuationOptions" /> argument specifies an invalid TaskContinuationOptions value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-395">The <paramref name="continuationOptions" /> argument specifies an invalid TaskContinuationOptions value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-396">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-396">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="44830-397">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-397">-or-</span>
          </span>
          <span data-ttu-id="44830-398">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-398">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskCreationOptions CreationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskCreationOptions CreationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.CreationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreationOptions As TaskCreationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskCreationOptions CreationOptions { System::Threading::Tasks::TaskCreationOptions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskCreationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44830-399">Gets the <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> enumeration value for this task factory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-399">Gets the <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> enumeration value for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44830-400">Einer der Enumerationswerte, die die Standarderstellungsoptionen für diese Aufgabenfactory angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-400">One of the enumeration values that specifies the default creation options for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-401">Diese Eigenschaft gibt die schemaerstellungsoptionen für diese Factory zurück.</span><span class="sxs-lookup"><span data-stu-id="44830-401">This property returns the default creation options for this factory.</span></span> <span data-ttu-id="44830-402">Sie werden verwendet werden, um alle Aufgaben zu erstellen, es sei denn, andere Optionen während Aufrufen der Methoden dieser Factory explizit angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="44830-402">They will be used to create all tasks unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromAsync">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44830-403">Creates a task instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-403">Creates a task instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="44830-404">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-404">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="44830-405">The function delegate that processes the completed <c>asyncResult</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-405">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-406">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-406">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-407">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-407">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-408">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-408">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-409">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-409">-or-</span>
          </span>
          <span data-ttu-id="44830-410">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-410">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginMethod">
          <span data-ttu-id="44830-411">The delegate that begins the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-411">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="44830-412">The delegate that ends the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-412">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="44830-413">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-413">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-414">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-414">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-415">The created task that represents the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-415">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-416">Diese Methode löst keine Ausnahmen auslöst der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="44830-416">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="44830-417">Ausnahmen für `endmethod` ausgelöst werden, wenn für die zurückgegebene Aufgabe gewartet wird.</span><span class="sxs-lookup"><span data-stu-id="44830-417">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-418">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-418">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-419">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-419">-or-</span>
          </span>
          <span data-ttu-id="44830-420">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-420">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="44830-421">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-421">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="44830-422">The function delegate that processes the completed <c>asyncResult</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-422">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="44830-423">One of the enumeration values that controls the behavior of the created task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-423">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-424">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-424">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-425">A task that represents the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-425">A task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-426">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-426">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-427">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-427">-or-</span>
          </span>
          <span data-ttu-id="44830-428">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-428">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-429">The <paramref name="creationOptions" /> argument specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-429">The <paramref name="creationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="beginMethod">
          <span data-ttu-id="44830-430">The delegate that begins the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-430">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="44830-431">The delegate that ends the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-431">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="44830-432">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-432">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="44830-433">One of the enumeration values that controls the behavior of the created task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-433">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-434">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-434">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-435">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-435">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-436">Diese Methode löst keine Ausnahmen auslöst der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="44830-436">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="44830-437">Ausnahmen für `endmethod` ausgelöst werden, wenn für die zurückgegebene Aufgabe gewartet wird.</span><span class="sxs-lookup"><span data-stu-id="44830-437">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-438">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-438">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-439">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-439">-or-</span>
          </span>
          <span data-ttu-id="44830-440">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-440">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-441">The <paramref name="creationOptions" /> argument specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-441">The <paramref name="creationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions, scheduler As TaskScheduler) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="44830-442">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-442">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="44830-443">The function delegate that processes the completed <c>asyncResult</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-443">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="44830-444">One of the enumeration values that controls the behavior of the created task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-444">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="44830-445">The task scheduler that is used to schedule the task that executes the end method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-445">The task scheduler that is used to schedule the task that executes the end method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-446">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-446">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-447">The created task that represents the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-447">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-448">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-448">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-449">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-449">-or-</span>
          </span>
          <span data-ttu-id="44830-450">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-450">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-451">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-451">-or-</span>
          </span>
          <span data-ttu-id="44830-452">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-452">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-453">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-453">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="44830-454">Der Typ des ersten Arguments übergeben wird, um die <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-454">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="44830-455">The delegate that begins the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-455">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="44830-456">The delegate that ends the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-456">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="44830-457">The first argument passed to the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-457">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="44830-458">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-458">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-459">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-459">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-460">The created task that represents the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-460">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-461">Diese Methode löst keine Ausnahmen auslöst der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="44830-461">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="44830-462">Ausnahmen für `endmethod` ausgelöst werden, wenn für die zurückgegebene Aufgabe gewartet wird.</span><span class="sxs-lookup"><span data-stu-id="44830-462">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-463">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-463">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-464">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-464">-or-</span>
          </span>
          <span data-ttu-id="44830-465">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-465">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="44830-466">Der Typ des ersten Arguments übergeben wird, um die <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-466">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="44830-467">The delegate that begins the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-467">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="44830-468">The delegate that ends the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-468">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="44830-469">The first argument passed to the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-469">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="44830-470">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-470">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="44830-471">One of the enumeration values that controls the behavior of the created task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-471">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-472">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-472">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-473">The created task that represents the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-473">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-474">Diese Methode löst keine Ausnahmen auslöst der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="44830-474">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="44830-475">Ausnahmen für `endmethod` ausgelöst werden, wenn für die zurückgegebene Aufgabe gewartet wird.</span><span class="sxs-lookup"><span data-stu-id="44830-475">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-476">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-476">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-477">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-477">-or-</span>
          </span>
          <span data-ttu-id="44830-478">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-478">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-479">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-479">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="44830-480">Der Typ des zweiten Arguments an den <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-480">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="44830-481">Der Typ des ersten Arguments übergeben wird, um die <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-481">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="44830-482">The delegate that begins the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-482">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="44830-483">The delegate that ends the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-483">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="44830-484">The first argument passed to the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-484">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="44830-485">The second argument passed to the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-485">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="44830-486">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-486">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-487">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-487">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-488">The created task that represents the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-488">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-489">Diese Methode löst keine Ausnahmen auslöst der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="44830-489">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="44830-490">Ausnahmen für `endmethod` ausgelöst werden, wenn für die zurückgegebene Aufgabe gewartet wird.</span><span class="sxs-lookup"><span data-stu-id="44830-490">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-491">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-491">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-492">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-492">-or-</span>
          </span>
          <span data-ttu-id="44830-493">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-493">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="44830-494">Der Typ des zweiten Arguments an den <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-494">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="44830-495">Der Typ des ersten Arguments übergeben wird, um die <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-495">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="44830-496">The delegate that begins the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-496">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="44830-497">The delegate that ends the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-497">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="44830-498">The first argument passed to the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-498">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="44830-499">The second argument passed to the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-499">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="44830-500">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-500">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="44830-501">An object that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-501">An object that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-502">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-502">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-503">The created task that represents the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-503">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-504">Diese Methode löst keine Ausnahmen auslöst der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="44830-504">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="44830-505">Ausnahmen für `endmethod` ausgelöst werden, wenn für die zurückgegebene Aufgabe gewartet wird.</span><span class="sxs-lookup"><span data-stu-id="44830-505">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-506">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-506">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-507">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-507">-or-</span>
          </span>
          <span data-ttu-id="44830-508">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-508">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-509">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-509">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="44830-510">Der Typ des zweiten Arguments an den <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-510">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="44830-511">Der Typ des dritten Arguments an den <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-511">The type of the third argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="44830-512">Der Typ des ersten Arguments übergeben wird, um die <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-512">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="44830-513">The delegate that begins the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-513">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="44830-514">The delegate that ends the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-514">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="44830-515">The first argument passed to the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-515">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="44830-516">The second argument passed to the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-516">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="44830-517">The third argument passed to the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-517">The third argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="44830-518">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-518">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-519">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-519">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-520">The created task that represents the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-520">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-521">Diese Methode löst keine Ausnahmen auslöst der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="44830-521">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="44830-522">Ausnahmen für `endmethod` ausgelöst werden, wenn für die zurückgegebene Aufgabe gewartet wird.</span><span class="sxs-lookup"><span data-stu-id="44830-522">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-523">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-523">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-524">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-524">-or-</span>
          </span>
          <span data-ttu-id="44830-525">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-525">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="44830-526">Der Typ des zweiten Arguments an den <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-526">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="44830-527">Der Typ des dritten Arguments an den <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-527">The type of the third argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="44830-528">Der Typ des ersten Arguments übergeben wird, um die <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-528">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="44830-529">The delegate that begins the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-529">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="44830-530">The delegate that ends the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-530">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="44830-531">The first argument passed to the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-531">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="44830-532">The second argument passed to the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-532">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="44830-533">The third argument passed to the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-533">The third argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="44830-534">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-534">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="44830-535">An object that controls the behavior of the created task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-535">An object that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-536">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-536">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-537">The created task that represents the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-537">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-538">Diese Methode löst keine Ausnahmen auslöst der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="44830-538">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="44830-539">Ausnahmen für `endmethod` ausgelöst werden, wenn für die zurückgegebene Aufgabe gewartet wird.</span><span class="sxs-lookup"><span data-stu-id="44830-539">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-540">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-540">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-541">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-541">-or-</span>
          </span>
          <span data-ttu-id="44830-542">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-542">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-543">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-543">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Scheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler Scheduler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler Scheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.Scheduler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ Scheduler { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44830-544">Gets the task scheduler for this task factory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-544">Gets the task scheduler for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44830-545">Der Aufgabenplaner für diese Aufgabenfactory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-545">The task scheduler for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-546">Der Standardplaner für diese Factory gibt diese Eigenschaft zurück.</span><span class="sxs-lookup"><span data-stu-id="44830-546">This property returns the default scheduler for this factory.</span></span> <span data-ttu-id="44830-547">Es wird verwendet, die alle Aufgaben zu planen, es sei denn, ein anderes Zeitplanungsmodul während Aufrufen der Methoden dieser Factory explizit angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="44830-547">It will be used to schedule all tasks unless another scheduler is explicitly specified during calls to this factory's methods.</span></span>  
  
 <span data-ttu-id="44830-548">Wenn diese Eigenschaft gibt `null`, <xref:System.Threading.Tasks.TaskScheduler.Current%2A> verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="44830-548">If this property returns `null`, <xref:System.Threading.Tasks.TaskScheduler.Current%2A> will be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartNew">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44830-549">Creates and starts a task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-549">Creates and starts a task.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="44830-550">A function delegate that returns the future result to be available through the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-550">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-551">Creates and starts a task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-551">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-552">The started task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-552">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-553">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode, um ihn für die Ausführung planen.</span><span class="sxs-lookup"><span data-stu-id="44830-553">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors, and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="44830-554">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="44830-554">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-555">The <paramref name="function" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-555">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of Object, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="44830-556">A function delegate that returns the future result to be available through the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-556">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="44830-557">An object that contains data to be used by the <c>function</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-557">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-558">Creates and starts a task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-558">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-559">The started task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-559">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-560">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode, um ihn für die Ausführung planen.</span><span class="sxs-lookup"><span data-stu-id="44830-560">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="44830-561">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="44830-561">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-562">The <paramref name="function" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-562">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="44830-563">A function delegate that returns the future result to be available through the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-563">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44830-564">The cancellation token that will be assigned to the new task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-564">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-565">Creates and starts a task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-565">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-566">The started task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-566">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-567">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode, um ihn für die Ausführung planen.</span><span class="sxs-lookup"><span data-stu-id="44830-567">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="44830-568">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="44830-568">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-569">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-569">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-570">The <paramref name="function" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-570">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="44830-571">A function delegate that returns the future result to be available through the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-571">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="44830-572">One of the enumeration values that controls the behavior of the created task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-572">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-573">Creates and starts a task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-573">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-574">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-574">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-575">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode, um ihn für die Ausführung planen.</span><span class="sxs-lookup"><span data-stu-id="44830-575">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="44830-576">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="44830-576">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-577">The <paramref name="function" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-577">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-578">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-578">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="44830-579">A function delegate that returns the future result to be available through the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-579">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="44830-580">An object that contains data to be used by the <c>function</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-580">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44830-581">The cancellation token that will be assigned to the new task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-581">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-582">Creates and starts a task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-582">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-583">The started task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-583">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-584">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode, um ihn für die Ausführung planen.</span><span class="sxs-lookup"><span data-stu-id="44830-584">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="44830-585">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="44830-585">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-586">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-586">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-587">The <paramref name="function" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-587">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of Object, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="44830-588">A function delegate that returns the future result to be available through the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-588">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="44830-589">An object that contains data to be used by the <c>function</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-589">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="44830-590">One of the enumeration values that controls the behavior of the created task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-590">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-591">Creates and starts a task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-591">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-592">The started task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-592">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-593">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode, um ihn für die Ausführung planen.</span><span class="sxs-lookup"><span data-stu-id="44830-593">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="44830-594">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="44830-594">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-595">The <paramref name="function" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-595">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-596">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-596">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="44830-597">A function delegate that returns the future result to be available through the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-597">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44830-598">The cancellation token that will be assigned to the new task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-598">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="44830-599">One of the enumeration values that controls the behavior of the created task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-599">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="44830-600">The task scheduler that is used to schedule the created task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-600">The task scheduler that is used to schedule the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-601">Creates and starts a task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-601">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-602">The started task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-602">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-603">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode, um ihn für die Ausführung planen.</span><span class="sxs-lookup"><span data-stu-id="44830-603">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="44830-604">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="44830-604">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-605">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-605">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-606">The <paramref name="function" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-606">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-607">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-607">-or-</span>
          </span>
          <span data-ttu-id="44830-608">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-608">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-609">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-609">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="44830-610">A function delegate that returns the future result to be available through the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-610">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="44830-611">An object that contains data to be used by the <c>function</c> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-611">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44830-612">The cancellation token that will be assigned to the new task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-612">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="44830-613">One of the enumeration values that controls the behavior of the created task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-613">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="44830-614">The task scheduler that is used to schedule the created task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-614">The task scheduler that is used to schedule the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44830-615">Creates and starts a task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-615">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44830-616">The started task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-616">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44830-617">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode, um ihn für die Ausführung planen.</span><span class="sxs-lookup"><span data-stu-id="44830-617">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="44830-618">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="44830-618">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44830-619">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-619">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44830-620">The <paramref name="function" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-620">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="44830-621">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-621">-or-</span>
          </span>
          <span data-ttu-id="44830-622">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-622">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44830-623">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44830-623">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>