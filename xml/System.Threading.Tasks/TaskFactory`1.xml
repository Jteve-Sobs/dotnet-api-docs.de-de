<Type Name="TaskFactory&lt;TResult&gt;" FullName="System.Threading.Tasks.TaskFactory&lt;TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="747373803d9599335d466c7382a5dde926cb04ca" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36606747" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TaskFactory&lt;TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskFactory`1&lt;TResult&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskFactory(Of TResult)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class TaskFactory" />
  <TypeSignature Language="F#" Value="type TaskFactory&lt;'Result&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResult">
      <span data-ttu-id="0f48c-101">Der Rückgabewert der <see cref="T:System.Threading.Tasks.Task`1" />-Objekte, die von den Methoden dieser Klasse erstellt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f48c-101">The return value of the <see cref="T:System.Threading.Tasks.Task`1" /> objects that the methods of this class create.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="0f48c-102">Bietet Unterstützung für das Erstellen und Planen von <see cref="T:System.Threading.Tasks.Task`1" />-Objekten.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f48c-102">Provides support for creating and scheduling <see cref="T:System.Threading.Tasks.Task`1" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-103">.NET Framework bietet zwei Factorys zum Erstellen und Planen von Aufgaben:</span><span class="sxs-lookup"><span data-stu-id="0f48c-103">The .NET Framework provides two factories for creating and scheduling tasks:</span></span>  
  
-   <span data-ttu-id="0f48c-104">Die <xref:System.Threading.Tasks.TaskFactory> -Klasse, die erstellt <xref:System.Threading.Tasks.Task> und <xref:System.Threading.Tasks.Task%601> Objekte.</span><span class="sxs-lookup"><span data-stu-id="0f48c-104">The <xref:System.Threading.Tasks.TaskFactory> class, which creates <xref:System.Threading.Tasks.Task> and <xref:System.Threading.Tasks.Task%601> objects.</span></span>  
  
-   <span data-ttu-id="0f48c-105">Die <xref:System.Threading.Tasks.TaskFactory%601> -Klasse, die erstellt <xref:System.Threading.Tasks.Task%601> Objekte.</span><span class="sxs-lookup"><span data-stu-id="0f48c-105">The <xref:System.Threading.Tasks.TaskFactory%601> class, which creates <xref:System.Threading.Tasks.Task%601> objects.</span></span>  
  
 <span data-ttu-id="0f48c-106">Die <xref:System.Threading.Tasks.TaskFactory%601> Klasse können Sie die folgenden Aktionen ausführen:</span><span class="sxs-lookup"><span data-stu-id="0f48c-106">The <xref:System.Threading.Tasks.TaskFactory%601> class allows you to do the following:</span></span>  
  
-   <span data-ttu-id="0f48c-107">Erstellen Sie eine Aufgabe, und starten Sie ihn sofort durch Aufrufen der <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0f48c-107">Create a task and start it immediately by calling the <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> method.</span></span> <span data-ttu-id="0f48c-108">Sie können die Überladungen dieser Methode zum Erstellen und Ausführen einer Aufgabe, die nicht standardmäßige Argumente erfordert aufrufen.</span><span class="sxs-lookup"><span data-stu-id="0f48c-108">You can call the overloads of this method to create and execute a task that requires non-default arguments.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="0f48c-109">Beginnend mit der [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> Methode bietet die einfachste Möglichkeit zum Erstellen Sie einer Aufgabe mit den Werten, und starten Sie ihn sofort.</span><span class="sxs-lookup"><span data-stu-id="0f48c-109">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method provides the easiest way to create a task with default configuration values and start it immediately.</span></span>  
  
-   <span data-ttu-id="0f48c-110">Erstellen Sie eine Aufgabe, die gestartet wird, wenn eine der Aufgaben in einem Array, durch den Aufruf abgeschlossen wurde der <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> oder <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0f48c-110">Create a task that starts when any one of the tasks in an array has completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> or   <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> method.</span></span>  
  
-   <span data-ttu-id="0f48c-111">Erstellen Sie eine Aufgabe, die gestartet wird, wenn alle Aufgaben in einem Array, durch den Aufruf abgeschlossen wurden der <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> oder <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0f48c-111">Create a task that starts when all the tasks in an array have completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> or <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> method.</span></span>  
  
 <span data-ttu-id="0f48c-112">Die statische <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> Eigenschaft gibt den Standardwert <xref:System.Threading.Tasks.TaskFactory%601> Objekt.</span><span class="sxs-lookup"><span data-stu-id="0f48c-112">The static <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property returns a default <xref:System.Threading.Tasks.TaskFactory%601> object.</span></span> <span data-ttu-id="0f48c-113">Können Sie auch eine Aufrufen der <xref:System.Threading.Tasks.TaskFactory%601> Klassenkonstruktoren so konfigurieren Sie die <xref:System.Threading.Tasks.Task%601> Objekte, die <xref:System.Threading.Tasks.TaskFactory%601> -Klasse erstellt.</span><span class="sxs-lookup"><span data-stu-id="0f48c-113">You can also call one of the <xref:System.Threading.Tasks.TaskFactory%601> class constructors to configure the <xref:System.Threading.Tasks.Task%601> objects that  the <xref:System.Threading.Tasks.TaskFactory%601> class creates.</span></span> <span data-ttu-id="0f48c-114">Im folgenden Beispiel wird ein neues <xref:System.Threading.Tasks.TaskFactory%601> Objekt, das Aufgaben zu erstellen, die einem angegebenen Abbruchtoken, Aufgabenerstellungsoptionen, Optionen für die Fortsetzung und eines benutzerdefinierten Aufgabenplaners verfügen.</span><span class="sxs-lookup"><span data-stu-id="0f48c-114">The following example configures a new <xref:System.Threading.Tasks.TaskFactory%601> object to create tasks that have a specified cancellation token, task creation options, continuation options, and a customized task scheduler.</span></span>  
  
 [!code-csharp[TPL_Factories#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_factories/cs/factoriestresult.cs#2)]
 [!code-vb[TPL_Factories#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_factories/vb/factoriestresult.vb#2)]  
  
 <span data-ttu-id="0f48c-115">In den meisten Fällen, Sie müssen keine zum Instanziieren einer neuen <xref:System.Threading.Tasks.TaskFactory%601> Instanz.</span><span class="sxs-lookup"><span data-stu-id="0f48c-115">In most cases, you do not have to instantiate a new <xref:System.Threading.Tasks.TaskFactory%601> instance.</span></span> <span data-ttu-id="0f48c-116">Verwenden Sie stattdessen die statische <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> -Eigenschaft, die ein Factoryobjekt zurückgibt, die Standardwerte verwendet.</span><span class="sxs-lookup"><span data-stu-id="0f48c-116">Instead, you can use the static <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property, which returns a factory object that uses default values.</span></span> <span data-ttu-id="0f48c-117">Sie können dann ihre Methoden, um neue Vorgänge starten, oder Definieren von aufgabenfortsetzungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="0f48c-117">You can then call its methods to start new tasks or define task continuations.</span></span> <span data-ttu-id="0f48c-118">Eine Veranschaulichung finden Sie im Beispiel.</span><span class="sxs-lookup"><span data-stu-id="0f48c-118">For an illustration, see the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f48c-119">Im folgenden Beispiel wird die statische <xref:System.Threading.Tasks.Task%601.Factory%2A> Eigenschaft zwei Aufrufe an die <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="0f48c-119">The following example uses the static <xref:System.Threading.Tasks.Task%601.Factory%2A> property to make two calls to the <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0f48c-120">Die erste Aufgabe gibt ein Zeichenfolgenarray, das mit den Namen der Dateien im Verzeichnis Eigene Dateien des Benutzers, aufgefüllt wird, während die zweite gibt ein Zeichenfolgenarray zurück, das die Namen der Unterverzeichnisse des MyDocuments-Verzeichnis des Benutzers enthält.</span><span class="sxs-lookup"><span data-stu-id="0f48c-120">The first task returns a string array that is populated with the names of files in the user's MyDocuments directory, while the second returns a string array that is populated with the names of subdirectories of the user's MyDocuments directory.</span></span> <span data-ttu-id="0f48c-121">Es ruft dann die <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> -Methode, die Informationen über die Anzahl von Dateien und Verzeichnissen angezeigt, in den Arrays, die von den beiden Tasks zurückgegeben wird, nachdem sie die Ausführung abgeschlossen wurden.</span><span class="sxs-lookup"><span data-stu-id="0f48c-121">It then calls the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> method, which displays information about the number of files and directories in the arrays returned by the two tasks after they have completed execution.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.Factory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.factory/cs/factory2.cs#2)]
 [!code-vb[System.Threading.Tasks.Task.Factory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.factory/vb/factory2.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="0f48c-122">Alle öffentlichen und geschützten Member der <see cref="T:System.Threading.Tasks.TaskFactory`1" /> sind threadsicher und können von mehreren Threads gleichzeitig verwendet werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f48c-122">All public and protected members of <see cref="T:System.Threading.Tasks.TaskFactory`1" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0f48c-123">Initialisiert eine neue <see cref="T:System.Threading.Tasks.TaskFactory`1" />-Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-123">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0f48c-124">Initialisiert eine <see cref="T:System.Threading.Tasks.TaskFactory`1" />-Instanz mit der Standardkonfiguration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-124">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the default configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-125">Dieser Konstruktor erstellt ein <xref:System.Threading.Tasks.TaskFactory%601> Instanz mit einer Standardkonfiguration.</span><span class="sxs-lookup"><span data-stu-id="0f48c-125">This constructor creates a <xref:System.Threading.Tasks.TaskFactory%601> instance with a default configuration.</span></span> <span data-ttu-id="0f48c-126">Die <xref:System.Threading.Tasks.TaskCreationOptions> Eigenschaft wird initialisiert, um <xref:System.Threading.Tasks.TaskCreationOptions.None>, <xref:System.Threading.Tasks.TaskContinuationOptions> Eigenschaft wird initialisiert, um <xref:System.Threading.Tasks.TaskContinuationOptions.None>, und die <xref:System.Threading.Tasks.TaskScheduler> Eigenschaft mit dem aktuellen Planer initialisiert wird (finden Sie unter <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="0f48c-126">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.CancellationToken -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; cancellationToken" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="0f48c-127">Das Standardabbruchtoken, das von dieser <see cref="T:System.Threading.Tasks.TaskFactory" /> erstellten Aufgaben zugewiesen wird, sofern beim Aufrufen der Factorymethoden kein anderes Abbruchtoken explizit angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-127">The default cancellation token that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another cancellation token is explicitly specified when calling the factory methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-128">Initialisiert eine <see cref="T:System.Threading.Tasks.TaskFactory`1" />-Instanz mit der Standardkonfiguration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-128">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the default configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-129">Dieser Konstruktor erstellt ein <xref:System.Threading.Tasks.TaskFactory%601> Instanz mit einer Standardkonfiguration.</span><span class="sxs-lookup"><span data-stu-id="0f48c-129">This constructor creates a <xref:System.Threading.Tasks.TaskFactory%601> instance with a default configuration.</span></span> <span data-ttu-id="0f48c-130">Die <xref:System.Threading.Tasks.TaskCreationOptions> Eigenschaft wird initialisiert, um <xref:System.Threading.Tasks.TaskCreationOptions.None>, <xref:System.Threading.Tasks.TaskContinuationOptions> Eigenschaft wird initialisiert, um <xref:System.Threading.Tasks.TaskContinuationOptions.None>, und die <xref:System.Threading.Tasks.TaskScheduler> Eigenschaft mit dem aktuellen Planer initialisiert wird (finden Sie unter <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="0f48c-130">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scheduler As TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; scheduler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="scheduler">
          <span data-ttu-id="0f48c-131">Der zum Planen von Aufgaben, die mit dieser <see cref="T:System.Threading.Tasks.TaskFactory`1" /> erstellt wurden, zu verwendende Planer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-131">The scheduler to use to schedule any tasks created with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
          <span data-ttu-id="0f48c-132">Ein NULL-Wert gibt an, dass der aktuelle <see cref="T:System.Threading.Tasks.TaskScheduler" /> verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-132">A null value indicates that the current <see cref="T:System.Threading.Tasks.TaskScheduler" /> should be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-133">Initialisiert eine <see cref="T:System.Threading.Tasks.TaskFactory`1" />-Instanz mit der angegebenen Konfiguration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-133">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-134">Mit diesem Konstruktor die <xref:System.Threading.Tasks.TaskCreationOptions> Eigenschaft wird initialisiert, um <xref:System.Threading.Tasks.TaskCreationOptions.None>, <xref:System.Threading.Tasks.TaskContinuationOptions> Eigenschaft wird initialisiert, um <xref:System.Threading.Tasks.TaskContinuationOptions.None>, und die <xref:System.Threading.Tasks.TaskScheduler> Eigenschaft wird initialisiert, um `scheduler`, es sei denn, es `null`in wobei die Eigenschaft mit dem aktuellen Planer initialisiert werden (siehe <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="0f48c-134">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's `null`, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (creationOptions As TaskCreationOptions, continuationOptions As TaskContinuationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; (creationOptions, continuationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="creationOptions">
          <span data-ttu-id="0f48c-135">Die zum Erstellen von Aufgaben mit dieser <see cref="T:System.Threading.Tasks.TaskFactory`1" /> zu verwendenden Standardoptionen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-135">The default options to use when creating tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="0f48c-136">Die zum Erstellen von Fortsetzungsaufgaben mit dieser <see cref="T:System.Threading.Tasks.TaskFactory`1" /> zu verwendenden Standardoptionen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-136">The default options to use when creating continuation tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-137">Initialisiert eine <see cref="T:System.Threading.Tasks.TaskFactory`1" />-Instanz mit der angegebenen Konfiguration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-137">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-138">Mit diesem Konstruktor die <xref:System.Threading.Tasks.TaskCreationOptions> Eigenschaft wird initialisiert, um `creationOptions`, <xref:System.Threading.Tasks.TaskContinuationOptions> Eigenschaft wird initialisiert, um `continuationOptions`, und die <xref:System.Threading.Tasks.TaskScheduler> Eigenschaft mit dem aktuellen Planer initialisiert wird (finden Sie unter <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="0f48c-138">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-139">
            <paramref name="creationOptions" /> oder <paramref name="continuationOptions" /> gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-139">
              <paramref name="creationOptions" /> or <paramref name="continuationOptions" /> specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; (cancellationToken, creationOptions, continuationOptions, scheduler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="0f48c-140">Das Standardabbruchtoken, das von dieser <see cref="T:System.Threading.Tasks.TaskFactory" /> erstellten Aufgaben zugewiesen wird, sofern beim Aufrufen der Factorymethoden kein anderes Abbruchtoken explizit angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-140">The default cancellation token that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another cancellation token is explicitly specified when calling the factory methods.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="0f48c-141">Die zum Erstellen von Aufgaben mit dieser <see cref="T:System.Threading.Tasks.TaskFactory`1" /> zu verwendenden Standardoptionen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-141">The default options to use when creating tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="0f48c-142">Die zum Erstellen von Fortsetzungsaufgaben mit dieser <see cref="T:System.Threading.Tasks.TaskFactory`1" /> zu verwendenden Standardoptionen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-142">The default options to use when creating continuation tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="0f48c-143">Der beim Planen von Aufgaben, die mit dieser <see cref="T:System.Threading.Tasks.TaskFactory`1" /> erstellt wurden, zu verwendende Standardplaner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-143">The default scheduler to use to schedule any tasks created with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
          <span data-ttu-id="0f48c-144">Ein NULL-Wert gibt an, dass <see cref="P:System.Threading.Tasks.TaskScheduler.Current" /> verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-144">A null value indicates that <see cref="P:System.Threading.Tasks.TaskScheduler.Current" /> should be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-145">Initialisiert eine <see cref="T:System.Threading.Tasks.TaskFactory`1" />-Instanz mit der angegebenen Konfiguration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-145">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-146">Mit diesem Konstruktor die <xref:System.Threading.Tasks.TaskCreationOptions> Eigenschaft wird initialisiert, um `creationOptions`, <xref:System.Threading.Tasks.TaskContinuationOptions> Eigenschaft wird initialisiert, um `continuationOptions`, und die <xref:System.Threading.Tasks.TaskScheduler> Eigenschaft wird initialisiert, um `scheduler`, es sei denn, es `null`in wobei die Eigenschaft mit dem aktuellen Planer initialisiert werden (siehe <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="0f48c-146">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's `null`, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-147">
            <paramref name="creationOptions" /> oder <paramref name="continuationOptions" /> gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-147">
              <paramref name="creationOptions" /> or <paramref name="continuationOptions" /> specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f48c-148">Ruft das Standardabbruchtoken für diese Aufgabenfactory ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-148">Gets the default cancellation token for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f48c-149">Das Standardabbruchtoken für diese Aufgabenfactory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-149">The default cancellation token for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-150">Diese Eigenschaft gibt das Standardabbruchtoken, das für alle Aufgaben, die von dieser Factory erstellt werden, es sei denn, ein anderer Abbruch-token-Wert explizit, während des Aufrufs der Task-Factorymethoden angegeben wird zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="0f48c-150">This property returns the default cancellation token that will be assigned to all tasks created by this factory unless another cancellation token value is explicitly specified during the call to the task factory methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinuationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskContinuationOptions ContinuationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskContinuationOptions ContinuationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.ContinuationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContinuationOptions As TaskContinuationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskContinuationOptions ContinuationOptions { System::Threading::Tasks::TaskContinuationOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.ContinuationOptions : System.Threading.Tasks.TaskContinuationOptions" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.ContinuationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f48c-151">Ruft den <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />-Enumerationswert für diese Aufgabenfactory ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-151">Gets the <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> enumeration value for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f48c-152">Einer der Enumerationswerte, die die Standardfortsetzungsoptionen für diese Aufgabenfactory angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-152">One of the enumeration values that specifies the default continuation options for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-153">Diese Eigenschaft gibt die Optionen für diese Factory für die Fortsetzung zurück.</span><span class="sxs-lookup"><span data-stu-id="0f48c-153">This property returns the default continuation options for this factory.</span></span> <span data-ttu-id="0f48c-154">Sie werden alle Fortsetzungsaufgaben zu erstellen, es sei denn, andere Optionen explizit, während Aufrufe der Methoden dieser Factory angegeben werden verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="0f48c-154">They will be used to create all continuation tasks unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAll">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0f48c-155">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss eines Satzes angegebener Aufgaben gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-155">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationFunction As Func(Of Task(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="0f48c-156">Das Array von Aufgaben, mit denen fortgefahren wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-156">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-157">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn alle Aufgaben im <c>tasks</c>-Array abgeschlossen wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-157">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-158">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss eines Satzes angegebener Aufgaben gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-158">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-159">Die neue Fortsetzungsaufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-159">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-160">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-160">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-161">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-161">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-162">
            <paramref name="tasks" />-Array ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-162">
              <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-163">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-163">-or-</span>
          </span>
          <span data-ttu-id="0f48c-164">
            <paramref name="continuationFunction" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-164">The <paramref name="continuationFunction" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-165">Das <paramref name="tasks" />-Array enthält einen NULL-Wert oder ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-165">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="0f48c-166">Das Array von Aufgaben, mit denen fortgefahren wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-166">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-167">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn alle Aufgaben im <c>tasks</c>-Array abgeschlossen wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-167">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="0f48c-168">Das Abbruchtoken, das der neuen Fortsetzungsaufgabe zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-168">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-169">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss eines Satzes angegebener Aufgaben gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-169">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-170">Die neue Fortsetzungsaufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-170">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-171">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-171">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-172">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-172">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="0f48c-173">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-173">-or-</span>
          </span>
          <span data-ttu-id="0f48c-174">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-174">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-175">Das <paramref name="tasks" />-Array ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-175">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-176">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-176">-or-</span>
          </span>
          <span data-ttu-id="0f48c-177">
            <paramref name="continuationFunction" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-177">
              <paramref name="continuationFunction" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-178">Das <paramref name="tasks" />-Array enthält einen NULL-Wert oder ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-178">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationFunction As Func(Of Task(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="0f48c-179">Das Array von Aufgaben, mit denen fortgefahren wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-179">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-180">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn alle Aufgaben im <c>tasks</c>-Array abgeschlossen wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-180">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="0f48c-181">Einer der Enumerationswerte, der das Verhalten der erstellten Fortsetzungsaufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-181">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="0f48c-182">Die Werte NotOn* oder OnlyOn* sind nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-182">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-183">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss eines Satzes angegebener Aufgaben gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-183">Creates a continuation task that will be started upon the completion of a set of provided Tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-184">Die neue Fortsetzungsaufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-184">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-185">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-185">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-186">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-186">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-187">Das <paramref name="tasks" />-Array ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-187">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-188">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-188">-or-</span>
          </span>
          <span data-ttu-id="0f48c-189">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-189">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-190">Das <paramref name="continuationOptions" />-Argument gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-190">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-191">Das <paramref name="tasks" />-Array enthält einen NULL-Wert oder ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-191">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="0f48c-192">Das Array von Aufgaben, mit denen fortgefahren wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-192">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-193">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn alle Aufgaben im <c>tasks</c>-Array abgeschlossen wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-193">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="0f48c-194">Das Abbruchtoken, das der neuen Fortsetzungsaufgabe zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-194">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="0f48c-195">Einer der Enumerationswerte, der das Verhalten der erstellten Fortsetzungsaufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-195">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="0f48c-196">Die Werte NotOn* oder OnlyOn* sind nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-196">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="0f48c-197">Der Planer, der verwendet wird, um die erstellte Fortsetzungsaufgabe zu planen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-197">The scheduler that is used to schedule the created continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-198">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss eines Satzes angegebener Aufgaben gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-198">Creates a continuation task that will be started upon the completion of a set of provided Tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-199">Die neue Fortsetzungsaufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-199">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-200">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-200">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-201">Das <paramref name="tasks" />-Array ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-201">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-202">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-202">-or-</span>
          </span>
          <span data-ttu-id="0f48c-203">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-203">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-204">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-204">-or-</span>
          </span>
          <span data-ttu-id="0f48c-205">Das <paramref name="scheduler" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-205">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-206">Das <paramref name="tasks" />-Array enthält einen NULL-Wert oder ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-206">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-207">
            <paramref name="continuationOptions" /> gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-207">
              <paramref name="continuationOptions" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-208">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-208">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="0f48c-209">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-209">-or-</span>
          </span>
          <span data-ttu-id="0f48c-210">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-210">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="0f48c-211">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-211">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="0f48c-212">Das Array von Aufgaben, mit denen fortgefahren wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-212">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-213">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn alle Aufgaben im <c>tasks</c>-Array abgeschlossen wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-213">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-214">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss eines Satzes angegebener Aufgaben gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-214">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-215">Die neue Fortsetzungsaufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-215">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-216">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-216">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-217">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-217">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-218">Das <paramref name="tasks" />-Array ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-218">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-219">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-219">-or-</span>
          </span>
          <span data-ttu-id="0f48c-220">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-220">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-221">Das <paramref name="tasks" />-Array enthält einen NULL-Wert oder ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-221">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="0f48c-222">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-222">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="0f48c-223">Das Array von Aufgaben, mit denen fortgefahren wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-223">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-224">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn alle Aufgaben im <c>tasks</c>-Array abgeschlossen wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-224">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="0f48c-225">Das Abbruchtoken, das der neuen Fortsetzungsaufgabe zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-225">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-226">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss eines Satzes angegebener Aufgaben gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-226">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-227">Die neue Fortsetzungsaufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-227">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-228">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-228">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-229">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-229">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="0f48c-230">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-230">-or-</span>
          </span>
          <span data-ttu-id="0f48c-231">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-231">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-232">Das <paramref name="tasks" />-Array ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-232">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-233">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-233">-or-</span>
          </span>
          <span data-ttu-id="0f48c-234">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-234">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-235">Das <paramref name="tasks" />-Array enthält einen NULL-Wert oder ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-235">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="0f48c-236">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-236">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="0f48c-237">Das Array von Aufgaben, mit denen fortgefahren wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-237">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-238">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn alle Aufgaben im <c>tasks</c>-Array abgeschlossen wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-238">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="0f48c-239">Einer der Enumerationswerte, der das Verhalten der erstellten Fortsetzungsaufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-239">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="0f48c-240">Die Werte NotOn* oder OnlyOn* sind nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-240">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-241">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss eines Satzes angegebener Aufgaben gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-241">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-242">Die neue Fortsetzungsaufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-242">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-243">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-243">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-244">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-244">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-245">Das <paramref name="tasks" />-Array ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-245">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-246">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-246">-or-</span>
          </span>
          <span data-ttu-id="0f48c-247">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-247">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-248">Das <paramref name="continuationOptions" />-Argument gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-248">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-249">Das <paramref name="tasks" />-Array enthält einen NULL-Wert oder ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-249">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="0f48c-250">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-250">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="0f48c-251">Das Array von Aufgaben, mit denen fortgefahren wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-251">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-252">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn alle Aufgaben im <c>tasks</c>-Array abgeschlossen wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-252">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="0f48c-253">Das Abbruchtoken, das der neuen Fortsetzungsaufgabe zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-253">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="0f48c-254">Einer der Enumerationswerte, der das Verhalten der erstellten Fortsetzungsaufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-254">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="0f48c-255">Die Werte NotOn* oder OnlyOn* sind nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-255">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="0f48c-256">Der Planer, der verwendet wird, um die erstellte Fortsetzungsaufgabe zu planen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-256">The scheduler that is used to schedule the created continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-257">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss eines Satzes angegebener Aufgaben gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-257">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-258">Die neue Fortsetzungsaufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-258">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-259">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-259">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-260">Das <paramref name="tasks" />-Array ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-260">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-261">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-261">-or-</span>
          </span>
          <span data-ttu-id="0f48c-262">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-262">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-263">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-263">-or-</span>
          </span>
          <span data-ttu-id="0f48c-264">Das <paramref name="scheduler" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-264">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-265">Das <paramref name="tasks" />-Array enthält einen NULL-Wert oder ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-265">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-266">Das <paramref name="continuationOptions" />-Argument gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-266">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-267">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-267">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="0f48c-268">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-268">-or-</span>
          </span>
          <span data-ttu-id="0f48c-269">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-269">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAny">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0f48c-270">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss einer Aufgabe im bereitgestellten Satz gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-270">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationFunction As Func(Of Task, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="0f48c-271">Das Array von Aufgaben, mit denen fortgefahren wird, wenn eine Aufgabe abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-271">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-272">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn eine Aufgabe im <c>tasks</c>-Array abgeschlossen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-272">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-273">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss einer Aufgabe im bereitgestellten Satz gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-273">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-274">Die neue Fortsetzungsaufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-274">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-275">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-275">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-276">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-276">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-277">Das <paramref name="tasks" />-Array ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-277">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-278">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-278">-or-</span>
          </span>
          <span data-ttu-id="0f48c-279">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-279">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-280">Das <paramref name="tasks" />-Array enthält einen NULL-Wert oder ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-280">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="0f48c-281">Das Array von Aufgaben, mit denen fortgefahren wird, wenn eine Aufgabe abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-281">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-282">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn eine Aufgabe im <c>tasks</c>-Array abgeschlossen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-282">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="0f48c-283">Das Abbruchtoken, das der neuen Fortsetzungsaufgabe zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-283">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-284">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss einer Aufgabe im bereitgestellten Satz gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-284">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-285">Die neue Fortsetzungsaufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-285">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-286">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-286">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-287">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-287">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="0f48c-288">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-288">-or-</span>
          </span>
          <span data-ttu-id="0f48c-289">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-289">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-290">Das <paramref name="tasks" />-Array ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-290">The <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="0f48c-291">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-291">-or-</span>
          </span>
          <span data-ttu-id="0f48c-292">Das <paramref name="continuationFunction" />-Argument ist null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-292">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-293">Das <paramref name="tasks" />-Array enthält einen NULL-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-293">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="0f48c-294">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-294">-or-</span>
          </span>
          <span data-ttu-id="0f48c-295">Das <paramref name="tasks" />-Array ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-295">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationFunction As Func(Of Task, TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="0f48c-296">Das Array von Aufgaben, mit denen fortgefahren wird, wenn eine Aufgabe abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-296">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-297">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn eine Aufgabe im <c>tasks</c>-Array abgeschlossen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-297">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="0f48c-298">Einer der Enumerationswerte, der das Verhalten der erstellten Fortsetzungsaufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-298">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="0f48c-299">Die Werte <see langword="NotOn*" /> oder <see langword="OnlyOn*" /> sind nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-299">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-300">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss einer Aufgabe im bereitgestellten Satz gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-300">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-301">Die neue Fortsetzungsaufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-301">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-302">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-302">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-303">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-303">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-304">Das <paramref name="tasks" />-Array ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-304">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-305">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-305">-or-</span>
          </span>
          <span data-ttu-id="0f48c-306">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-306">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-307">Vom <paramref name="continuationOptions" />-Argument gibt einen ungültigen Enumerationswert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-307">The <paramref name="continuationOptions" /> argument specifies an invalid enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-308">Das <paramref name="tasks" />-Array enthält einen NULL-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-308">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="0f48c-309">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-309">-or-</span>
          </span>
          <span data-ttu-id="0f48c-310">Das <paramref name="tasks" />-Array ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-310">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="0f48c-311">Das Array von Aufgaben, mit denen fortgefahren wird, wenn eine Aufgabe abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-311">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-312">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn eine Aufgabe im <c>tasks</c>-Array abgeschlossen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-312">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="0f48c-313">Das Abbruchtoken, das der neuen Fortsetzungsaufgabe zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-313">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="0f48c-314">Einer der Enumerationswerte, der das Verhalten der erstellten Fortsetzungsaufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-314">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="0f48c-315">Die Werte <see langword="NotOn*" /> oder <see langword="OnlyOn*" /> sind nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-315">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="0f48c-316">Der Aufgabenplaner, der verwendet wird, um die erstellte Fortsetzungsaufgabe zu planen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-316">The task scheduler that is used to schedule the created continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-317">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss einer Aufgabe im bereitgestellten Satz gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-317">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-318">Die neue Fortsetzungsaufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-318">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-319">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-319">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-320">Das <paramref name="tasks" />-Array ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-320">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-321">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-321">-or-</span>
          </span>
          <span data-ttu-id="0f48c-322">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-322">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-323">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-323">-or-</span>
          </span>
          <span data-ttu-id="0f48c-324">Das <paramref name="scheduler" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-324">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-325">Das <paramref name="tasks" />-Array enthält einen NULL-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-325">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="0f48c-326">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-326">-or-</span>
          </span>
          <span data-ttu-id="0f48c-327">Das <paramref name="tasks" />-Array ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-327">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-328">Das <paramref name="continuationOptions" />-Argument gibt einen ungültigen <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />-Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-328">The <paramref name="continuationOptions" /> argument specifies an invalid <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-329">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-329">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="0f48c-330">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-330">-or-</span>
          </span>
          <span data-ttu-id="0f48c-331">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-331">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="0f48c-332">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-332">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="0f48c-333">Das Array von Aufgaben, mit denen fortgefahren wird, wenn eine Aufgabe abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-333">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-334">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn eine Aufgabe im <c>tasks</c>-Array abgeschlossen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-334">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-335">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss einer Aufgabe im bereitgestellten Satz gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-335">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-336">Der neue Fortsetzungs-<see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-336">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-337">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-337">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-338">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-338">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-339">Das <paramref name="tasks" />-Array ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-339">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-340">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-340">-or-</span>
          </span>
          <span data-ttu-id="0f48c-341">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-341">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-342">Das <paramref name="tasks" />-Array enthält einen NULL-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-342">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="0f48c-343">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-343">-or-</span>
          </span>
          <span data-ttu-id="0f48c-344">Das <paramref name="tasks" />-Array ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-344">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="0f48c-345">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-345">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="0f48c-346">Das Array von Aufgaben, mit denen fortgefahren wird, wenn eine Aufgabe abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-346">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-347">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn eine Aufgabe im <c>tasks</c>-Array abgeschlossen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-347">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="0f48c-348">Das Abbruchtoken, das der neuen Fortsetzungsaufgabe zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-348">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-349">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss einer Aufgabe im bereitgestellten Satz gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-349">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-350">Die neue Fortsetzungsaufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-350">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-351">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-351">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-352">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-352">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="0f48c-353">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-353">-or-</span>
          </span>
          <span data-ttu-id="0f48c-354">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-354">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-355">Das <paramref name="tasks" />-Array ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-355">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-356">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-356">-or-</span>
          </span>
          <span data-ttu-id="0f48c-357">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-357">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-358">Das <paramref name="tasks" />-Array enthält einen NULL-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-358">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="0f48c-359">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-359">-or-</span>
          </span>
          <span data-ttu-id="0f48c-360">Das <paramref name="tasks" />-Array ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-360">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="0f48c-361">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-361">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="0f48c-362">Das Array von Aufgaben, mit denen fortgefahren wird, wenn eine Aufgabe abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-362">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-363">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn eine Aufgabe im <c>tasks</c>-Array abgeschlossen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-363">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="0f48c-364">Einer der Enumerationswerte, der das Verhalten der erstellten Fortsetzungsaufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-364">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="0f48c-365">Die Werte <see langword="NotOn*" /> oder <see langword="OnlyOn*" /> sind nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-365">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-366">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss einer Aufgabe im bereitgestellten Satz gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-366">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-367">Der neue Fortsetzungs-<see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-367">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-368">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-368">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-369">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-369">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-370">Das <paramref name="tasks" />-Array ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-370">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-371">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-371">-or-</span>
          </span>
          <span data-ttu-id="0f48c-372">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-372">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-373">Vom <paramref name="continuationOptions" />-Argument gibt einen ungültigen Enumerationswert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-373">The <paramref name="continuationOptions" /> argument specifies an invalid enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-374">Das <paramref name="tasks" />-Array enthält einen NULL-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-374">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="0f48c-375">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-375">-or-</span>
          </span>
          <span data-ttu-id="0f48c-376">Das <paramref name="tasks" />-Array ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-376">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="0f48c-377">Der Typ des Ergebnisses des Vorgängers <c>Aufgaben</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-377">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="0f48c-378">Das Array von Aufgaben, mit denen fortgefahren wird, wenn eine Aufgabe abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-378">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="0f48c-379">Der Funktionsdelegat, der asynchron ausgeführt werden soll, wenn eine Aufgabe im <c>tasks</c>-Array abgeschlossen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-379">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="0f48c-380">Das Abbruchtoken, das der neuen Fortsetzungsaufgabe zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-380">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="0f48c-381">Einer der Enumerationswerte, der das Verhalten der erstellten Fortsetzungsaufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-381">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="0f48c-382">Die Werte <see langword="NotOn*" /> oder <see langword="OnlyOn*" /> sind nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-382">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="0f48c-383">Das <see cref="T:System.Threading.Tasks.TaskScheduler" />, das verwendet wird, um das erstellte Fortsetzungs-<see cref="T:System.Threading.Tasks.Task`1" /> zu planen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-383">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-384">Erstellt eine Fortsetzungsaufgabe, die nach dem Abschluss einer Aufgabe im bereitgestellten Satz gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-384">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-385">Der neue Fortsetzungs-<see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-385">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-386">Nach Abschluss des Vorgangs wird eine Aufgabe in einem dieser Zustände ist: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, oder <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustände.</span><span class="sxs-lookup"><span data-stu-id="0f48c-386">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-387">Das <paramref name="tasks" />-Array ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-387">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-388">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-388">-or-</span>
          </span>
          <span data-ttu-id="0f48c-389">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-389">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-390">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-390">-or-</span>
          </span>
          <span data-ttu-id="0f48c-391">Das <paramref name="scheduler" />-Argument ist null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-391">The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f48c-392">Das <paramref name="tasks" />-Array enthält einen NULL-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-392">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="0f48c-393">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-393">-or-</span>
          </span>
          <span data-ttu-id="0f48c-394">Das <paramref name="tasks" />-Array ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-394">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-395">Vom <paramref name="continuationOptions" />-Argument wird ein ungültiger TaskContinuationOptions-Wert angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-395">The <paramref name="continuationOptions" /> argument specifies an invalid TaskContinuationOptions value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-396">Eines der Elemente im <paramref name="tasks" />-Array wurde verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-396">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="0f48c-397">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-397">-or-</span>
          </span>
          <span data-ttu-id="0f48c-398">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-398">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskCreationOptions CreationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskCreationOptions CreationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.CreationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreationOptions As TaskCreationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskCreationOptions CreationOptions { System::Threading::Tasks::TaskCreationOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.CreationOptions : System.Threading.Tasks.TaskCreationOptions" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.CreationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskCreationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f48c-399">Ruft den <see cref="T:System.Threading.Tasks.TaskCreationOptions" />-Enumerationswert für diese Aufgabenfactory ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-399">Gets the <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> enumeration value for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f48c-400">Einer der Enumerationswerte, die die Standarderstellungsoptionen für diese Aufgabenfactory angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-400">One of the enumeration values that specifies the default creation options for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-401">Diese Eigenschaft gibt die Optionen für die Erstellung für diese Factory zurück.</span><span class="sxs-lookup"><span data-stu-id="0f48c-401">This property returns the default creation options for this factory.</span></span> <span data-ttu-id="0f48c-402">Sie werden alle Aufgaben zu erstellen, es sei denn, andere Optionen explizit, während Aufrufe der Methoden dieser Factory angegeben werden verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="0f48c-402">They will be used to create all tasks unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromAsync">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0f48c-403">Erstellt eine neue Aufgabeninstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-403">Creates a task instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="0f48c-404">Das <see cref="T:System.IAsyncResult" />, dessen Abschluss die Verarbeitung der <c>endMethod</c> auslösen sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-404">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="0f48c-405">Der Funktionsdelegat, der das abgeschlossene <c>asyncResult</c>-Objekt verarbeitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-405">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-406">Erstellt eine Aufgabe, die eine EndMethod-Funktion ausführt, wenn ein angegebenes <see cref="T:System.IAsyncResult" /> abgeschlossen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-406">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-407">Ein <see cref="T:System.Threading.Tasks.Task`1" />-Element, das den asynchronen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-407">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-408">Das <paramref name="asyncResult" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-408">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-409">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-409">-or-</span>
          </span>
          <span data-ttu-id="0f48c-410">Das <paramref name="endMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-410">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginMethod">
          <span data-ttu-id="0f48c-411">Der Delegat, der den asynchronen Vorgang startet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-411">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="0f48c-412">Der Delegat, der den asynchronen Vorgang beendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-412">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0f48c-413">Ein Objekt, das vom <c>beginMethod</c>-Delegaten zu verwendende Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-413">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-414">Erstellt eine Aufgabe, die ein dem asynchronen Programmiermodellmuster entsprechendes Paar von Begin- und End-Methoden darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-414">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-415">Die erstellte Aufgabe, die den asynchronen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-415">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-416">Diese Methode löst Ausnahmen, die von der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="0f48c-416">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="0f48c-417">Ausnahmen für `endmethod` beim Warten auf die zurückgegebene Aufgabe ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="0f48c-417">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-418">Das <paramref name="beginMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-418">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-419">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-419">-or-</span>
          </span>
          <span data-ttu-id="0f48c-420">Das <paramref name="endMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-420">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="0f48c-421">Das <see cref="T:System.IAsyncResult" />, dessen Abschluss die Verarbeitung der <c>endMethod</c> auslösen sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-421">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="0f48c-422">Der Funktionsdelegat, der das abgeschlossene <c>asyncResult</c>-Objekt verarbeitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-422">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="0f48c-423">Einer der Enumerationswerte, der das Verhalten der erstellten Aufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-423">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-424">Erstellt eine Aufgabe, die eine EndMethod-Funktion ausführt, wenn ein angegebenes <see cref="T:System.IAsyncResult" /> abgeschlossen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-424">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-425">Eine Aufgabe, die den asynchronen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-425">A task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-426">Das <paramref name="asyncResult" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-426">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-427">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-427">-or-</span>
          </span>
          <span data-ttu-id="0f48c-428">Das <paramref name="endMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-428">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-429">Das <paramref name="creationOptions" />-Argument gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-429">The <paramref name="creationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="beginMethod">
          <span data-ttu-id="0f48c-430">Der Delegat, der den asynchronen Vorgang startet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-430">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="0f48c-431">Der Delegat, der den asynchronen Vorgang beendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-431">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0f48c-432">Ein Objekt, das vom <c>beginMethod</c>-Delegaten zu verwendende Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-432">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="0f48c-433">Einer der Enumerationswerte, der das Verhalten der erstellten Aufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-433">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-434">Erstellt eine Aufgabe, die ein dem asynchronen Programmiermodellmuster entsprechendes Paar von Begin- und End-Methoden darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-434">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-435">Der erstellte <see cref="T:System.Threading.Tasks.Task`1" />, der den asynchronen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-435">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-436">Diese Methode löst Ausnahmen, die von der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="0f48c-436">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="0f48c-437">Ausnahmen für `endmethod` beim Warten auf die zurückgegebene Aufgabe ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="0f48c-437">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-438">Das <paramref name="beginMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-438">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-439">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-439">-or-</span>
          </span>
          <span data-ttu-id="0f48c-440">Das <paramref name="endMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-440">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-441">Das <paramref name="creationOptions" />-Argument gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-441">The <paramref name="creationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions, scheduler As TaskScheduler) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="0f48c-442">Das <see cref="T:System.IAsyncResult" />, dessen Abschluss die Verarbeitung der <c>endMethod</c> auslösen sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-442">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="0f48c-443">Der Funktionsdelegat, der das abgeschlossene <c>asyncResult</c>-Objekt verarbeitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-443">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="0f48c-444">Einer der Enumerationswerte, der das Verhalten der erstellten Aufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-444">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="0f48c-445">Der Aufgabenplaner, der verwendet wird, um die Aufgabe zu planen, die EndMethod ausführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-445">The task scheduler that is used to schedule the task that executes the end method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-446">Erstellt eine Aufgabe, die eine EndMethod-Funktion ausführt, wenn ein angegebenes <see cref="T:System.IAsyncResult" /> abgeschlossen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-446">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-447">Die erstellte Aufgabe, die den asynchronen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-447">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-448">Das <paramref name="asyncResult" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-448">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-449">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-449">-or-</span>
          </span>
          <span data-ttu-id="0f48c-450">Das <paramref name="endMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-450">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-451">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-451">-or-</span>
          </span>
          <span data-ttu-id="0f48c-452">Das <paramref name="scheduler" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-452">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-453">Der Parameter <paramref name="creationOptions" /> gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-453">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="0f48c-454">Der Typ des ersten Arguments an den die <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-454">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="0f48c-455">Der Delegat, der den asynchronen Vorgang startet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-455">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="0f48c-456">Der Delegat, der den asynchronen Vorgang beendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-456">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0f48c-457">Der Typ des ersten, an den <c>beginMethod</c>-Delegaten übergebenen Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-457">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0f48c-458">Ein Objekt, das vom <c>beginMethod</c>-Delegaten zu verwendende Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-458">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-459">Erstellt eine Aufgabe, die ein dem asynchronen Programmiermodellmuster entsprechendes Paar von Begin- und End-Methoden darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-459">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-460">Die erstellte Aufgabe, die den asynchronen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-460">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-461">Diese Methode löst Ausnahmen, die von der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="0f48c-461">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="0f48c-462">Ausnahmen für `endmethod` beim Warten auf die zurückgegebene Aufgabe ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="0f48c-462">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-463">Das <paramref name="beginMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-463">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-464">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-464">-or-</span>
          </span>
          <span data-ttu-id="0f48c-465">Das <paramref name="endMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-465">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="0f48c-466">Der Typ des ersten Arguments an den die <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-466">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="0f48c-467">Der Delegat, der den asynchronen Vorgang startet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-467">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="0f48c-468">Der Delegat, der den asynchronen Vorgang beendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-468">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0f48c-469">Der Typ des ersten, an den <c>beginMethod</c>-Delegaten übergebenen Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-469">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0f48c-470">Ein Objekt, das vom <c>beginMethod</c>-Delegaten zu verwendende Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-470">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="0f48c-471">Einer der Enumerationswerte, der das Verhalten der erstellten Aufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-471">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-472">Erstellt eine Aufgabe, die ein dem asynchronen Programmiermodellmuster entsprechendes Paar von Begin- und End-Methoden darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-472">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-473">Die erstellte Aufgabe, die den asynchronen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-473">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-474">Diese Methode löst Ausnahmen, die von der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="0f48c-474">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="0f48c-475">Ausnahmen für `endmethod` beim Warten auf die zurückgegebene Aufgabe ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="0f48c-475">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-476">Das <paramref name="beginMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-476">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-477">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-477">-or-</span>
          </span>
          <span data-ttu-id="0f48c-478">Das <paramref name="endMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-478">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-479">Der Parameter <paramref name="creationOptions" /> gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-479">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="0f48c-480">Der Typ des zweiten Arguments an den <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-480">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0f48c-481">Der Typ des ersten Arguments an den die <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-481">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="0f48c-482">Der Delegat, der den asynchronen Vorgang startet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-482">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="0f48c-483">Der Delegat, der den asynchronen Vorgang beendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-483">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0f48c-484">Der Typ des ersten, an den <c>beginMethod</c>-Delegaten übergebenen Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-484">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0f48c-485">Der Typ des zweiten, an den <c>beginMethod</c>-Delegaten übergebenen Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-485">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0f48c-486">Ein Objekt, das vom <c>beginMethod</c>-Delegaten zu verwendende Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-486">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-487">Erstellt eine Aufgabe, die ein dem asynchronen Programmiermodellmuster entsprechendes Paar von Begin- und End-Methoden darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-487">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-488">Die erstellte Aufgabe, die den asynchronen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-488">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-489">Diese Methode löst Ausnahmen, die von der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="0f48c-489">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="0f48c-490">Ausnahmen für `endmethod` beim Warten auf die zurückgegebene Aufgabe ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="0f48c-490">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-491">Das <paramref name="beginMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-491">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-492">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-492">-or-</span>
          </span>
          <span data-ttu-id="0f48c-493">Das <paramref name="endMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-493">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="0f48c-494">Der Typ des zweiten Arguments an den <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-494">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0f48c-495">Der Typ des ersten Arguments an den die <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-495">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="0f48c-496">Der Delegat, der den asynchronen Vorgang startet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-496">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="0f48c-497">Der Delegat, der den asynchronen Vorgang beendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-497">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0f48c-498">Der Typ des ersten, an den <c>beginMethod</c>-Delegaten übergebenen Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-498">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0f48c-499">Der Typ des zweiten, an den <c>beginMethod</c>-Delegaten übergebenen Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-499">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0f48c-500">Ein Objekt, das vom <c>beginMethod</c>-Delegaten zu verwendende Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-500">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="0f48c-501">Ein Objekt, das das Verhalten der erstellten <see cref="T:System.Threading.Tasks.Task`1" /> steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-501">An object that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-502">Erstellt eine Aufgabe, die ein dem asynchronen Programmiermodellmuster entsprechendes Paar von Begin- und End-Methoden darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-502">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-503">Die erstellte Aufgabe, die den asynchronen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-503">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-504">Diese Methode löst Ausnahmen, die von der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="0f48c-504">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="0f48c-505">Ausnahmen für `endmethod` beim Warten auf die zurückgegebene Aufgabe ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="0f48c-505">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-506">Das <paramref name="beginMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-506">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-507">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-507">-or-</span>
          </span>
          <span data-ttu-id="0f48c-508">Das <paramref name="endMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-508">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-509">Der Parameter <paramref name="creationOptions" /> gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-509">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, 'TArg3, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * 'TArg3 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, arg3, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="0f48c-510">Der Typ des zweiten Arguments an den <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-510">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0f48c-511">Der Typ des dritten Arguments an den <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-511">The type of the third argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="0f48c-512">Der Typ des ersten Arguments an den die <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-512">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="0f48c-513">Der Delegat, der den asynchronen Vorgang startet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-513">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="0f48c-514">Der Delegat, der den asynchronen Vorgang beendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-514">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0f48c-515">Der Typ des ersten, an den <c>beginMethod</c>-Delegaten übergebenen Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-515">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0f48c-516">Der Typ des zweiten, an den <c>beginMethod</c>-Delegaten übergebenen Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-516">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="0f48c-517">Der Typ des dritten, an den <c>beginMethod</c>-Delegaten übergebenen Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-517">The third argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0f48c-518">Ein Objekt, das vom <c>beginMethod</c>-Delegaten zu verwendende Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-518">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-519">Erstellt eine Aufgabe, die ein dem asynchronen Programmiermodellmuster entsprechendes Paar von Begin- und End-Methoden darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-519">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-520">Die erstellte Aufgabe, die den asynchronen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-520">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-521">Diese Methode löst Ausnahmen, die von der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="0f48c-521">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="0f48c-522">Ausnahmen für `endmethod` beim Warten auf die zurückgegebene Aufgabe ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="0f48c-522">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-523">Das <paramref name="beginMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-523">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-524">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-524">-or-</span>
          </span>
          <span data-ttu-id="0f48c-525">Das <paramref name="endMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-525">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, 'TArg3, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * 'TArg3 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, arg3, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="0f48c-526">Der Typ des zweiten Arguments an den <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-526">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0f48c-527">Der Typ des dritten Arguments an den <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-527">The type of the third argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="0f48c-528">Der Typ des ersten Arguments an den die <c>BeginMethod</c> delegieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-528">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="0f48c-529">Der Delegat, der den asynchronen Vorgang startet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-529">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="0f48c-530">Der Delegat, der den asynchronen Vorgang beendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-530">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0f48c-531">Der Typ des ersten, an den <c>beginMethod</c>-Delegaten übergebenen Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-531">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0f48c-532">Der Typ des zweiten, an den <c>beginMethod</c>-Delegaten übergebenen Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-532">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="0f48c-533">Der Typ des dritten, an den <c>beginMethod</c>-Delegaten übergebenen Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-533">The third argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0f48c-534">Ein Objekt, das vom <c>beginMethod</c>-Delegaten zu verwendende Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-534">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="0f48c-535">Ein Objekt, das das Verhalten der erstellten Aufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-535">An object that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-536">Erstellt eine Aufgabe, die ein dem asynchronen Programmiermodellmuster entsprechendes Paar von Begin- und End-Methoden darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-536">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-537">Die erstellte Aufgabe, die den asynchronen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-537">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-538">Diese Methode löst Ausnahmen, die von der `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="0f48c-538">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="0f48c-539">Ausnahmen für `endmethod` beim Warten auf die zurückgegebene Aufgabe ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="0f48c-539">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-540">Das <paramref name="beginMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-540">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-541">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-541">-or-</span>
          </span>
          <span data-ttu-id="0f48c-542">Das <paramref name="endMethod" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-542">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-543">Der Parameter <paramref name="creationOptions" /> gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-543">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Scheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler Scheduler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler Scheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.Scheduler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ Scheduler { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheduler : System.Threading.Tasks.TaskScheduler" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.Scheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f48c-544">Ruft das Aufgabenplaner für diese Aufgabenfactory ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-544">Gets the task scheduler for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f48c-545">Der Aufgabenplaner für diese Aufgabenfactory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-545">The task scheduler for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-546">Diese Eigenschaft gibt die Standard-Scheduler für diese Factory.</span><span class="sxs-lookup"><span data-stu-id="0f48c-546">This property returns the default scheduler for this factory.</span></span> <span data-ttu-id="0f48c-547">Er wird verwendet werden, um alle Aufgaben zu planen, es sei denn, ein anderes Zeitplanungsmodul beim Aufrufen der Methoden dieser Factory explizit angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="0f48c-547">It will be used to schedule all tasks unless another scheduler is explicitly specified during calls to this factory's methods.</span></span>  
  
 <span data-ttu-id="0f48c-548">Wenn diese Eigenschaft gibt `null`, <xref:System.Threading.Tasks.TaskScheduler.Current%2A> verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="0f48c-548">If this property returns `null`, <xref:System.Threading.Tasks.TaskScheduler.Current%2A> will be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartNew">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0f48c-549">Erstellt und startet eine Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-549">Creates and starts a task.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew function" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="0f48c-550">Ein Funktionsdelegat, der das zukünftige Ergebnis zurückgibt, das mithilfe der Aufgabe verfügbar sein wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-550">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-551">Erstellt und startet eine Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-551">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-552">Die begonnene Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-552">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-553">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode zur Planung der für die Ausführung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-553">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors, and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="0f48c-554">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für die Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-554">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-555">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-555">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of Object, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="0f48c-556">Ein Funktionsdelegat, der das zukünftige Ergebnis zurückgibt, das mithilfe der Aufgabe verfügbar sein wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-556">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0f48c-557">Ein Objekt, das die vom <c>function</c>-Delegaten zu verwendenden Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-557">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-558">Erstellt und startet eine Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-558">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-559">Die begonnene Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-559">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-560">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode zur Planung der für die Ausführung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-560">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="0f48c-561">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für die Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-561">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-562">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-562">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="0f48c-563">Ein Funktionsdelegat, der das zukünftige Ergebnis zurückgibt, das mithilfe der Aufgabe verfügbar sein wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-563">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="0f48c-564">Das Abbruchtoken, das der neuen Aufgabe zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-564">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-565">Erstellt und startet eine Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-565">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-566">Die begonnene Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-566">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-567">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode zur Planung der für die Ausführung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-567">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="0f48c-568">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für die Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-568">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-569">Die Abbruchtokenquelle, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-569">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-570">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-570">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="0f48c-571">Ein Funktionsdelegat, der das zukünftige Ergebnis zurückgibt, das mithilfe der Aufgabe verfügbar sein wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-571">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="0f48c-572">Einer der Enumerationswerte, der das Verhalten der erstellten Aufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-572">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-573">Erstellt und startet eine Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-573">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-574">Der gestartete <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-574">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-575">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode zur Planung der für die Ausführung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-575">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="0f48c-576">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für die Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-576">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-577">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-577">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-578">Der Parameter <paramref name="creationOptions" /> gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-578">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="0f48c-579">Ein Funktionsdelegat, der das zukünftige Ergebnis zurückgibt, das mithilfe der Aufgabe verfügbar sein wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-579">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0f48c-580">Ein Objekt, das die vom <c>function</c>-Delegaten zu verwendenden Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-580">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="0f48c-581">Das Abbruchtoken, das der neuen Aufgabe zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-581">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-582">Erstellt und startet eine Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-582">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-583">Die begonnene Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-583">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-584">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode zur Planung der für die Ausführung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-584">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="0f48c-585">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für die Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-585">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-586">Die Abbruchtokenquelle, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-586">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-587">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-587">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of Object, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="0f48c-588">Ein Funktionsdelegat, der das zukünftige Ergebnis zurückgibt, das mithilfe der Aufgabe verfügbar sein wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-588">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0f48c-589">Ein Objekt, das die vom <c>function</c>-Delegaten zu verwendenden Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-589">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="0f48c-590">Einer der Enumerationswerte, der das Verhalten der erstellten Aufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-590">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-591">Erstellt und startet eine Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-591">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-592">Die begonnene Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-592">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-593">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode zur Planung der für die Ausführung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-593">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="0f48c-594">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für die Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-594">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-595">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-595">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-596">Der Parameter <paramref name="creationOptions" /> gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-596">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, cancellationToken, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="0f48c-597">Ein Funktionsdelegat, der das zukünftige Ergebnis zurückgibt, das mithilfe der Aufgabe verfügbar sein wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-597">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="0f48c-598">Das Abbruchtoken, das der neuen Aufgabe zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-598">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="0f48c-599">Einer der Enumerationswerte, der das Verhalten der erstellten Aufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-599">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="0f48c-600">Der Aufgabenplaner, der verwendet wird, um die erstellte Fortsetzungsaufgabe zu planen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-600">The task scheduler that is used to schedule the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-601">Erstellt und startet eine Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-601">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-602">Die begonnene Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-602">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-603">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode zur Planung der für die Ausführung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-603">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="0f48c-604">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für die Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-604">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-605">Die Abbruchtokenquelle, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-605">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-606">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-606">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-607">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-607">-or-</span>
          </span>
          <span data-ttu-id="0f48c-608">Das <paramref name="scheduler" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-608">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-609">Der Parameter <paramref name="creationOptions" /> gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-609">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, cancellationToken, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="0f48c-610">Ein Funktionsdelegat, der das zukünftige Ergebnis zurückgibt, das mithilfe der Aufgabe verfügbar sein wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-610">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0f48c-611">Ein Objekt, das die vom <c>function</c>-Delegaten zu verwendenden Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-611">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="0f48c-612">Das Abbruchtoken, das der neuen Aufgabe zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-612">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="0f48c-613">Einer der Enumerationswerte, der das Verhalten der erstellten Aufgabe steuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-613">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="0f48c-614">Der Aufgabenplaner, der verwendet wird, um die erstellte Fortsetzungsaufgabe zu planen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-614">The task scheduler that is used to schedule the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f48c-615">Erstellt und startet eine Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-615">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f48c-616">Die begonnene Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-616">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f48c-617">Aufrufen von `StartNew` entspricht funktional dem Erstellen einer Aufgabe mithilfe eines der der <xref:System.Threading.Tasks.Task%601> Konstruktoren aufrufen und anschließend die <xref:System.Threading.Tasks.Task.Start%2A> Methode zur Planung der für die Ausführung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-617">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="0f48c-618">Jedoch, es sei denn, die Erstellung und Planung getrennt werden müssen, `StartNew` ist die empfohlene Vorgehensweise für die Einfachheit und Leistung.</span><span class="sxs-lookup"><span data-stu-id="0f48c-618">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0f48c-619">Die Abbruchtokenquelle, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-619">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f48c-620">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-620">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0f48c-621">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-621">-or-</span>
          </span>
          <span data-ttu-id="0f48c-622">Das <paramref name="scheduler" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-622">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0f48c-623">Der Parameter <paramref name="creationOptions" /> gibt einen ungültigen Wert an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f48c-623">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>