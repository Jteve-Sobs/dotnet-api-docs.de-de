<Type Name="TaskCompletionSource" FullName="System.Threading.Tasks.TaskCompletionSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b1404166f72205e031d9c6bdc8743e1e78128076" /><Meta Name="ms.sourcegitcommit" Value="11306e8bb61e44463a969897211724e18107ac96" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/12/2020" /><Meta Name="ms.locfileid" Value="88139942" /></Metadata><TypeSignature Language="C#" Value="public class TaskCompletionSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskCompletionSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskCompletionSource" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskCompletionSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskCompletionSource" />
  <TypeSignature Language="F#" Value="type TaskCompletionSource = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fc9c7-101">Stellt die Producerseite eines <see cref="T:System.Threading.Tasks.Task" />-Objekts dar, dessen Bindung an einen Delegaten aufgehoben wurde. Das Element ermöglicht mithilfe der <see cref="T:System.Threading.Tasks.Task" />-Eigenschaft den Zugriff auf die Consumerseite.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-101">Represents the producer side of a <see cref="T:System.Threading.Tasks.Task" /> unbound to a delegate, providing access to the consumer side through the <see cref="T:System.Threading.Tasks.Task" /> property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

 <span data-ttu-id="fc9c7-102">Häufig ist es der Fall, dass ein einen <xref:System.Threading.Tasks.Task> anderen asynchronen Vorgang darstellen soll.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-102">It is often the case that a <xref:System.Threading.Tasks.Task> is desired to represent another asynchronous operation.</span></span>
 <span data-ttu-id="fc9c7-103"><xref:System.Threading.Tasks.TaskCompletionSource> wird zu diesem Zweck bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-103"><xref:System.Threading.Tasks.TaskCompletionSource> is provided for this purpose.</span></span> <span data-ttu-id="fc9c7-104">Sie ermöglicht das Erstellen einer Aufgabe, die an Consumer übergeben werden kann, und diese Consumer können die Mitglieder der Aufgabe wie jede andere verwenden.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-104">It enables the creation of a task that can be handed out to consumers, and those consumers can use the members of the task as they would any other.</span></span> <span data-ttu-id="fc9c7-105">Im Gegensatz zu den meisten Aufgaben wird der Zustand einer von einem erstellten Aufgabe jedoch <xref:System.Threading.Tasks.TaskCompletionSource> explizit durch die Methoden in gesteuert <xref:System.Threading.Tasks.TaskCompletionSource> .</span><span class="sxs-lookup"><span data-stu-id="fc9c7-105">However, unlike most tasks, the state of a task created by a <xref:System.Threading.Tasks.TaskCompletionSource> is controlled explicitly by the methods on <xref:System.Threading.Tasks.TaskCompletionSource>.</span></span> <span data-ttu-id="fc9c7-106">Dadurch kann der Abschluss des externen asynchronen Vorgangs an die zugrunde liegende weitergegeben werden `Task` .</span><span class="sxs-lookup"><span data-stu-id="fc9c7-106">This enables the completion of the external asynchronous operation to be propagated to the underlying `Task`.</span></span> <span data-ttu-id="fc9c7-107">Durch die Trennung wird außerdem sichergestellt, dass Consumer den Zustand nicht ohne Zugriff auf die entsprechende übertragen können <xref:System.Threading.Tasks.TaskCompletionSource> .</span><span class="sxs-lookup"><span data-stu-id="fc9c7-107">The separation also ensures that consumers are not able to transition the state without access to the corresponding <xref:System.Threading.Tasks.TaskCompletionSource>.</span></span>
<span data-ttu-id="fc9c7-108">Alle Elemente von <xref:System.Threading.Tasks.TaskCompletionSource> sind Thread sicher und können von mehreren Threads gleichzeitig verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-108">All members of <xref:System.Threading.Tasks.TaskCompletionSource> are thread-safe and may be used from multiple threads concurrently.</span></span>
 

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc9c7-109">Erstellt eine <see cref="T:System.Threading.Tasks.TaskCompletionSource" />.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-109">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCompletionSource : obj -&gt; System.Threading.Tasks.TaskCompletionSource" Usage="new System.Threading.Tasks.TaskCompletionSource state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="fc9c7-110">Der als zugrunde liegende <see cref="T:System.Threading.Tasks.Task" /> von <see langword="AsyncState" /> zu verwendende Zustand.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-110">The state to use as the underlying <see cref="T:System.Threading.Tasks.Task" />'s <see langword="AsyncState" />.</span></span></param>
        <summary><span data-ttu-id="fc9c7-111">Erstellt ein <see cref="T:System.Threading.Tasks.TaskCompletionSource" />-Objekt mit dem angegebenen Zustand.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-111">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource" /> with the specified state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource (System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource.#ctor(System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource(System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCompletionSource : System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.TaskCompletionSource" Usage="new System.Threading.Tasks.TaskCompletionSource creationOptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="creationOptions"><span data-ttu-id="fc9c7-112">Die Optionen, die beim Erstellen des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task" />-Objekts zu verwenden sind.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-112">The options to use when creating the underlying <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="fc9c7-113">Erstellt ein <see cref="T:System.Threading.Tasks.TaskCompletionSource" />-Objekt mit den angegebenen Optionen.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-113">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource" /> with the specified options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="fc9c7-114">Der, der <xref:System.Threading.Tasks.Task> von dieser-Instanz erstellt und auf die über seine-Eigenschaft zugegriffen werden kann, <xref:System.Threading.Tasks.TaskCompletionSource.Task> wird mit dem angegebenen instanziiert `creationOptions` .</span><span class="sxs-lookup"><span data-stu-id="fc9c7-114">The <xref:System.Threading.Tasks.Task> created by this instance and accessible through its <xref:System.Threading.Tasks.TaskCompletionSource.Task> property will be instantiated using the specified `creationOptions`.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource (object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As Object, creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource(System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCompletionSource : obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.TaskCompletionSource" Usage="new System.Threading.Tasks.TaskCompletionSource (state, creationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="fc9c7-115">Der als zugrunde liegende <see cref="T:System.Threading.Tasks.Task" /> von <see langword="AsyncState" /> zu verwendende Zustand.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-115">The state to use as the underlying <see cref="T:System.Threading.Tasks.Task" />'s <see langword="AsyncState" />.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="fc9c7-116">Die Optionen, die beim Erstellen des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task" />-Objekts zu verwenden sind.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-116">The options to use when creating the underlying <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="fc9c7-117">Erstellt ein <see cref="T:System.Threading.Tasks.TaskCompletionSource" />-Objekt mit dem angegebenen Zustand und den angegebenen Optionen.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-117">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource" /> with the specified state and options.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCanceled">
      <MemberSignature Language="C#" Value="public void SetCanceled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCanceled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource.SetCanceled" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCanceled ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCanceled();" />
      <MemberSignature Language="F#" Value="member this.SetCanceled : unit -&gt; unit" Usage="taskCompletionSource.SetCanceled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc9c7-118">Sorgt für den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />-Zustand.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-118">Transitions the underlying <see cref="T:System.Threading.Tasks.Task" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCanceled">
      <MemberSignature Language="C#" Value="public void SetCanceled (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCanceled(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource.SetCanceled(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCanceled (cancellationToken As CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCanceled(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SetCanceled : System.Threading.CancellationToken -&gt; unit" Usage="taskCompletionSource.SetCanceled cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="fc9c7-119">Das Abbruchtoken, mit dem die <see cref="T:System.Threading.Tasks.Task" /> abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-119">The cancellation token with which to cancel the <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="fc9c7-120">Versetzt die zugrunde liegende <see cref="T:System.Threading.Tasks.Task" /> mithilfe des angegebenen Tokens in den Zustand <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-120">Transitions the underlying <see cref="T:System.Threading.Tasks.Task" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state using the specified token.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetException">
      <MemberSignature Language="C#" Value="public void SetException (System.Collections.Generic.IEnumerable&lt;Exception&gt; exceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetException(class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; exceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource.SetException(System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetException (exceptions As IEnumerable(Of Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetException(System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ exceptions);" />
      <MemberSignature Language="F#" Value="member this.SetException : seq&lt;Exception&gt; -&gt; unit" Usage="taskCompletionSource.SetException exceptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="exceptions"><span data-ttu-id="fc9c7-121">Die Auflistung der Ausnahmen, die an das <see cref="T:System.Threading.Tasks.Task" />-Objekt gebunden werden sollen.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-121">The collection of exceptions to bind to this <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="fc9c7-122">Sorgt für den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />-Zustand.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-122">Transitions the underlying <see cref="T:System.Threading.Tasks.Task" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetException">
      <MemberSignature Language="C#" Value="public void SetException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource.SetException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetException (exception As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="member this.SetException : Exception -&gt; unit" Usage="taskCompletionSource.SetException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="fc9c7-123">Die Ausnahme, die an das <see cref="T:System.Threading.Tasks.Task" />-Objekt gebunden werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-123">The exception to bind to this <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="fc9c7-124">Sorgt für den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />-Zustand.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-124">Transitions the underlying <see cref="T:System.Threading.Tasks.Task" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResult">
      <MemberSignature Language="C#" Value="public void SetResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource.SetResult" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResult ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResult();" />
      <MemberSignature Language="F#" Value="member this.SetResult : unit -&gt; unit" Usage="taskCompletionSource.SetResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc9c7-125">Sorgt für den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />-Zustand.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-125">Transitions the underlying <see cref="T:System.Threading.Tasks.Task" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" /> state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Task { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Task" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskCompletionSource.Task" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Task As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Task { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Task : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.TaskCompletionSource.Task" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc9c7-126">Ruft den von der <see cref="T:System.Threading.Tasks.Task" /> erstellten <see cref="T:System.Threading.Tasks.TaskCompletionSource" /> ab.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-126">Gets the <see cref="T:System.Threading.Tasks.Task" /> created by this <see cref="T:System.Threading.Tasks.TaskCompletionSource" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="fc9c7-127">Diese Eigenschaft ermöglicht einem Consumer den Zugriff auf die <xref:System.Threading.Tasks.TaskCompletionSource.Task> , die von dieser Instanz gesteuert wird.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-127">This property gives a consumer access to the <xref:System.Threading.Tasks.TaskCompletionSource.Task> that's controlled by this instance.</span></span>
<span data-ttu-id="fc9c7-128">Die <xref:System.Threading.Tasks.TaskCompletionSource.SetResult> <xref:System.Threading.Tasks.TaskCompletionSource.SetException(System.Exception)> -, <xref:System.Threading.Tasks.TaskCompletionSource.SetException(System.Collections.Generic.IEnumerable{System.Exception})> -,-und- <xref:System.Threading.Tasks.TaskCompletionSource.SetCanceled> Methoden (und deren `Try` Varianten) für diese Instanz führen zu den relevanten Status Übergängen für diesen zugrunde liegenden `Task` .</span><span class="sxs-lookup"><span data-stu-id="fc9c7-128">The <xref:System.Threading.Tasks.TaskCompletionSource.SetResult>, <xref:System.Threading.Tasks.TaskCompletionSource.SetException(System.Exception)>, <xref:System.Threading.Tasks.TaskCompletionSource.SetException(System.Collections.Generic.IEnumerable{System.Exception})>, and <xref:System.Threading.Tasks.TaskCompletionSource.SetCanceled> methods (and their `Try` variants) on this instance all result in the relevant state transitions on this underlying `Task`.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrySetCanceled">
      <MemberSignature Language="C#" Value="public bool TrySetCanceled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetCanceled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource.TrySetCanceled" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetCanceled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetCanceled();" />
      <MemberSignature Language="F#" Value="member this.TrySetCanceled : unit -&gt; bool" Usage="taskCompletionSource.TrySetCanceled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc9c7-129">Versucht, den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />-Zustand auszuführen.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-129">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</span></span></summary>
        <returns><span data-ttu-id="fc9c7-130"><see langword="true" />, wenn der Vorgang erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-130"><see langword="true" /> if the operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="fc9c7-131">Dieser Vorgang wird zurückgegeben `false` <xref:System.Threading.Tasks.Task> , wenn sich der bereits in einem der drei Endzustände befindet: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> , <xref:System.Threading.Tasks.TaskStatus.Faulted> oder <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="fc9c7-131">This operation will return `false` if the <xref:System.Threading.Tasks.Task> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrySetCanceled">
      <MemberSignature Language="C#" Value="public bool TrySetCanceled (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetCanceled(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource.TrySetCanceled(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetCanceled (cancellationToken As CancellationToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetCanceled(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.TrySetCanceled : System.Threading.CancellationToken -&gt; bool" Usage="taskCompletionSource.TrySetCanceled cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="fc9c7-132">Das Abbruchtoken, mit dem die <see cref="T:System.Threading.Tasks.Task" /> abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-132">The cancellation token with which to cancel the <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="fc9c7-133">Versucht, den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />-Zustand auszuführen.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-133">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</span></span></summary>
        <returns><span data-ttu-id="fc9c7-134"><see langword="true" />, wenn der Vorgang erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-134"><see langword="true" /> if the operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="fc9c7-135">Dieser Vorgang wird zurückgegeben `false` <xref:System.Threading.Tasks.Task> , wenn sich der bereits in einem der drei Endzustände befindet: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> , <xref:System.Threading.Tasks.TaskStatus.Faulted> oder <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="fc9c7-135">This operation will return `false` if the <xref:System.Threading.Tasks.Task> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrySetException">
      <MemberSignature Language="C#" Value="public bool TrySetException (System.Collections.Generic.IEnumerable&lt;Exception&gt; exceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetException(class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; exceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetException (exceptions As IEnumerable(Of Exception)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetException(System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ exceptions);" />
      <MemberSignature Language="F#" Value="member this.TrySetException : seq&lt;Exception&gt; -&gt; bool" Usage="taskCompletionSource.TrySetException exceptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="exceptions"><span data-ttu-id="fc9c7-136">Die Auflistung der Ausnahmen, die an das <see cref="T:System.Threading.Tasks.Task" />-Objekt gebunden werden sollen.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-136">The collection of exceptions to bind to this <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="fc9c7-137">Versucht, den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />-Zustand auszuführen.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-137">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span></span></summary>
        <returns><span data-ttu-id="fc9c7-138"><see langword="true" />, wenn der Vorgang erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-138"><see langword="true" /> if the operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="fc9c7-139">Dieser Vorgang wird zurückgegeben `false` <xref:System.Threading.Tasks.Task> , wenn sich der bereits in einem der drei Endzustände befindet: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> , <xref:System.Threading.Tasks.TaskStatus.Faulted> oder <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="fc9c7-139">This operation will return `false` if the <xref:System.Threading.Tasks.Task> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrySetException">
      <MemberSignature Language="C#" Value="public bool TrySetException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource.TrySetException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetException (exception As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="member this.TrySetException : Exception -&gt; bool" Usage="taskCompletionSource.TrySetException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="fc9c7-140">Die Ausnahme, die an das <see cref="T:System.Threading.Tasks.Task" />-Objekt gebunden werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-140">The exception to bind to this <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="fc9c7-141">Versucht, den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />-Zustand auszuführen.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-141">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span></span></summary>
        <returns><span data-ttu-id="fc9c7-142"><see langword="true" />, wenn der Vorgang erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-142"><see langword="true" /> if the operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="fc9c7-143">Dieser Vorgang wird zurückgegeben `false` <xref:System.Threading.Tasks.Task> , wenn sich der bereits in einem der drei Endzustände befindet: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> , <xref:System.Threading.Tasks.TaskStatus.Faulted> oder <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="fc9c7-143">This operation will return `false` if the <xref:System.Threading.Tasks.Task> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrySetResult">
      <MemberSignature Language="C#" Value="public bool TrySetResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource.TrySetResult" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetResult();" />
      <MemberSignature Language="F#" Value="member this.TrySetResult : unit -&gt; bool" Usage="taskCompletionSource.TrySetResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc9c7-144">Versucht, den Übergang des zugrunde liegenden <see cref="T:System.Threading.Tasks.Task" />-Objekts in den <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />-Zustand auszuführen.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-144">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" /> state.</span></span></summary>
        <returns><span data-ttu-id="fc9c7-145"><see langword="true" />, wenn der Vorgang erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc9c7-145"><see langword="true" /> if the operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="fc9c7-146">Dieser Vorgang wird zurückgegeben `false` <xref:System.Threading.Tasks.Task> , wenn sich der bereits in einem der drei Endzustände befindet: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> , <xref:System.Threading.Tasks.TaskStatus.Faulted> oder <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="fc9c7-146">This operation will return `false` if the <xref:System.Threading.Tasks.Task> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
