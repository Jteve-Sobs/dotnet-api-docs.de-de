<Type Name="TaskScheduler" FullName="System.Threading.Tasks.TaskScheduler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bba851cfd6f156bb1595db68a433823776e03787" /><Meta Name="ms.sourcegitcommit" Value="3efce15f3841385ee3ba24bd71ff0c0cf9a47815" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/03/2019" /><Meta Name="ms.locfileid" Value="58874890" /></Metadata><TypeSignature Language="C#" Value="public abstract class TaskScheduler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TaskScheduler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskScheduler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TaskScheduler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskScheduler abstract" />
  <TypeSignature Language="F#" Value="type TaskScheduler = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Id={Id}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.TaskScheduler/SystemThreadingTasks_TaskSchedulerDebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="206ad-101">Stellt ein Objekt dar, das die Einreihung von Aufgaben in Threads auf niedriger Ebene behandelt.</span><span class="sxs-lookup"><span data-stu-id="206ad-101">Represents an object that handles the low-level work of queuing tasks onto threads.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="206ad-102">Eine Instanz von der <xref:System.Threading.Tasks.TaskScheduler> Klasse stellt einen Aufgabenplaner.</span><span class="sxs-lookup"><span data-stu-id="206ad-102">An instance of the <xref:System.Threading.Tasks.TaskScheduler> class represents a task scheduler.</span></span> <span data-ttu-id="206ad-103">Durch einen Aufgabenplaner wird sichergestellt, dass die Arbeit einer Aufgabe schließlich ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="206ad-103">A task scheduler ensures that the work of a task is eventually executed.</span></span>  
  
 <span data-ttu-id="206ad-104">Der standardmäßige Taskplaner basiert auf dem .NET Framework 4-Threadpool, der Arbeitsübernahme für Lastenausgleich und Threadeinfügung/-deaktivierung für maximalen Durchsatz ermöglicht und für eine gute Gesamtleistung sorgt.</span><span class="sxs-lookup"><span data-stu-id="206ad-104">The default task scheduler is based on the .NET Framework 4 thread pool, which provides work-stealing for load-balancing, thread injection/retirement for maximum throughput, and overall good performance.</span></span> <span data-ttu-id="206ad-105">Dies ist für die meisten Szenarien in der Regel ausreichend.</span><span class="sxs-lookup"><span data-stu-id="206ad-105">It should be sufficient for most scenarios.</span></span>  
  
 <span data-ttu-id="206ad-106">Die <xref:System.Threading.Tasks.TaskScheduler> Klasse dient auch als den Erweiterungspunkt für alle anpassbaren Planungslogik.</span><span class="sxs-lookup"><span data-stu-id="206ad-106">The <xref:System.Threading.Tasks.TaskScheduler> class also serves as the extension point for all customizable scheduling logic.</span></span>  <span data-ttu-id="206ad-107">Dies schließt die Mechanismen, wie z. B. eine Aufgabe für die Ausführung, und wie geplante Aufgaben planen für Debugger verfügbar gemacht werden sollen.</span><span class="sxs-lookup"><span data-stu-id="206ad-107">This includes mechanisms such as how to schedule a task for execution, and how scheduled tasks should be exposed to debuggers.</span></span> <span data-ttu-id="206ad-108">Wenn Sie spezielle Funktionen benötigen, können Sie einen benutzerdefinierten Planer erstellen und aktivieren es für bestimmte Aufgaben oder Abfragen.</span><span class="sxs-lookup"><span data-stu-id="206ad-108">If you require special functionality, you can create a custom scheduler and enable it for specific tasks or queries.</span></span>  
  
 <span data-ttu-id="206ad-109">In diesem Thema:</span><span class="sxs-lookup"><span data-stu-id="206ad-109">In this topic:</span></span>  
[<span data-ttu-id="206ad-110">Der standardmäßige Aufgabenplaner und der Threadpool der Warteschleife hinzu</span><span class="sxs-lookup"><span data-stu-id="206ad-110">The default task scheduler and the thread pool</span></span>](#Default)  
 [<span data-ttu-id="206ad-111">Der globalen Warteschlange im Vergleich zu lokalen Warteschlangen</span><span class="sxs-lookup"><span data-stu-id="206ad-111">The global queue vs. local queues</span></span>](#Queues)  
 [<span data-ttu-id="206ad-112">Arbeitsübernahme</span><span class="sxs-lookup"><span data-stu-id="206ad-112">Work stealing</span></span>](#Stealing)  
 [<span data-ttu-id="206ad-113">Lang ausgeführte Aufgaben</span><span class="sxs-lookup"><span data-stu-id="206ad-113">Long-running tasks</span></span>](#LongRunning)  
 [<span data-ttu-id="206ad-114">Aufgabeninlining</span><span class="sxs-lookup"><span data-stu-id="206ad-114">Task inlining</span></span>](#Inlining)  
[<span data-ttu-id="206ad-115">Angeben eines Synchronisierungskontexts</span><span class="sxs-lookup"><span data-stu-id="206ad-115">Specifying a synchronization context</span></span>](#Sync)  
  
<a name="Default"></a>   
## <a name="the-default-task-scheduler-and-the-thread-pool"></a><span data-ttu-id="206ad-116">Der standardmäßige Aufgabenplaner und der Threadpool der Warteschleife hinzu</span><span class="sxs-lookup"><span data-stu-id="206ad-116">The default task scheduler and the thread pool</span></span>  
 <span data-ttu-id="206ad-117">Der Standardplaner für die Task Parallel Library und PLINQ verwendet den .NET Framework-Threadpool, der durch dargestellt wird die <xref:System.Threading.ThreadPool> -Klasse, in die Warteschlange und Aufgaben.</span><span class="sxs-lookup"><span data-stu-id="206ad-117">The default scheduler for the Task Parallel Library and PLINQ uses the .NET Framework thread pool, which is represented by the <xref:System.Threading.ThreadPool> class, to queue and execute work.</span></span> <span data-ttu-id="206ad-118">Der Threadpool verwendet, die Informationen, die von bereitgestellte der <xref:System.Threading.Tasks.Task> Typ, der den differenzierten Parallelismus (kurzlebige Arbeitseinheiten), die Aufgaben und Abfragen oft darstellen parallele effizient zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="206ad-118">The thread pool uses the information that is provided by the <xref:System.Threading.Tasks.Task> type to efficiently     support the fine-grained parallelism (short-lived units of work) that parallel tasks and queries often represent.</span></span>  
  
<a name="Queues"></a>   
### <a name="the-global-queue-vs-local-queues"></a><span data-ttu-id="206ad-119">Der globalen Warteschlange im Vergleich zu lokalen Warteschlangen</span><span class="sxs-lookup"><span data-stu-id="206ad-119">The global queue vs. local queues</span></span>  
 <span data-ttu-id="206ad-120">Der Threadpool verwaltet Warteschlangen für Threads in jeder Anwendungsdomäne eine globale FIFO (First in, First-Out) zu arbeiten.</span><span class="sxs-lookup"><span data-stu-id="206ad-120">The thread pool maintains a global FIFO (first-in, first-out) work queue for threads in each application domain.</span></span> <span data-ttu-id="206ad-121">Jedes Mal, wenn ein Programm ruft die <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType> (oder <xref:System.Threading.ThreadPool.UnsafeQueueUserWorkItem%2A?displayProperty=nameWithType>) Methode, die Arbeit in dieser freigegebenen Warteschlange abgelegt und schließlich aufheben in der Warteschlange im nächsten Thread, der verfügbar wird.</span><span class="sxs-lookup"><span data-stu-id="206ad-121">Whenever a program calls the <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType> (or <xref:System.Threading.ThreadPool.UnsafeQueueUserWorkItem%2A?displayProperty=nameWithType>) method, the work is put on this shared queue and eventually de-queued onto the next thread that becomes available.</span></span> <span data-ttu-id="206ad-122">Ab .NET Framework 4 wird diese Warteschlange wurde verbessert, um einen sperrenfreien Algorithmus zu verwenden, die ähnelt der <xref:System.Collections.Concurrent.ConcurrentQueue%601> Klasse.</span><span class="sxs-lookup"><span data-stu-id="206ad-122">Starting with the .NET Framework 4, this queue has been improved to use a lock-free algorithm that resembles the <xref:System.Collections.Concurrent.ConcurrentQueue%601> class.</span></span> <span data-ttu-id="206ad-123">Mit dieser sperrenfreien Implementierung können Zeitaufwand weniger für der Threadpool bei Aufhebung die Warteschlange gestellt und Arbeitsaufgaben.</span><span class="sxs-lookup"><span data-stu-id="206ad-123">By using this lock-free implementation, the thread pool spends less time when it queues and de-queues work items.</span></span> <span data-ttu-id="206ad-124">Dieser Leistungsvorteil steht auf alle Programme, die den Threadpool zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="206ad-124">This performance benefit is available to all programs that use the thread pool.</span></span>  
  
 <span data-ttu-id="206ad-125">Aufgaben der obersten Ebene, bei denen es sich um Aufgaben handelt, die nicht im Kontext einer anderen Aufgabe erstellt werden, werden wie jedes andere Arbeitselement in der globalen Warteschlange abgelegt.</span><span class="sxs-lookup"><span data-stu-id="206ad-125">Top-level tasks, which are tasks that are not created in the context of another task, are put on the global queue just like any other work item.</span></span> <span data-ttu-id="206ad-126">Geschachtelte oder untergeordnete Aufgaben, die im Kontext einer anderen Aufgabe erstellt werden, werden hingegen anders behandelt.</span><span class="sxs-lookup"><span data-stu-id="206ad-126">However, nested or child tasks, which are created in the context of another task, are handled quite differently.</span></span> <span data-ttu-id="206ad-127">Ein untergeordnetes Element oder eine geschachtelte Aufgabe wird in einer lokalen Warteschlange abgelegt, die speziell für den Thread vorgesehen ist, in dem die übergeordnete Aufgabe ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="206ad-127">A child or nested task is put on a local queue that is specific to the thread on which the parent task is executing.</span></span> <span data-ttu-id="206ad-128">Die übergeordnete Aufgabe ist möglicherweise eine Aufgabe der obersten Ebene. Es kann sich jedoch auch um das untergeordnete Element einer anderen Aufgabe handeln.</span><span class="sxs-lookup"><span data-stu-id="206ad-128">The parent task may be a top-level task or it also may be the child of another task.</span></span> <span data-ttu-id="206ad-129">Wenn dieser Thread für weitere Arbeitsvorgänge bereit ist, wird zuerst eine Suche in der lokalen Warteschlange ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="206ad-129">When this thread is ready for more work, it first looks in the local queue.</span></span> <span data-ttu-id="206ad-130">Wenn darin Arbeitselemente warten, kann darauf schnell zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="206ad-130">If work items are waiting there, they can be accessed quickly.</span></span> <span data-ttu-id="206ad-131">Die lokalen Warteschlangen werden zugegriffen, in der Last in, First Out (LIFO)-Prinzip Cacheort beizubehalten und Konflikte zu minimieren.</span><span class="sxs-lookup"><span data-stu-id="206ad-131">The local queues are accessed in last-in, first-out order (LIFO) to preserve cache locality and reduce contention.</span></span> <span data-ttu-id="206ad-132">Weitere Informationen zu untergeordneten und geschachtelten Aufgaben finden Sie unter [angefügte und getrennte untergeordnete Aufgaben](~/docs/standard/parallel-programming/attached-and-detached-child-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="206ad-132">For more information about child tasks and nested tasks, see [Attached and Detached Child Tasks](~/docs/standard/parallel-programming/attached-and-detached-child-tasks.md).</span></span>  
  
 <span data-ttu-id="206ad-133">Die Verwendung von lokalen Warteschlangen nicht nur Druck auf die globale Warteschlange reduziert, sondern nutzt auch den Ort der Daten.</span><span class="sxs-lookup"><span data-stu-id="206ad-133">The use of local queues not only reduces pressure on the global queue, but also takes advantage of data locality.</span></span> <span data-ttu-id="206ad-134">Arbeitsaufgaben in der lokalen Warteschlange häufig Verweis-Datenstrukturen, die im Arbeitsspeicher physisch nahe beieinander liegen.</span><span class="sxs-lookup"><span data-stu-id="206ad-134">Work items in the local queue frequently reference data structures that are physically near one another in memory.</span></span> <span data-ttu-id="206ad-135">In diesen Fällen sind die Daten bereits im Cache, nachdem die erste Aufgabe ausgeführt wurde und schnell zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="206ad-135">In these cases, the data is already in the cache after the first task has run and can be accessed quickly.</span></span> <span data-ttu-id="206ad-136">Beide [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md) und <xref:System.Threading.Tasks.Parallel> -Klasse geschachtelte Aufgaben und untergeordnete Aufgaben ausführlich und mit der lokalen Warteschlangen werden deutliche geschwindigkeitssteigerungen erzielt.</span><span class="sxs-lookup"><span data-stu-id="206ad-136">Both [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md) and the <xref:System.Threading.Tasks.Parallel> class use nested tasks and child tasks extensively, and achieve significant speedups by using the local work queues.</span></span>  
  
<a name="Stealing"></a>   
### <a name="work-stealing"></a><span data-ttu-id="206ad-137">Arbeitsübernahme</span><span class="sxs-lookup"><span data-stu-id="206ad-137">Work stealing</span></span>  
 <span data-ttu-id="206ad-138">Ab .NET Framework 4, bietet der Threadpool einen Arbeitsübernahme-Algorithmus, um sicherzustellen, dass keine Threads im Leerlauf, während die anderen noch Arbeitsvorgänge in ihre Warteschlangen.</span><span class="sxs-lookup"><span data-stu-id="206ad-138">Starting with the .NET Framework 4, the thread pool also features a work-stealing algorithm to help make sure that no threads are sitting idle while others still have work in their queues.</span></span> <span data-ttu-id="206ad-139">Wenn ein Threadpoolthread zusätzliche Arbeit übernehmen kann, wird zuerst am Anfang der lokalen Warteschlange, anschließend in der globalen Warteschlange und zuletzt in den lokalen Warteschlangen anderer Threads gesucht.</span><span class="sxs-lookup"><span data-stu-id="206ad-139">When a thread-pool thread is ready for more work, it first looks at the head of its local queue, then in the global queue, and then in the local queues of other threads.</span></span> <span data-ttu-id="206ad-140">Wenn ein Arbeitselement in der lokalen Warteschlange eines anderen Threads gefunden wird, wird zunächst Heuristik angewendet, um sicherzustellen, dass die Arbeit effizient ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="206ad-140">If it finds a work item in the local queue of another thread, it first applies heuristics to make sure that it can run the work efficiently.</span></span> <span data-ttu-id="206ad-141">Wenn dies möglich ist, holt es das Arbeitselement aus der Tail (in FIFO-Reihenfolge).</span><span class="sxs-lookup"><span data-stu-id="206ad-141">If it can, it de-queues the work item from the tail (in FIFO order).</span></span> <span data-ttu-id="206ad-142">Dadurch werden Konflikte in jeder lokalen Warteschlange verringert und der Datenort beibehalten.</span><span class="sxs-lookup"><span data-stu-id="206ad-142">This reduces contention on each local queue and preserves data locality.</span></span> <span data-ttu-id="206ad-143">Dank dieser Architektur kann es sich um die Thread-Pool des Lastenausgleichs für arbeiten Sie effizienter als in frühere Versionen.</span><span class="sxs-lookup"><span data-stu-id="206ad-143">This architecture helps the thread pool load-balance work more efficiently than past versions did.</span></span>  
  
<a name="LongRunning"></a>   
### <a name="long-running-tasks"></a><span data-ttu-id="206ad-144">Lang ausgeführte Aufgaben</span><span class="sxs-lookup"><span data-stu-id="206ad-144">Long-running tasks</span></span>  
 <span data-ttu-id="206ad-145">Unter Umständen möchten Sie ausdrücklich verhindern, dass eine Aufgabe in einer lokalen Warteschlange abgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="206ad-145">You may want to explicitly prevent a task from being put on a local queue.</span></span> <span data-ttu-id="206ad-146">Sie wissen möglicherweise z. B., dass eine bestimmte Arbeitsaufgabe für eine relativ lange Zeit ausgeführt wird und daher wahrscheinlich alle anderen Arbeitsaufgaben in der lokalen Warteschlange blockiert.</span><span class="sxs-lookup"><span data-stu-id="206ad-146">For example, you may know that a particular work item will run for a relatively long time and is likely to block all other work items on the local queue.</span></span> <span data-ttu-id="206ad-147">In diesem Fall können Sie die <xref:System.Threading.Tasks.TaskCreationOptions?displayProperty=nameWithType>-Option angeben, die den Planer darauf hinweist, dass u. U. ein weiterer Thread für die Aufgabe erforderlich ist, damit der Fortschritt anderer Threads oder Arbeitsaufgaben in der lokalen Warteschlange nicht blockiert wird.</span><span class="sxs-lookup"><span data-stu-id="206ad-147">In this case, you can specify the <xref:System.Threading.Tasks.TaskCreationOptions?displayProperty=nameWithType> option, which provides a hint to the scheduler that an additional thread might be required for the task so that it does not block the forward progress of other threads or work items on the local queue.</span></span> <span data-ttu-id="206ad-148">Mit dieser Option vermeiden Sie den Threadpool vollständig, einschließlich der globalen und lokalen Warteschlangen.</span><span class="sxs-lookup"><span data-stu-id="206ad-148">By using this option you avoid the thread pool completely, including the global and local queues.</span></span>  
  
<a name="Inlining"></a>   
### <a name="task-inlining"></a><span data-ttu-id="206ad-149">Aufgabeninlining</span><span class="sxs-lookup"><span data-stu-id="206ad-149">Task inlining</span></span>  
 <span data-ttu-id="206ad-150">In einigen Fällen, wenn eine <xref:System.Threading.Tasks.Task> wird erwartet, es kann synchron ausgeführt werden für den Thread, der den Wartevorgang ausführt.</span><span class="sxs-lookup"><span data-stu-id="206ad-150">In some cases when a <xref:System.Threading.Tasks.Task> is waited on, it may be executed synchronously on the thread that is performing the wait operation.</span></span> <span data-ttu-id="206ad-151">Dies verbessert die Leistung von entfällt die Notwendigkeit ein weiterer Thread aus, und verwenden Sie stattdessen die vorhandenen Threads, die andernfalls blockiert worden wäre.</span><span class="sxs-lookup"><span data-stu-id="206ad-151">This enhances performance by preventing the need for an additional thread and instead using the existing thread, which would have blocked otherwise.</span></span> <span data-ttu-id="206ad-152">Um Fehler aufgrund von Eintrittsinvarianz zu verhindern, tritt Aufgabeninlining nur auf, wenn das Wartevorgangsziel in der lokalen Warteschlange des relevanten Threads gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="206ad-152">To prevent errors due to reentrancy, task inlining only occurs when the wait target is found in the relevant thread's local queue.</span></span>  
  
<a name="Sync"></a>   
## <a name="specifying-a-synchronization-context"></a><span data-ttu-id="206ad-153">Angeben eines Synchronisierungskontexts</span><span class="sxs-lookup"><span data-stu-id="206ad-153">Specifying a synchronization context</span></span>  
 <span data-ttu-id="206ad-154">Sie können mit der <xref:System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext%2A?displayProperty=nameWithType>-Methode angeben, dass eine Aufgabe für die Ausführung in einem bestimmten Thread geplant werden soll.</span><span class="sxs-lookup"><span data-stu-id="206ad-154">You can use the <xref:System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext%2A?displayProperty=nameWithType> method to specify that a task should be scheduled to run on a particular thread.</span></span> <span data-ttu-id="206ad-155">Dies ist in Frameworks wie Windows Forms und Windows Presentation Foundation hilfreich, wo der Zugriff auf Benutzeroberflächenobjekte oftmals auf Code beschränkt ist, der in dem Thread ausgeführt wird, in dem das Benutzeroberflächenobjekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="206ad-155">This is useful in frameworks such as Windows Forms and Windows Presentation Foundation where access to user interface objects is often restricted to code that is running on the same thread on which the UI object was created.</span></span>  
  
 <span data-ttu-id="206ad-156">Im folgenden Beispiel wird die <xref:System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext%2A?displayProperty=nameWithType> -Methode in einer Windows Presentation Foundation (WPF)-app, um eine Aufgabe auf dem gleichen Thread zu planen, die auf die Steuerelemente der Benutzeroberfläche (UI) erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="206ad-156">The following example uses the <xref:System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext%2A?displayProperty=nameWithType> method in a Windows Presentation Foundation (WPF) app to schedule a task on the same thread that the user interface (UI) control was created on.</span></span>   <span data-ttu-id="206ad-157">Das Beispiel erstellt ein Mosaik von Bildern, die aus einem angegebenen Verzeichnis nach dem Zufallsprinzip ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="206ad-157">The example creates a mosaic of images that are randomly selected from a specified directory.</span></span> <span data-ttu-id="206ad-158">Die WPF-Objekte werden zum Laden und das Ändern der Bildgröße.</span><span class="sxs-lookup"><span data-stu-id="206ad-158">The WPF objects are used to load and resize the images.</span></span> <span data-ttu-id="206ad-159">Die unformatierten Pixel werden dann an eine Aufgabe, die verwendet übergeben eine <xref:System.Threading.Tasks.Parallel.For%2A> Schleife, um die Pixeldaten in einem großen Single-Byte-Array zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="206ad-159">The raw pixels are then passed to a task that uses a <xref:System.Threading.Tasks.Parallel.For%2A> loop to write the pixel data into a large single-byte array.</span></span> <span data-ttu-id="206ad-160">Es ist keine Synchronisierung erforderlich, da keine zwei Kacheln, die Elemente des gleichen Arrays belegen.</span><span class="sxs-lookup"><span data-stu-id="206ad-160">No synchronization is required because no two tiles occupy the same array elements.</span></span> <span data-ttu-id="206ad-161">Die Kacheln können auch in beliebiger Reihenfolge geschrieben werden, da ihre Position unabhängig von anderen Kacheln berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="206ad-161">The tiles can also be written in any order because their position is calculated independently of any other tile.</span></span> <span data-ttu-id="206ad-162">Das große Array wird anschließend an eine Aufgabe übergeben, die im UI-Thread ausgeführt wird, werden die Pixeldaten in ein Image-Steuerelement geladen.</span><span class="sxs-lookup"><span data-stu-id="206ad-162">The large array is then passed to a task that runs on the UI thread, where the pixel data is loaded into an Image control.</span></span>  
  
 <span data-ttu-id="206ad-163">Das Beispiel verschiebt Daten aus der UI-Thread, ändert sie mithilfe von parallelen Schleifen und <xref:System.Threading.Tasks.Task> Objekte aus, und übergibt diese an eine Aufgabe, die im UI-Thread ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="206ad-163">The example moves data off the UI thread, modifies it by using parallel loops and <xref:System.Threading.Tasks.Task> objects, and then passes it back to a task that runs on the UI thread.</span></span> <span data-ttu-id="206ad-164">Dieser Ansatz ist hilfreich, wenn man die Task Parallel Library zu verwenden, um Vorgänge auszuführen, die von der WPF-API nicht unterstützt werden oder nicht schnell genug sind.</span><span class="sxs-lookup"><span data-stu-id="206ad-164">This approach is useful when you have to use the Task Parallel Library to perform operations that either are not supported by the WPF API, or are not sufficiently fast.</span></span> <span data-ttu-id="206ad-165">Eine weitere Möglichkeit, ein Bild Mosaic in WPF zu erstellen ist die Verwendung einer <xref:System.Windows.Controls.WrapPanel?displayProperty=nameWithType> steuern, und fügen Sie Bilder hinzu.</span><span class="sxs-lookup"><span data-stu-id="206ad-165">Another way to create an image mosaic in WPF is to use a <xref:System.Windows.Controls.WrapPanel?displayProperty=nameWithType> control and add images to it.</span></span> <span data-ttu-id="206ad-166">Die <xref:System.Windows.Controls.WrapPanel> übernimmt die Aufgabe der Positionierung der Kacheln.</span><span class="sxs-lookup"><span data-stu-id="206ad-166">The <xref:System.Windows.Controls.WrapPanel> handles the work of positioning the tiles.</span></span> <span data-ttu-id="206ad-167">Diese Aufgabe kann jedoch nur im UI-Thread ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="206ad-167">However, this work can only be performed on the UI thread.</span></span>  
  
 [!code-csharp[TPL_SyncContext#01](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_synccontext/cs/mainwindow.xaml.cs#01)]
 [!code-vb[TPL_SyncContext#01](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_synccontext/vb/MainWindow.xaml.vb#01)]  
  
 <span data-ttu-id="206ad-168">Um das Beispiel zu erstellen, erstellen Sie ein WPF-Anwendungsprojekt in Visual Studio, und nennen Sie sie WPF_CS1 (für eine C# WPF-Projekt) oder WPF_VB1 (für eine Visual Basic-WPF-Projekt).</span><span class="sxs-lookup"><span data-stu-id="206ad-168">To create the example, create a WPF application project in Visual Studio and name it WPF_CS1 (for a C# WPF project) or WPF_VB1 (for a Visual Basic WPF project).</span></span> <span data-ttu-id="206ad-169">Klicken Sie dann folgendermaßen Sie vor:</span><span class="sxs-lookup"><span data-stu-id="206ad-169">Then do the following:</span></span>  
  
1. <span data-ttu-id="206ad-170">Ziehen Sie in der Entwurfsansicht ein <xref:System.Windows.Controls.Image> -Steuerelement aus der **Toolbox** auf der oberen linken Ecke der Entwurfsoberfläche.</span><span class="sxs-lookup"><span data-stu-id="206ad-170">In design view, drag an <xref:System.Windows.Controls.Image> control from the **Toolbox** onto the upper left corner of the design surface.</span></span> <span data-ttu-id="206ad-171">In der **Namen** ins Textfeld die **Eigenschaften** benennen Sie das Steuerelement "Bild".</span><span class="sxs-lookup"><span data-stu-id="206ad-171">In the **Name** textbox of the **Properties** window, name the control "image".</span></span>    
  
2. <span data-ttu-id="206ad-172">Ziehen Sie eine <xref:System.Windows.Controls.Button> -Steuerelement aus der **Toolbox** an der unteren linken Seite des Anwendungsfensters.</span><span class="sxs-lookup"><span data-stu-id="206ad-172">Drag a <xref:System.Windows.Controls.Button> control from the **Toolbox** to the lower left part of the application window.</span></span> <span data-ttu-id="206ad-173">Geben Sie in der XAML-Ansicht der <xref:System.Windows.Controls.ContentControl.Content%2A> -Eigenschaft der Schaltfläche als "Make Mosaiken", und geben Sie die <xref:System.Windows.FrameworkElement.Width> Eigenschaft als "100".</span><span class="sxs-lookup"><span data-stu-id="206ad-173">In XAML view, specify the <xref:System.Windows.Controls.ContentControl.Content%2A> property of the button as "Make a mosaic", and specify its <xref:System.Windows.FrameworkElement.Width> property as "100".</span></span> <span data-ttu-id="206ad-174">Verbinden der <xref:System.Windows.Controls.Primitives.ButtonBase.Click> -Ereignis mit der `button_Click` Ereignishandler im Code mit dem Beispiel durch das Hinzufügen `Click="button_Click"` auf die `<Button>` Element.</span><span class="sxs-lookup"><span data-stu-id="206ad-174">Connect the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event with the `button_Click` event handler defined in the example's code by adding `Click="button_Click"` to the `<Button>` element.</span></span> <span data-ttu-id="206ad-175">In der **Namen** ins Textfeld die **Eigenschaften** benennen Sie das Steuerelement "Button".</span><span class="sxs-lookup"><span data-stu-id="206ad-175">In the **Name** textbox of the **Properties** window, name the control "button".</span></span>  
  
3. <span data-ttu-id="206ad-176">Ersetzen Sie den gesamten Inhalt der Datei "MainWindow.Xaml.cs" oder "MainWindow.Xaml.vb" durch den Code in diesem Beispiel ein.</span><span class="sxs-lookup"><span data-stu-id="206ad-176">Replace the entire contents of the MainWindow.xaml.cs or MainWindow.xaml.vb file with the code from this example.</span></span> <span data-ttu-id="206ad-177">Für eine C# WPF project, stellen Sie sicher, dass der Name des Arbeitsbereichs, den Namen des Projekts entspricht.</span><span class="sxs-lookup"><span data-stu-id="206ad-177">For a C# WPF project, make sure that the name of the workspace matches the project name.</span></span> 
  
4. <span data-ttu-id="206ad-178">Im Beispiel liest die JPEG-Bilder aus einem Verzeichnis mit dem Namen C:\Users\Public\Pictures\Sample Bilder\\.</span><span class="sxs-lookup"><span data-stu-id="206ad-178">The example reads JPEG images from a directory named C:\Users\Public\Pictures\Sample Pictures\\.</span></span> <span data-ttu-id="206ad-179">Erstellen Sie das Verzeichnis und versehen Sie einige Images, oder ändern Sie den Pfad auf einem anderen Verzeichnis verweisen, die Bilder enthält.</span><span class="sxs-lookup"><span data-stu-id="206ad-179">Either create the directory and place some images in it, or change the path to refer to some other directory that contains images.</span></span> 
  
<span data-ttu-id="206ad-180">In diesem Beispiel weist einige Einschränkungen.</span><span class="sxs-lookup"><span data-stu-id="206ad-180">This example has some limitations.</span></span> <span data-ttu-id="206ad-181">Beispielsweise werden nur 32-Bit-pro-Pixel-Images unterstützt. Bilder in anderen Formaten sind beschädigt, durch die <xref:System.Windows.Media.Imaging.BitmapImage> Objekts während der die Größenänderung.</span><span class="sxs-lookup"><span data-stu-id="206ad-181">For example, only 32-bits-per-pixel images are supported; images in other formats are corrupted by the <xref:System.Windows.Media.Imaging.BitmapImage> object during the resizing operation.</span></span> <span data-ttu-id="206ad-182">Darüber hinaus müssen die Source-Images. alle größer als die Größe der Kacheln sein.</span><span class="sxs-lookup"><span data-stu-id="206ad-182">Also, the source images must all be larger than the tile size.</span></span> <span data-ttu-id="206ad-183">Als weitere Übung können Sie Funktionen zur Behandlung mehrerer Pixelformate und Dateigrößen hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="206ad-183">As a further exercise, you can add functionality to handle multiple pixel formats and file sizes.</span></span>  
  
## Examples  
 <span data-ttu-id="206ad-184">Das folgende Beispiel stammt aus dem [Beispiele zur parallelen Programmierung mit .NET Framework 4](https://go.microsoft.com/fwlink/?LinkID=165717) auf der MSDN Code Gallery-Website.</span><span class="sxs-lookup"><span data-stu-id="206ad-184">The following example is taken from the [Samples for Parallel Programming with the .NET Framework 4](https://go.microsoft.com/fwlink/?LinkID=165717) on the MSDN Code Gallery Web site.</span></span>  <span data-ttu-id="206ad-185">Erstellen ein benutzerdefinierten Aufgabenplaners, das die Anzahl der Threads, die von der Anwendung verwendeten einschränkt.</span><span class="sxs-lookup"><span data-stu-id="206ad-185">It creates a custom task scheduler that limits the number of threads used by the app.</span></span> <span data-ttu-id="206ad-186">Anschließend wird die zwei Sätze von Aufgaben gestartet und zeigt Informationen über die Aufgabe und der Thread, der auf dem die Aufgabe ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="206ad-186">It then launches two sets of tasks and displays information about the task and the thread on which the task is executing.</span></span>  
  
 [!code-csharp[TPL_Schedulers#02](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_schedulers/cs/limitex1.cs#02)]
 [!code-vb[TPL_Schedulers#02](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_schedulers/vb/module2.vb#02)]  
  
 <span data-ttu-id="206ad-187">Darüber hinaus sind einige Beispiel-Taskplaner in der Codegalerie verfügbar: [Beispiele für die parallele Programmierung mit .NET Framework 4](https://go.microsoft.com/fwlink/?LinkID=165717).</span><span class="sxs-lookup"><span data-stu-id="206ad-187">In addition, several sample task schedulers are available on Code Gallery: [Samples for Parallel Programming with the .NET Framework 4](https://go.microsoft.com/fwlink/?LinkID=165717).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="206ad-188">Alle Mitglieder der abstrakten <see cref="T:System.Threading.Tasks.TaskScheduler" /> Typs sind threadsicher und können von mehreren Threads gleichzeitig verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="206ad-188">All members of the abstract <see cref="T:System.Threading.Tasks.TaskScheduler" /> type are thread-safe and may be used from multiple threads concurrently.</span></span></threadsafe>
    <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
    <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="206ad-189">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="206ad-189">Task Parallel Library (TPL)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TaskScheduler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TaskScheduler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="206ad-190">Initialisiert das <see cref="T:System.Threading.Tasks.TaskScheduler" />.</span><span class="sxs-lookup"><span data-stu-id="206ad-190">Initializes the <see cref="T:System.Threading.Tasks.TaskScheduler" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="206ad-191">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="206ad-191">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.TaskScheduler Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.Tasks.TaskScheduler Current" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskScheduler.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::Tasks::TaskScheduler ^ Current { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Threading.Tasks.TaskScheduler" Usage="System.Threading.Tasks.TaskScheduler.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="206ad-192">Ruft den zugeordneten <see cref="T:System.Threading.Tasks.TaskScheduler" /> der derzeit ausgeführten Aufgabe ab.</span><span class="sxs-lookup"><span data-stu-id="206ad-192">Gets the <see cref="T:System.Threading.Tasks.TaskScheduler" /> associated with the currently executing task.</span></span></summary>
        <value><span data-ttu-id="206ad-193">Gibt den zugeordneten <see cref="T:System.Threading.Tasks.TaskScheduler" /> der momentan ausgeführten Aufgabe zurück.</span><span class="sxs-lookup"><span data-stu-id="206ad-193">Returns the <see cref="T:System.Threading.Tasks.TaskScheduler" /> associated with the currently executing task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="206ad-194">Wird nicht von einer Aufgabe aufgerufen <xref:System.Threading.Tasks.TaskScheduler.Current%2A> gibt die <xref:System.Threading.Tasks.TaskScheduler.Default%2A> Scheduler.</span><span class="sxs-lookup"><span data-stu-id="206ad-194">When not called from within a task, <xref:System.Threading.Tasks.TaskScheduler.Current%2A> will return the <xref:System.Threading.Tasks.TaskScheduler.Default%2A> scheduler.</span></span>  
  
 <span data-ttu-id="206ad-195">Weitere Informationen finden Sie unter <xref:System.Threading.Tasks.TaskScheduler>.</span><span class="sxs-lookup"><span data-stu-id="206ad-195">For more information, see <xref:System.Threading.Tasks.TaskScheduler>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="206ad-196">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="206ad-196">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.TaskScheduler Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.Tasks.TaskScheduler Default" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskScheduler.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::Tasks::TaskScheduler ^ Default { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Threading.Tasks.TaskScheduler" Usage="System.Threading.Tasks.TaskScheduler.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="206ad-197">Ruft die <see cref="T:System.Threading.Tasks.TaskScheduler" />-Standardinstanz ab, die von .NET Framework bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="206ad-197">Gets the default <see cref="T:System.Threading.Tasks.TaskScheduler" /> instance that is provided by the .NET Framework.</span></span></summary>
        <value><span data-ttu-id="206ad-198">Gibt die <see cref="T:System.Threading.Tasks.TaskScheduler" />-Standardinstanz zurück.</span><span class="sxs-lookup"><span data-stu-id="206ad-198">Returns the default <see cref="T:System.Threading.Tasks.TaskScheduler" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="206ad-199">Weitere Informationen finden Sie unter <xref:System.Threading.Tasks.TaskScheduler>.</span><span class="sxs-lookup"><span data-stu-id="206ad-199">For more information, see <xref:System.Threading.Tasks.TaskScheduler>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="206ad-200">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="206ad-200">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TaskScheduler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TaskScheduler ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="taskScheduler.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="206ad-201">Gibt alle Ressourcen frei, die diesem Planer zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="206ad-201">Frees all resources associated with this scheduler.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromCurrentSynchronizationContext">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.TaskScheduler FromCurrentSynchronizationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.TaskScheduler FromCurrentSynchronizationContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromCurrentSynchronizationContext () As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::TaskScheduler ^ FromCurrentSynchronizationContext();" />
      <MemberSignature Language="F#" Value="static member FromCurrentSynchronizationContext : unit -&gt; System.Threading.Tasks.TaskScheduler" Usage="System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="206ad-202">Erstellt einen <see cref="T:System.Threading.Tasks.TaskScheduler" />, der dem aktuellen <see cref="T:System.Threading.SynchronizationContext" /> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="206ad-202">Creates a <see cref="T:System.Threading.Tasks.TaskScheduler" /> associated with the current <see cref="T:System.Threading.SynchronizationContext" />.</span></span></summary>
        <returns><span data-ttu-id="206ad-203">Ein dem aktuellen <see cref="T:System.Threading.SynchronizationContext" /> gemäß Vorgabe durch den <see cref="P:System.Threading.SynchronizationContext.Current" /> zugeordneter <see cref="T:System.Threading.Tasks.TaskScheduler" />.</span><span class="sxs-lookup"><span data-stu-id="206ad-203">A <see cref="T:System.Threading.Tasks.TaskScheduler" /> associated with the current <see cref="T:System.Threading.SynchronizationContext" />, as determined by <see cref="P:System.Threading.SynchronizationContext.Current" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="206ad-204">Alle <xref:System.Threading.Tasks.Task> Instanzen in der Warteschlange, auf das zurückgegebene Scheduler wird ausgeführt, durch einen Aufruf der <xref:System.Threading.SynchronizationContext.Post%2A> -Methode für diesen Kontext.</span><span class="sxs-lookup"><span data-stu-id="206ad-204">All <xref:System.Threading.Tasks.Task> instances queued to the returned scheduler will be executed through a call to the <xref:System.Threading.SynchronizationContext.Post%2A> method on that context.</span></span>  
  
 <span data-ttu-id="206ad-205">Weitere Informationen finden Sie unter <xref:System.Threading.Tasks.TaskScheduler>.</span><span class="sxs-lookup"><span data-stu-id="206ad-205">For more information, see <xref:System.Threading.Tasks.TaskScheduler>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="206ad-206">Der aktuelle SynchronizationContext kann nicht als TaskScheduler verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="206ad-206">The current SynchronizationContext may not be used as a TaskScheduler.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="206ad-207">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="206ad-207">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledTasks">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt; GetScheduledTasks ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Threading.Tasks.Task&gt; GetScheduledTasks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.GetScheduledTasks" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetScheduledTasks () As IEnumerable(Of Task)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Threading::Tasks::Task ^&gt; ^ GetScheduledTasks();" />
      <MemberSignature Language="F#" Value="abstract member GetScheduledTasks : unit -&gt; seq&lt;System.Threading.Tasks.Task&gt;" Usage="taskScheduler.GetScheduledTasks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="206ad-208">Nur für Debuggerunterstützung: Generiert eine Enumeration von <see cref="T:System.Threading.Tasks.Task" />-Instanzen, die sich gegenwärtig in der Warteschlange des Taskplaners befinden und auf ihre Ausführung warten.</span><span class="sxs-lookup"><span data-stu-id="206ad-208">For debugger support only, generates an enumerable of <see cref="T:System.Threading.Tasks.Task" /> instances currently queued to the scheduler waiting to be executed.</span></span></summary>
        <returns><span data-ttu-id="206ad-209">Eine Aufzählung, in der von einem Debugger die gegenwärtig in der Warteschlange dieses Taskplaners enthaltenen Aufgaben durchsucht werden können.</span><span class="sxs-lookup"><span data-stu-id="206ad-209">An enumerable that allows a debugger to traverse the tasks currently queued to this scheduler.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="206ad-210">Eine abgeleitete Klasse <xref:System.Threading.Tasks.TaskScheduler> implementiert diese Methode, um die Unterstützung der Integration mit dem Debugger.</span><span class="sxs-lookup"><span data-stu-id="206ad-210">A class derived from <xref:System.Threading.Tasks.TaskScheduler> implements this method in order to support integration with debuggers.</span></span> <span data-ttu-id="206ad-211">Diese Methode wird nur von .NET Framework aufgerufen werden, wenn der Debugger Zugriff auf die Daten anfordert.</span><span class="sxs-lookup"><span data-stu-id="206ad-211">This method will only be invoked by the .NET Framework when the debugger requests access to the data.</span></span> <span data-ttu-id="206ad-212">Das aufzählbare Element zurückgegeben wird durchlaufen, indem Sie debugginghilfsprogramme für den Zugriff auf die Aufgaben derzeit in der Warteschlange dieses Planers, wodurch der Debugger eine Darstellung dieser Informationen in der Benutzeroberfläche bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="206ad-212">The enumerable returned will be traversed by debugging utilities to access the tasks currently queued to this scheduler, enabling the debugger to provide a representation of this information in the user interface.</span></span>  
  
 <span data-ttu-id="206ad-213">Es ist wichtig zu beachten, dass, wenn diese Methode aufgerufen wird, alle anderen Threads im Prozess eingefroren werden.</span><span class="sxs-lookup"><span data-stu-id="206ad-213">It is important to note that, when this method is called, all other threads in the process will be frozen.</span></span> <span data-ttu-id="206ad-214">Aus diesem Grund ist es wichtig, die Synchronisierung mit anderen Threads zu vermeiden, die zu einer Blockierung führen kann.</span><span class="sxs-lookup"><span data-stu-id="206ad-214">Therefore, it's important to avoid synchronization with other threads that may lead to blocking.</span></span> <span data-ttu-id="206ad-215">Wenn die Synchronisierung ist erforderlich, und Sie nicht, die Sperre bei dieser Methode abzurufen, sollten Sie eine Ausnahme auslösen, damit der Debugger nicht hängen bleibt.</span><span class="sxs-lookup"><span data-stu-id="206ad-215">If synchronization is necessary, and you are unable to acquire the lock in this method, then you should throw an exception so that the debugger does not hang.</span></span> <span data-ttu-id="206ad-216">Das folgende Beispiel zeigt eine mögliche Vorgehensweise in c#:</span><span class="sxs-lookup"><span data-stu-id="206ad-216">The following example shows one possible approach in C#:</span></span>  
  
```  
protected override IEnumerable<Task> GetScheduledTasks()  
{  
    bool lockTaken = false;  
    try  
    {  
        Monitor.TryEnter(_syncObj, ref lockTaken);  
        if (lockTaken)  
        {  
            return _tasks.ToArray();  
        }  
        else throw new NotSupportedException();  
    }  
    finally  
    {  
    if (lockTaken) Monitor.Exit(_syncObj);  
    }}  
```  
  
 <span data-ttu-id="206ad-217">Darüber hinaus müssen diese Methode und das zurückgegebene aufzählbare Element global sichtbaren Zustand nicht ändern.</span><span class="sxs-lookup"><span data-stu-id="206ad-217">Additionally, this method and the enumerable returned must not modify any globally visible state.</span></span>  
  
 <span data-ttu-id="206ad-218">Das zurückgegebene auflistbare sollte nie null sein.</span><span class="sxs-lookup"><span data-stu-id="206ad-218">The returned enumerable should never be null.</span></span> <span data-ttu-id="206ad-219">Derzeit keine Aufgaben in der Warteschlange befinden, sollten stattdessen ein leeres aufzählbares Element zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="206ad-219">If there are currently no queued tasks, an empty enumerable should be returned instead.</span></span>  
  
 <span data-ttu-id="206ad-220">Entwickler, die benutzerdefinierte Debugger implementieren diese Methode sollte nicht direkt aufrufen, sollten aber die interne Wrappermethode `GetScheduledTasksForDebugger` stattdessen: `internal Task[] GetScheduledTasksForDebugger()`.</span><span class="sxs-lookup"><span data-stu-id="206ad-220">Developers who are implementing custom debuggers shouldn't call this method directly, but should use the internal wrapper method `GetScheduledTasksForDebugger` instead: `internal Task[] GetScheduledTasksForDebugger()`.</span></span> <span data-ttu-id="206ad-221">Diese Wrappermethode gibt ein Array von Aufgaben anstatt von ein aufzählbares Element zurück.</span><span class="sxs-lookup"><span data-stu-id="206ad-221">This wrapper method returns an array of tasks instead of an enumerable.</span></span> <span data-ttu-id="206ad-222">Um eine Liste der aktiven Planer abzurufen, verwenden Sie die interne Methode `internal static TaskScheduler[] GetTaskSchedulersForDebugger()`.</span><span class="sxs-lookup"><span data-stu-id="206ad-222">To retrieve a list of active schedulers, use the internal method `internal static TaskScheduler[] GetTaskSchedulersForDebugger()`.</span></span> <span data-ttu-id="206ad-223">Diese statische Methode gibt ein Array aller aktiven <xref:System.Threading.Tasks.TaskScheduler> Instanzen.</span><span class="sxs-lookup"><span data-stu-id="206ad-223">This static method returns an array of all active <xref:System.Threading.Tasks.TaskScheduler> instances.</span></span> <span data-ttu-id="206ad-224">Anschließend können Sie `GetScheduledTasksForDebugger` auf jeder Instanz Scheduler, um die Liste der geplanten Tasks abzurufen.</span><span class="sxs-lookup"><span data-stu-id="206ad-224">You can then use `GetScheduledTasksForDebugger` on each scheduler instance to retrieve its list of scheduled tasks.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="206ad-225">Dieser Planer kann derzeit keine Liste in der Warteschlange stehender Aufgaben generieren.</span><span class="sxs-lookup"><span data-stu-id="206ad-225">This scheduler is unable to generate a list of queued tasks at this time.</span></span></exception>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="206ad-226">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="206ad-226">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskScheduler.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : int" Usage="System.Threading.Tasks.TaskScheduler.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="206ad-227">Ruft die eindeutige ID für diesen <see cref="T:System.Threading.Tasks.TaskScheduler" /> ab.</span><span class="sxs-lookup"><span data-stu-id="206ad-227">Gets the unique ID for this <see cref="T:System.Threading.Tasks.TaskScheduler" />.</span></span></summary>
        <value><span data-ttu-id="206ad-228">Gibt die eindeutige ID für diesen <see cref="T:System.Threading.Tasks.TaskScheduler" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="206ad-228">Returns the unique ID for this <see cref="T:System.Threading.Tasks.TaskScheduler" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="206ad-229">Weitere Informationen finden Sie unter <xref:System.Threading.Tasks.TaskScheduler>.</span><span class="sxs-lookup"><span data-stu-id="206ad-229">For more information, see <xref:System.Threading.Tasks.TaskScheduler>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="206ad-230">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="206ad-230">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MaximumConcurrencyLevel">
      <MemberSignature Language="C#" Value="public virtual int MaximumConcurrencyLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumConcurrencyLevel" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumConcurrencyLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumConcurrencyLevel { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumConcurrencyLevel : int" Usage="System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="206ad-231">Gibt die maximale Parallelitätsebene an, die dieser <see cref="T:System.Threading.Tasks.TaskScheduler" /> unterstützt.</span><span class="sxs-lookup"><span data-stu-id="206ad-231">Indicates the maximum concurrency level this <see cref="T:System.Threading.Tasks.TaskScheduler" /> is able to support.</span></span></summary>
        <value><span data-ttu-id="206ad-232">Gibt eine ganze Zahl zurück, die die maximale Parallelitätsebene darstellt.</span><span class="sxs-lookup"><span data-stu-id="206ad-232">Returns an integer that represents the maximum concurrency level.</span></span> <span data-ttu-id="206ad-233">Der Standardplaner gibt <see cref="F:System.Int32.MaxValue" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="206ad-233">The default scheduler returns <see cref="F:System.Int32.MaxValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="206ad-234">Weitere Informationen finden Sie unter <xref:System.Threading.Tasks.TaskScheduler>.</span><span class="sxs-lookup"><span data-stu-id="206ad-234">For more information, see <xref:System.Threading.Tasks.TaskScheduler>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="206ad-235">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="206ad-235">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="QueueTask">
      <MemberSignature Language="C#" Value="protected internal abstract void QueueTask (System.Threading.Tasks.Task task);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void QueueTask(class System.Threading.Tasks.Task task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.QueueTask(System.Threading.Tasks.Task)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void QueueTask(System::Threading::Tasks::Task ^ task);" />
      <MemberSignature Language="F#" Value="abstract member QueueTask : System.Threading.Tasks.Task -&gt; unit" Usage="taskScheduler.QueueTask task" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="206ad-236">Der <see cref="T:System.Threading.Tasks.Task" />, der in die Warteschlange eingereiht werden soll.</span><span class="sxs-lookup"><span data-stu-id="206ad-236">The <see cref="T:System.Threading.Tasks.Task" /> to be queued.</span></span></param>
        <summary><span data-ttu-id="206ad-237">Fügt einen <see cref="T:System.Threading.Tasks.Task" /> in die Warteschlange des Planers ein.</span><span class="sxs-lookup"><span data-stu-id="206ad-237">Queues a <see cref="T:System.Threading.Tasks.Task" /> to the scheduler.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="206ad-238">Eine abgeleitete Klasse <xref:System.Threading.Tasks.TaskScheduler> implementiert diese Methode, um die Aufgaben, die auf den Planer geplant akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="206ad-238">A class derived from <xref:System.Threading.Tasks.TaskScheduler> implements this method to accept tasks being scheduled on the scheduler.</span></span>  
  
 <span data-ttu-id="206ad-239">Eine typische Implementierung würde die Aufgabe in einer internen Datenstruktur, speichern, die Threads verarbeitet werden würde, die diese Aufgaben zu einem Zeitpunkt in der Zukunft ausgeführt werden würde.</span><span class="sxs-lookup"><span data-stu-id="206ad-239">A typical implementation would store the task in an internal data structure, which would be serviced by threads that would execute those tasks at some time in the future.</span></span>  
  
 <span data-ttu-id="206ad-240">Diese Methode wird nur von .NET Framework aufgerufen werden soll, und sollte nicht direkt von der abgeleiteten Klasse aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="206ad-240">This method is only meant to be called by the .NET Framework and should not be called directly by the derived class.</span></span> <span data-ttu-id="206ad-241">Dies ist für die Aufrechterhaltung der Konsistenz des Systems erforderlich.</span><span class="sxs-lookup"><span data-stu-id="206ad-241">This is necessary for maintaining the consistency of the system.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="206ad-242">Das <paramref name="task" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="206ad-242">The <paramref name="task" /> argument is null.</span></span></exception>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="206ad-243">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="206ad-243">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryDequeue">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryDequeue (System.Threading.Tasks.Task task);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryDequeue(class System.Threading.Tasks.Task task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.TryDequeue(System.Threading.Tasks.Task)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryDequeue(System::Threading::Tasks::Task ^ task);" />
      <MemberSignature Language="F#" Value="abstract member TryDequeue : System.Threading.Tasks.Task -&gt; bool&#xA;override this.TryDequeue : System.Threading.Tasks.Task -&gt; bool" Usage="taskScheduler.TryDequeue task" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="206ad-244">Das <see cref="T:System.Threading.Tasks.Task" />, das aus der Warteschlange entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="206ad-244">The <see cref="T:System.Threading.Tasks.Task" /> to be dequeued.</span></span></param>
        <summary><span data-ttu-id="206ad-245">Versucht, einen zuvor in die Warteschlange dieses Planers eingereihten <see cref="T:System.Threading.Tasks.Task" /> aus der Warteschlange zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="206ad-245">Attempts to dequeue a <see cref="T:System.Threading.Tasks.Task" /> that was previously queued to this scheduler.</span></span></summary>
        <returns><span data-ttu-id="206ad-246">Ein boolescher Wert, der angibt, ob das <paramref name="task" />-Argument erfolgreich aus der Warteschlange entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="206ad-246">A Boolean denoting whether the <paramref name="task" /> argument was successfully dequeued.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="206ad-247">Weitere Informationen finden Sie unter <xref:System.Threading.Tasks.TaskScheduler>.</span><span class="sxs-lookup"><span data-stu-id="206ad-247">For more information, see <xref:System.Threading.Tasks.TaskScheduler>.</span></span>  
  
 <span data-ttu-id="206ad-248">Führen Sie diese Methode kann in einem finally-block, aus diesem Grund sollte zurückgegeben so schnell wie möglich so, dass alle Ressourcen, z. B. <xref:System.Threading.CancellationTokenRegistration> Objekte können von rechtzeitig freigegeben werden.</span><span class="sxs-lookup"><span data-stu-id="206ad-248">This method may execute in a finally block; therefore it should return as quickly as possible so that any resources such as <xref:System.Threading.CancellationTokenRegistration> objects can be disposed of in a timely manner.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="206ad-249">Das <paramref name="task" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="206ad-249">The <paramref name="task" /> argument is null.</span></span></exception>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="206ad-250">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="206ad-250">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryExecuteTask">
      <MemberSignature Language="C#" Value="protected bool TryExecuteTask (System.Threading.Tasks.Task task);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool TryExecuteTask(class System.Threading.Tasks.Task task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool TryExecuteTask(System::Threading::Tasks::Task ^ task);" />
      <MemberSignature Language="F#" Value="member this.TryExecuteTask : System.Threading.Tasks.Task -&gt; bool" Usage="taskScheduler.TryExecuteTask task" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="206ad-251">Ein auszuführendes <see cref="T:System.Threading.Tasks.Task" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="206ad-251">A <see cref="T:System.Threading.Tasks.Task" /> object to be executed.</span></span></param>
        <summary><span data-ttu-id="206ad-252">Versucht, den angegebenen <see cref="T:System.Threading.Tasks.Task" /> mit diesem Planer auszuführen.</span><span class="sxs-lookup"><span data-stu-id="206ad-252">Attempts to execute the provided <see cref="T:System.Threading.Tasks.Task" /> on this scheduler.</span></span></summary>
        <returns><span data-ttu-id="206ad-253">Ein boolescher Wert, der true ist, wenn <paramref name="task" /> erfolgreich ausgeführt wurde. Andernfalls ist dieser Wert false.</span><span class="sxs-lookup"><span data-stu-id="206ad-253">A Boolean that is true if <paramref name="task" /> was successfully executed, false if it was not.</span></span> <span data-ttu-id="206ad-254">Ein häufiger Grund für Ausführungsfehler besteht darin, dass die Aufgabe zuvor ausgeführt wurde oder gerade von einem anderen Thread ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="206ad-254">A common reason for execution failure is that the task had previously been executed or is in the process of being executed by another thread.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="206ad-255">Scheduler-Implementierungen sind im Lieferumfang <xref:System.Threading.Tasks.Task> -Instanzen, die entweder durch ausgeführt werden die <xref:System.Threading.Tasks.TaskScheduler.QueueTask%2A> Methode oder der <xref:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="206ad-255">Scheduler implementations are provided with <xref:System.Threading.Tasks.Task> instances to be executed through either the <xref:System.Threading.Tasks.TaskScheduler.QueueTask%2A> method or the <xref:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline%2A> method.</span></span> <span data-ttu-id="206ad-256">Wenn der Planer zum Ausführen der angegebenen Aufgabe geeignet hält <xref:System.Threading.Tasks.TaskScheduler.TryExecuteTask%2A> sollte dazu verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="206ad-256">When the scheduler deems it appropriate to run the provided task, <xref:System.Threading.Tasks.TaskScheduler.TryExecuteTask%2A> should be used to do so.</span></span> <span data-ttu-id="206ad-257">TryExecuteTask behandelt alle Aspekte beim Ausführen einer Aufgabe, einschließlich Aktionsaufruf, Ausnahmebehandlung, Zustandsverwaltung und Lebenszyklus-Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="206ad-257">TryExecuteTask handles all aspects of executing a task, including action invocation, exception handling, state management, and lifecycle control.</span></span>  
  
 <xref:System.Threading.Tasks.TaskScheduler.TryExecuteTask%2A> <span data-ttu-id="206ad-258">muss nur für diese Planer-Aufgaben von der .NET Framework-Infrastruktur verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="206ad-258">must only be used for tasks provided to this scheduler by the .NET Framework infrastructure.</span></span> <span data-ttu-id="206ad-259">Es sollte nicht verwendet werden, zum Ausführen von frei wählbaren Tasks, die durch benutzerdefinierte Mechanismen abgerufen.</span><span class="sxs-lookup"><span data-stu-id="206ad-259">It should not be used to execute arbitrary tasks obtained through custom mechanisms.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="206ad-260">Der <paramref name="task" /> ist nicht diesem Planer zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="206ad-260">The <paramref name="task" /> is not associated with this scheduler.</span></span></exception>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="206ad-261">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="206ad-261">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryExecuteTaskInline">
      <MemberSignature Language="C#" Value="protected abstract bool TryExecuteTaskInline (System.Threading.Tasks.Task task, bool taskWasPreviouslyQueued);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryExecuteTaskInline(class System.Threading.Tasks.Task task, bool taskWasPreviouslyQueued) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryExecuteTaskInline(System::Threading::Tasks::Task ^ task, bool taskWasPreviouslyQueued);" />
      <MemberSignature Language="F#" Value="abstract member TryExecuteTaskInline : System.Threading.Tasks.Task * bool -&gt; bool" Usage="taskScheduler.TryExecuteTaskInline (task, taskWasPreviouslyQueued)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task" />
        <Parameter Name="taskWasPreviouslyQueued" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="206ad-262">Das auszuführende <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="206ad-262">The <see cref="T:System.Threading.Tasks.Task" /> to be executed.</span></span></param>
        <param name="taskWasPreviouslyQueued"><span data-ttu-id="206ad-263">Ein boolescher Wert, der angibt, ob die Aufgabe zuvor in die Warteschlange eingereiht wurde.</span><span class="sxs-lookup"><span data-stu-id="206ad-263">A Boolean denoting whether or not task has previously been queued.</span></span> <span data-ttu-id="206ad-264">Wenn dieser Parameter true ist, wurde die Aufgabe möglicherweise zuvor in die Warteschlange eingereiht (geplant). Ist er false, wurde die Aufgabe bekanntermaßen nicht in die Warteschlange eingereiht, und dieser Aufruf wird ausgeführt, um die Aufgabe inline auszuführen, ohne sie in die Warteschlange einzureihen.</span><span class="sxs-lookup"><span data-stu-id="206ad-264">If this parameter is True, then the task may have been previously queued (scheduled); if False, then the task is known not to have been queued, and this call is being made in order to execute the task inline without queuing it.</span></span></param>
        <summary><span data-ttu-id="206ad-265">Bestimmt, ob der angegebene <see cref="T:System.Threading.Tasks.Task" /> in diesem Aufruf synchron ausgeführt werden kann, und führt ihn aus, wenn dies der Fall ist.</span><span class="sxs-lookup"><span data-stu-id="206ad-265">Determines whether the provided <see cref="T:System.Threading.Tasks.Task" /> can be executed synchronously in this call, and if it can, executes it.</span></span></summary>
        <returns><span data-ttu-id="206ad-266">Ein boolescher Wert, der angibt, ob die Aufgabe inline ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="206ad-266">A Boolean value indicating whether the task was executed inline.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="206ad-267">Eine abgeleitete Klasse <xref:System.Threading.Tasks.TaskScheduler> implementiert diese Funktion, um Inline-Ausführung einer Aufgabe in einem Thread zu unterstützen, eine Wartezeit, Task-Objekt initiiert.</span><span class="sxs-lookup"><span data-stu-id="206ad-267">A class derived from <xref:System.Threading.Tasks.TaskScheduler> implements this function to support inline execution of a task on a thread that initiates a wait on that task object.</span></span> <span data-ttu-id="206ad-268">Inline-Ausführung ist optional, und die Anforderung möglicherweise abgelehnt, indem Sie "false" zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="206ad-268">Inline execution is optional, and the request may be rejected by returning false.</span></span> <span data-ttu-id="206ad-269">Allerdings mehr Aufgaben können inline gesetzt werden, desto bessere das Zeitplanungsmodul wird skaliert.</span><span class="sxs-lookup"><span data-stu-id="206ad-269">However, the more tasks that can be inlined, the better the scheduler will scale.</span></span> <span data-ttu-id="206ad-270">In der Tat kann ein Planer, Inlines zu wenig zu Deadlocks sein.</span><span class="sxs-lookup"><span data-stu-id="206ad-270">In fact, a scheduler that inlines too little may be prone to deadlocks.</span></span> <span data-ttu-id="206ad-271">Eine ordnungsgemäße Implementierung sorgen dafür, dass eine Anforderung, die unter den Richtlinien, die vom Scheduler garantiert ausgeführt Inline können.</span><span class="sxs-lookup"><span data-stu-id="206ad-271">A proper implementation should ensure that a request executing under the policies guaranteed by the scheduler can successfully inline.</span></span> <span data-ttu-id="206ad-272">Z. B. sollten ein Planer einen dedizierten Thread zum Ausführen von Tasks verwendet wird, alle inlining Anforderungen aus diesem Thread erfolgreich.</span><span class="sxs-lookup"><span data-stu-id="206ad-272">For example, if a scheduler uses a dedicated thread to execute tasks, any inlining requests from that thread should succeed.</span></span>  
  
 <span data-ttu-id="206ad-273">Wenn Sie ein Planer für die Inlineausführung entscheidet, sollte dies durch den Aufruf von der Basisklasse TaskScheduler <xref:System.Threading.Tasks.TaskScheduler.TryExecuteTask%2A> Methode mit der angegebenen Aufgabe-Objekt, das Weitergeben des zurückgegeben Wert.</span><span class="sxs-lookup"><span data-stu-id="206ad-273">If a scheduler decides to perform the inline execution, it should do so by calling to the base TaskScheduler's <xref:System.Threading.Tasks.TaskScheduler.TryExecuteTask%2A> method with the provided task object, propagating the return value.</span></span> <span data-ttu-id="206ad-274">Es kann auch sein für den Scheduler so, dass eine Inline-Aufgabe aus der internen Datenstrukturen zu entfernen, wenn er entscheidet, die inlineersetzung Anforderung berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="206ad-274">It may also be appropriate for the scheduler to remove an inlined task from its internal data structures if it decides to honor the inlining request.</span></span> <span data-ttu-id="206ad-275">Beachten Sie jedoch, dass unter bestimmten Umständen ein Planer inlineersetzung eine Aufgabe eventuell aufgefordert werden, die mit nicht zuvor bereitgestellt wurde die <xref:System.Threading.Tasks.TaskScheduler.QueueTask%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="206ad-275">Note, however, that under some circumstances a scheduler may be asked to inline a task that was not previously provided to it with the <xref:System.Threading.Tasks.TaskScheduler.QueueTask%2A> method.</span></span>  
  
 <span data-ttu-id="206ad-276">Der abgeleitete Planer ist dafür verantwortlich, dass Sie sicher, dass der aufrufende Thread eignet sich für die Ausführung der angegebenen Aufgabe soweit es die eigene Planung und Ausführungsrichtlinien betrifft.</span><span class="sxs-lookup"><span data-stu-id="206ad-276">The derived scheduler is responsible for making sure that the calling thread is suitable for executing the given task as far as its own scheduling and execution policies are concerned.</span></span>  
  
 <span data-ttu-id="206ad-277">Weitere Informationen finden Sie unter <xref:System.Threading.Tasks.TaskScheduler>.</span><span class="sxs-lookup"><span data-stu-id="206ad-277">For more information, see <xref:System.Threading.Tasks.TaskScheduler>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="206ad-278">Das <paramref name="task" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="206ad-278">The <paramref name="task" /> argument is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="206ad-279">Der <paramref name="task" /> wurde bereits ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="206ad-279">The <paramref name="task" /> was already executed.</span></span></exception>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="206ad-280">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="206ad-280">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnobservedTaskException">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Threading.Tasks.UnobservedTaskExceptionEventArgs&gt; UnobservedTaskException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Threading.Tasks.UnobservedTaskExceptionEventArgs&gt; UnobservedTaskException" />
      <MemberSignature Language="DocId" Value="E:System.Threading.Tasks.TaskScheduler.UnobservedTaskException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event UnobservedTaskException As EventHandler(Of UnobservedTaskExceptionEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Threading::Tasks::UnobservedTaskExceptionEventArgs ^&gt; ^ UnobservedTaskException;" />
      <MemberSignature Language="F#" Value="member this.UnobservedTaskException : EventHandler&lt;System.Threading.Tasks.UnobservedTaskExceptionEventArgs&gt; " Usage="member this.UnobservedTaskException : System.EventHandler&lt;System.Threading.Tasks.UnobservedTaskExceptionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Threading.Tasks.UnobservedTaskExceptionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="206ad-281">Tritt auf, kurz bevor eine nicht überwachte Ausnahme eines Tasks, bei dem ein Fehler aufgetreten ist, eine Ausnahmeausweitungsrichtlinie auslöst, was standardmäßig den Prozess beenden würde.</span><span class="sxs-lookup"><span data-stu-id="206ad-281">Occurs when a faulted task's unobserved exception is about to trigger exception escalation policy, which, by default, would terminate the process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="206ad-282">Ereigniszeitpunkt domänenweite Anwendung bietet einen Mechanismus, um zu verhindern, dass die Eskalationsrichtlinie Ausnahme (die Standardeinstellung der Prozess beendet wird) auslöst.</span><span class="sxs-lookup"><span data-stu-id="206ad-282">This application domain-wide event provides a mechanism to prevent exception escalation policy (which, by default, terminates the process) from triggering.</span></span>  
  
 <span data-ttu-id="206ad-283">Zu erleichtern Entwicklern das Schreiben von asynchronen Codes basierend auf Aufgaben, die [!INCLUDE[net_v45](~/includes/net-v45-md.md)] ändert das Standardverhalten für die Ausnahme für nicht überwachte Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="206ad-283">To make it easier for developers to write asynchronous code based on tasks, the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] changes the default exception behavior for unobserved exceptions.</span></span> <span data-ttu-id="206ad-284">Zwar immer noch nicht überwachte Ausnahmen auslösen der <xref:System.Threading.Tasks.TaskScheduler.UnobservedTaskException> Ausnahme, der Prozess wird standardmäßig nicht beendet.</span><span class="sxs-lookup"><span data-stu-id="206ad-284">Although unobserved exceptions still raise the <xref:System.Threading.Tasks.TaskScheduler.UnobservedTaskException> exception, the process does not terminate by default.</span></span> <span data-ttu-id="206ad-285">Stattdessen wird die Ausnahme von der Laufzeit behandelt, nachdem das Ereignis ausgelöst wird, unabhängig davon, ob ein Ereignishandler für die Ausnahme beobachtet.</span><span class="sxs-lookup"><span data-stu-id="206ad-285">Instead, the exception is handled by the runtime after the event is raised, regardless of whether an event handler observes the exception.</span></span> <span data-ttu-id="206ad-286">Dieses Verhalten kann konfiguriert werden.</span><span class="sxs-lookup"><span data-stu-id="206ad-286">This behavior can be configured.</span></span> <span data-ttu-id="206ad-287">Beginnend mit der [!INCLUDE[net_v45](~/includes/net-v45-md.md)], können Sie die [ `<ThrowUnobservedTaskExceptions>` ](~/docs/framework/configure-apps/file-schema/runtime/throwunobservedtaskexceptions-element.md) Konfigurationselement, um das Verhalten der wiederherzustellen die [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] und beenden den Prozess:</span><span class="sxs-lookup"><span data-stu-id="206ad-287">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the [`<ThrowUnobservedTaskExceptions>`](~/docs/framework/configure-apps/file-schema/runtime/throwunobservedtaskexceptions-element.md) configuration element to revert to the behavior of the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and terminate the process:</span></span>  
  
```xml  
<configuration>   
   <runtime>   
      <ThrowUnobservedTaskExceptions enabled="true"/>   
   </runtime>   
</configuration>  
  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="206ad-288">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="206ad-288">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/runtime/throwunobservedtaskexceptions-element.md"><span data-ttu-id="206ad-289">&lt;ThrowUnobservedTaskExceptions&gt; Element</span><span class="sxs-lookup"><span data-stu-id="206ad-289">&lt;ThrowUnobservedTaskExceptions&gt; Element</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>