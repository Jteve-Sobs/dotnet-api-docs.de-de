<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ValueTask`1.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55f78221c1b0cfa096a6ac681b4867a96f0e80e0e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f78221c1b0cfa096a6ac681b4867a96f0e80e0e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>The result.</source>
          <target state="translated">Das Ergebnis.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>Provides a value type that wraps a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> and a <ph id="ph2">&lt;typeparamref name="TResult" /&gt;</ph>, only one of which is used.</source>
          <target state="translated">Liefert einen Werttyp, der ein <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> und ein <ph id="ph2">&lt;typeparamref name="TResult" /&gt;</ph> umschließt, von denen nur einer verwendet wird.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>A method may return an instance of this value type when it's likely that the result of its operation will be available synchronously, and when it's expected to be invoked so frequently that the cost of allocating a new <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> for each call will be prohibitive.</source>
          <target state="translated">Eine Methode möglicherweise zurückgeben, die eine Instanz dieses Werttyps, wenn es wahrscheinlich ist, dass das Ergebnis der Operation wird synchron vorhanden sein, und wenn werden erwartet aufgerufen so häufig, die die Kosten für das Zuordnen eines neuen <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> für jeden Aufruf enorm sein sollen.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>There are tradeoffs to using a <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> instead of a <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>.</source>
          <target state="translated">Nachteile mit einem <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> anstelle von einer <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>For example, while a <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> can help avoid an allocation in the case where the successful result is available synchronously, it also contains two fields, whereas a <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> as a reference type is a single field.</source>
          <target state="translated">Während beispielsweise ein <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> können eine Zuordnung in die Groß-/Kleinschreibung zu vermeiden, in denen das erfolgreiche Ergebnis synchron steht, da er auch zwei Felder enthält, während ein <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> als Referenz-Typ ist ein einzelnes Feld.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>This means that a method call returns two fields worth of data instead of one, which is more data to copy.</source>
          <target state="translated">Dies bedeutet, dass ein Methodenaufruf zwei Felder zu Dateninstanz anstatt mit einer zurückgibt, also mehr Daten zu kopieren.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>It also means, that if a method that returns a <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> is awaited within an async method, the state machine for that async method will be larger, because it must store a struct containing two fields instead of a single reference.</source>
          <target state="translated">Es auch, wenn also eine Methode, die gibt eine <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> innerhalb einer Async-Methode der Zustandsautomat erwartet wird, steht für diese Async-Methode größer, da eine Struktur mit zwei Feldern anstelle eines einzelnen Verweises gespeichert werden müssen.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>For uses other than consuming the result of an asynchronous operation using await, <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> can lead to a more convoluted programming model that requires more allocations.</source>
          <target state="translated">Für verwendet, als das Ergebnis eines asynchronen Vorgangs mithilfe nutzen warten, <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> zu einer mehr kompliziert Programmiermodell, das mehrere Zuordnungen erfordert führen kann.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>For example, consider a method that could return either a <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> with a cached task as a common result or a <ph id="ph2">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>.</source>
          <target state="translated">Betrachten Sie beispielsweise eine Methode, die entweder zurückgeben kann eine <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> mit allgemeinen demzufolge eine zwischengespeicherte Aufgabe oder eine <ph id="ph2">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>If the consumer of the result wants to use it as a <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> in a method like <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.WhenAll%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Threading.Tasks.Task.WhenAny%2A&gt;</ph>, the <ph id="ph4">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> must first be converted to a <ph id="ph5">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> using <ph id="ph6">&lt;xref:System.Threading.Tasks.ValueTask%601.AsTask%2A&gt;</ph>, leading to an allocation that would have been avoided if a cached <ph id="ph7">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> had been used in the first place.</source>
          <target state="translated">Wenn der Consumer des Ergebnisses als verwenden möchte eine <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> in einer Methode wie <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.WhenAll%2A&gt;</ph> oder <ph id="ph3">&lt;xref:System.Threading.Tasks.Task.WhenAny%2A&gt;</ph>, die <ph id="ph4">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> muss zuerst in konvertiert werden ein <ph id="ph5">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> mit <ph id="ph6">&lt;xref:System.Threading.Tasks.ValueTask%601.AsTask%2A&gt;</ph>, was zu einer Zuordnung, die wenn vermieden worden wäre ein zwischengespeicherte <ph id="ph7">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> wurde ursprünglich verwendet wurde.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>As such, the default choice for any asynchronous method should be to return a <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> or <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>.</source>
          <target state="translated">Daher muss die Standardauswahl für eine asynchrone Methode zum Zurückgeben einer <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> oder <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>Only if performance analysis proves it worthwhile should a <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> be used instead of a <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>.</source>
          <target state="translated">Sollte nur dann, wenn Leistungsanalyse lohnende beweist ein <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> anstelle von einer <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>There is no non-generic version of <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>, as the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.CompletedTask&gt;</ph> property may be used to hand back a successfully completed singleton in the case where a method returning a <ph id="ph3">&lt;xref:System.Threading.Tasks.Task&gt;</ph> completes synchronously and successfully.</source>
          <target state="translated">Es ist keine nicht generische Version der <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>, als die <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.CompletedTask&gt;</ph> Eigenschaft kann verwendet werden, um einen erfolgreich abgeschlossenen Singleton in die Groß-/Kleinschreibung zurück zu übergeben, wo eine Methode zurückgeben einer <ph id="ph3">&lt;xref:System.Threading.Tasks.Task&gt;</ph> synchron und erfolgreich abgeschlossen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>The use of the <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> type is supported starting with C# 7, and is not supported by any version of Visual Basic.</source>
          <target state="translated">Die Verwendung der <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> Typ wird beginnend mit C#-7 unterstützt und wird nicht von allen Versionen von Visual Basic unterstützt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})">
          <source>The task.</source>
          <target state="translated">Die Aufgabe.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> class using the supplied task that represents the operation.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph>-Klasse unter Verwendung des angegebenen Tasks, der den Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})">
          <source>The <ph id="ph1">&lt;paramref name="task" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="task" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.#ctor(`0)">
          <source>The result.</source>
          <target state="translated">Das Ergebnis.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.#ctor(`0)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> class using the supplied result of a successful operation.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph>-Klasse unter Verwendung des von einem erfolgreichen Vorgang zurückgegebenen Ergebnisses.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.AsTask">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> object that represents this <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph>.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>-Objekt ab, das dieses <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> darstellt.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.AsTask">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> object that is wrapped in this <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> if one exists, or a new <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> object that represents the result.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>-Objekt, das in dieses <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> eingeschlossen ist, wenn es vorhanden ist, oder ein neues <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>-Objekt, das das Ergebnis darstellt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to attempt to marshal the continuation back to the captured context; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um zu versuchen, die Fortsetzung zurück in den erfassten Text zu marshallen; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)">
          <source>Configures an awaiter for this value.</source>
          <target state="translated">Konfiguriert ein „awaiter“-Element für diesen Wert.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)">
          <source>The configured awaiter.</source>
          <target state="translated">Das konfigurierte „awaiter“-Element.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder">
          <source>Creates a method builder for use with an async method.</source>
          <target state="translated">Erstellt einen Methodengenerator für die Verwendung mit einer asynchronen Methode.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder">
          <source>The created builder.</source>
          <target state="translated">Der erstellte Generator.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.Equals(System.Object)">
          <source>The object to compare with the current object.</source>
          <target state="translated">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.Equals(System.Object)">
          <source>Determines whether the specified object is equal to the current object.</source>
          <target state="translated">Bestimmt, ob das angegebene Objekt mit dem aktuellen Objekt identisch ist.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to the current object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das angegebene Objekt und das aktuelle Objekt gleich sind, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})">
          <source>The object to compare with the current object.</source>
          <target state="translated">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> object is equal to the current <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> object.</source>
          <target state="translated">Bestimmt, ob das angegebene <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph>-Objekt mit dem aktuellen <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph>-Objekt identisch ist.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to the current object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das angegebene Objekt und das aktuelle Objekt gleich sind, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.GetAwaiter">
          <source>Creates an awaiter for this value.</source>
          <target state="translated">Erstellt ein „awaiter“-Element für diesen Wert.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.GetAwaiter">
          <source>The awaiter.</source>
          <target state="translated">Der Awaiter.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Gibt den Hashcode für diese Instanz zurück.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.GetHashCode">
          <source>The hash code for the current object.</source>
          <target state="translated">Der Hashcode für das aktuelle Objekt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ValueTask`1.IsCanceled">
          <source>Gets a value that indicates whether this object represents a canceled operation.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses Objekt einen abgebrochenen Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.IsCanceled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this object represents a canceled operation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Wenn dieses Objekt einen abgebrochenen Vorgang darstellt; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ValueTask`1.IsCompleted">
          <source>Gets a value that indicates whether this object represents a completed operation.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses Objekt einen abgeschlossenen Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.IsCompleted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this object represents a completed operation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Wenn dieses Objekt einen abgeschlossenen Vorgang darstellt; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully">
          <source>Gets a value that indicates whether this object represents a successfully completed operation.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses Objekt einen erfolgreich abgeschlossenen Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this object represents a successfully completed operation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Wenn dieses Objekt einen erfolgreich abgeschlossenen Vorgang darstellt; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ValueTask`1.IsFaulted">
          <source>Gets a value that indicates whether this object represents a failed operation.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses Objekt einen fehlgeschlagenen Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.IsFaulted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this object represents a failed operation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Wenn dieses Objekt einen fehlgeschlagenen Vorgang darstellt; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source>The first value to compare.</source>
          <target state="translated">Der erste zu vergleichende Wert.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source>The second value to compare.</source>
          <target state="translated">Der zweite zu vergleichende Wert.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source>Compares two values for equality.</source>
          <target state="translated">Überprüft zwei Werte auf Gleichheit.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> values are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die beiden <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph>-Werte gleich sind, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source>The first value to compare.</source>
          <target state="translated">Der erste zu vergleichende Wert.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source>The seconed value to compare.</source>
          <target state="translated">Der zweite zu vergleichende Wert.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source>Determines whether two <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> values are unequal.</source>
          <target state="translated">Bestimmt, ob zwei <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph>-Werte ungleich sind.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> values are not equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die beiden <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph>-Werte ungleich sind, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ValueTask`1.Result">
          <source>Gets the result.</source>
          <target state="translated">Ruft das Ergebnis ab.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.Result">
          <source>The result.</source>
          <target state="translated">Das Ergebnis.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.Result">
          <source>If this <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> wraps a successful result, this property returns it directly.</source>
          <target state="translated">Wenn diese <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> umschließt, die ein erfolgreiches Ergebnis, diese Eigenschaft direkt zurückgegeben.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.Result">
          <source>If it wraps a <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>, the behavior of <ph id="ph2">&lt;xref:System.Threading.Tasks.ValueTask%601.Result%2A&gt;</ph> is similar to the behavior of accessing <ph id="ph3">&lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;</ph> on the wrapped task: if the task hasn't completed, accessing the property blocks the calling thread until it completes; if the task has completed successfully, the property returns the result; if the task has faulted or was cancellecd, accessing the property throws an exception.</source>
          <target state="translated">Wenn es umschließt eine <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>, das Verhalten des <ph id="ph2">&lt;xref:System.Threading.Tasks.ValueTask%601.Result%2A&gt;</ph> ähnelt das Verhalten des Zugriffs auf <ph id="ph3">&lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;</ph> auf den umschlossenen Task: Wenn die Aufgabe abgeschlossen wurde nicht, den Zugriff auf die Eigenschaft blockiert den aufrufenden Thread bis zum Abschluss; Wenn die Aufgabe abgeschlossen wurde erfolgreich, gibt die Eigenschaft das Ergebnis zurück. Wenn der Task fehlgeschlagen oder wurde Cancellecd, löst das Zugreifen auf die Eigenschaft eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.Result">
          <source>The thrown exception is not wrapped in an <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>, which is different from the behavior of <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;</ph> in the same situation.</source>
          <target state="translated">Die ausgelöste Ausnahme wird nicht umbrochen, eine <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>, unterscheidet sich vom Verhalten des <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;</ph> in derselben Situation.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.ToString">
          <source>Returns a string that represents the current object.</source>
          <target state="translated">Gibt eine Zeichenfolge zurück, die das aktuelle Objekt darstellt.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.ToString">
          <source>A string that represents the current object.</source>
          <target state="translated">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>