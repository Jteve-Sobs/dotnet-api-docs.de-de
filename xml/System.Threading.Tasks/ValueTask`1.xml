<Type Name="ValueTask&lt;TResult&gt;" FullName="System.Threading.Tasks.ValueTask&lt;TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="946e9ceec2676cfbc1b9aed30223dbac578baafd" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31910608" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct ValueTask&lt;TResult&gt; : IEquatable&lt;System.Threading.Tasks.ValueTask&lt;TResult&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValueTask`1&lt;TResult&gt; extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ValueTask`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValueTask(Of TResult)&#xA;Implements IEquatable(Of ValueTask(Of TResult))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public value class ValueTask : IEquatable&lt;System::Threading::Tasks::ValueTask&lt;TResult&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Threading.Tasks.ValueTask&lt;TResult&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.AsyncMethodBuilder(typeof(System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TResult">
      <span data-ttu-id="0d1d0-101">Das Ergebnis.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d1d0-101">The result.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="0d1d0-102">Liefert einen Werttyp, der ein <see cref="T:System.Threading.Tasks.Task`1" /> und ein <typeparamref name="TResult" /> umschließt, von denen nur einer verwendet wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d1d0-102">Provides a value type that wraps a <see cref="T:System.Threading.Tasks.Task`1" /> and a <typeparamref name="TResult" />, only one of which is used.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="0d1d0-103">Eine Methode möglicherweise zurückgeben, die eine Instanz dieses Werttyps, wenn es wahrscheinlich ist, dass das Ergebnis der Operation wird synchron vorhanden sein, und wenn werden erwartet aufgerufen so häufig, die die Kosten für das Zuordnen eines neuen <xref:System.Threading.Tasks.Task%601> für jeden Aufruf enorm sein sollen.</span><span class="sxs-lookup"><span data-stu-id="0d1d0-103">A method may return an instance of this value type when it's likely that the result of its operation will be available synchronously, and when it's expected to be invoked so frequently that the cost of allocating a new <xref:System.Threading.Tasks.Task%601> for each call will be prohibitive.</span></span>   

<span data-ttu-id="0d1d0-104">Nachteile mit einem <xref:System.Threading.Tasks.ValueTask%601> anstelle von einer <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="0d1d0-104">There are tradeoffs to using a <xref:System.Threading.Tasks.ValueTask%601> instead of a <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="0d1d0-105">Während beispielsweise ein <xref:System.Threading.Tasks.ValueTask%601> können eine Zuordnung in die Groß-/Kleinschreibung zu vermeiden, in denen das erfolgreiche Ergebnis synchron steht, da er auch zwei Felder enthält, während ein <xref:System.Threading.Tasks.Task%601> als Referenz-Typ ist ein einzelnes Feld.</span><span class="sxs-lookup"><span data-stu-id="0d1d0-105">For example, while a <xref:System.Threading.Tasks.ValueTask%601> can help avoid an allocation in the case where the successful result is available synchronously, it also contains two fields, whereas a <xref:System.Threading.Tasks.Task%601> as a reference type is a single field.</span></span> <span data-ttu-id="0d1d0-106">Dies bedeutet, dass ein Methodenaufruf zwei Felder zu Dateninstanz anstatt mit einer zurückgibt, also mehr Daten zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="0d1d0-106">This means that a method call returns two fields worth of data instead of one, which is more data to copy.</span></span> <span data-ttu-id="0d1d0-107">Es auch, wenn also eine Methode, die gibt eine <xref:System.Threading.Tasks.ValueTask%601> innerhalb einer Async-Methode der Zustandsautomat erwartet wird, steht für diese Async-Methode größer, da eine Struktur mit zwei Feldern anstelle eines einzelnen Verweises gespeichert werden müssen.</span><span class="sxs-lookup"><span data-stu-id="0d1d0-107">It also means, that if a method that returns a <xref:System.Threading.Tasks.ValueTask%601> is awaited within an async method, the state machine for that async method will be larger, because it must store a struct containing two fields instead of a single reference.</span></span>   

<span data-ttu-id="0d1d0-108">Für verwendet, als das Ergebnis eines asynchronen Vorgangs mithilfe nutzen warten, <xref:System.Threading.Tasks.ValueTask%601> zu einer mehr kompliziert Programmiermodell, das mehrere Zuordnungen erfordert führen kann.</span><span class="sxs-lookup"><span data-stu-id="0d1d0-108">For uses other than consuming the result of an asynchronous operation using await, <xref:System.Threading.Tasks.ValueTask%601> can lead to a more convoluted programming model that requires more allocations.</span></span> <span data-ttu-id="0d1d0-109">Betrachten Sie beispielsweise eine Methode, die entweder zurückgeben kann eine <xref:System.Threading.Tasks.Task%601> mit allgemeinen demzufolge eine zwischengespeicherte Aufgabe oder eine <xref:System.Threading.Tasks.ValueTask%601>.</span><span class="sxs-lookup"><span data-stu-id="0d1d0-109">For example, consider a method that could return either a <xref:System.Threading.Tasks.Task%601> with a cached task as a common result or a <xref:System.Threading.Tasks.ValueTask%601>.</span></span> <span data-ttu-id="0d1d0-110">Wenn der Consumer des Ergebnisses als verwenden möchte eine <xref:System.Threading.Tasks.Task%601> in einer Methode wie <xref:System.Threading.Tasks.Task.WhenAll%2A> oder <xref:System.Threading.Tasks.Task.WhenAny%2A>, die <xref:System.Threading.Tasks.ValueTask%601> muss zuerst in konvertiert werden ein <xref:System.Threading.Tasks.Task%601> mit <xref:System.Threading.Tasks.ValueTask%601.AsTask%2A>, was zu einer Zuordnung, die wenn vermieden worden wäre ein zwischengespeicherte <xref:System.Threading.Tasks.Task%601> wurde ursprünglich verwendet wurde.</span><span class="sxs-lookup"><span data-stu-id="0d1d0-110">If the consumer of the result wants to use it as a <xref:System.Threading.Tasks.Task%601> in a method like <xref:System.Threading.Tasks.Task.WhenAll%2A> or <xref:System.Threading.Tasks.Task.WhenAny%2A>, the <xref:System.Threading.Tasks.ValueTask%601> must first be converted to a <xref:System.Threading.Tasks.Task%601> using <xref:System.Threading.Tasks.ValueTask%601.AsTask%2A>, leading to an allocation that would have been avoided if a cached <xref:System.Threading.Tasks.Task%601> had been used in the first place.</span></span>   

<span data-ttu-id="0d1d0-111">Daher muss die Standardauswahl für eine asynchrone Methode zum Zurückgeben einer <xref:System.Threading.Tasks.Task> oder <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="0d1d0-111">As such, the default choice for any asynchronous method should be to return a <xref:System.Threading.Tasks.Task> or <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="0d1d0-112">Sollte nur dann, wenn Leistungsanalyse lohnende beweist ein <xref:System.Threading.Tasks.ValueTask%601> anstelle von einer <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="0d1d0-112">Only if performance analysis proves it worthwhile should a <xref:System.Threading.Tasks.ValueTask%601> be used instead of a <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="0d1d0-113">Es ist keine nicht generische Version der <xref:System.Threading.Tasks.ValueTask%601>, als die <xref:System.Threading.Tasks.Task.CompletedTask> Eigenschaft kann verwendet werden, um einen erfolgreich abgeschlossenen Singleton in die Groß-/Kleinschreibung zurück zu übergeben, wo eine Methode zurückgeben einer <xref:System.Threading.Tasks.Task> synchron und erfolgreich abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="0d1d0-113">There is no non-generic version of <xref:System.Threading.Tasks.ValueTask%601>, as the <xref:System.Threading.Tasks.Task.CompletedTask> property may be used to hand back a successfully completed singleton in the case where a method returning a <xref:System.Threading.Tasks.Task> completes synchronously and successfully.</span></span>   

> [!NOTE]
>  <span data-ttu-id="0d1d0-114">Die Verwendung der <xref:System.Threading.Tasks.ValueTask%601> Typ wird beginnend mit C#-7 unterstützt und wird nicht von allen Versionen von Visual Basic unterstützt.</span><span class="sxs-lookup"><span data-stu-id="0d1d0-114">The use of the <xref:System.Threading.Tasks.ValueTask%601> type is supported starting with C# 7, and is not supported by any version of Visual Basic.</span></span>
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (System.Threading.Tasks.Task&lt;TResult&gt; task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Task`1&lt;!TResult&gt; task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (task As Task(Of TResult))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(System::Threading::Tasks::Task&lt;TResult&gt; ^ task);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="task">
          <span data-ttu-id="0d1d0-115">Die Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-115">The task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d1d0-116">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Tasks.ValueTask`1" />-Klasse unter Verwendung des angegebenen Tasks, der den Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-116">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ValueTask`1" /> class using the supplied task that represents the operation.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d1d0-117">Das <paramref name="task" />-Argument lautet <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-117">The <paramref name="task" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (TResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!TResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(TResult result);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="TResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="0d1d0-118">Das Ergebnis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-118">The result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d1d0-119">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Tasks.ValueTask`1" />-Klasse unter Verwendung des von einem erfolgreichen Vorgang zurückgegebenen Ergebnisses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-119">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ValueTask`1" /> class using the supplied result of a successful operation.</span>
          </span>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (System.Threading.Tasks.Sources.IValueTaskSource&lt;TResult&gt; source, short token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Sources.IValueTaskSource`1&lt;!TResult&gt; source, int16 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Sources.IValueTaskSource{`0},System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As IValueTaskSource(Of TResult), token As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(System::Threading::Tasks::Sources::IValueTaskSource&lt;TResult&gt; ^ source, short token);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Sources.IValueTaskSource&lt;TResult&gt;" />
        <Parameter Name="token" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsTask">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; AsTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; AsTask() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.AsTask" />
      <MemberSignature Language="VB.NET" Value="Public Function AsTask () As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d1d0-120">Ruft ein <see cref="T:System.Threading.Tasks.Task`1" />-Objekt ab, das dieses <see cref="T:System.Threading.Tasks.ValueTask`1" /> darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-120">Retrieves a <see cref="T:System.Threading.Tasks.Task`1" /> object that represents this <see cref="T:System.Threading.Tasks.ValueTask`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d1d0-121">Das <see cref="T:System.Threading.Tasks.Task`1" />-Objekt, das in dieses <see cref="T:System.Threading.Tasks.ValueTask`1" /> eingeschlossen ist, wenn es vorhanden ist, oder ein neues <see cref="T:System.Threading.Tasks.Task`1" />-Objekt, das das Ergebnis darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-121">The <see cref="T:System.Threading.Tasks.Task`1" /> object that is wrapped in this <see cref="T:System.Threading.Tasks.ValueTask`1" /> if one exists, or a new <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the result.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureAwait">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable&lt;TResult&gt; ConfigureAwait (bool continueOnCapturedContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1&lt;!TResult&gt; ConfigureAwait(bool continueOnCapturedContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureAwait (continueOnCapturedContext As Boolean) As ConfiguredValueTaskAwaitable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable&lt;TResult&gt; ConfigureAwait(bool continueOnCapturedContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continueOnCapturedContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="continueOnCapturedContext">
          <span data-ttu-id="0d1d0-122">
            <see langword="true" />, um zu versuchen, die Fortsetzung zurück in den erfassten Text zu marshallen; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-122">
              <see langword="true" /> to attempt to marshal the continuation back to the captured context; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d1d0-123">Konfiguriert ein „awaiter“-Element für diesen Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-123">Configures an awaiter for this value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d1d0-124">Das konfigurierte „awaiter“-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-124">The configured awaiter.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsyncMethodBuilder">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder&lt;TResult&gt; CreateAsyncMethodBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1&lt;!TResult&gt; CreateAsyncMethodBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAsyncMethodBuilder () As AsyncValueTaskMethodBuilder(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::CompilerServices::AsyncValueTaskMethodBuilder&lt;TResult&gt; CreateAsyncMethodBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d1d0-125">Erstellt einen Methodengenerator für die Verwendung mit einer asynchronen Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-125">Creates a method builder for use with an async method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d1d0-126">Der erstellte Generator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-126">The created builder.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0d1d0-127">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-127">The object to compare with the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d1d0-128">Bestimmt, ob das angegebene Objekt mit dem aktuellen Objekt identisch ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-128">Determines whether the specified object is equal to the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d1d0-129">
            <see langword="true" />, wenn das angegebene Objekt und das aktuelle Objekt gleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-129">
              <see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.Tasks.ValueTask&lt;TResult&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ValueTask(Of TResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Threading::Tasks::ValueTask&lt;TResult&gt; other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="0d1d0-130">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-130">The object to compare with the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d1d0-131">Bestimmt, ob das angegebene <see cref="T:System.Threading.Tasks.ValueTask`1" />-Objekt mit dem aktuellen <see cref="T:System.Threading.Tasks.ValueTask`1" />-Objekt identisch ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-131">Determines whether the specified <see cref="T:System.Threading.Tasks.ValueTask`1" /> object is equal to the current <see cref="T:System.Threading.Tasks.ValueTask`1" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d1d0-132">
            <see langword="true" />, wenn das angegebene Objekt und das aktuelle Objekt gleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-132">
              <see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ValueTaskAwaiter&lt;TResult&gt; GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ValueTaskAwaiter`1&lt;!TResult&gt; GetAwaiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.GetAwaiter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAwaiter () As ValueTaskAwaiter(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ValueTaskAwaiter&lt;TResult&gt; GetAwaiter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ValueTaskAwaiter&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d1d0-133">Erstellt ein „awaiter“-Element für diesen Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-133">Creates an awaiter for this value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d1d0-134">Der Awaiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-134">The awaiter.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d1d0-135">Gibt den Hashcode für diese Instanz zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-135">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d1d0-136">Der Hashcode für das aktuelle Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-136">The hash code for the current object.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanceled">
      <MemberSignature Language="C#" Value="public bool IsCanceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCanceled" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsCanceled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCanceled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCanceled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d1d0-137">Ruft einen Wert ab, der angibt, ob dieses Objekt einen abgebrochenen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-137">Gets a value that indicates whether this object represents a canceled operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d1d0-138">
            <see langword="true" /> Wenn dieses Objekt einen abgebrochenen Vorgang darstellt; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-138">
              <see langword="true" /> if this object represents a canceled operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d1d0-139">Ruft einen Wert ab, der angibt, ob dieses Objekt einen abgeschlossenen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-139">Gets a value that indicates whether this object represents a completed operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d1d0-140">
            <see langword="true" /> Wenn dieses Objekt einen abgeschlossenen Vorgang darstellt; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-140">
              <see langword="true" /> if this object represents a completed operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompletedSuccessfully">
      <MemberSignature Language="C#" Value="public bool IsCompletedSuccessfully { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompletedSuccessfully" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompletedSuccessfully As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompletedSuccessfully { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d1d0-141">Ruft einen Wert ab, der angibt, ob dieses Objekt einen erfolgreich abgeschlossenen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-141">Gets a value that indicates whether this object represents a successfully completed operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d1d0-142">
            <see langword="true" /> Wenn dieses Objekt einen erfolgreich abgeschlossenen Vorgang darstellt; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-142">
              <see langword="true" /> if this object represents a successfully completed operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFaulted">
      <MemberSignature Language="C#" Value="public bool IsFaulted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFaulted" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsFaulted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFaulted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFaulted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d1d0-143">Ruft einen Wert ab, der angibt, ob dieses Objekt einen fehlgeschlagenen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-143">Gets a value that indicates whether this object represents a failed operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d1d0-144">
            <see langword="true" /> Wenn dieses Objekt einen fehlgeschlagenen Vorgang darstellt; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-144">
              <see langword="true" /> if this object represents a failed operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.Tasks.ValueTask&lt;TResult&gt; left, System.Threading.Tasks.ValueTask&lt;TResult&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; left, valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ValueTask(Of TResult), right As ValueTask(Of TResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::Tasks::ValueTask&lt;TResult&gt; left, System::Threading::Tasks::ValueTask&lt;TResult&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
        <Parameter Name="right" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0d1d0-145">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-145">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0d1d0-146">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-146">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d1d0-147">Überprüft zwei Werte auf Gleichheit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-147">Compares two values for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d1d0-148">
            <see langword="true" />, wenn die beiden <see cref="T:System.Threading.Tasks.ValueTask`1" />-Werte gleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-148">
              <see langword="true" /> if the two <see cref="T:System.Threading.Tasks.ValueTask`1" /> values are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.Tasks.ValueTask&lt;TResult&gt; left, System.Threading.Tasks.ValueTask&lt;TResult&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; left, valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ValueTask(Of TResult), right As ValueTask(Of TResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::Tasks::ValueTask&lt;TResult&gt; left, System::Threading::Tasks::ValueTask&lt;TResult&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
        <Parameter Name="right" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0d1d0-149">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-149">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0d1d0-150">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-150">The seconed value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d1d0-151">Bestimmt, ob zwei <see cref="T:System.Threading.Tasks.ValueTask`1" />-Werte ungleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-151">Determines whether two <see cref="T:System.Threading.Tasks.ValueTask`1" /> values are unequal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d1d0-152">
            <see langword="true" />, wenn die beiden <see cref="T:System.Threading.Tasks.ValueTask`1" />-Werte ungleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-152">
              <see langword="true" /> if the two <see cref="T:System.Threading.Tasks.ValueTask`1" /> values are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Preserve">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;TResult&gt; Preserve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; Preserve() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.Preserve" />
      <MemberSignature Language="VB.NET" Value="Public Function Preserve () As ValueTask(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::ValueTask&lt;TResult&gt; Preserve();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public TResult Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TResult Result" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TResult Result { TResult get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d1d0-153">Ruft das Ergebnis ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-153">Gets the result.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d1d0-154">Das Ergebnis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-154">The result.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  
 <span data-ttu-id="0d1d0-155">Wenn diese <xref:System.Threading.Tasks.ValueTask%601> umschließt, die ein erfolgreiches Ergebnis, diese Eigenschaft direkt zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="0d1d0-155">If this <xref:System.Threading.Tasks.ValueTask%601> wraps a successful result, this property returns it directly.</span></span>

 <span data-ttu-id="0d1d0-156">Wenn es umschließt eine <xref:System.Threading.Tasks.Task%601>, das Verhalten des <xref:System.Threading.Tasks.ValueTask%601.Result%2A> ähnelt das Verhalten des Zugriffs auf <xref:System.Threading.Tasks.Task%601.Result%2A> auf den umschlossenen Task: Wenn die Aufgabe abgeschlossen wurde nicht, den Zugriff auf die Eigenschaft blockiert den aufrufenden Thread bis zum Abschluss; Wenn die Aufgabe abgeschlossen wurde erfolgreich, gibt die Eigenschaft das Ergebnis zurück. Wenn der Task fehlgeschlagen oder wurde Cancellecd, löst das Zugreifen auf die Eigenschaft eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="0d1d0-156">If it wraps a <xref:System.Threading.Tasks.Task%601>, the behavior of <xref:System.Threading.Tasks.ValueTask%601.Result%2A> is similar to the behavior of accessing <xref:System.Threading.Tasks.Task%601.Result%2A> on the wrapped task: if the task hasn't completed, accessing the property blocks the calling thread until it completes; if the task has completed successfully, the property returns the result; if the task has faulted or was cancellecd, accessing the property throws an exception.</span></span> <span data-ttu-id="0d1d0-157">Die ausgelöste Ausnahme wird nicht umbrochen, eine <xref:System.AggregateException>, unterscheidet sich vom Verhalten des <xref:System.Threading.Tasks.Task%601.Result%2A> in derselben Situation.</span><span class="sxs-lookup"><span data-stu-id="0d1d0-157">The thrown exception is not wrapped in an <xref:System.AggregateException>, which is different from the behavior of <xref:System.Threading.Tasks.Task%601.Result%2A> in the same situation.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d1d0-158">Gibt eine Zeichenfolge zurück, die das aktuelle Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-158">Returns a string that represents the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d1d0-159">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d1d0-159">A string that represents the current object.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>