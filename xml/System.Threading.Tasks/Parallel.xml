<Type Name="Parallel" FullName="System.Threading.Tasks.Parallel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9969ebfed1c4d5ee33c68817c29ef43bc01f7aa4" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70628552" /></Metadata><TypeSignature Language="C#" Value="public static class Parallel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Parallel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Parallel" />
  <TypeSignature Language="VB.NET" Value="Public Class Parallel" />
  <TypeSignature Language="C++ CLI" Value="public ref class Parallel abstract sealed" />
  <TypeSignature Language="F#" Value="type Parallel = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="aaea8-101">Unterstützt parallele Schleifen und Bereiche.</span><span class="sxs-lookup"><span data-stu-id="aaea8-101">Provides support for parallel loops and regions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-102">Die <xref:System.Threading.Tasks.Parallel> -Klasse stellt Bibliotheks basierte Daten parallele Ersetzungen für allgemeine Vorgänge bereit, z. b. for-Schleifen, for Each-Schleifen und die Ausführung eines Satzes von-Anweisungen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-102">The <xref:System.Threading.Tasks.Parallel> class provides library-based data parallel replacements for common operations such as for loops, for each loops, and execution of a set of statements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaea8-103">In diesem Beispiel werden mehrere Ansätze zum Implementieren einer parallelen Schleife mithilfe mehrerer Sprachkonstrukte veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="aaea8-103">This example demonstrates several approaches to implementing a parallel loop using multiple language constructs.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#07](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelintro.cs#07)]
 [!code-vb[System.Threading.Tasks.Parallel#07](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelintro.vb#07)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="aaea8-104">Alle öffentlichen und geschützten Member von <see cref="T:System.Threading.Tasks.Parallel" /> sind Thread sicher und können gleichzeitig von mehreren Threads verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-104">All public and protected members of <see cref="T:System.Threading.Tasks.Parallel" /> are thread-safe and may be used concurrently from multiple threads.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/parallel-programming/data-parallelism-task-parallel-library.md"><span data-ttu-id="aaea8-105">Datenparallelität (Task Parallel Library)</span><span class="sxs-lookup"><span data-stu-id="aaea8-105">Data Parallelism (Task Parallel Library)</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Samples-for-Parallel-b4b76364"><span data-ttu-id="aaea8-106">Beispiele für die parallele Programmierung mit dem .NET Framework</span><span class="sxs-lookup"><span data-stu-id="aaea8-106">Samples for Parallel Programming with the .NET Framework</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="For">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aaea8-107">Führt eine <see langword="for" />-Schleife aus, in der Iterationen parallel ausgeführt werden können.</span><span class="sxs-lookup"><span data-stu-id="aaea8-107">Executes a <see langword="for" /> loop in which iterations may run in parallel.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, Action&lt;int,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Action`2&lt;int32, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Integer, toExclusive As Integer, body As Action(Of Integer, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, Action&lt;int, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int * int * Action&lt;int, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="aaea8-108">Der Startindex, einschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-108">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="aaea8-109">Der Endindex, ausschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-109">The end index, exclusive.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-110">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-110">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-111">Führt eine <see langword="for" />-Schleife aus, in der Iterationen parallel ausgeführt werden können und der Status der Schleife beobachtet und bearbeitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="aaea8-111">Executes a <see langword="for" /> loop in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-112">Eine Struktur, die Informationen über den Abschnitt der Schleife enthält, der abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-112">A  structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-113">Der `body` Delegat wird für jeden Wert im Iterations Bereich (`fromInclusive`, `toExclusive`) einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-113">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="aaea8-114">Sie wird mit zwei Argumenten bereitgestellt:</span><span class="sxs-lookup"><span data-stu-id="aaea8-114">It is provided with two arguments:</span></span>  
  
-   <span data-ttu-id="aaea8-115">Ein <xref:System.Int32> -Wert, der die Anzahl der Iterationen darstellt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-115">An <xref:System.Int32> value that represents the iteration count.</span></span>  
  
-   <span data-ttu-id="aaea8-116">Eine <xref:System.Threading.Tasks.ParallelLoopState> -Instanz, die verwendet werden kann, um die Schleife vorzeitig abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-116">A <xref:System.Threading.Tasks.ParallelLoopState> instance that can be used to break out of the loop prematurely.</span></span> <span data-ttu-id="aaea8-117">Das <xref:System.Threading.Tasks.ParallelLoopState> Objekt wird vom Compiler erstellt; es kann nicht im Benutzercode instanziiert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-117">The <xref:System.Threading.Tasks.ParallelLoopState> object is created by the compiler; it cannot be instantiated in user code.</span></span>  
  
 <span data-ttu-id="aaea8-118">Durch Aufrufen <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> der-Methode `for` wird der-Vorgang informiert, dass Iterationen nach dem aktuellen nicht ausgeführt werden müssen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-118">Calling the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> method informs the `for` operation that iterations after the current one don't have to execute.</span></span> <span data-ttu-id="aaea8-119">Allerdings müssen alle Iterationen vor dem aktuellen noch ausgeführt werden, sofern Sie noch nicht vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="aaea8-119">However, all iterations before the current one will still have to be executed if they haven't already.</span></span>  
  
 <span data-ttu-id="aaea8-120">Daher ist das <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> Aufrufen von vergleichbar mit der Verwendung eines Break-Vorgangs `for` in einer herkömmlichen Schleife in C#einer Sprache wie, aber es ist kein perfekter Ersatz: beispielsweise gibt es keine Garantie, dass Iterationen nach dem aktuellen definitiv nicht ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-120">Therefore, calling <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> is similar to using a break operation within a conventional `for` loop in a language like C#, but it is not a perfect substitute: For example, there is no guarantee that iterations after the current one will definitely not execute.</span></span>  
  
 <span data-ttu-id="aaea8-121">Wenn alle Iterationen vor der aktuellen Ausführung nicht erforderlich sind, verwenden Sie <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>die-Methode anstelle von.</span><span class="sxs-lookup"><span data-stu-id="aaea8-121">If executing all iterations before the current one is not necessary, use the <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> method instead of using <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>.</span></span> <span data-ttu-id="aaea8-122">Durch <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> Aufrufen von `for` wird die-Schleife informiert, dass alle verbleibenden Iterationen abgebrochen werden können, unabhängig davon, ob Sie vor oder nach der aktuellen Iteration liegen, da alle erforderlichen Aufgaben bereits abgeschlossen wurden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-122">Calling <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> informs the `for` loop that it may abandon all remaining iterations, regardless of whether they're before or after the current iteration, because all required work will have already been completed.</span></span> <span data-ttu-id="aaea8-123">Wie bei <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>gibt es jedoch keine Garantie, welche anderen Iterationen nicht ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-123">However, as with <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>, there are no guarantees regarding which other iterations will not execute.</span></span>  
  
 <span data-ttu-id="aaea8-124">Wenn eine Schleife vorzeitig beendet wird, enthält <xref:System.Threading.Tasks.ParallelLoopResult> die zurückgegebene Struktur relevante Informationen zum Abschluss der Schleife.</span><span class="sxs-lookup"><span data-stu-id="aaea8-124">If a loop is ended prematurely, the <xref:System.Threading.Tasks.ParallelLoopResult> structure that is returned will contain relevant information about the loop's completion.</span></span>  
  
 <span data-ttu-id="aaea8-125">Wenn `fromInclusive` größer oder `toExclusive`gleich ist, gibt die Methode sofort zurück, ohne Iterationen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-125">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaea8-126">Im folgenden Beispiel werden bis zu 100 Iterationen einer Schleife parallel ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-126">The following example executes up to 100 iterations of a loop in parallel.</span></span> <span data-ttu-id="aaea8-127">Jede Iterations Pause wird für ein zufälliges Intervall von 1 bis 1.000 Millisekunden angehalten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-127">Each iteration pauses for a random interval from 1 to 1,000 milliseconds.</span></span> <span data-ttu-id="aaea8-128">Ein zufällig generierter Wert bestimmt, in welcher Iterations Schleife die <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-128">A randomly generated value determines on which iteration of the loop the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="aaea8-129">Wie die Ausgabe des Beispiels zeigt, werden keine Iterationen, deren Index größer ist als <xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType> der-Eigenschafts Wert, nach dem <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> aufrufungs aufrufungs Methode gestartet.</span><span class="sxs-lookup"><span data-stu-id="aaea8-129">As the output from the example shows, no iterations whose index is greater than the <xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType> property value start after the call to the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.ParallelLoopState#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallelloopstate/cs/break1.cs#2)]
 [!code-vb[System.Threading.Tasks.ParallelLoopState#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallelloopstate/vb/break1.vb#2)]  
  
 <span data-ttu-id="aaea8-130">Da Iterationen der Schleife wahrscheinlich beim Aufrufen der <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> -Methode ausgeführt werden, ruft jede Iteration die <xref:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration%2A?displayProperty=nameWithType> -Eigenschaft auf, um zu überprüfen, ob die <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> -Methode von einer anderen Iteration aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="aaea8-130">Because iterations of the loop are still likely to be executing when the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method is called, each iteration calls the <xref:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration%2A?displayProperty=nameWithType> property to check whether another iteration has called the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="aaea8-131">Wenn der-Eigenschafts `true`Wert ist, überprüft die Iterations Werte den <xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType> Wert der-Eigenschaft, und wenn dieser größer als der Indexwert der aktuellen Iterations ist, wird sofort zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="aaea8-131">If  the property value is `true`, the iteration checks the value of the <xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType> property and, if it is greater than the current iteration's index value, returns immediately.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-132">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-132">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-133">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-133">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <altmember cref="T:System.Threading.Tasks.ParallelLoopState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-134">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-134">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, Action&lt;int&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Action`1&lt;int32&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Integer, toExclusive As Integer, body As Action(Of Integer)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, Action&lt;int&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int * int * Action&lt;int&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="aaea8-135">Der Startindex, einschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-135">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="aaea8-136">Der Endindex, ausschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-136">The end index, exclusive.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-137">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-137">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-138">Führt eine <see langword="for" />-Schleife aus, in der Iterationen parallel ausgeführt werden können.</span><span class="sxs-lookup"><span data-stu-id="aaea8-138">Executes a <see langword="for" /> loop in which iterations may run in parallel.</span></span></summary>
        <returns><span data-ttu-id="aaea8-139">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-139">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-140">Der `body` Delegat wird für jeden Wert im Iterations Bereich (`fromInclusive`, `toExclusive`) einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-140">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="aaea8-141">Sie wird mit der Iterations Anzahl (<xref:System.Int32>) als Parameter bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-141">It is provided with the iteration count (<xref:System.Int32>) as a parameter.</span></span>  
  
 <span data-ttu-id="aaea8-142">Wenn `fromInclusive` größer oder `toExclusive`gleich ist, gibt die Methode sofort zurück, ohne Iterationen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-142">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaea8-143">Im folgenden Beispiel wird die <xref:System.Threading.Tasks.Parallel.For%2A> -Methode für 100-Aufrufe eines Delegaten verwendet, der zufällige Byte Werte generiert und seine Summe berechnet.</span><span class="sxs-lookup"><span data-stu-id="aaea8-143">The following example uses the <xref:System.Threading.Tasks.Parallel.For%2A> method for 100 invocations of a delegate that generates random byte values and computes their sum.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel.For#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel.for/cs/for1.cs#1)]
 [!code-vb[System.Threading.Tasks.Parallel.For#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel.for/vb/for1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-144">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-144">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-145">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-145">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-146">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-146">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, Action&lt;long,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Action`2&lt;int64, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Long, toExclusive As Long, body As Action(Of Long, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, Action&lt;long, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * Action&lt;int64, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="aaea8-147">Der Startindex, einschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-147">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="aaea8-148">Der Endindex, ausschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-148">The end index, exclusive.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-149">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-149">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-150">Führt eine <see langword="for" />-Schleife mit 64-Bit-Indizes aus, in der Iterationen parallel ausgeführt werden können und der Zustand der Schleife überwacht und bearbeitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="aaea8-150">Executes a <see langword="for" /> loop with 64-bit indexes in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-151">Eine <see cref="T:System.Threading.Tasks.ParallelLoopResult" />-Struktur, die Informationen darüber enthält, welcher Teil der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-151">A <see cref="T:System.Threading.Tasks.ParallelLoopResult" /> structure that contains information on what portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-152">Der `body` Delegat wird für jeden Wert im Iterations Bereich (`fromInclusive`, `toExclusive`) einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-152">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="aaea8-153">Sie wird mit den folgenden Parametern bereitgestellt: die Iterations<xref:System.Int64>Anzahl () und <xref:System.Threading.Tasks.ParallelLoopState> eine-Instanz, die verwendet werden kann, um die Schleife vorzeitig auszubrechen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-153">It is provided with the following parameters: the iteration count (<xref:System.Int64>), and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 <span data-ttu-id="aaea8-154">Durch Aufrufen <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> der-Methode `for` wird der-Vorgang informiert, dass Iterationen nach dem aktuellen nicht ausgeführt werden müssen, sondern alle Iterationen vor dem aktuellen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-154">Calling the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> method informs the `for` operation that iterations after the current one don't have to be executed, but all iterations before the current one do.</span></span>  
  
 <span data-ttu-id="aaea8-155">Daher ist das Aufrufen von Break vergleichbar mit der Verwendung eines Break-Vorgangs `for` in einer herkömmlichen Schleife in C#einer Sprache wie, aber es ist kein perfekter Ersatz: beispielsweise gibt es keine Garantie, dass Iterationen nach der aktuellen Schleife definitiv nicht auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-155">Therefore, calling Break is similar to using a break operation within a conventional `for` loop in a language like C#, but it is not a perfect substitute: For example, there is no guarantee that iterations after the current one will definitely not execute.</span></span>  
  
 <span data-ttu-id="aaea8-156">Wenn alle Iterationen vor der aktuellen Ausführung nicht erforderlich sind, verwenden Sie <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>die-Methode anstelle von.</span><span class="sxs-lookup"><span data-stu-id="aaea8-156">If executing all iterations before the current one is not necessary, use the <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> method instead of using <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>.</span></span> <span data-ttu-id="aaea8-157">Durch <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> Aufrufen von `for` wird die-Schleife informiert, dass alle verbleibenden Iterationen abgebrochen werden können, unabhängig davon, ob Sie vor oder nach der aktuellen Iteration liegen, da alle erforderlichen Aufgaben bereits abgeschlossen wurden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-157">Calling <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> informs the `for` loop that it may abandon all remaining iterations, regardless of whether they're before or after the current iteration, because all required work will have already been completed.</span></span> <span data-ttu-id="aaea8-158">Wie bei <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>gibt es jedoch keine Garantie, welche anderen Iterationen nicht ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-158">However, as with <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>, there are no guarantees regarding which other iterations will not execute.</span></span>  
  
 <span data-ttu-id="aaea8-159">Wenn eine Schleife vorzeitig beendet wird, enthält <xref:System.Threading.Tasks.ParallelLoopResult> die zurückgegebene Struktur relevante Informationen zum Abschluss der Schleife.</span><span class="sxs-lookup"><span data-stu-id="aaea8-159">If a loop is ended prematurely, the <xref:System.Threading.Tasks.ParallelLoopResult> structure that is returned will contain relevant information about the loop's completion.</span></span>  
  
 <span data-ttu-id="aaea8-160">Wenn `fromInclusive` größer oder `toExclusive`gleich ist, gibt die Methode sofort zurück, ohne Iterationen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-160">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-161">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-161">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-162">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-162">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-163">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-163">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, Action&lt;long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Action`1&lt;int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Long, toExclusive As Long, body As Action(Of Long)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, Action&lt;long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * Action&lt;int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="aaea8-164">Der Startindex, einschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-164">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="aaea8-165">Der Endindex, ausschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-165">The end index, exclusive.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-166">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-166">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-167">Führt eine <see langword="for" />-Schleife mit 64-Bit-Indizes aus, in der Iterationen parallel ausgeführt werden können.</span><span class="sxs-lookup"><span data-stu-id="aaea8-167">Executes a <see langword="for" /> loop with 64-bit indexes in which iterations may run in parallel.</span></span></summary>
        <returns><span data-ttu-id="aaea8-168">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-168">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-169">Der `body` Delegat wird für jeden Wert im Iterations Bereich (`fromInclusive`, `toExclusive`) einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-169">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="aaea8-170">Sie wird mit der Iterations Anzahl (<xref:System.Int64>) als Parameter bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-170">It is provided with the iteration count (<xref:System.Int64>) as a parameter.</span></span>  
  
 <span data-ttu-id="aaea8-171">Wenn `fromInclusive` größer oder `toExclusive`gleich ist, gibt die Methode sofort zurück, ohne Iterationen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-171">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-172">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-172">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-173">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-173">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-174">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-174">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;int,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;int32, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;int, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int * int * System.Threading.Tasks.ParallelOptions * Action&lt;int, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="aaea8-175">Der Startindex, einschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-175">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="aaea8-176">Der Endindex, ausschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-176">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-177">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-177">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-178">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-178">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-179">Führt eine <see langword="for" />-Schleife aus, in der Iterationen parallel ausgeführt und Schleifenoptionen konfiguriert werden können und wo der Status der Schleife beobachtet und bearbeitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="aaea8-179">Executes a <see langword="for" /> loop in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-180">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-180">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-181">Der `body` Delegat wird für jeden Wert im Iterations Bereich (`fromInclusive`, `toExclusive`) einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-181">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="aaea8-182">Sie wird mit den folgenden Parametern bereitgestellt: die Iterations<xref:System.Int32>Anzahl () und <xref:System.Threading.Tasks.ParallelLoopState> eine-Instanz, die verwendet werden kann, um die Schleife vorzeitig auszubrechen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-182">It is provided with the following parameters: the iteration count (<xref:System.Int32>), and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 <span data-ttu-id="aaea8-183">Wenn `fromInclusive` größer oder `toExclusive`gleich ist, gibt die Methode sofort zurück, ohne Iterationen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-183">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-184">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-184">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-185">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-185">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-186">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-186">-or-</span></span> 
<span data-ttu-id="aaea8-187">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-187">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-188">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-188">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-189">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-189">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-190">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-190">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;int&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;int32&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;int&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int * int * System.Threading.Tasks.ParallelOptions * Action&lt;int&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="aaea8-191">Der Startindex, einschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-191">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="aaea8-192">Der Endindex, ausschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-192">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-193">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-193">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-194">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-194">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-195">Führt eine <see langword="for" />-Schleife aus, in der Iterationen parallel ausgeführt und Schleifenoptionen konfiguriert werden können.</span><span class="sxs-lookup"><span data-stu-id="aaea8-195">Executes a <see langword="for" /> loop in which iterations may run in parallel and loop options can be configured.</span></span></summary>
        <returns><span data-ttu-id="aaea8-196">Eine Struktur, die Informationen über den Abschnitt der Schleife enthält, der abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-196">A  structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-197">Der `body` Delegat wird für jeden Wert im Iterations Bereich (`fromInclusive`, `toExclusive`) einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-197">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="aaea8-198">Sie wird mit der Iterations Anzahl (<xref:System.Int32>) als Parameter bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-198">It is provided with the iteration count (<xref:System.Int32>) as a parameter.</span></span>  
  
 <span data-ttu-id="aaea8-199">Wenn `fromInclusive` größer oder `toExclusive`gleich ist, gibt die Methode sofort zurück, ohne Iterationen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-199">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaea8-200">Im folgenden Beispiel wird gezeigt, wie eine parallele Schleife abgebrochen wird:</span><span class="sxs-lookup"><span data-stu-id="aaea8-200">The following example shows how to cancel a parallel loop:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#05](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelforcancel.cs#05)]
 [!code-vb[System.Threading.Tasks.Parallel#05](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelforcancel.vb#05)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-201">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-201">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-202">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-202">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-203">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-203">-or-</span></span> 
<span data-ttu-id="aaea8-204">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-204">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-205">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-205">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-206">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-206">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-207">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-207">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;long,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;int64, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;long, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * System.Threading.Tasks.ParallelOptions * Action&lt;int64, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="aaea8-208">Der Startindex, einschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-208">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="aaea8-209">Der Endindex, ausschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-209">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-210">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-210">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-211">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-211">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-212">Führt eine <see langword="for" />-Schleife mit 64-Bit-Indizes aus, in der Iterationen parallel ausgeführt und Schleifenoptionen konfiguriert werden können, und der Status der Schleife kann beobachtet und bearbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-212">Executes a <see langword="for" /> loop with 64-bit indexes in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-213">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-213">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-214">Der `body` Delegat wird für jeden Wert im Iterations Bereich (`fromInclusive`, `toExclusive`) einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-214">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="aaea8-215">Sie wird mit den folgenden Parametern bereitgestellt: die Iterations<xref:System.Int64>Anzahl () und <xref:System.Threading.Tasks.ParallelLoopState> eine-Instanz, die verwendet werden kann, um die Schleife vorzeitig auszubrechen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-215">It is provided with the following parameters: the iteration count (<xref:System.Int64>), and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 <span data-ttu-id="aaea8-216">Wenn `fromInclusive` größer oder `toExclusive`gleich ist, gibt die Methode sofort zurück, ohne Iterationen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-216">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaea8-217">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> -Methode mit <xref:System.Threading.Tasks.ParallelOptions> einem-Objekt verwendet wird:</span><span class="sxs-lookup"><span data-stu-id="aaea8-217">The following example shows how to use the <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method with a <xref:System.Threading.Tasks.ParallelOptions> object:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#03](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelfor.cs#03)]
 [!code-vb[System.Threading.Tasks.Parallel#03](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelfor.vb#03)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-218">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-218">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-219">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-219">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-220">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-220">-or-</span></span> 
<span data-ttu-id="aaea8-221">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-221">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-222">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-222">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-223">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-223">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-224">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-224">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * System.Threading.Tasks.ParallelOptions * Action&lt;int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="aaea8-225">Der Startindex, einschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-225">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="aaea8-226">Der Endindex, ausschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-226">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-227">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-227">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-228">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-228">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-229">Führt eine <see langword="for" />-Schleife mit 64-Bit-Indizes aus, in der Iterationen parallel ausgeführt und Schleifenoptionen konfiguriert werden können.</span><span class="sxs-lookup"><span data-stu-id="aaea8-229">Executes a <see langword="for" /> loop with 64-bit indexes in which iterations may run in parallel and loop options can be configured.</span></span></summary>
        <returns><span data-ttu-id="aaea8-230">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-230">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-231">Unterstützt 64-Bit-Indizes.</span><span class="sxs-lookup"><span data-stu-id="aaea8-231">Supports 64-bit indexes.</span></span> <span data-ttu-id="aaea8-232">Der `body` Delegat wird für jeden Wert im Iterations Bereich (`fromInclusive`, `toExclusive`) einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-232">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="aaea8-233">Sie wird mit der Iterations Anzahl (<xref:System.Int64>) als Parameter bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-233">It is provided with the iteration count (<xref:System.Int64>) as a parameter.</span></span>  
  
 <span data-ttu-id="aaea8-234">Wenn `fromInclusive` größer oder `toExclusive`gleich ist, gibt die Methode sofort zurück, ohne Iterationen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-234">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaea8-235">Im folgenden Beispiel wird gezeigt, wie <xref:System.Threading.Tasks.ParallelOptions> verwendet wird, um einen benutzerdefinierten Taskplaner anzugeben:</span><span class="sxs-lookup"><span data-stu-id="aaea8-235">The following example shows how to use <xref:System.Threading.Tasks.ParallelOptions> to specify a custom task scheduler:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#06](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelforwithscheduler.cs#06)]
 [!code-vb[System.Threading.Tasks.Parallel#06](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelforwithscheduler.vb#06)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-236">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-236">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-237">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-237">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-238">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-238">-or-</span></span> 
<span data-ttu-id="aaea8-239">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-239">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-240">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-240">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-241">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-241">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-242">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-242">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (int fromInclusive, int toExclusive, Func&lt;TLocal&gt; localInit, Func&lt;int,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int32 fromInclusive, int32 toExclusive, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int32, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For(Of TLocal) (fromInclusive As Integer, toExclusive As Integer, localInit As Func(Of TLocal), body As Func(Of Integer, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, Func&lt;TLocal&gt; ^ localInit, Func&lt;int, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member For : int * int * Func&lt;'Local&gt; * Func&lt;int, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal"><span data-ttu-id="aaea8-243">Der Typ der lokalen Thread-Daten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-243">The type of the thread-local data.</span></span></typeparam>
        <param name="fromInclusive"><span data-ttu-id="aaea8-244">Der Startindex, einschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-244">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="aaea8-245">Der Endindex, ausschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-245">The end index, exclusive.</span></span></param>
        <param name="localInit"><span data-ttu-id="aaea8-246">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-246">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-247">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-247">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="aaea8-248">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-248">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="aaea8-249">Führt eine <see langword="for" />-Schleife mit lokalen Threaddaten aus, in der Iterationen parallel ausgeführt und der Status der Schleife beobachtet und bearbeitet werden können.</span><span class="sxs-lookup"><span data-stu-id="aaea8-249">Executes a <see langword="for" /> loop with thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-250">Eine Struktur, die Informationen über den Abschnitt der Schleife enthält, der abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-250">A  structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-251">Der `body` Delegat wird für jeden Wert im Iterations Bereich (`fromInclusive`, `toExclusive`) einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-251">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="aaea8-252">Sie wird mit den folgenden Parametern bereitgestellt: die Iterationen<xref:System.Int32>Anzahl () <xref:System.Threading.Tasks.ParallelLoopState> , eine-Instanz, die zum vorzeitigen Abbrechen der Schleife verwendet werden kann, und ein lokaler Zustand, der von Iterationen gemeinsam genutzt werden kann, die im selben Thread ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-252">It is provided with the following parameters: the iteration count (<xref:System.Int32>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="aaea8-253">Der `localInit` Delegat wird einmal für jede Aufgabe aufgerufen, die an der Ausführung der Schleife beteiligt ist, und gibt den anfänglichen lokalen Zustand für jede dieser Aufgaben zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-253">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="aaea8-254">Diese anfänglichen Zustände werden an die ersten `body` Aufrufe der einzelnen Aufgaben weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="aaea8-254">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="aaea8-255">Anschließend gibt jeder nachfolgende Text Aufruf einen möglicherweise geänderten Zustandswert zurück, der an den nächsten Text Aufruf weitergeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-255">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="aaea8-256">Schließlich gibt der letzte Text Aufruf für jede Aufgabe einen Zustandswert zurück, der an den `localFinally` Delegaten weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-256">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="aaea8-257">Der `localFinally` Delegat wird einmal pro Aufgabe aufgerufen, um eine abschließende Aktion für den lokalen Zustand jeder Aufgabe auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-257">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="aaea8-258">Dieser Delegat kann gleichzeitig für mehrere Aufgaben aufgerufen werden. Daher müssen Sie den Zugriff auf alle freigegebenen Variablen synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-258">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="aaea8-259">Die <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> -Methode verwendet möglicherweise mehr Tasks als Threads im Laufe der Lebensdauer ihrer Ausführung, da vorhandene Aufgaben vollständig ausgeführt werden und durch neue Aufgaben ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-259">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="aaea8-260">Dadurch erhält das zugrunde <xref:System.Threading.Tasks.TaskScheduler> liegende Objekt die Möglichkeit, Threads hinzuzufügen, zu ändern oder zu entfernen, die die Schleife bedienen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-260">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="aaea8-261">Wenn `fromInclusive` größer oder `toExclusive`gleich ist, gibt die Methode sofort zurück, ohne Iterationen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-261">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 <span data-ttu-id="aaea8-262">Ein Beispiel, in dem diese Methode verwendet wird, finden Sie unter Gewusst [wie: Schreiben einer parallel. for-Schleife mit Thread lokalen Variablen](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md).</span><span class="sxs-lookup"><span data-stu-id="aaea8-262">For an example that uses this method, see [How to: Write a Parallel.For Loop with Thread-Local Variables](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-263">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-263">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-264">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-264">-or-</span></span> 
<span data-ttu-id="aaea8-265">Das <paramref name="localInit" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-265">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-266">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-266">-or-</span></span> 
<span data-ttu-id="aaea8-267">Das <paramref name="localFinally" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-267">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-268">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-268">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-269">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-269">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (long fromInclusive, long toExclusive, Func&lt;TLocal&gt; localInit, Func&lt;long,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int64 fromInclusive, int64 toExclusive, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int64, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For(Of TLocal) (fromInclusive As Long, toExclusive As Long, localInit As Func(Of TLocal), body As Func(Of Long, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, Func&lt;TLocal&gt; ^ localInit, Func&lt;long, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * Func&lt;'Local&gt; * Func&lt;int64, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal"><span data-ttu-id="aaea8-270">Der Typ der lokalen Thread-Daten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-270">The type of the thread-local data.</span></span></typeparam>
        <param name="fromInclusive"><span data-ttu-id="aaea8-271">Der Startindex, einschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-271">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="aaea8-272">Der Endindex, ausschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-272">The end index, exclusive.</span></span></param>
        <param name="localInit"><span data-ttu-id="aaea8-273">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-273">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-274">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-274">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="aaea8-275">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-275">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="aaea8-276">Führt eine <see langword="for" />-Schleife mit 64-Bit-Indizes sowie lokalen Threaddaten aus, in denen Iterationen parallel ausgeführt werden können, und der Status der Schleife kann beobachtet und bearbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-276">Executes a <see langword="for" /> loop with 64-bit indexes and thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-277">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-277">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-278">Der `body` Delegat wird für jeden Wert im Iterations Bereich (`fromInclusive`, `toExclusive`) einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-278">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="aaea8-279">Sie wird mit den folgenden Parametern bereitgestellt: die Iterationen<xref:System.Int64>Anzahl () <xref:System.Threading.Tasks.ParallelLoopState> , eine-Instanz, die zum vorzeitigen Abbrechen der Schleife verwendet werden kann, und ein lokaler Zustand, der von Iterationen gemeinsam genutzt werden kann, die für dieselbe Aufgabe ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-279">It is provided with the following parameters: the iteration count (<xref:System.Int64>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same task.</span></span>  
  
 <span data-ttu-id="aaea8-280">Der `localInit` Delegat wird einmal für jede Aufgabe aufgerufen, die an der Ausführung der Schleife beteiligt ist, und gibt den anfänglichen lokalen Zustand für jede dieser Aufgaben zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-280">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="aaea8-281">Diese anfänglichen Zustände werden an die ersten `body` Aufrufe der einzelnen Aufgaben weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="aaea8-281">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="aaea8-282">Anschließend gibt jeder nachfolgende Text Aufruf einen möglicherweise geänderten Zustandswert zurück, der an den nächsten Text Aufruf weitergeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-282">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="aaea8-283">Schließlich gibt der letzte Text Aufruf für jede Aufgabe einen Zustandswert zurück, der an den `localFinally` Delegaten weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-283">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="aaea8-284">Der `localFinally` Delegat wird einmal pro Aufgabe aufgerufen, um eine abschließende Aktion für den lokalen Zustand jeder Aufgabe auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-284">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="aaea8-285">Dieser Delegat kann gleichzeitig für mehrere Aufgaben aufgerufen werden. Daher müssen Sie den Zugriff auf alle freigegebenen Variablen synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-285">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="aaea8-286">Die <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> -Methode verwendet möglicherweise mehr Tasks als Threads im Laufe der Lebensdauer ihrer Ausführung, da vorhandene Aufgaben vollständig ausgeführt werden und durch neue Aufgaben ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-286">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="aaea8-287">Dadurch erhält das zugrunde <xref:System.Threading.Tasks.TaskScheduler> liegende Objekt die Möglichkeit, Threads hinzuzufügen, zu ändern oder zu entfernen, die die Schleife bedienen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-287">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="aaea8-288">Wenn `fromInclusive` größer oder `toExclusive`gleich ist, gibt die Methode sofort zurück, ohne Iterationen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-288">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 <span data-ttu-id="aaea8-289">Ein Beispiel, in dem diese Methode verwendet wird, finden Sie unter Gewusst [wie: Schreiben einer parallel. for-Schleife mit Thread lokalen Variablen](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md).</span><span class="sxs-lookup"><span data-stu-id="aaea8-289">For an example that uses this method, see [How to: Write a Parallel.For Loop with Thread-Local Variables](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-290">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-290">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-291">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-291">-or-</span></span> 
<span data-ttu-id="aaea8-292">Das <paramref name="localInit" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-292">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-293">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-293">-or-</span></span> 
<span data-ttu-id="aaea8-294">Das <paramref name="localFinally" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-294">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-295">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-295">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-296">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-296">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (int fromInclusive, int toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;int,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int32 fromInclusive, int32 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int32, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;int, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member For : int * int * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;int, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal"><span data-ttu-id="aaea8-297">Der Typ der lokalen Thread-Daten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-297">The type of the thread-local data.</span></span></typeparam>
        <param name="fromInclusive"><span data-ttu-id="aaea8-298">Der Startindex, einschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-298">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="aaea8-299">Der Endindex, ausschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-299">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-300">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-300">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="aaea8-301">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-301">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-302">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-302">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="aaea8-303">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-303">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="aaea8-304">Führt eine <see langword="for" />-Schleife mit lokalen Threaddaten aus, in der Iterationen parallel ausgeführt, Schleifenoptionen konfiguriert und der Status der Schleife beobachtet und bearbeitet werden können.</span><span class="sxs-lookup"><span data-stu-id="aaea8-304">Executes a <see langword="for" /> loop with thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-305">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-305">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-306">Der `body` Delegat wird für jeden Wert im Iterations Bereich (`fromInclusive`, `toExclusive`) einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-306">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="aaea8-307">Sie wird mit den folgenden Parametern bereitgestellt: die Iterationen<xref:System.Int32>Anzahl () <xref:System.Threading.Tasks.ParallelLoopState> , eine-Instanz, die zum vorzeitigen Abbrechen der Schleife verwendet werden kann, und ein lokaler Zustand, der von Iterationen gemeinsam genutzt werden kann, die für dieselbe Aufgabe ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-307">It is provided with the following parameters: the iteration count (<xref:System.Int32>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same task.</span></span>  
  
 <span data-ttu-id="aaea8-308">Der `localInit` Delegat wird einmal für jede Aufgabe aufgerufen, die an der Ausführung der Schleife beteiligt ist, und gibt den anfänglichen lokalen Zustand für jede dieser Aufgaben zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-308">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="aaea8-309">Diese anfänglichen Zustände werden an die ersten `body` Aufrufe der einzelnen Aufgaben weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="aaea8-309">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="aaea8-310">Anschließend gibt jeder nachfolgende Text Aufruf einen möglicherweise geänderten Zustandswert zurück, der an den nächsten Text Aufruf weitergeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-310">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="aaea8-311">Schließlich gibt der letzte Text Aufruf für jede Aufgabe einen Zustandswert zurück, der an den `localFinally` Delegaten weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-311">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="aaea8-312">Der `localFinally` Delegat wird einmal pro Aufgabe aufgerufen, um eine abschließende Aktion für den lokalen Zustand jeder Aufgabe auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-312">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="aaea8-313">Dieser Delegat kann gleichzeitig für mehrere Threads aufgerufen werden. Daher müssen Sie den Zugriff auf alle freigegebenen Variablen synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-313">This delegate might be invoked concurrently on multiple threads; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="aaea8-314">Die <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> -Methode verwendet möglicherweise mehr Tasks als Threads im Laufe der Lebensdauer ihrer Ausführung, da vorhandene Aufgaben vollständig ausgeführt werden und durch neue Aufgaben ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-314">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="aaea8-315">Dadurch erhält das zugrunde <xref:System.Threading.Tasks.TaskScheduler> liegende Objekt die Möglichkeit, Threads hinzuzufügen, zu ändern oder zu entfernen, die die Schleife bedienen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-315">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="aaea8-316">Wenn `fromInclusive` größer oder `toExclusive`gleich ist, gibt die Methode sofort zurück, ohne Iterationen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-316">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaea8-317">Im folgenden Beispiel werden lokale Thread Variablen verwendet, um die Summe der Ergebnisse vieler langwieriger Vorgänge zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-317">The following example uses thread-local variables to compute the sum of the results of many lengthy operations.</span></span> <span data-ttu-id="aaea8-318">In diesem Beispiel wird der Grad der Parallelität auf vier beschränkt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-318">This example limits the degree of parallelism to four.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#04](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/threadlocalforwithoptions.cs#04)]
 [!code-vb[System.Threading.Tasks.Parallel#04](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/threadlocalforwithoptions.vb#04)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-319">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-319">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-320">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-320">-or-</span></span> 
<span data-ttu-id="aaea8-321">Das <paramref name="localInit" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-321">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-322">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-322">-or-</span></span> 
<span data-ttu-id="aaea8-323">Das <paramref name="localFinally" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-323">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-324">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-324">-or-</span></span> 
<span data-ttu-id="aaea8-325">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-325">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-326">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-326">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-327">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-327">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-328">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-328">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-329">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-329">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (long fromInclusive, long toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;long,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int64 fromInclusive, int64 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int64, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;long, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;int64, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal"><span data-ttu-id="aaea8-330">Der Typ der lokalen Thread-Daten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-330">The type of the thread-local data.</span></span></typeparam>
        <param name="fromInclusive"><span data-ttu-id="aaea8-331">Der Startindex, einschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-331">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="aaea8-332">Der Endindex, ausschließend.</span><span class="sxs-lookup"><span data-stu-id="aaea8-332">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-333">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-333">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="aaea8-334">Der Funktionsdelegat, der den Ausgangszustand der lokalen Daten für jeden Thread zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-334">The function delegate that returns the initial state of the local data for each thread.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-335">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-335">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="aaea8-336">Der Delegat, der eine abschließende Aktion für den lokalen Zustand jedes Threads ausführt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-336">The delegate that performs a final action on the local state of each thread.</span></span></param>
        <summary><span data-ttu-id="aaea8-337">Führt eine <see langword="for" />-Schleife mit 64-Bit Indizes und Thread-lokalen Daten aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar, und der Schleifenstatus kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-337">Executes a <see langword="for" /> loop with 64-bit indexes and thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-338">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-338">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-339">Der `body` Delegat wird für jeden Wert im Iterations Bereich (`fromInclusive`, `toExclusive`) einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-339">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="aaea8-340">Sie wird mit den folgenden Parametern bereitgestellt: die Iterationen<xref:System.Int64>Anzahl () <xref:System.Threading.Tasks.ParallelLoopState> , eine-Instanz, die zum vorzeitigen Abbrechen der Schleife verwendet werden kann, und ein lokaler Zustand, der von Iterationen gemeinsam genutzt werden kann, die im selben Thread ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-340">It is provided with the following parameters: the iteration count (<xref:System.Int64>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="aaea8-341">Der `localInit` Delegat wird für jeden Thread, der an der Ausführung der Schleife teilnimmt, einmal aufgerufen und gibt den anfänglichen lokalen Zustand für jeden dieser Threads zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-341">The `localInit` delegate is invoked once for each thread that participates in the loop's execution and returns the initial local state for each of those threads.</span></span> <span data-ttu-id="aaea8-342">Diese anfänglichen Zustände werden an die ersten `body` Aufrufe in jedem Thread weitergegeben.</span><span class="sxs-lookup"><span data-stu-id="aaea8-342">These initial states are passed to the first `body` invocations on each thread.</span></span> <span data-ttu-id="aaea8-343">Anschließend gibt jeder nachfolgende Text Aufruf einen möglicherweise geänderten Zustandswert zurück, der an den nächsten Text Aufruf weitergeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-343">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="aaea8-344">Schließlich gibt der letzte Text Aufruf für jeden Thread einen Zustandswert zurück, der an den `localFinally` Delegaten weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-344">Finally, the last body invocation on each thread returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="aaea8-345">Der `localFinally` Delegat wird einmal pro Thread aufgerufen, um eine abschließende Aktion für den lokalen Zustand jedes Threads auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-345">The `localFinally` delegate is invoked once per thread to perform a final action on each thread's local state.</span></span> <span data-ttu-id="aaea8-346">Dieser Delegat kann gleichzeitig für mehrere Threads aufgerufen werden. Daher müssen Sie den Zugriff auf alle freigegebenen Variablen synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-346">This delegate might be invoked concurrently on multiple threads; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="aaea8-347">Die <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> -Methode verwendet möglicherweise mehr Tasks als Threads im Laufe der Lebensdauer ihrer Ausführung, da vorhandene Aufgaben vollständig ausgeführt werden und durch neue Aufgaben ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-347">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="aaea8-348">Dadurch erhält das zugrunde <xref:System.Threading.Tasks.TaskScheduler> liegende Objekt die Möglichkeit, Threads hinzuzufügen, zu ändern oder zu entfernen, die die Schleife bedienen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-348">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="aaea8-349">Wenn `fromInclusive` größer oder `toExclusive`gleich ist, gibt die Methode sofort zurück, ohne Iterationen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-349">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-350">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-350">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-351">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-351">-or-</span></span> 
<span data-ttu-id="aaea8-352">Das <paramref name="localInit" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-352">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-353">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-353">-or-</span></span> 
<span data-ttu-id="aaea8-354">Das <paramref name="localFinally" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-354">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-355">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-355">-or-</span></span> 
<span data-ttu-id="aaea8-356">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-356">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-357">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-357">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-358">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-358">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-359">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-359">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-360">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-360">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ForEach&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aaea8-361">Führt einen <see langword="foreach" /> (<see langword="For Each " /> in Visual Basic)-Vorgang aus, bei dem Iterationen parallel ausgeführt werden können.</span><span class="sxs-lookup"><span data-stu-id="aaea8-361">Executes a <see langword="foreach" /> (<see langword="For Each " /> in Visual Basic) operation in which iterations may run in parallel.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As OrderablePartitioner(Of TSource), body As Action(Of TSource, ParallelLoopState, Long)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-362">Der Typ der Elemente in <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-362">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-363">Der sortierbare Partitionierer, der die ursprüngliche Datenquelle enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-363">The orderable partitioner that contains the original data source.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-364">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-364">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-365">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit einem <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> aus. Iterationen können parallel ablaufen, und der Schleifenstatus kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-365">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-366">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-366">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-367">Diese Überladung wird für Szenarien bereitgestellt, in denen Sie das Standard Partitionierungsschema außer Kraft setzen möchten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-367">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="aaea8-368">Kleine Schleifen Texte können z. b. von der Partitionierung des Bereichs profitieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-368">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="aaea8-369">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> -Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-369">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="aaea8-370">Weitere Informationen finden Sie unter [benutzerdefinierte Partitionierer für PLINQ und TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) und Gewusst [wie: Implementieren dynamischer Partitionen](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="aaea8-370">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-371">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-371">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-372">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-372">-or-</span></span> 
<span data-ttu-id="aaea8-373">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-373">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="aaea8-374">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" /> sortierbaren Partitionierer gibt <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-374">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> orderable partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="aaea8-375">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-375">-or-</span></span> 
<span data-ttu-id="aaea8-376">Die <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" />-Eigenschaft im nach Quelle sortierbaren Partitionierer gibt <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-376">The <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> property in the source orderable partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="aaea8-377">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-377">-or-</span></span> 
<span data-ttu-id="aaea8-378">Sämtliche Methoden im sortierbaren Quellpartitionierer geben <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-378">Any methods in the source orderable partitioner return <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-379">Die Ausnahme, die von einem der angegebenen Delegaten ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="aaea8-379">The exception thrown from one of the specified delegates.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-380">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-380">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As Partitioner(Of TSource), body As Action(Of TSource, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-381">Der Typ der Elemente in <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-381">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-382">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-382">The partitioner that contains the original data source.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-383">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-383">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-384">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit einem <see cref="T:System.Collections.Concurrent.Partitioner" /> aus. Iterationen können parallel ablaufen, und der Schleifenstatus kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-384">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-385">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-385">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-386">Diese Überladung wird für Szenarien bereitgestellt, in denen Sie das Standard Partitionierungsschema außer Kraft setzen möchten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-386">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="aaea8-387">Kleine Schleifen Texte können z. b. von der Partitionierung des Bereichs profitieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-387">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="aaea8-388">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> -Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-388">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="aaea8-389">Weitere Informationen finden Sie unter [benutzerdefinierte Partitionierer für PLINQ und TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) und Gewusst [wie: Implementieren dynamischer Partitionen](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="aaea8-389">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-390">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-390">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-391">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-391">-or-</span></span> 
<span data-ttu-id="aaea8-392">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-392">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="aaea8-393">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" />-Partitioner gibt <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-393">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="aaea8-394">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-394">-or-</span></span> 
<span data-ttu-id="aaea8-395">Eine Methode im <paramref name="source" />-Partitioner gibt <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-395">A method in the <paramref name="source" /> partitioner returns <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-396">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-396">-or-</span></span> 
<span data-ttu-id="aaea8-397">Die <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" />-Methode im <paramref name="source" />-Partitioner gibt nicht die korrekte Anzahl von Partitionen zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-397">The <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> method in the <paramref name="source" /> partitioner does not return the correct number of partitions.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-398">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-398">Parallel Loops</span></span></related>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-399">Die Ausnahme, die ausgelöst wird, um eine Ausnahme zu enthalten, die von einem der angegebenen Delegaten ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="aaea8-399">The exception that is thrown to contain an exception thrown from one of the specified delegates.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As Partitioner(Of TSource), body As Action(Of TSource)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, Action&lt;TSource&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * Action&lt;'Source&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-400">Der Typ der Elemente in <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-400">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-401">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-401">The partitioner that contains the original data source.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-402">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-402">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-403">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) für ein <see cref="T:System.Collections.Concurrent.Partitioner" />-Objekt aus, in dem Iterationen parallel ausgeführt werden können.</span><span class="sxs-lookup"><span data-stu-id="aaea8-403">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel.</span></span></summary>
        <returns><span data-ttu-id="aaea8-404">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-404">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-405">Diese Überladung wird für Szenarien bereitgestellt, in denen Sie das Standard Partitionierungsschema außer Kraft setzen möchten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-405">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="aaea8-406">Kleine Schleifen Texte können z. b. von der Partitionierung des Bereichs profitieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-406">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="aaea8-407">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> -Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-407">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="aaea8-408">Weitere Informationen finden Sie unter [benutzerdefinierte Partitionierer für PLINQ und TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) und Gewusst [wie: Implementieren dynamischer Partitionen](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="aaea8-408">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaea8-409">Im folgenden Beispiel wird gezeigt, wie ein Bereichs Partitionierer für die Verwendung <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>mit implementiert wird:</span><span class="sxs-lookup"><span data-stu-id="aaea8-409">The following example shows how to implement a range partitioner for use with <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel_RangePartitioners#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel_rangepartitioners/cs/rangepartitioner.cs#01)]
 [!code-vb[System.Threading.Tasks.Parallel_RangePartitioners#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel_rangepartitioners/vb/rangepart.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-410">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-410">The <paramref name="source" /> argument is  <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-411">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-411">-or-</span></span> 
<span data-ttu-id="aaea8-412">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-412">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="aaea8-413">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" />-Partitioner gibt <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-413">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="aaea8-414">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-414">-or-</span></span> 
<span data-ttu-id="aaea8-415">Die Ausnahme, die ausgelöst wird, wenn irgendeine Methode im <paramref name="source" />-Partitionierer <see langword="null" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-415">The exception that is thrown when any methods in the <paramref name="source" /> partitioner return <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-416">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-416">-or-</span></span> 
<span data-ttu-id="aaea8-417">Die <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" />-Methode im <paramref name="source" />-Partitioner gibt nicht die korrekte Anzahl von Partitionen zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-417">The <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> method in the <paramref name="source" /> partitioner does not return the correct number of partitions.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-418">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-418">Parallel Loops</span></span></related>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-419">Die Ausnahme, die ausgelöst wird, um eine Ausnahme zu enthalten, die von einem der angegebenen Delegaten ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="aaea8-419">The exception that is thrown to contain an exception thrown from one of the specified delegates.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As IEnumerable(Of TSource), body As Action(Of TSource, ParallelLoopState, Long)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-420">Der Datentyp in der Quelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-420">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-421">Eine auflistbare Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-421">An enumerable data source.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-422">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-422">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-423">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit 64-Bit-Indizes für einen <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ausgeführt werden. Der Schleifenzustand kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-423">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with 64-bit indexes on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-424">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-424">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-425">Der `body` Delegat wird einmal für jedes Element in der `source` Enumerable aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-425">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="aaea8-426">Sie wird mit den folgenden Parametern bereitgestellt: das aktuelle Element <xref:System.Threading.Tasks.ParallelLoopState> , eine-Instanz, die verwendet werden kann, um die Schleife vorzeitig zu verlassen, und der Index<xref:System.Int64>des aktuellen Elements ().</span><span class="sxs-lookup"><span data-stu-id="aaea8-426">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and the current element's index (<xref:System.Int64>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-427">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-427">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-428">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-428">-or-</span></span> 
<span data-ttu-id="aaea8-429">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-429">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-430">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-430">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-431">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-431">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As IEnumerable(Of TSource), body As Action(Of TSource, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-432">Der Datentyp in der Quelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-432">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-433">Eine auflistbare Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-433">An enumerable data source.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-434">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-434">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-435">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit einem <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Der Schleifenstatus kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-435">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-436">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-436">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-437">Der `body` Delegat wird einmal für jedes Element in der `source` Enumerable aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-437">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="aaea8-438">Sie wird mit den folgenden Parametern bereitgestellt: das aktuelle Element und <xref:System.Threading.Tasks.ParallelLoopState> eine-Instanz, die verwendet werden kann, um die Schleife vorzeitig abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-438">It is provided with the following parameters: the current element, and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-439">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-439">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-440">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-440">-or-</span></span> 
<span data-ttu-id="aaea8-441">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-441">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-442">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-442">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-443">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-443">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As IEnumerable(Of TSource), body As Action(Of TSource)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Action&lt;TSource&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * Action&lt;'Source&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-444">Der Datentyp in der Quelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-444">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-445">Eine auflistbare Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-445">An enumerable data source.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-446">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-446">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-447">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit einem <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-447">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel.</span></span></summary>
        <returns><span data-ttu-id="aaea8-448">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-448">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-449">Der `body` Delegat wird einmal für jedes Element in der `source` Enumerable aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-449">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="aaea8-450">Sie wird mit dem aktuellen Element als Parameter bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-450">It is provided with the current element as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaea8-451">Im folgenden Beispiel wird die <xref:System.Threading.Tasks.Parallel.ForEach%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Action%7B%60%600%7D%29> -Methode verwendet, um die Anzahl der Vokale und der Zeichen, die keine Leerzeichen sind, in einer Textdatei zu zählen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-451">The following example uses the <xref:System.Threading.Tasks.Parallel.ForEach%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Action%7B%60%600%7D%29> method to count the number of vowels and non-white-space characters in a text file.</span></span> <span data-ttu-id="aaea8-452">In diesem Fall wird der <xref:System.Threading.Tasks.ParallelLoopResult> Wert, der von der-Methode zurückgegeben wird, ignoriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-452">In this case, the <xref:System.Threading.Tasks.ParallelLoopResult> value returned by the method is ignored.</span></span> <span data-ttu-id="aaea8-453">Da Vorgänge parallel ausgeführt werden können, müssen Sie sicherstellen, dass das Inkrementieren der gegen Variablen eine atomarische Operation ist, und dass mehrere Threads nicht versuchen, gleichzeitig auf die Counter-Variablen zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-453">Note that, because operations can run in parallel, you must ensure that incrementing the counter variables is an atomic operation, and that multiple threads do not attempt to access the counter variables simultaneously.</span></span> <span data-ttu-id="aaea8-454">Zu diesem Zweck verwendet das Beispiel die `lock` -Anweisung (in C#) und die `SyncLock` -Anweisung (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="aaea8-454">For this purpose, the example uses the `lock` statement (in C#) and the `SyncLock` statement (in Visual Basic).</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel.ForEach#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel.foreach/cs/foreach1.cs#1)]
 [!code-vb[System.Threading.Tasks.Parallel.ForEach#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel.foreach/vb/foreach1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-455">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-455">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-456">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-456">-or-</span></span> 
<span data-ttu-id="aaea8-457">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-457">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-458">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-458">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-459">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-459">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-460">Der Typ der Elemente in <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-460">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-461">Der sortierbare Partitionierer, der die ursprüngliche Datenquelle enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-461">The orderable partitioner that contains the original data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-462">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-462">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-463">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-463">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-464">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit einem <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> aus. Iterationen können parallel ablaufen, Schleifenoptionen sind konfigurierbar, und der Schleifenstatus kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-464">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-465">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-465">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-466">Diese Überladung wird für Szenarien bereitgestellt, in denen Sie das Standard Partitionierungsschema außer Kraft setzen möchten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-466">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="aaea8-467">Kleine Schleifen Texte können z. b. von der Partitionierung des Bereichs profitieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-467">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="aaea8-468">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> -Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-468">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="aaea8-469">Weitere Informationen finden Sie unter [benutzerdefinierte Partitionierer für PLINQ und TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) und Gewusst [wie: Implementieren dynamischer Partitionen](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="aaea8-469">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-470">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-470">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-471">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-471">The <paramref name="source" /> argument is  <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-472">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-472">-or-</span></span> 
<span data-ttu-id="aaea8-473">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-473">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-474">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-474">-or-</span></span> 
<span data-ttu-id="aaea8-475">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-475">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-476">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-476">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="aaea8-477">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" /> sortierbaren Partitionierer gibt <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-477">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> orderable partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="aaea8-478">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-478">-or-</span></span> 
<span data-ttu-id="aaea8-479">Die <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" />-Eigenschaft im <paramref name="source" /> sortierbaren Partitionierer gibt <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-479">The <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> property in the <paramref name="source" /> orderable partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="aaea8-480">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-480">-or-</span></span> 
<span data-ttu-id="aaea8-481">Die Ausnahme, die ausgelöst wird, wenn irgendwelche Methoden im <paramref name="source" /> sortierbaren Partitionierer <see langword="null" /> zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="aaea8-481">The exception that is thrown when any methods in the <paramref name="source" /> orderable partitioner return <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-482">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-482">Parallel Loops</span></span></related>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-483">Die Ausnahme, die ausgelöst wird, um eine Ausnahme zu enthalten, die von einem der angegebenen Delegaten ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="aaea8-483">The exception that is thrown to contain an exception thrown from one of the specified delegates.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-484">Der Typ der Elemente in <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-484">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-485">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-485">The partitioner that contains the original data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-486">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-486">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-487">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-487">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-488">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit einem <see cref="T:System.Collections.Concurrent.Partitioner" /> aus. Iterationen können parallel ablaufen, Schleifenoptionen sind konfigurierbar, und der Schleifenstatus kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-488">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-489">Eine Struktur, die Informationen über den Abschnitt der Schleife enthält, der abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-489">A  structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-490">Diese Überladung wird für Szenarien bereitgestellt, in denen Sie das Standard Partitionierungsschema außer Kraft setzen möchten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-490">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="aaea8-491">Kleine Schleifen Texte können z. b. von der Partitionierung des Bereichs profitieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-491">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="aaea8-492">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> -Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-492">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="aaea8-493">Weitere Informationen finden Sie unter [benutzerdefinierte Partitionierer für PLINQ und TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) und Gewusst [wie: Implementieren dynamischer Partitionen](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="aaea8-493">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-494">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-494">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-495">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-495">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-496">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-496">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-497">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-497">-or-</span></span> 
<span data-ttu-id="aaea8-498">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-498">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-499">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-499">-or-</span></span> 
<span data-ttu-id="aaea8-500">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-500">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="aaea8-501">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" />-Partitioner gibt <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-501">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="aaea8-502">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-502">-or-</span></span> 
<span data-ttu-id="aaea8-503">Die Ausnahme, die ausgelöst wird, wenn irgendeine Methode im <paramref name="source" />-Partitionierer <see langword="null" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-503">The exception that is thrown when any methods in the <paramref name="source" /> partitioner return <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-504">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-504">Parallel Loops</span></span></related>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-505">Die Ausnahme, die ausgelöst wird, um eine Ausnahme zu enthalten, die von einem der angegebenen Delegaten ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="aaea8-505">The exception that is thrown to contain an exception thrown from one of the specified delegates.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-506">Der Typ der Elemente in <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-506">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-507">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-507">The partitioner that contains the original data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-508">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-508">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-509">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-509">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-510">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit einem <see cref="T:System.Collections.Concurrent.Partitioner" /> aus. Iterationen können parallel ausgeführt werden, Schleifenoptionen sind konfigurierbar.</span><span class="sxs-lookup"><span data-stu-id="aaea8-510">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel and loop options can be configured.</span></span></summary>
        <returns><span data-ttu-id="aaea8-511">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-511">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-512">Diese Überladung wird für Szenarien bereitgestellt, in denen Sie das Standard Partitionierungsschema außer Kraft setzen möchten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-512">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="aaea8-513">Kleine Schleifen Texte können z. b. von der Partitionierung des Bereichs profitieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-513">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="aaea8-514">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> -Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-514">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="aaea8-515">Weitere Informationen finden Sie unter [benutzerdefinierte Partitionierer für PLINQ und TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) und Gewusst [wie: Implementieren dynamischer Partitionen](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="aaea8-515">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-516">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-516">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-517">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-517">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-518">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-518">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-519">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-519">-or-</span></span> 
<span data-ttu-id="aaea8-520">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-520">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-521">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-521">-or-</span></span> 
<span data-ttu-id="aaea8-522">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-522">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="aaea8-523">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" />-Partitioner gibt <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-523">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="aaea8-524">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-524">-or-</span></span> 
<span data-ttu-id="aaea8-525">Die Ausnahme, die ausgelöst wird, wenn irgendeine Methode im <paramref name="source" />-Partitionierer <see langword="null" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-525">The exception that is thrown when any methods in the <paramref name="source" /> partitioner return <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-526">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-526">Parallel Loops</span></span></related>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-527">Die Ausnahme, die ausgelöst wird, um eine Ausnahme zu enthalten, die von einem der angegebenen Delegaten ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="aaea8-527">The exception that is thrown to contain an exception thrown from one of the specified delegates.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-528">Der Datentyp in der Quelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-528">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-529">Eine auflistbare Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-529">An enumerable data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-530">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-530">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-531">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-531">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-532">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit 64-Bit-Indizes für einen <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-532">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with 64-bit indexes on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-533">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-533">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-534">Der `body` Delegat wird einmal für jedes Element in der `source` Enumerable aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-534">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="aaea8-535">Sie wird mit den folgenden Parametern bereitgestellt: das aktuelle Element <xref:System.Threading.Tasks.ParallelLoopState> , eine-Instanz, die verwendet werden kann, um die Schleife vorzeitig zu verlassen, und der Index<xref:System.Int64>des aktuellen Elements ().</span><span class="sxs-lookup"><span data-stu-id="aaea8-535">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and the current element's index (<xref:System.Int64>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-536">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-536">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-537">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-537">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-538">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-538">-or-</span></span> 
<span data-ttu-id="aaea8-539">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-539">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-540">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-540">-or-</span></span> 
<span data-ttu-id="aaea8-541">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-541">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-542">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-542">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-543">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-543">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-544">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-544">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-545">Der Datentyp in der Quelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-545">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-546">Eine auflistbare Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-546">An enumerable data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-547">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-547">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-548">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-548">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-549">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit einem <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-549">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-550">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-550">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-551">Der `body` Delegat wird einmal für jedes Element in der `source` Enumerable aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-551">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="aaea8-552">Sie wird mit den folgenden Parametern bereitgestellt: das aktuelle Element und <xref:System.Threading.Tasks.ParallelLoopState> eine-Instanz, die verwendet werden kann, um die Schleife vorzeitig abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-552">It is provided with the following parameters: the current element, and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-553">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-553">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-554">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-554">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-555">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-555">-or-</span></span> 
<span data-ttu-id="aaea8-556">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-556">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-557">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-557">-or-</span></span> 
<span data-ttu-id="aaea8-558">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-558">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-559">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-559">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-560">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-560">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-561">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-561">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-562">Der Datentyp in der Quelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-562">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-563">Eine auflistbare Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-563">An enumerable data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-564">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-564">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-565">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-565">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="aaea8-566">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit einem <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar.</span><span class="sxs-lookup"><span data-stu-id="aaea8-566">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel and loop options can be configured.</span></span></summary>
        <returns><span data-ttu-id="aaea8-567">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-567">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-568">Der `body` Delegat wird einmal für jedes Element in der `source` Enumerable aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-568">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="aaea8-569">Sie wird mit dem aktuellen Element als Parameter bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-569">It is provided with the current element as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-570">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-570">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-571">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-571">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-572">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-572">-or-</span></span> 
<span data-ttu-id="aaea8-573">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-573">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-574">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-574">-or-</span></span> 
<span data-ttu-id="aaea8-575">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-575">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-576">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-576">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-577">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-577">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-578">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-578">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As OrderablePartitioner(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, Long, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-579">Der Typ der Elemente in <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-579">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="aaea8-580">Der Typ der lokalen Thread-Daten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-580">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-581">Der sortierbare Partitionierer, der die ursprüngliche Datenquelle enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-581">The orderable partitioner that contains the original data source.</span></span></param>
        <param name="localInit"><span data-ttu-id="aaea8-582">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-582">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-583">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-583">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="aaea8-584">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-584">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="aaea8-585">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit Thread-lokalen Daten für einen <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-585">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-586">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-586">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-587">Diese Überladung wird für Szenarien bereitgestellt, in denen Sie das Standard Partitionierungsschema außer Kraft setzen möchten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-587">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="aaea8-588">Kleine Schleifen Texte können z. b. von der Partitionierung des Bereichs profitieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-588">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="aaea8-589">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A> -Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-589">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="aaea8-590">Weitere Informationen finden Sie unter [benutzerdefinierte Partitionierer für PLINQ und TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) und Gewusst [wie: Implementieren dynamischer Partitionen](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="aaea8-590">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="aaea8-591">Der `localInit` Delegat wird einmal für jede Aufgabe aufgerufen, die an der Ausführung der Schleife beteiligt ist, und gibt den anfänglichen lokalen Zustand für jede dieser Aufgaben zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-591">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="aaea8-592">Diese anfänglichen Zustände werden an die ersten `body` Aufrufe der einzelnen Aufgaben weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="aaea8-592">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="aaea8-593">Anschließend gibt jeder nachfolgende Text Aufruf einen möglicherweise geänderten Zustandswert zurück, der an den nächsten Text Aufruf weitergeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-593">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="aaea8-594">Schließlich gibt der letzte Text Aufruf für jede Aufgabe einen Zustandswert zurück, der an den `localFinally` Delegaten weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-594">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="aaea8-595">Der `localFinally` Delegat wird einmal pro Aufgabe aufgerufen, um eine abschließende Aktion für den lokalen Zustand jeder Aufgabe auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-595">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="aaea8-596">Dieser Delegat kann gleichzeitig für mehrere Aufgaben aufgerufen werden. Daher müssen Sie den Zugriff auf alle freigegebenen Variablen synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-596">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="aaea8-597">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> -Methode verwendet möglicherweise mehr Tasks als Threads im Laufe der Lebensdauer ihrer Ausführung, da vorhandene Aufgaben vollständig ausgeführt werden und durch neue Aufgaben ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-597">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="aaea8-598">Dadurch erhält das zugrunde <xref:System.Threading.Tasks.TaskScheduler> liegende Objekt die Möglichkeit, Threads hinzuzufügen, zu ändern oder zu entfernen, die die Schleife bedienen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-598">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-599">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-599">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-600">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-600">-or-</span></span> 
<span data-ttu-id="aaea8-601">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-601">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-602">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-602">-or-</span></span> 
<span data-ttu-id="aaea8-603">Das <paramref name="localInit" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-603">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-604">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-604">-or-</span></span> 
<span data-ttu-id="aaea8-605">Das <paramref name="localFinally" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-605">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="aaea8-606">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> gibt <see langword="false" /> zurück, oder der Partitionierer gibt die <see langword="null" />-Partitionen zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-606">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-607">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-607">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-608">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-608">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As Partitioner(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-609">Der Typ der Elemente in <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-609">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="aaea8-610">Der Typ der lokalen Thread-Daten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-610">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-611">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-611">The partitioner that contains the original data source.</span></span></param>
        <param name="localInit"><span data-ttu-id="aaea8-612">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-612">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-613">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-613">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="aaea8-614">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-614">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="aaea8-615">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit Thread-lokalen Daten für einen <see cref="T:System.Collections.Concurrent.Partitioner" /> aus. Iterationen können parallel ablaufen. Der Schleifenstatus kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-615">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-616">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-616">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-617">Diese Überladung wird für Szenarien bereitgestellt, in denen Sie das Standard Partitionierungsschema außer Kraft setzen möchten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-617">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="aaea8-618">Kleine Schleifen Texte können z. b. von der Partitionierung des Bereichs profitieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-618">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="aaea8-619">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A> -Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-619">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="aaea8-620">Weitere Informationen finden Sie unter [benutzerdefinierte Partitionierer für PLINQ und TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) und Gewusst [wie: Implementieren dynamischer Partitionen](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="aaea8-620">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="aaea8-621">Der `localInit` Delegat wird für jeden Thread, der an der Ausführung der Schleife teilnimmt, einmal aufgerufen und gibt den anfänglichen lokalen Zustand für jede dieser Aufgaben zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-621">The `localInit` delegate is invoked once for each thread that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="aaea8-622">Diese anfänglichen Zustände werden an die ersten `body` Aufrufe der einzelnen Aufgaben weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="aaea8-622">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="aaea8-623">Anschließend gibt jeder nachfolgende Text Aufruf einen möglicherweise geänderten Zustandswert zurück, der an den nächsten Text Aufruf weitergeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-623">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="aaea8-624">Schließlich gibt der letzte Text Aufruf für jede Aufgabe einen Zustandswert zurück, der an den `localFinally` Delegaten weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-624">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="aaea8-625">Der `localFinally` Delegat wird einmal pro Aufgabe aufgerufen, um eine abschließende Aktion für den lokalen Zustand jeder Aufgabe auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-625">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="aaea8-626">Dieser Delegat kann gleichzeitig für mehrere Aufgaben aufgerufen werden. Daher müssen Sie den Zugriff auf alle freigegebenen Variablen synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-626">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="aaea8-627">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> -Methode verwendet möglicherweise mehr Tasks als Threads im Laufe der Lebensdauer ihrer Ausführung, da vorhandene Aufgaben vollständig ausgeführt werden und durch neue Aufgaben ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-627">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="aaea8-628">Dadurch erhält das zugrunde <xref:System.Threading.Tasks.TaskScheduler> liegende Objekt die Möglichkeit, Threads hinzuzufügen, zu ändern oder zu entfernen, die die Schleife bedienen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-628">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-629">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-629">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-630">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-630">-or-</span></span> 
<span data-ttu-id="aaea8-631">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-631">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-632">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-632">-or-</span></span> 
<span data-ttu-id="aaea8-633">Das <paramref name="localInit" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-633">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-634">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-634">-or-</span></span> 
<span data-ttu-id="aaea8-635">Das <paramref name="localFinally" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-635">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="aaea8-636">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> gibt <see langword="false" /> zurück, oder der Partitionierer gibt die <see langword="null" />-Partitionen zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-636">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-637">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-637">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-638">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-638">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As IEnumerable(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, Long, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-639">Der Datentyp in der Quelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-639">The type of the data in the source.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="aaea8-640">Der Typ der lokalen Thread-Daten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-640">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-641">Eine auflistbare Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-641">An enumerable data source.</span></span></param>
        <param name="localInit"><span data-ttu-id="aaea8-642">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-642">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-643">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-643">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="aaea8-644">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-644">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="aaea8-645">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit Thread-lokalen Daten für einen <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Der Schleifenstatus kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-645">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-646">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-646">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-647">Der `body` Delegat wird einmal für jedes Element in der `source` Enumerable aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-647">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="aaea8-648">Sie wird mit den folgenden Parametern bereitgestellt: das aktuelle Element <xref:System.Threading.Tasks.ParallelLoopState> , eine-Instanz, die verwendet werden kann, um die Schleife vorzeitig abzubrechen, den Index<xref:System.Int64>des aktuellen Elements () und einen lokalen Zustand, der von Iterationen gemeinsam genutzt werden kann, die ausführen. im gleichen Thread.</span><span class="sxs-lookup"><span data-stu-id="aaea8-648">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, the current element's index (<xref:System.Int64>), and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="aaea8-649">Der `localInit` Delegat wird einmal für jede Aufgabe aufgerufen, die an der Ausführung der Schleife beteiligt ist, und gibt den anfänglichen lokalen Zustand für jede dieser Aufgaben zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-649">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="aaea8-650">Diese anfänglichen Zustände werden an die ersten `body` Aufrufe der einzelnen Aufgaben weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="aaea8-650">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="aaea8-651">Anschließend gibt jeder nachfolgende Text Aufruf einen möglicherweise geänderten Zustandswert zurück, der an den nächsten Text Aufruf weitergeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-651">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="aaea8-652">Schließlich gibt der letzte Text Aufruf für jede Aufgabe einen Zustandswert zurück, der an den `localFinally` Delegaten weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-652">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="aaea8-653">Der `localFinally` Delegat wird einmal pro Aufgabe aufgerufen, um eine abschließende Aktion für den lokalen Zustand jeder Aufgabe auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-653">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="aaea8-654">Dieser Delegat kann gleichzeitig für mehrere Aufgaben aufgerufen werden. Daher müssen Sie den Zugriff auf alle freigegebenen Variablen synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-654">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="aaea8-655">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> -Methode verwendet möglicherweise mehr Tasks als Threads im Laufe der Lebensdauer ihrer Ausführung, da vorhandene Aufgaben vollständig ausgeführt werden und durch neue Aufgaben ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-655">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="aaea8-656">Dadurch erhält das zugrunde <xref:System.Threading.Tasks.TaskScheduler> liegende Objekt die Möglichkeit, Threads hinzuzufügen, zu ändern oder zu entfernen, die die Schleife bedienen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-656">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-657">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-657">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-658">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-658">-or-</span></span> 
<span data-ttu-id="aaea8-659">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-659">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-660">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-660">-or-</span></span> 
<span data-ttu-id="aaea8-661">Das <paramref name="localInit" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-661">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-662">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-662">-or-</span></span> 
<span data-ttu-id="aaea8-663">Das <paramref name="localFinally" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-663">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-664">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-664">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-665">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-665">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As IEnumerable(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-666">Der Datentyp in der Quelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-666">The type of the data in the source.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="aaea8-667">Der Typ der lokalen Thread-Daten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-667">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-668">Eine auflistbare Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-668">An enumerable data source.</span></span></param>
        <param name="localInit"><span data-ttu-id="aaea8-669">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-669">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-670">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-670">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="aaea8-671">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-671">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="aaea8-672">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit Thread-lokalen Daten für einen <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Der Schleifenstatus kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-672">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-673">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-673">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-674">Der `body` Delegat wird einmal für jedes Element in der `source` Enumerable aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-674">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="aaea8-675">Sie wird mit den folgenden Parametern bereitgestellt: das aktuelle Element <xref:System.Threading.Tasks.ParallelLoopState> , eine-Instanz, die verwendet werden kann, um die Schleife vorzeitig zu verlassen, und ein lokaler Zustand, der von Iterationen gemeinsam genutzt werden kann, die im selben Thread ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-675">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="aaea8-676">Der `localInit` Delegat wird einmal für jede Aufgabe aufgerufen, die an der Ausführung der Schleife beteiligt ist, und gibt den anfänglichen lokalen Zustand für jede dieser Aufgaben zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-676">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="aaea8-677">Diese anfänglichen Zustände werden an die ersten `body` Aufrufe der einzelnen Aufgaben weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="aaea8-677">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="aaea8-678">Anschließend gibt jeder nachfolgende Text Aufruf einen möglicherweise geänderten Zustandswert zurück, der an den nächsten Text Aufruf weitergeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-678">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="aaea8-679">Schließlich gibt der letzte Text Aufruf für jede Aufgabe einen Zustandswert zurück, der an den `localFinally` Delegaten weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-679">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="aaea8-680">Der `localFinally` Delegat wird einmal pro Thread aufgerufen, um eine abschließende Aktion für den lokalen Zustand jeder Aufgabe auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-680">The `localFinally` delegate is invoked once per thread to perform a final action on each task's local state.</span></span> <span data-ttu-id="aaea8-681">Dieser Delegat kann gleichzeitig für mehrere Aufgaben aufgerufen werden. Daher müssen Sie den Zugriff auf alle freigegebenen Variablen synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-681">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="aaea8-682">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> -Methode verwendet möglicherweise mehr Tasks als Threads im Laufe der Lebensdauer ihrer Ausführung, da vorhandene Aufgaben vollständig ausgeführt werden und durch neue Aufgaben ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-682">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="aaea8-683">Dadurch erhält das zugrunde <xref:System.Threading.Tasks.TaskScheduler> liegende Objekt die Möglichkeit, Threads hinzuzufügen, zu ändern oder zu entfernen, die die Schleife bedienen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-683">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaea8-684">Im folgenden Beispiel wird gezeigt, wie eine <xref:System.Threading.Tasks.Parallel.ForEach%2A> Methode mit lokalem Zustand verwendet wird:</span><span class="sxs-lookup"><span data-stu-id="aaea8-684">The following example shows how to use a <xref:System.Threading.Tasks.Parallel.ForEach%2A> method with local state:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelforeach.cs#02)]
 [!code-vb[System.Threading.Tasks.Parallel#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelforeach.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-685">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-685">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-686">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-686">-or-</span></span> 
<span data-ttu-id="aaea8-687">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-687">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-688">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-688">-or-</span></span> 
<span data-ttu-id="aaea8-689">Das <paramref name="localInit" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-689">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-690">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-690">-or-</span></span> 
<span data-ttu-id="aaea8-691">Das <paramref name="localFinally" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-691">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-692">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-692">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-693">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-693">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-694">Der Typ der Elemente in <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-694">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="aaea8-695">Der Typ der lokalen Thread-Daten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-695">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-696">Der sortierbare Partitionierer, der die ursprüngliche Datenquelle enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-696">The orderable partitioner that contains the original data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-697">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-697">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="aaea8-698">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-698">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-699">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-699">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="aaea8-700">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-700">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="aaea8-701">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit 64-Bit-Indizes und Thread-lokalen Daten für einen <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-701">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with 64-bit indexes and  with thread-local data on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel , loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-702">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-702">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-703">Diese Überladung wird für Szenarien bereitgestellt, in denen Sie das Standard Partitionierungsschema außer Kraft setzen möchten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-703">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="aaea8-704">Kleine Schleifen Texte können z. b. von der Partitionierung des Bereichs profitieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-704">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="aaea8-705">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A> -Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-705">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="aaea8-706">Weitere Informationen finden Sie unter [benutzerdefinierte Partitionierer für PLINQ und TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) und Gewusst [wie: Implementieren dynamischer Partitionen](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="aaea8-706">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="aaea8-707">Der `localInit` Delegat wird einmal für jede Aufgabe aufgerufen, die an der Ausführung der Schleife beteiligt ist, und gibt den anfänglichen lokalen Zustand für jede dieser Aufgaben zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-707">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="aaea8-708">Diese anfänglichen Zustände werden an die ersten `body` Aufrufe der einzelnen Aufgaben weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="aaea8-708">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="aaea8-709">Anschließend gibt jeder nachfolgende Text Aufruf einen möglicherweise geänderten Zustandswert zurück, der an den nächsten Text Aufruf weitergeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-709">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="aaea8-710">Schließlich gibt der letzte Text Aufruf für jeden Thread einen Zustandswert zurück, der an den `localFinally` Delegaten weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-710">Finally, the last body invocation on each thread returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="aaea8-711">Der `localFinally` Delegat wird einmal pro Aufgabe aufgerufen, um eine abschließende Aktion für den lokalen Zustand jeder Aufgabe auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-711">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="aaea8-712">Dieser Delegat kann gleichzeitig für mehrere Aufgaben aufgerufen werden. Daher müssen Sie den Zugriff auf alle freigegebenen Variablen synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-712">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="aaea8-713">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> -Methode verwendet möglicherweise mehr Tasks als Threads im Laufe der Lebensdauer ihrer Ausführung, da vorhandene Aufgaben vollständig ausgeführt werden und durch neue Aufgaben ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-713">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="aaea8-714">Dadurch erhält das zugrunde <xref:System.Threading.Tasks.TaskScheduler> liegende Objekt die Möglichkeit, Threads hinzuzufügen, zu ändern oder zu entfernen, die die Schleife bedienen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-714">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-715">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-715">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-716">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-716">-or-</span></span> 
<span data-ttu-id="aaea8-717">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-717">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-718">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-718">-or-</span></span> 
<span data-ttu-id="aaea8-719">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-719">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-720">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-720">-or-</span></span> 
<span data-ttu-id="aaea8-721">Der <paramref name="localInit" /> oder das <paramref name="localFinally" />-Argument ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-721">The <paramref name="localInit" /> or <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="aaea8-722">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> gibt <see langword="false" /> zurück, oder der Partitionierer gibt die <see langword="null" />-Partitionen zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-722">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-723">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-723">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-724">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-724">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-725">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-725">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-726">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-726">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-727">Der Typ der Elemente in <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-727">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="aaea8-728">Der Typ der lokalen Thread-Daten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-728">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-729">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-729">The partitioner that contains the original data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-730">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-730">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="aaea8-731">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-731">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-732">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-732">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="aaea8-733">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-733">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="aaea8-734">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit Thread-lokalen Daten für einen <see cref="T:System.Collections.Concurrent.Partitioner" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-734">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation  with thread-local data on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-735">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-735">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-736">Diese Überladung wird für Szenarien bereitgestellt, in denen Sie das Standard Partitionierungsschema außer Kraft setzen möchten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-736">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="aaea8-737">Kleine Schleifen Texte können z. b. von der Partitionierung des Bereichs profitieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-737">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="aaea8-738">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A> -Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-738">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="aaea8-739">Diese Überladung wird für Szenarien mit kleinen Schleifen Körpern bereitgestellt, die von der statischen Bereichs Partitionierung profitieren können.</span><span class="sxs-lookup"><span data-stu-id="aaea8-739">This overload is provided for scenarios with small loop bodies that might benefit from static range partitioning.</span></span> <span data-ttu-id="aaea8-740">Partitionierer müssen dynamische Partitionen unterstützen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-740">Partitioners must support dynamic partitions.</span></span>  <span data-ttu-id="aaea8-741">Weitere Informationen finden Sie unter [benutzerdefinierte Partitionierer für PLINQ und TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) und Gewusst [wie: Implementieren dynamischer Partitionen](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="aaea8-741">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="aaea8-742">Der `localInit` Delegat wird einmal für jede Aufgabe aufgerufen, die an der Ausführung der Schleife beteiligt ist, und gibt den anfänglichen lokalen Zustand für jede dieser Aufgaben zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-742">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="aaea8-743">Diese anfänglichen Zustände werden an die ersten `body` Aufrufe der einzelnen Aufgaben weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="aaea8-743">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="aaea8-744">Anschließend gibt jeder nachfolgende Text Aufruf einen möglicherweise geänderten Zustandswert zurück, der an den nächsten Text Aufruf weitergeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-744">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="aaea8-745">Schließlich gibt der letzte Text Aufruf für jede Aufgabe einen Zustandswert zurück, der an den `localFinally` Delegaten weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-745">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="aaea8-746">Der `localFinally` Delegat wird einmal pro Aufgabe aufgerufen, um eine abschließende Aktion für den lokalen Zustand jeder Aufgabe auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-746">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="aaea8-747">Dieser Delegat kann gleichzeitig für mehrere Aufgaben aufgerufen werden. Daher müssen Sie den Zugriff auf alle freigegebenen Variablen synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-747">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="aaea8-748">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> -Methode verwendet möglicherweise mehr Tasks als Threads im Laufe der Lebensdauer ihrer Ausführung, da vorhandene Aufgaben vollständig ausgeführt werden und durch neue Aufgaben ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-748">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="aaea8-749">Dadurch erhält das zugrunde <xref:System.Threading.Tasks.TaskScheduler> liegende Objekt die Möglichkeit, Threads hinzuzufügen, zu ändern oder zu entfernen, die die Schleife bedienen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-749">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-750">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-750">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-751">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-751">-or-</span></span> 
<span data-ttu-id="aaea8-752">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-752">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-753">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-753">-or-</span></span> 
<span data-ttu-id="aaea8-754">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-754">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-755">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-755">-or-</span></span> 
<span data-ttu-id="aaea8-756">Das <paramref name="localInit" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-756">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-757">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-757">-or-</span></span> 
<span data-ttu-id="aaea8-758">Das <paramref name="localFinally" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-758">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="aaea8-759">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> gibt <see langword="false" /> zurück, oder der Partitionierer gibt die <see langword="null" />-Partitionen zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-759">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-760">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-760">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-761">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-761">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-762">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-762">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-763">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-763">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-764">Der Datentyp in der Quelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-764">The type of the data in the source.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="aaea8-765">Der Typ der lokalen Thread-Daten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-765">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-766">Eine auflistbare Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-766">An enumerable data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-767">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-767">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="aaea8-768">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-768">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-769">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-769">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="aaea8-770">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-770">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="aaea8-771">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit Thread-lokalen Daten und 64-Bit-Indizes für einen <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-771">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data and 64-bit indexes on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-772">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-772">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-773">Der `body` Delegat wird einmal für jedes Element in der `source` Enumerable aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-773">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="aaea8-774">Sie wird mit den folgenden Parametern bereitgestellt: das aktuelle Element <xref:System.Threading.Tasks.ParallelLoopState> , eine-Instanz, die verwendet werden kann, um die Schleife vorzeitig abzubrechen, den Index<xref:System.Int64>des aktuellen Elements () und einen lokalen Zustand, der von Iterationen gemeinsam genutzt werden kann, die ausführen. im gleichen Thread.</span><span class="sxs-lookup"><span data-stu-id="aaea8-774">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, the current element's index (<xref:System.Int64>), and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="aaea8-775">Der `localInit` Delegat wird einmal für jede Aufgabe aufgerufen, die an der Ausführung der Schleife beteiligt ist, und gibt den anfänglichen lokalen Zustand für jede dieser Aufgaben zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-775">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="aaea8-776">Diese anfänglichen Zustände werden an die ersten `body` Aufrufe der einzelnen Aufgaben weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="aaea8-776">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="aaea8-777">Anschließend gibt jeder nachfolgende Text Aufruf einen möglicherweise geänderten Zustandswert zurück, der an den nächsten Text Aufruf weitergeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-777">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="aaea8-778">Schließlich gibt der letzte Text Aufruf für jede Aufgabe einen Zustandswert zurück, der an den `localFinally` Delegaten weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-778">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="aaea8-779">Der `localFinally` Delegat wird einmal pro Thread aufgerufen, um eine abschließende Aktion für den lokalen Zustand jeder Aufgabe auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-779">The `localFinally` delegate is invoked once per thread to perform a final action on each task's local state.</span></span> <span data-ttu-id="aaea8-780">Dieser Delegat kann gleichzeitig für mehrere Aufgaben aufgerufen werden. Daher müssen Sie den Zugriff auf alle freigegebenen Variablen synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-780">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="aaea8-781">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> -Methode verwendet möglicherweise mehr Tasks als Threads im Laufe der Lebensdauer ihrer Ausführung, da vorhandene Aufgaben vollständig ausgeführt werden und durch neue Aufgaben ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-781">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="aaea8-782">Dadurch erhält das zugrunde <xref:System.Threading.Tasks.TaskScheduler> liegende Objekt die Möglichkeit, Threads hinzuzufügen, zu ändern oder zu entfernen, die die Schleife bedienen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-782">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-783">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-783">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-784">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-784">-or-</span></span> 
<span data-ttu-id="aaea8-785">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-785">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-786">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-786">-or-</span></span> 
<span data-ttu-id="aaea8-787">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-787">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-788">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-788">-or-</span></span> 
<span data-ttu-id="aaea8-789">Das <paramref name="localInit" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-789">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-790">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-790">-or-</span></span> 
<span data-ttu-id="aaea8-791">Das <paramref name="localFinally" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-791">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-792">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-792">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-793">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-793">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-794">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-794">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-795">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-795">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="aaea8-796">Der Datentyp in der Quelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-796">The type of the data in the source.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="aaea8-797">Der Typ der lokalen Thread-Daten.</span><span class="sxs-lookup"><span data-stu-id="aaea8-797">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="aaea8-798">Eine auflistbare Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="aaea8-798">An enumerable data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="aaea8-799">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-799">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="aaea8-800">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-800">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="aaea8-801">Der Delegat, der einmal pro Iteration aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-801">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="aaea8-802">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-802">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="aaea8-803">Führt einen <see langword="foreach" />-Vorgang (<see langword="For Each" /> in Visual Basic) mit threadlokalen Daten für einen <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann überwacht und angepasst werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-803">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="aaea8-804">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="aaea8-804">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-805">Der `body` Delegat wird einmal für jedes Element in der `source` Enumerable aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-805">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="aaea8-806">Sie wird mit den folgenden Parametern bereitgestellt: das aktuelle Element <xref:System.Threading.Tasks.ParallelLoopState> , eine-Instanz, die verwendet werden kann, um die Schleife vorzeitig zu verlassen, und ein lokaler Zustand, der von Iterationen gemeinsam genutzt werden kann, die im selben Thread ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-806">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="aaea8-807">Der `localInit` Delegat wird einmal für jede Aufgabe aufgerufen, die an der Ausführung der Schleife beteiligt ist, und gibt den anfänglichen lokalen Zustand für jede dieser Aufgaben zurück.</span><span class="sxs-lookup"><span data-stu-id="aaea8-807">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="aaea8-808">Diese anfänglichen Zustände werden an die ersten `body` Aufrufe der einzelnen Aufgaben weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="aaea8-808">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="aaea8-809">Anschließend gibt jeder nachfolgende Text Aufruf einen möglicherweise geänderten Zustandswert zurück, der an den nächsten Text Aufruf weitergeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-809">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="aaea8-810">Schließlich gibt der letzte Text Aufruf für jede Aufgabe einen Zustandswert zurück, der an den `localFinally` Delegaten weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-810">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="aaea8-811">Der `localFinally` Delegat wird einmal pro Thread aufgerufen, um eine abschließende Aktion für den lokalen Zustand jeder Aufgabe auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-811">The `localFinally` delegate is invoked once per thread to perform a final action on each task's local state.</span></span> <span data-ttu-id="aaea8-812">Dieser Delegat kann gleichzeitig für mehrere Aufgaben aufgerufen werden. Daher müssen Sie den Zugriff auf alle freigegebenen Variablen synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="aaea8-812">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="aaea8-813">Die <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> -Methode verwendet möglicherweise mehr Tasks als Threads im Laufe der Lebensdauer ihrer Ausführung, da vorhandene Aufgaben vollständig ausgeführt werden und durch neue Aufgaben ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-813">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="aaea8-814">Dadurch erhält das zugrunde <xref:System.Threading.Tasks.TaskScheduler> liegende Objekt die Möglichkeit, Threads hinzuzufügen, zu ändern oder zu entfernen, die die Schleife bedienen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-814">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-815">Das <paramref name="source" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-815">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-816">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-816">-or-</span></span> 
<span data-ttu-id="aaea8-817">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-817">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-818">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-818">-or-</span></span> 
<span data-ttu-id="aaea8-819">Das <paramref name="body" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-819">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-820">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-820">-or-</span></span> 
<span data-ttu-id="aaea8-821">Das <paramref name="localInit" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-821">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-822">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-822">-or-</span></span> 
<span data-ttu-id="aaea8-823">Das <paramref name="localFinally" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-823">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-824">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-824">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-825">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-825">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-826">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</span><span class="sxs-lookup"><span data-stu-id="aaea8-826">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="aaea8-827">Parallele Schleifen</span><span class="sxs-lookup"><span data-stu-id="aaea8-827">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aaea8-828">Führt jede der bereitgestellten Aktionen aus (möglicherweise parallel).</span><span class="sxs-lookup"><span data-stu-id="aaea8-828">Executes each of the provided actions, possibly in parallel.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static void Invoke (params Action[] actions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Invoke(class System.Action[] actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Invoke (ParamArray actions As Action())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Invoke(... cli::array &lt;Action ^&gt; ^ actions);" />
      <MemberSignature Language="F#" Value="static member Invoke : Action[] -&gt; unit" Usage="System.Threading.Tasks.Parallel.Invoke actions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actions" Type="System.Action[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="actions"><span data-ttu-id="aaea8-829">Ein Array auszuführender <see cref="T:System.Action" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-829">An array of <see cref="T:System.Action" /> to execute.</span></span></param>
        <summary><span data-ttu-id="aaea8-830">Führt jede der bereitgestellten Aktionen aus (möglicherweise parallel).</span><span class="sxs-lookup"><span data-stu-id="aaea8-830">Executes each of the provided actions, possibly in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-831">Diese Methode kann verwendet werden, um eine Reihe von Vorgängen (möglicherweise parallel) auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-831">This method can be used to execute a set of operations, potentially in parallel.</span></span>  
  
 <span data-ttu-id="aaea8-832">Die Reihenfolge, in der die Vorgänge ausgeführt werden, oder ob Sie parallel ausgeführt werden, wird nicht garantiert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-832">No guarantees are made about the order in which the operations execute or whether they execute in parallel.</span></span> <span data-ttu-id="aaea8-833">Diese Methode gibt nicht zurück, bis alle bereitgestellten Vorgänge abgeschlossen sind, unabhängig davon, ob die Beendigung aufgrund der normalen oder außergewöhnlichen Beendigung erfolgt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-833">This method does not return until each of the provided operations has completed, regardless of whether completion occurs due to normal or exceptional termination.</span></span>  
  
 <span data-ttu-id="aaea8-834">Weitere Informationen finden Sie unter [Gewusst wie: Ausführen von parallelen Aufgaben mithilfe von Parallel.Invoke](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md).</span><span class="sxs-lookup"><span data-stu-id="aaea8-834">For more information, see [How to: Use Parallel.Invoke to Execute Parallel Operations](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaea8-835">In diesem Beispiel wird veranschaulicht, wie <xref:System.Threading.Tasks.Parallel.Invoke%2A> die-Methode mit anderen Methoden, anonymen Delegaten und Lambda-Ausdrücken verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="aaea8-835">This example demonstrates how to use the <xref:System.Threading.Tasks.Parallel.Invoke%2A> method with other methods, anonymous delegates, and lambda expressions.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelinvoke.cs#01)]
 [!code-vb[System.Threading.Tasks.Parallel#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelinvoke.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-836">Das <paramref name="actions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-836">The <paramref name="actions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-837">Diese Ausnahme wird ausgelöst, wenn eine beliebige Aktion im <paramref name="actions" />-Array eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="aaea8-837">The exception that is thrown when any action in the <paramref name="actions" /> array throws an exception.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="aaea8-838">Ein <paramref name="actions" />-Array enthält ein <see langword="null" />-Element.</span><span class="sxs-lookup"><span data-stu-id="aaea8-838">The <paramref name="actions" /> array contains a <see langword="null" /> element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static void Invoke (System.Threading.Tasks.ParallelOptions parallelOptions, params Action[] actions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Invoke(class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action[] actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Invoke(System::Threading::Tasks::ParallelOptions ^ parallelOptions, ... cli::array &lt;Action ^&gt; ^ actions);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Threading.Tasks.ParallelOptions * Action[] -&gt; unit" Usage="System.Threading.Tasks.Parallel.Invoke (parallelOptions, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="actions" Type="System.Action[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parallelOptions"><span data-ttu-id="aaea8-839">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-839">An object that configures the behavior of this operation.</span></span></param>
        <param name="actions"><span data-ttu-id="aaea8-840">Ein Array auszuführender Aktionen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-840">An array of actions to execute.</span></span></param>
        <summary><span data-ttu-id="aaea8-841">Führt die einzelnen bereitgestellten Aktionen (nach Möglichkeit parallel) aus, es sei denn, der Vorgang wird vom Benutzer abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-841">Executes each of the provided actions, possibly in parallel, unless the operation is cancelled by the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaea8-842">Diese Methode kann verwendet werden, um eine Reihe von Vorgängen (möglicherweise parallel) auszuführen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-842">This method can be used to execute a set of operations, potentially in parallel.</span></span> <span data-ttu-id="aaea8-843">Das mit der <xref:System.Threading.Tasks.ParallelOptions> -Struktur übergebenen Abbruch Token ermöglicht dem Aufrufer, den gesamten Vorgang abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="aaea8-843">The cancellation token passed in with the <xref:System.Threading.Tasks.ParallelOptions> structure enables the caller to cancel the entire operation.</span></span> <span data-ttu-id="aaea8-844">Weitere Informationen finden Sie unter [Abbruch in verwalteten Threads](~/docs/standard/threading/cancellation-in-managed-threads.md).</span><span class="sxs-lookup"><span data-stu-id="aaea8-844">For more information, see [Cancellation in Managed Threads](~/docs/standard/threading/cancellation-in-managed-threads.md).</span></span>  
  
 <span data-ttu-id="aaea8-845">Die Reihenfolge, in der die Vorgänge ausgeführt werden, oder ob Sie parallel ausgeführt werden, wird nicht garantiert.</span><span class="sxs-lookup"><span data-stu-id="aaea8-845">No guarantees are made about the order in which the operations execute or whether they execute in parallel.</span></span> <span data-ttu-id="aaea8-846">Diese Methode gibt nicht zurück, bis alle bereitgestellten Vorgänge abgeschlossen sind, unabhängig davon, ob die Beendigung aufgrund der normalen oder außergewöhnlichen Beendigung erfolgt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-846">This method does not return until each of the provided operations has completed, regardless of whether completion occurs due to normal or exceptional termination.</span></span>  
  
 <span data-ttu-id="aaea8-847">Weitere Informationen finden Sie unter [Gewusst wie: Ausführen von parallelen Aufgaben mithilfe von Parallel.Invoke](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md).</span><span class="sxs-lookup"><span data-stu-id="aaea8-847">For more information, see [How to: Use Parallel.Invoke to Execute Parallel Operations](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="aaea8-848">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> ist festgelegt.</span><span class="sxs-lookup"><span data-stu-id="aaea8-848">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> is set.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaea8-849">Das <paramref name="actions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-849">The <paramref name="actions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="aaea8-850">- oder -</span><span class="sxs-lookup"><span data-stu-id="aaea8-850">-or-</span></span> 
<span data-ttu-id="aaea8-851">Das <paramref name="parallelOptions" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aaea8-851">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="aaea8-852">Diese Ausnahme wird ausgelöst, wenn eine beliebige Aktion im <paramref name="actions" />-Array eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="aaea8-852">The exception that is thrown when any action in the <paramref name="actions" /> array throws an exception.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="aaea8-853">Ein <paramref name="actions" />-Array enthält ein <see langword="null" />-Element.</span><span class="sxs-lookup"><span data-stu-id="aaea8-853">The <paramref name="actions" /> array contains a <see langword="null" /> element.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="aaea8-854">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</span><span class="sxs-lookup"><span data-stu-id="aaea8-854">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
