<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Parallel.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c7a1e65ce8ea63b5af31713b9765bbef1a97a84a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c7a1e65ce8ea63b5af31713b9765bbef1a97a84a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Parallel">
          <source>Provides support for parallel loops and regions.</source>
          <target state="translated">Stellt Unterstützung für parallele Schleifen und Bereiche bereit.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Parallel">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel&gt;</ph> class provides library-based data parallel replacements for common operations such as for loops, for each loops, and execution of a set of statements.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel&gt;</ph> -Klasse stellt die Bibliothek kennwortbasierten Datenschutzdienst parallele Ersetzungen bei allgemeinen Vorgängen z. B. für Schleifen, für jede Schleifen und die Ausführung einer Reihe von Anweisungen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Parallel">
          <source>This example demonstrates several approaches to implementing a parallel loop using multiple language constructs.</source>
          <target state="translated">Dieses Beispiel zeigt mehrere Ansätze für die Implementierung einer parallelen Schleife mit mehreren Sprachkonstrukte.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Parallel">
          <source>All public and protected members of <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Parallel" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">Alle öffentlichen und geschützten Member der <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Parallel" /&gt;</ph> sind threadsicher und können von mehreren Threads gleichzeitig verwendet werden.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Parallel">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop in which iterations may run in parallel.</source>
          <target state="translated">Führt eine <ph id="ph1">&lt;see langword="for" /&gt;</ph>-Schleife (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) aus, in der Iterationen parallel ausgeführt werden können.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The start index, inclusive.</source>
          <target state="translated">Der Startindex, einschließend.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The end index, exclusive.</source>
          <target state="translated">Der Endindex, ausschließend.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt eine <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic)-Schleife aus, in der Iterationen parallel ausgeführt werden können und der Status der Schleife beobachtet und bearbeitet werden kann.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>A  structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal für jeden Wert im Iterationsbereich von aufgerufen (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>It is provided with two arguments:</source>
          <target state="translated">Es wird mit zwei Argumenten bereitgestellt:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>An <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value that represents the iteration count.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Int32&gt;</ph> Wert, der die Anzahl der Iterationen darstellt.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>A <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that can be used to break out of the loop prematurely.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, vorzeitig aus der Schleife unterbrechen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> object is created by the compiler; it cannot be instantiated in user code.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> Objekt wird vom Compiler erstellt; kann nicht im Benutzercode nicht instanziiert werden.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>Calling the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> method informs the <ph id="ph2">`for`</ph> operation that iterations after the current one don't have to execute.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> -Methode informiert den <ph id="ph2">`for`</ph> Vorgang, die Iterationen nach der aktuellen ausgeführt haben.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>However, all iterations before the current one will still have to be executed if they haven't already.</source>
          <target state="translated">Allerdings wird alle Iterationen vor der aktuellen eine, muss ausgeführt werden, sofern sie noch nicht geschehen.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>Therefore, calling <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> is similar to using a break operation within a conventional <ph id="ph2">`for`</ph> loop in a language like C#, but it is not a perfect substitute: For example, there is no guarantee that iterations after the current one will definitely not execute.</source>
          <target state="translated">Aus diesem Grund Aufrufen <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> ähnelt der Verwendung einer Unterbrechungsoperation innerhalb einer herkömmlichen <ph id="ph2">`for`</ph> Schleife in einer anderen Sprache wie c#, aber es ist kein perfekter Ersatz: Z. B. besteht keine Garantie, die von Iterationen nach der aktuellen definitiv nicht ausgeführt werden.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>If executing all iterations before the current one is not necessary, use the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> method instead of using <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>.</source>
          <target state="translated">Wenn alle Iterationen ausführen vor der aktuellen Aktivität nicht erforderlich ist, verwenden Sie die <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> Methode statt <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>Calling <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> informs the <ph id="ph2">`for`</ph> loop that it may abandon all remaining iterations, regardless of whether they're before or after the current iteration, because all required work will have already been completed.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> informiert den <ph id="ph2">`for`</ph> Schleife, dass es möglicherweise Sie alle verbleibende Iterationen verwerfen, unabhängig davon, ob sie vor oder nach der aktuellen Iteration, da alle sind erforderliche Arbeit wird bereits abgeschlossen.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>However, as with <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>, there are no guarantees regarding which other iterations will not execute.</source>
          <target state="translated">Da jedoch mit <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>, es gibt keine Garantien hinsichtlich der anderen Iterationen nicht ausgeführt werden.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>If a loop is ended prematurely, the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult&gt;</ph> structure that is returned will contain relevant information about the loop's completion.</source>
          <target state="translated">Wenn eine Schleife vorzeitig beendet wird die <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult&gt;</ph> -Struktur, die zurückgegeben werden relevante Informationen zum Abschluss der Schleife enthält.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, the method returns immediately without performing any iterations.</source>
          <target state="translated">Wenn <ph id="ph1">`fromInclusive`</ph> ist größer als oder gleich <ph id="ph2">`toExclusive`</ph>, die Methode kehrt sofort zurück, ohne irgendwelche Iterationen auszuführen.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The following example executes up to 100 iterations of a loop in parallel.</source>
          <target state="translated">Im folgenden Beispiel werden bis zu 100 Iterationen einer Schleife parallel ausgeführt.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>Each iteration pauses for a random interval from 1 to 1,000 milliseconds.</source>
          <target state="translated">Jede Iteration hält für einem zufällig gewählten Zeitpunkt zwischen 1 und 1.000 Millisekunden steht.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>A randomly generated value determines on which iteration of the loop the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> method is called.</source>
          <target state="translated">Ein zufällig generierter Wert wird bestimmt, auf welche Iteration der Schleife die <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> -Methode aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>As the output from the example shows, no iterations whose index is greater than the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType&gt;</ph> property value start after the call to the <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Wie die Ausgabe des Beispiels zeigt, keine Iterationen, deren Index größer als ist, die <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType&gt;</ph> Start des Eigenschaft-Wert nach dem Aufruf der <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>Because iterations of the loop are still likely to be executing when the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> method is called, each iteration calls the <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration%2A?displayProperty=nameWithType&gt;</ph> property to check whether another iteration has called the <ph id="ph3">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Da Iterationen der Schleife, die wahrscheinlich weiterhin ausgeführt wird, wenn sind die <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> -Methode aufgerufen wird, werden Aufrufe von jeder Iteration der <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft zu überprüfen, ob eine andere Iteration aufgerufen hat die <ph id="ph3">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>If  the property value is <ph id="ph1">`true`</ph>, the iteration checks the value of the <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType&gt;</ph> property and, if it is greater than the current iteration's index value, returns immediately.</source>
          <target state="translated">Wenn der Eigenschaftswert ist <ph id="ph1">`true`</ph>, Iteration überprüft den Wert der die <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft und, wenn sie größer als die aktuelle Iteration Indexwert ist, kehrt sofort zurück.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>The start index, inclusive.</source>
          <target state="translated">Der Startindex, einschließend.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>The end index, exclusive.</source>
          <target state="translated">Der Endindex, ausschließend.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop in which iterations may run in parallel.</source>
          <target state="translated">Führt eine <ph id="ph1">&lt;see langword="for" /&gt;</ph>-Schleife (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) aus, in der Iterationen parallel ausgeführt werden können.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal für jeden Wert im Iterationsbereich von aufgerufen (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>It is provided with the iteration count (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>) as a parameter.</source>
          <target state="translated">Es wird bereitgestellt, mit der Anzahl der Szenarioiterationen (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>) als Parameter.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, the method returns immediately without performing any iterations.</source>
          <target state="translated">Wenn <ph id="ph1">`fromInclusive`</ph> ist größer als oder gleich <ph id="ph2">`toExclusive`</ph>, die Methode kehrt sofort zurück, ohne irgendwelche Iterationen auszuführen.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A&gt;</ph> method for 100 invocations of a delegate that generates random byte values and computes their sum.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A&gt;</ph> Methode zum 100 Aufrufe eines Delegaten, die zufälligen Byte generiert Werte ab und berechnet die Summe.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The start index, inclusive.</source>
          <target state="translated">Der Startindex, einschließend.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The end index, exclusive.</source>
          <target state="translated">Der Endindex, ausschließend.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop with 64-bit indexes in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt eine <ph id="ph1">&lt;see langword="for" /&gt;</ph>-Schleife (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) mit 64-Bit-Indizes aus, in der Iterationen parallel ausgeführt werden können und der Zustand der Schleife überwacht und bearbeitet werden kann.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ParallelLoopResult" /&gt;</ph> structure that contains information on what portion of the loop completed.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ParallelLoopResult" /&gt;</ph>-Struktur, die Informationen darüber enthält, welcher Teil der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal für jeden Wert im Iterationsbereich von aufgerufen (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>It is provided with the following parameters: the iteration count (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>), and a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely.</source>
          <target state="translated">Es wird bereitgestellt, mit den folgenden Parametern: die Anzahl der Iterationen (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>), und eine <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, um vorzeitig aus der Schleife unterbrechen.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>Calling the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> method informs the <ph id="ph2">`for`</ph> operation that iterations after the current one don’t have to be executed, but all iterations before the current one do.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> -Methode informiert den <ph id="ph2">`for`</ph> Vorgang, die Iterationen nach der aktuellen Aktivität nicht ausgeführt werden, aber alle Iterationen vor der aktuellen Aktivität führen.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>Therefore, calling Break is similar to using a break operation within a conventional <ph id="ph1">`for`</ph> loop in a language like C#, but it is not a perfect substitute: For example, there is no guarantee that iterations after the current one will definitely not execute.</source>
          <target state="translated">Aus diesem Grund aufrufen Break ähnelt mithilfe eines Break-Vorgangs innerhalb einer herkömmlichen <ph id="ph1">`for`</ph> Schleife in einer anderen Sprache wie c#, aber es ist kein perfekter Ersatz: Z. B. besteht keine Garantie, dass Iterationen nach der aktuellen Aktivität definitiv nicht ausgeführt werden.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>If executing all iterations before the current one is not necessary, use the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> method instead of using <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>.</source>
          <target state="translated">Wenn alle Iterationen ausführen vor der aktuellen Aktivität nicht erforderlich ist, verwenden Sie die <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> Methode statt <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>Calling <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> informs the <ph id="ph2">`for`</ph> loop that it may abandon all remaining iterations, regardless of whether they're before or after the current iteration, because all required work will have already been completed.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> informiert den <ph id="ph2">`for`</ph> Schleife, dass es möglicherweise Sie alle verbleibende Iterationen verwerfen, unabhängig davon, ob sie vor oder nach der aktuellen Iteration, da alle sind erforderliche Arbeit wird bereits abgeschlossen.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>However, as with <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>, there are no guarantees regarding which other iterations will not execute.</source>
          <target state="translated">Da jedoch mit <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>, es gibt keine Garantien hinsichtlich der anderen Iterationen nicht ausgeführt werden.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>If a loop is ended prematurely, the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult&gt;</ph> structure that is returned will contain relevant information about the loop's completion.</source>
          <target state="translated">Wenn eine Schleife vorzeitig beendet wird die <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult&gt;</ph> -Struktur, die zurückgegeben werden relevante Informationen zum Abschluss der Schleife enthält.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, then the method returns immediately without performing any iterations.</source>
          <target state="translated">Wenn <ph id="ph1">`fromInclusive`</ph> ist größer als oder gleich <ph id="ph2">`toExclusive`</ph>, dann die Methode sofort zurück, ohne irgendwelche Iterationen auszuführen.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>The start index, inclusive.</source>
          <target state="translated">Der Startindex, einschließend.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>The end index, exclusive.</source>
          <target state="translated">Der Endindex, ausschließend.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop with 64-bit indexes in which iterations may run in parallel.</source>
          <target state="translated">Führt eine <ph id="ph1">&lt;see langword="for" /&gt;</ph>-Schleife (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) mit 64-Bit-Indizes aus, in der Iterationen parallel ausgeführt werden können.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal für jeden Wert im Iterationsbereich von aufgerufen (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>It is provided with the iteration count (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>) as a parameter.</source>
          <target state="translated">Es wird bereitgestellt, mit der Anzahl der Szenarioiterationen (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>) als Parameter.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, the method returns immediately without performing any iterations.</source>
          <target state="translated">Wenn <ph id="ph1">`fromInclusive`</ph> ist größer als oder gleich <ph id="ph2">`toExclusive`</ph>, die Methode kehrt sofort zurück, ohne irgendwelche Iterationen auszuführen.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The start index, inclusive.</source>
          <target state="translated">Der Startindex, einschließend.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The end index, exclusive.</source>
          <target state="translated">Der Endindex, ausschließend.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt eine <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic)-Schleife aus, in der Iterationen parallel ausgeführt und Schleifenoptionen konfiguriert werden können und wo der Status der Schleife beobachtet und bearbeitet werden kann.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal für jeden Wert im Iterationsbereich von aufgerufen (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>It is provided with the following parameters: the iteration count (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>), and a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely.</source>
          <target state="translated">Es wird bereitgestellt, mit den folgenden Parametern: die Anzahl der Iterationen (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>), und eine <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, um vorzeitig aus der Schleife unterbrechen.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, the method returns immediately without performing any iterations.</source>
          <target state="translated">Wenn <ph id="ph1">`fromInclusive`</ph> ist größer als oder gleich <ph id="ph2">`toExclusive`</ph>, die Methode kehrt sofort zurück, ohne irgendwelche Iterationen auszuführen.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The start index, inclusive.</source>
          <target state="translated">Der Startindex, einschließend.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The end index, exclusive.</source>
          <target state="translated">Der Endindex, ausschließend.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop in which iterations may run in parallel and loop options can be configured.</source>
          <target state="translated">Führt eine <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic)-Schleife aus, in der Iterationen parallel ausgeführt und Schleifenoptionen konfiguriert werden können.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>A  structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal für jeden Wert im Iterationsbereich von aufgerufen (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>It is provided with the iteration count (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>) as a parameter.</source>
          <target state="translated">Es wird bereitgestellt, mit der Anzahl der Szenarioiterationen (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>) als Parameter.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, then the method returns immediately without performing any iterations.</source>
          <target state="translated">Wenn <ph id="ph1">`fromInclusive`</ph> ist größer als oder gleich <ph id="ph2">`toExclusive`</ph>, dann die Methode sofort zurück, ohne irgendwelche Iterationen auszuführen.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The following example shows how to cancel a parallel loop:</source>
          <target state="translated">Das folgende Beispiel zeigt die Vorgehensweise beim Abbrechen einer parallelen Schleife:</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The start index, inclusive.</source>
          <target state="translated">Der Startindex, einschließend.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The end index, exclusive.</source>
          <target state="translated">Der Endindex, ausschließend.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic)  loop with 64-bit indexes in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt eine <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic)-Schleife mit 64-Bit-Indizes aus, in der Iterationen parallel ausgeführt und Schleifenoptionen konfiguriert werden können, und der Status der Schleife kann beobachtet und bearbeitet werden.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal für jeden Wert im Iterationsbereich von aufgerufen (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>It is provided with the following parameters: the iteration count (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>), and a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely.</source>
          <target state="translated">Es wird bereitgestellt, mit den folgenden Parametern: die Anzahl der Iterationen (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>), und eine <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, um vorzeitig aus der Schleife unterbrechen.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, the method returns immediately without performing any iterations.</source>
          <target state="translated">Wenn <ph id="ph1">`fromInclusive`</ph> ist größer als oder gleich <ph id="ph2">`toExclusive`</ph>, die Methode kehrt sofort zurück, ohne irgendwelche Iterationen auszuführen.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> method with a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelOptions&gt;</ph> object:</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> Methode mit einem <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelOptions&gt;</ph> Objekt:</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The start index, inclusive.</source>
          <target state="translated">Der Startindex, einschließend.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The end index, exclusive.</source>
          <target state="translated">Der Endindex, ausschließend.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop with 64-bit indexes in which iterations may run in parallel and loop options can be configured.</source>
          <target state="translated">Führt eine <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic)-Schleife mit 64-Bit-Indizes aus, in der Iterationen parallel ausgeführt und Schleifenoptionen konfiguriert werden können.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>Supports 64-bit indexes.</source>
          <target state="translated">Unterstützt 64-Bit-Indizes.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal für jeden Wert im Iterationsbereich von aufgerufen (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>It is provided with the iteration count (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>) as a parameter.</source>
          <target state="translated">Es wird bereitgestellt, mit der Anzahl der Szenarioiterationen (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>) als Parameter.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, then the method returns immediately without performing any iterations.</source>
          <target state="translated">Wenn <ph id="ph1">`fromInclusive`</ph> ist größer als oder gleich <ph id="ph2">`toExclusive`</ph>, dann die Methode sofort zurück, ohne irgendwelche Iterationen auszuführen.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelOptions&gt;</ph> to specify a custom task scheduler:</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelOptions&gt;</ph> ein benutzerdefinierten Taskplaners angeben:</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Der Typ der threadlokalen Daten.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The start index, inclusive.</source>
          <target state="translated">Der Startindex, einschließend.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The end index, exclusive.</source>
          <target state="translated">Der Endindex, ausschließend.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop with thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt eine <ph id="ph1">&lt;see langword="for" /&gt;</ph>-Schleife (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) mit lokalen Threaddaten aus, in der Iterationen parallel ausgeführt und der Status der Schleife beobachtet und bearbeitet werden können.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>A  structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal für jeden Wert im Iterationsbereich von aufgerufen (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>It is provided with the following parameters: the iteration count (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>), a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</source>
          <target state="translated">Es wird bereitgestellt, mit den folgenden Parametern: die Anzahl der Iterationen (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>), eine <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, um vorzeitig aus der Schleife zu unterbrechen und ein lokaler Zustand, der für Iterationen freigegeben werden kann, die im selben Thread ausgeführt.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Die <ph id="ph1">`localInit`</ph> Delegat wird einmal für jede Aufgabe, die Ausführung der Schleife beteiligt ist und gibt den ursprünglichen lokalen Zustand für jede dieser Aufgaben aufgerufen.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Diese Anfangszustände übergeben werden, mit dem ersten <ph id="ph1">`body`</ph> Aufrufe für die einzelnen Tasks.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Anschließend übergibt alle nachfolgenden Textaufruf einen möglicherweise Zustandsänderungen-Wert, der für den nächsten Textaufruf übergeben wird.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Schließlich gibt der letzten Textaufruf für die einzelnen Tasks einen Statuswert, der an die <ph id="ph1">`localFinally`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task's local state.</source>
          <target state="translated">Die <ph id="ph1">`localFinally`</ph> Delegat wird einmal pro Aufgabe eine abschließende Aktion ausführt, lokalen Status jeder Aufgabe aufgerufen.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Dieser Delegat kann auf mehrere Aufgaben gleichzeitig aufgerufen werden; aus diesem Grund müssen Sie den Zugriff auf freigegebenen Variablen synchronisieren.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> Methode möglicherweise mehr Aufgaben als Threads verwenden, während der gesamten Lebensdauer der Ausführung als vorhandene Aufgaben werden abgeschlossen, und werden durch neue Aufgaben ersetzt.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">Dadurch werden die zugrunde liegende <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> -Objekt die Möglichkeit zum Hinzufügen, ändern oder Entfernen von Threads für die Schleife.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, then the method returns immediately without performing any iterations.</source>
          <target state="translated">Wenn <ph id="ph1">`fromInclusive`</ph> ist größer als oder gleich <ph id="ph2">`toExclusive`</ph>, dann die Methode sofort zurück, ohne irgendwelche Iterationen auszuführen.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>For an example that uses this method, see <bpt id="p1">[</bpt>How to: Write a Parallel.For Loop with Thread-Local Variables<ept id="p1">](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md)</ept>.</source>
          <target state="translated">Ein Beispiel, das diese Methode verwendet, finden Sie unter <bpt id="p1">[</bpt>wie: Schreiben einer Parallel.For-Schleife mit Thread-lokalen Variablen<ept id="p1">](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md)</ept>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Der Typ der threadlokalen Daten.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The start index, inclusive.</source>
          <target state="translated">Der Startindex, einschließend.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The end index, exclusive.</source>
          <target state="translated">Der Endindex, ausschließend.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic)  loop with 64-bit indexes and thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt eine <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic)-Schleife mit 64-Bit-Indizes sowie lokalen Threaddaten aus, in denen Iterationen parallel ausgeführt werden können, und der Status der Schleife kann beobachtet und bearbeitet werden.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal für jeden Wert im Iterationsbereich von aufgerufen (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>It is provided with the following parameters: the iteration count (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>), a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same task.</source>
          <target state="translated">Es wird bereitgestellt, mit den folgenden Parametern: die Anzahl der Iterationen (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>), eine <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, um vorzeitig aus der Schleife zu unterbrechen und ein lokaler Zustand, der für Iterationen freigegeben werden kann, die auf die gleiche Aufgabe ausführen.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Die <ph id="ph1">`localInit`</ph> Delegat wird einmal für jede Aufgabe, die Ausführung der Schleife beteiligt ist und gibt den ursprünglichen lokalen Zustand für jede dieser Aufgaben aufgerufen.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Diese Anfangszustände übergeben werden, mit dem ersten <ph id="ph1">`body`</ph> Aufrufe für die einzelnen Tasks.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Anschließend übergibt alle nachfolgenden Textaufruf einen möglicherweise Zustandsänderungen-Wert, der für den nächsten Textaufruf übergeben wird.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Schließlich gibt der letzten Textaufruf für die einzelnen Tasks einen Statuswert, der an die <ph id="ph1">`localFinally`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task's local state.</source>
          <target state="translated">Die <ph id="ph1">`localFinally`</ph> Delegat wird einmal pro Aufgabe eine abschließende Aktion ausführt, lokalen Status jeder Aufgabe aufgerufen.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Dieser Delegat kann auf mehrere Aufgaben gleichzeitig aufgerufen werden; aus diesem Grund müssen Sie den Zugriff auf freigegebenen Variablen synchronisieren.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> Methode möglicherweise mehr Aufgaben als Threads verwenden, während der gesamten Lebensdauer der Ausführung als vorhandene Aufgaben werden abgeschlossen, und werden durch neue Aufgaben ersetzt.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">Dadurch werden die zugrunde liegende <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> -Objekt die Möglichkeit zum Hinzufügen, ändern oder Entfernen von Threads für die Schleife.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, then the method returns immediately without performing any iterations.</source>
          <target state="translated">Wenn <ph id="ph1">`fromInclusive`</ph> ist größer als oder gleich <ph id="ph2">`toExclusive`</ph>, dann die Methode sofort zurück, ohne irgendwelche Iterationen auszuführen.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>For an example that uses this method, see <bpt id="p1">[</bpt>How to: Write a Parallel.For Loop with Thread-Local Variables<ept id="p1">](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md)</ept>.</source>
          <target state="translated">Ein Beispiel, das diese Methode verwendet, finden Sie unter <bpt id="p1">[</bpt>wie: Schreiben einer Parallel.For-Schleife mit Thread-lokalen Variablen<ept id="p1">](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md)</ept>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Der Typ der threadlokalen Daten.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The start index, inclusive.</source>
          <target state="translated">Der Startindex, einschließend.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The end index, exclusive.</source>
          <target state="translated">Der Endindex, ausschließend.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic)  loop with thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt eine <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic)-Schleife mit lokalen Threaddaten aus, in der Iterationen parallel ausgeführt, Schleifenoptionen konfiguriert und der Status der Schleife beobachtet und bearbeitet werden können.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal für jeden Wert im Iterationsbereich von aufgerufen (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>It is provided with the following parameters: the iteration count (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>), a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same task.</source>
          <target state="translated">Es wird bereitgestellt, mit den folgenden Parametern: die Anzahl der Iterationen (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>), eine <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, um vorzeitig aus der Schleife zu unterbrechen und ein lokaler Zustand, der für Iterationen freigegeben werden kann, die auf die gleiche Aufgabe ausführen.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Die <ph id="ph1">`localInit`</ph> Delegat wird einmal für jede Aufgabe, die Ausführung der Schleife beteiligt ist und gibt den ursprünglichen lokalen Zustand für jede dieser Aufgaben aufgerufen.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Diese Anfangszustände übergeben werden, mit dem ersten <ph id="ph1">`body`</ph> Aufrufe für die einzelnen Tasks.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Anschließend übergibt alle nachfolgenden Textaufruf einen möglicherweise Zustandsänderungen-Wert, der für den nächsten Textaufruf übergeben wird.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Schließlich gibt der letzten Textaufruf für die einzelnen Tasks einen Statuswert, der an die <ph id="ph1">`localFinally`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task's local state.</source>
          <target state="translated">Die <ph id="ph1">`localFinally`</ph> Delegat wird einmal pro Aufgabe eine abschließende Aktion ausführt, lokalen Status jeder Aufgabe aufgerufen.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This delegate might be invoked concurrently on multiple threads; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Dieser Delegat kann in mehreren Threads gleichzeitig aufgerufen werden; aus diesem Grund müssen Sie den Zugriff auf freigegebenen Variablen synchronisieren.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> Methode möglicherweise mehr Aufgaben als Threads verwenden, während der gesamten Lebensdauer der Ausführung als vorhandene Aufgaben werden abgeschlossen, und werden durch neue Aufgaben ersetzt.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">Dadurch werden die zugrunde liegende <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> -Objekt die Möglichkeit zum Hinzufügen, ändern oder Entfernen von Threads für die Schleife.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, then the method returns immediately without performing any iterations.</source>
          <target state="translated">Wenn <ph id="ph1">`fromInclusive`</ph> ist größer als oder gleich <ph id="ph2">`toExclusive`</ph>, dann die Methode sofort zurück, ohne irgendwelche Iterationen auszuführen.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The following example uses thread-local variables to compute the sum of the results of many lengthy operations.</source>
          <target state="translated">Im folgenden Beispiel wird die Thread-lokalen Variablen um die Summe der Ergebnisse des viele langwierige Operationen zu berechnen.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This example limits the degree of parallelism to four.</source>
          <target state="translated">Dieses Beispiel wird den Grad der Parallelität auf vier beschränkt.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Der Typ der threadlokalen Daten.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The start index, inclusive.</source>
          <target state="translated">Der Startindex, einschließend.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The end index, exclusive.</source>
          <target state="translated">Der Endindex, ausschließend.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The function delegate that returns the initial state of the local data for each thread.</source>
          <target state="translated">Der Funktionsdelegat, der den Ausgangszustand der lokalen Daten für jeden Thread zurückgibt.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that performs a final action on the local state of each thread.</source>
          <target state="translated">Der Delegat, der eine abschließende Aktion für den lokalen Zustand jedes Threads ausführt.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop with 64-bit indexes and thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt eine <ph id="ph1">&lt;see langword="for" /&gt;</ph>-Schleife (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) mit 64-Bit Indizes und threadlokalen Daten aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar, und der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal für jeden Wert im Iterationsbereich von aufgerufen (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>It is provided with the following parameters: the iteration count (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>), a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</source>
          <target state="translated">Es wird bereitgestellt, mit den folgenden Parametern: die Anzahl der Iterationen (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>), eine <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, um vorzeitig aus der Schleife zu unterbrechen und ein lokaler Zustand, der für Iterationen freigegeben werden kann, die im selben Thread ausgeführt.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each thread that participates in the loop's execution and returns the initial local state for each of those threads.</source>
          <target state="translated">Die <ph id="ph1">`localInit`</ph> Delegat wird einmal für jeden Thread, bei der Ausführung der Schleife beteiligt ist und gibt den ursprünglichen lokalen Zustand für jede von diesen Threads aufgerufen.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each thread.</source>
          <target state="translated">Diese Anfangszustände übergeben werden, mit dem ersten <ph id="ph1">`body`</ph> Aufrufe in jedem Thread.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Anschließend übergibt alle nachfolgenden Textaufruf einen möglicherweise Zustandsänderungen-Wert, der für den nächsten Textaufruf übergeben wird.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Finally, the last body invocation on each thread returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Schließlich gibt der letzten Textaufruf in jedem Thread einen Statuswert, der an die <ph id="ph1">`localFinally`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per thread to perform a final action on each thread's local state.</source>
          <target state="translated">Die <ph id="ph1">`localFinally`</ph> Delegat wird einmal pro Thread eine abschließende Aktion im lokalen Zustand jedes Threads ausführt aufgerufen.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This delegate might be invoked concurrently on multiple threads; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Dieser Delegat kann in mehreren Threads gleichzeitig aufgerufen werden; aus diesem Grund müssen Sie den Zugriff auf freigegebenen Variablen synchronisieren.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> Methode möglicherweise mehr Aufgaben als Threads verwenden, während der gesamten Lebensdauer der Ausführung als vorhandene Aufgaben werden abgeschlossen, und werden durch neue Aufgaben ersetzt.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">Dadurch werden die zugrunde liegende <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> -Objekt die Möglichkeit zum Hinzufügen, ändern oder Entfernen von Threads für die Schleife.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, then the method returns immediately without performing any iterations.</source>
          <target state="translated">Wenn <ph id="ph1">`fromInclusive`</ph> ist größer als oder gleich <ph id="ph2">`toExclusive`</ph>, dann die Methode sofort zurück, ohne irgendwelche Iterationen auszuführen.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Parallel">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each " /&gt;</ph> in Visual Basic) operation in which iterations may run in parallel.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each " /&gt;</ph> in Visual Basic) aus, bei dem Iterationen parallel ausgeführt werden können.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Typ der Elemente im <bpt id="p1">&lt;c&gt;</bpt>Quelle<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The orderable partitioner that contains the original data source.</source>
          <target state="translated">Der sortierbare Partitionierer, der die ursprüngliche Datenquelle enthält.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit einem <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> aus. Iterationen können parallel ablaufen, und der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Diese Überladung wird für Szenarien bereitgestellt, in denen das Überschreiben der standardmäßigen Partitionsschema werden sollen.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Kleine Schleifenkörper profitiert z. B. möglicherweise aus der Partitionierung des Bereichs.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>benutzerdefinierte Partitionierer für PLINQ und TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> und <bpt id="p2">[</bpt>Vorgehensweise: Implementieren dynamische Partitionen<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> orderable partitioner returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph>-Eigenschaft im <ph id="ph2">&lt;paramref name="source" /&gt;</ph> sortierbaren Partitionierer gibt <ph id="ph3">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /&gt;</ph> property in the source orderable partitioner returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /&gt;</ph>-Eigenschaft im nach Quelle sortierbaren Partitionierer gibt <ph id="ph2">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>Any methods in the source orderable partitioner return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Sämtliche Methoden im sortierbaren Quellpartitionierer geben <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Typ der Elemente im <bpt id="p1">&lt;c&gt;</bpt>Quelle<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The partitioner that contains the original data source.</source>
          <target state="translated">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit einem <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> aus. Iterationen können parallel ablaufen, und der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Diese Überladung wird für Szenarien bereitgestellt, in denen das Überschreiben der standardmäßigen Partitionsschema werden sollen.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Kleine Schleifenkörper profitiert z. B. möglicherweise aus der Partitionierung des Bereichs.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>benutzerdefinierte Partitionierer für PLINQ und TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> und <bpt id="p2">[</bpt>Vorgehensweise: Implementieren dynamische Partitionen<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> partitioner returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph>-Eigenschaft im <ph id="ph2">&lt;paramref name="source" /&gt;</ph>-Partitioner gibt <ph id="ph3">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>A method in the <ph id="ph1">&lt;paramref name="source" /&gt;</ph> partitioner returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Eine Methode im <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Partitioner gibt <ph id="ph2">&lt;see langword="null" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /&gt;</ph> method in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> partitioner does not return the correct number of partitions.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /&gt;</ph>-Methode im <ph id="ph2">&lt;paramref name="source" /&gt;</ph>-Partitioner gibt nicht die korrekte Anzahl von Partitionen zurück.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Typ der Elemente im <bpt id="p1">&lt;c&gt;</bpt>Quelle<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The partitioner that contains the original data source.</source>
          <target state="translated">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> in which iterations may run in parallel.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) für ein <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph>-Objekt aus, in dem Iterationen parallel ausgeführt werden können.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Diese Überladung wird für Szenarien bereitgestellt, in denen das Überschreiben der standardmäßigen Partitionsschema werden sollen.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Kleine Schleifenkörper profitiert z. B. möglicherweise aus der Partitionierung des Bereichs.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>benutzerdefinierte Partitionierer für PLINQ und TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> und <bpt id="p2">[</bpt>Vorgehensweise: Implementieren dynamische Partitionen<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The following example shows how to implement a range partitioner for use with <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph>:</source>
          <target state="translated">Das folgende Beispiel zeigt, wie eine Bereichspartitionierung für die Verwendung mit implementiert <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> partitioner returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph>-Eigenschaft im <ph id="ph2">&lt;paramref name="source" /&gt;</ph>-Partitioner gibt <ph id="ph3">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The exception that is thrown when any methods in the <ph id="ph1">&lt;paramref name="source" /&gt;</ph> partitioner return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Die Ausnahme, die ausgelöst wird, wenn irgendeine Methode im <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Partitionierer <ph id="ph2">&lt;see langword="null" /&gt;</ph> zurückgibt.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /&gt;</ph> method in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> partitioner does not return the correct number of partitions.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /&gt;</ph>-Methode im <ph id="ph2">&lt;paramref name="source" /&gt;</ph>-Partitioner gibt nicht die korrekte Anzahl von Partitionen zurück.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The type of the data in the source.</source>
          <target state="translated">Der Typ der Daten in der Quelle.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>An enumerable data source.</source>
          <target state="translated">Eine auflistbare Datenquelle.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with 64-bit indexes on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit 64-Bit-Indizes für einen <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> aus. Iterationen können parallel ausgeführt werden. Der Schleifenzustand kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal aufgerufen, für jedes Element in der <ph id="ph2">`source`</ph> aufzählbar.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>It is provided with the following parameters: the current element, a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and the current element's index (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>).</source>
          <target state="translated">Es wird bereitgestellt, mit den folgenden Parametern: das aktuelle Element einen <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, um vorzeitig aus der Schleife zu unterbrechen und das aktuelle Element Index (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The type of the data in the source.</source>
          <target state="translated">Der Typ der Daten in der Quelle.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>An enumerable data source.</source>
          <target state="translated">Eine auflistbare Datenquelle.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit einem <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> aus. Iterationen können parallel ablaufen. Der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal aufgerufen, für jedes Element in der <ph id="ph2">`source`</ph> aufzählbar.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>It is provided with the following parameters: the current element, and a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely.</source>
          <target state="translated">Es wird bereitgestellt, mit den folgenden Parametern: das aktuelle Element und ein <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, um vorzeitig aus der Schleife unterbrechen.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>The type of the data in the source.</source>
          <target state="translated">Der Typ der Daten in der Quelle.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>An enumerable data source.</source>
          <target state="translated">Eine auflistbare Datenquelle.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit einem <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> aus. Iterationen können parallel ablaufen.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal aufgerufen, für jedes Element in der <ph id="ph2">`source`</ph> aufzählbar.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>It is provided with the current element as a parameter.</source>
          <target state="translated">Sie wird mit dem aktuellen Element als Parameter bereitgestellt werden.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Action%7B%60%600%7D%29&gt;</ph> method to count the number of vowels and non-whitespace characters in a text file.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Action%7B%60%600%7D%29&gt;</ph> Methode, um die Anzahl der Vokale und nicht-Leerzeichen in einer Textdatei.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult&gt;</ph> value returned by the method is ignored.</source>
          <target state="translated">In diesem Fall die <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult&gt;</ph> von der Methode zurückgegebenen Wert wird ignoriert.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>Note that, because operations can run in parallel, you must ensure that incrementing the counter variables is an atomic operation, and that multiple threads do not attempt to access the counter variables simultaneously.</source>
          <target state="translated">Beachten Sie, dass, da Vorgänge parallel ausgeführt werden können, müssen Sie sicherstellen, dass die Zählervariablen inkrementieren ein atomarer Vorgang ist und mehrere Threads gleichzeitig auf die Zählervariablen nicht versucht werden.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>For this purpose, the example uses the <ph id="ph1">`lock`</ph> statement (in C#) and the <ph id="ph2">`SyncLock`</ph> statement (in Visual Basic).</source>
          <target state="translated">Zu diesem Zweck wird im Beispiel wird die <ph id="ph1">`lock`</ph> -Anweisung (in c#) und die <ph id="ph2">`SyncLock`</ph> -Anweisung (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Typ der Elemente im <bpt id="p1">&lt;c&gt;</bpt>Quelle<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The orderable partitioner that contains the original data source.</source>
          <target state="translated">Der sortierbare Partitionierer, der die ursprüngliche Datenquelle enthält.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit einem <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> aus. Iterationen können parallel ablaufen, Schleifenoptionen sind konfigurierbar, und der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Diese Überladung wird für Szenarien bereitgestellt, in denen das Überschreiben der standardmäßigen Partitionsschema werden sollen.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Kleine Schleifenkörper profitiert z. B. möglicherweise aus der Partitionierung des Bereichs.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>benutzerdefinierte Partitionierer für PLINQ und TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> und <bpt id="p2">[</bpt>Vorgehensweise: Implementieren dynamische Partitionen<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> orderable partitioner returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph>-Eigenschaft im <ph id="ph2">&lt;paramref name="source" /&gt;</ph> sortierbaren Partitionierer gibt <ph id="ph3">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> orderable partitioner returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /&gt;</ph>-Eigenschaft im <ph id="ph2">&lt;paramref name="source" /&gt;</ph> sortierbaren Partitionierer gibt <ph id="ph3">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The exception that is thrown when any methods in the <ph id="ph1">&lt;paramref name="source" /&gt;</ph> orderable partitioner return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Die Ausnahme, die ausgelöst wird, wenn irgendwelche Methoden im <ph id="ph1">&lt;paramref name="source" /&gt;</ph> sortierbaren Partitionierer <ph id="ph2">&lt;see langword="null" /&gt;</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Typ der Elemente im <bpt id="p1">&lt;c&gt;</bpt>Quelle<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The partitioner that contains the original data source.</source>
          <target state="translated">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit einem <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> aus. Iterationen können parallel ablaufen, Schleifenoptionen sind konfigurierbar, und der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>A  structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Diese Überladung wird für Szenarien bereitgestellt, in denen das Überschreiben der standardmäßigen Partitionsschema werden sollen.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Kleine Schleifenkörper profitiert z. B. möglicherweise aus der Partitionierung des Bereichs.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>benutzerdefinierte Partitionierer für PLINQ und TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> und <bpt id="p2">[</bpt>Vorgehensweise: Implementieren dynamische Partitionen<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> partitioner returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph>-Eigenschaft im <ph id="ph2">&lt;paramref name="source" /&gt;</ph>-Partitioner gibt <ph id="ph3">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The exception that is thrown when any methods in the <ph id="ph1">&lt;paramref name="source" /&gt;</ph> partitioner return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Die Ausnahme, die ausgelöst wird, wenn irgendeine Methode im <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Partitionierer <ph id="ph2">&lt;see langword="null" /&gt;</ph> zurückgibt.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Typ der Elemente im <bpt id="p1">&lt;c&gt;</bpt>Quelle<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The partitioner that contains the original data source.</source>
          <target state="translated">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> in which iterations may run in parallel and loop options can be configured.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit einem <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> aus. Iterationen können parallel ausgeführt werden, Schleifenoptionen sind konfigurierbar.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Diese Überladung wird für Szenarien bereitgestellt, in denen das Überschreiben der standardmäßigen Partitionsschema werden sollen.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Kleine Schleifenkörper profitiert z. B. möglicherweise aus der Partitionierung des Bereichs.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>benutzerdefinierte Partitionierer für PLINQ und TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> und <bpt id="p2">[</bpt>Vorgehensweise: Implementieren dynamische Partitionen<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> partitioner returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph>-Eigenschaft im <ph id="ph2">&lt;paramref name="source" /&gt;</ph>-Partitioner gibt <ph id="ph3">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The exception that is thrown when any methods in the <ph id="ph1">&lt;paramref name="source" /&gt;</ph> partitioner return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Die Ausnahme, die ausgelöst wird, wenn irgendeine Methode im <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Partitionierer <ph id="ph2">&lt;see langword="null" /&gt;</ph> zurückgibt.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The type of the data in the source.</source>
          <target state="translated">Der Typ der Daten in der Quelle.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>An enumerable data source.</source>
          <target state="translated">Eine auflistbare Datenquelle.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with 64-bit indexes on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit 64-Bit-Indizes für einen <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal aufgerufen, für jedes Element in der <ph id="ph2">`source`</ph> aufzählbar.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>It is provided with the following parameters: the current element, a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and the current element's index (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>).</source>
          <target state="translated">Es wird bereitgestellt, mit den folgenden Parametern: das aktuelle Element einen <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, um vorzeitig aus der Schleife zu unterbrechen und das aktuelle Element Index (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The type of the data in the source.</source>
          <target state="translated">Der Typ der Daten in der Quelle.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>An enumerable data source.</source>
          <target state="translated">Eine auflistbare Datenquelle.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) für ein <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph>-Objekt aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal aufgerufen, für jedes Element in der <ph id="ph2">`source`</ph> aufzählbar.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>It is provided with the following parameters: the current element, and a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely.</source>
          <target state="translated">Es wird bereitgestellt, mit den folgenden Parametern: das aktuelle Element und ein <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, um vorzeitig aus der Schleife unterbrechen.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The type of the data in the source.</source>
          <target state="translated">Der Typ der Daten in der Quelle.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>An enumerable data source.</source>
          <target state="translated">Eine auflistbare Datenquelle.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel and loop options can be configured.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) für ein <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph>-Objekt aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal aufgerufen, für jedes Element in der <ph id="ph2">`source`</ph> aufzählbar.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>It is provided with the current element as a parameter.</source>
          <target state="translated">Sie wird mit dem aktuellen Element als Parameter bereitgestellt werden.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Typ der Elemente im <bpt id="p1">&lt;c&gt;</bpt>Quelle<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Der Typ der threadlokalen Daten.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The orderable partitioner that contains the original data source.</source>
          <target state="translated">Der sortierbare Partitionierer, der die ursprüngliche Datenquelle enthält.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with thread-local data on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit threadlokalen Daten für einen <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Diese Überladung wird für Szenarien bereitgestellt, in denen das Überschreiben der standardmäßigen Partitionsschema werden sollen.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Kleine Schleifenkörper profitiert z. B. möglicherweise aus der Partitionierung des Bereichs.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>benutzerdefinierte Partitionierer für PLINQ und TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> und <bpt id="p2">[</bpt>Vorgehensweise: Implementieren dynamische Partitionen<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Die <ph id="ph1">`localInit`</ph> Delegat wird einmal für jede Aufgabe, die Ausführung der Schleife beteiligt ist und gibt den ursprünglichen lokalen Zustand für jede dieser Aufgaben aufgerufen.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Diese Anfangszustände übergeben werden, mit dem ersten <ph id="ph1">`body`</ph> Aufrufe für die einzelnen Tasks.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Anschließend übergibt alle nachfolgenden Textaufruf einen möglicherweise Zustandsänderungen-Wert, der für den nächsten Textaufruf übergeben wird.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Schließlich gibt der letzten Textaufruf für die einzelnen Tasks einen Statuswert, der an die <ph id="ph1">`localFinally`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task's local state.</source>
          <target state="translated">Die <ph id="ph1">`localFinally`</ph> Delegat wird einmal pro Aufgabe eine abschließende Aktion ausführt, lokalen Status jeder Aufgabe aufgerufen.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Dieser Delegat kann auf mehrere Aufgaben gleichzeitig aufgerufen werden; aus diesem Grund müssen Sie den Zugriff auf freigegebenen Variablen synchronisieren.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> Methode möglicherweise mehr Aufgaben als Threads verwenden, während der gesamten Lebensdauer der Ausführung als vorhandene Aufgaben werden abgeschlossen, und werden durch neue Aufgaben ersetzt.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">Dadurch werden die zugrunde liegende <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> -Objekt die Möglichkeit zum Hinzufügen, ändern oder Entfernen von Threads für die Schleife.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> returns <ph id="ph4">&lt;see langword="false" /&gt;</ph> or the partitioner returns <ph id="ph5">&lt;see langword="null" /&gt;</ph> partitions.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph>-Eigenschaft im <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> gibt <ph id="ph4">&lt;see langword="false" /&gt;</ph> zurück, oder der Partitionierer gibt die <ph id="ph5">&lt;see langword="null" /&gt;</ph>-Partitionen zurück.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Typ der Elemente im <bpt id="p1">&lt;c&gt;</bpt>Quelle<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Der Typ der threadlokalen Daten.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The partitioner that contains the original data source.</source>
          <target state="translated">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with thread-local data on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit threadlokalen Daten für einen <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> aus. Iterationen können parallel ablaufen. Der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Diese Überladung wird für Szenarien bereitgestellt, in denen das Überschreiben der standardmäßigen Partitionsschema werden sollen.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Kleine Schleifenkörper profitiert z. B. möglicherweise aus der Partitionierung des Bereichs.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>benutzerdefinierte Partitionierer für PLINQ und TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> und <bpt id="p2">[</bpt>Vorgehensweise: Implementieren dynamische Partitionen<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each thread that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Die <ph id="ph1">`localInit`</ph> Delegat wird einmal für jeden Thread, bei der Ausführung der Schleife beteiligt ist und gibt den ursprünglichen lokalen Zustand für jede dieser Aufgaben aufgerufen.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Diese Anfangszustände übergeben werden, mit dem ersten <ph id="ph1">`body`</ph> Aufrufe für die einzelnen Tasks.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Anschließend übergibt alle nachfolgenden Textaufruf einen möglicherweise Zustandsänderungen-Wert, der für den nächsten Textaufruf übergeben wird.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Schließlich gibt der letzten Textaufruf für die einzelnen Tasks einen Statuswert, der an die <ph id="ph1">`localFinally`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task's local state.</source>
          <target state="translated">Die <ph id="ph1">`localFinally`</ph> Delegat wird einmal pro Aufgabe eine abschließende Aktion ausführt, lokalen Status jeder Aufgabe aufgerufen.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Dieser Delegat kann auf mehrere Aufgaben gleichzeitig aufgerufen werden; aus diesem Grund müssen Sie den Zugriff auf freigegebenen Variablen synchronisieren.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> Methode möglicherweise mehr Aufgaben als Threads verwenden, während der gesamten Lebensdauer der Ausführung als vorhandene Aufgaben werden abgeschlossen, und werden durch neue Aufgaben ersetzt.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">Dadurch werden die zugrunde liegende <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> -Objekt die Möglichkeit zum Hinzufügen, ändern oder Entfernen von Threads für die Schleife.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> returns <ph id="ph4">&lt;see langword="false" /&gt;</ph> or the partitioner returns <ph id="ph5">&lt;see langword="null" /&gt;</ph> partitions.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph>-Eigenschaft im <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> gibt <ph id="ph4">&lt;see langword="false" /&gt;</ph> zurück, oder der Partitionierer gibt die <ph id="ph5">&lt;see langword="null" /&gt;</ph>-Partitionen zurück.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the data in the source.</source>
          <target state="translated">Der Typ der Daten in der Quelle.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Der Typ der threadlokalen Daten.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>An enumerable data source.</source>
          <target state="translated">Eine auflistbare Datenquelle.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with thread-local data on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit threadlokalen Daten für einen <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> aus. Iterationen können parallel ablaufen. Der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal aufgerufen, für jedes Element in der <ph id="ph2">`source`</ph> aufzählbar.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>It is provided with the following parameters: the current element, a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, the current element's index (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>), and some local state that may be shared amongst iterations that execute on the same thread.</source>
          <target state="translated">Es wird bereitgestellt, mit den folgenden Parametern: das aktuelle Element einen <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, um vorzeitig aus der Schleife unterbrechen, den Index des aktuellen Elements (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>), und ein lokaler Zustand, der für Iterationen freigegeben werden kann, die ausgeführt auf dem gleichen Thread.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Die <ph id="ph1">`localInit`</ph> Delegat wird einmal für jede Aufgabe, die Ausführung der Schleife beteiligt ist und gibt den ursprünglichen lokalen Zustand für jede dieser Aufgaben aufgerufen.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Diese Anfangszustände übergeben werden, mit dem ersten <ph id="ph1">`body`</ph> Aufrufe für die einzelnen Tasks.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Anschließend übergibt alle nachfolgenden Textaufruf einen möglicherweise Zustandsänderungen-Wert, der für den nächsten Textaufruf übergeben wird.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Schließlich gibt der letzten Textaufruf für die einzelnen Tasks einen Statuswert, der an die <ph id="ph1">`localFinally`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task’s local state.</source>
          <target state="translated">Die <ph id="ph1">`localFinally`</ph> Delegat wird einmal pro Aufgabe eine abschließende Aktion ausführt, lokalen Status jeder Aufgabe aufgerufen.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Dieser Delegat kann auf mehrere Aufgaben gleichzeitig aufgerufen werden; aus diesem Grund müssen Sie den Zugriff auf freigegebenen Variablen synchronisieren.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> Methode möglicherweise mehr Aufgaben als Threads verwenden, während der gesamten Lebensdauer der Ausführung als vorhandene Aufgaben werden abgeschlossen, und werden durch neue Aufgaben ersetzt.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">Dadurch werden die zugrunde liegende <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> -Objekt die Möglichkeit zum Hinzufügen, ändern oder Entfernen von Threads für die Schleife.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the data in the source.</source>
          <target state="translated">Der Typ der Daten in der Quelle.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Der Typ der threadlokalen Daten.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>An enumerable data source.</source>
          <target state="translated">Eine auflistbare Datenquelle.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with thread-local data on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit threadlokalen Daten für einen <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> aus. Iterationen können parallel ablaufen. Der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal aufgerufen, für jedes Element in der <ph id="ph2">`source`</ph> aufzählbar.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>It is provided with the following parameters: the current element, a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</source>
          <target state="translated">Es wird bereitgestellt, mit den folgenden Parametern: das aktuelle Element einer <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, um vorzeitig aus der Schleife zu unterbrechen und ein lokaler Zustand, der für Iterationen freigegeben werden kann, die im selben Thread ausgeführt.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Die <ph id="ph1">`localInit`</ph> Delegat wird einmal für jede Aufgabe, die Ausführung der Schleife beteiligt ist und gibt den ursprünglichen lokalen Zustand für jede dieser Aufgaben aufgerufen.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Diese Anfangszustände übergeben werden, mit dem ersten <ph id="ph1">`body`</ph> Aufrufe für die einzelnen Tasks.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Anschließend übergibt alle nachfolgenden Textaufruf einen möglicherweise Zustandsänderungen-Wert, der für den nächsten Textaufruf übergeben wird.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Schließlich gibt der letzten Textaufruf für die einzelnen Tasks einen Statuswert, der an die <ph id="ph1">`localFinally`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per thread to perform a final action on each task’s local state.</source>
          <target state="translated">Die <ph id="ph1">`localFinally`</ph> Delegat wird einmal pro Thread, um eine abschließende Aktion ausführt, lokalen Status jeder Aufgabe aufgerufen.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Dieser Delegat kann auf mehrere Aufgaben gleichzeitig aufgerufen werden; aus diesem Grund müssen Sie den Zugriff auf freigegebenen Variablen synchronisieren.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> Methode möglicherweise mehr Aufgaben als Threads verwenden, während der gesamten Lebensdauer der Ausführung als vorhandene Aufgaben werden abgeschlossen, und werden durch neue Aufgaben ersetzt.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">Dadurch werden die zugrunde liegende <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> -Objekt die Möglichkeit zum Hinzufügen, ändern oder Entfernen von Threads für die Schleife.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> method with local state:</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie eine <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> Methode mit lokalen Zustand:</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Typ der Elemente im <bpt id="p1">&lt;c&gt;</bpt>Quelle<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Der Typ der threadlokalen Daten.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The orderable partitioner that contains the original data source.</source>
          <target state="translated">Der sortierbare Partitionierer, der die ursprüngliche Datenquelle enthält.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with 64-bit indexes and  with thread-local data on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> in which iterations may run in parallel , loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit 64-Bit-Indizes und threadlokalen Daten für einen <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Diese Überladung wird für Szenarien bereitgestellt, in denen das Überschreiben der standardmäßigen Partitionsschema werden sollen.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Kleine Schleifenkörper profitiert z. B. möglicherweise aus der Partitionierung des Bereichs.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>benutzerdefinierte Partitionierer für PLINQ und TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> und <bpt id="p2">[</bpt>Vorgehensweise: Implementieren dynamische Partitionen<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Die <ph id="ph1">`localInit`</ph> Delegat wird einmal für jede Aufgabe, die Ausführung der Schleife beteiligt ist und gibt den ursprünglichen lokalen Zustand für jede dieser Aufgaben aufgerufen.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Diese Anfangszustände übergeben werden, mit dem ersten <ph id="ph1">`body`</ph> Aufrufe für die einzelnen Tasks.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Anschließend übergibt alle nachfolgenden Textaufruf einen möglicherweise Zustandsänderungen-Wert, der für den nächsten Textaufruf übergeben wird.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each thread returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Schließlich gibt der letzten Textaufruf in jedem Thread einen Statuswert, der an die <ph id="ph1">`localFinally`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task’s local state.</source>
          <target state="translated">Die <ph id="ph1">`localFinally`</ph> Delegat wird einmal pro Aufgabe eine abschließende Aktion ausführt, lokalen Status jeder Aufgabe aufgerufen.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Dieser Delegat kann auf mehrere Aufgaben gleichzeitig aufgerufen werden; aus diesem Grund müssen Sie den Zugriff auf freigegebenen Variablen synchronisieren.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> Methode möglicherweise mehr Aufgaben als Threads verwenden, während der gesamten Lebensdauer der Ausführung als vorhandene Aufgaben werden abgeschlossen, und werden durch neue Aufgaben ersetzt.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">Dadurch werden die zugrunde liegende <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> -Objekt die Möglichkeit zum Hinzufügen, ändern oder Entfernen von Threads für die Schleife.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> or <ph id="ph2">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> oder das <ph id="ph2">&lt;paramref name="localFinally" /&gt;</ph>-Argument ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> returns <ph id="ph4">&lt;see langword="false" /&gt;</ph> or the partitioner returns <ph id="ph5">&lt;see langword="null" /&gt;</ph> partitions.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph>-Eigenschaft im <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> gibt <ph id="ph4">&lt;see langword="false" /&gt;</ph> zurück, oder der Partitionierer gibt die <ph id="ph5">&lt;see langword="null" /&gt;</ph>-Partitionen zurück.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Typ der Elemente im <bpt id="p1">&lt;c&gt;</bpt>Quelle<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Der Typ der threadlokalen Daten.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The partitioner that contains the original data source.</source>
          <target state="translated">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation  with thread-local data on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit threadlokalen Daten für einen <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Diese Überladung wird für Szenarien bereitgestellt, in denen das Überschreiben der standardmäßigen Partitionsschema werden sollen.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Kleine Schleifenkörper profitiert z. B. möglicherweise aus der Partitionierung des Bereichs.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> Methode erwartet, dass benutzerdefinierte Partitionierer dynamische Partitionierung unterstützen.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This overload is provided for scenarios with small loop bodies that might benefit from static range partitioning.</source>
          <target state="translated">Diese Überladung wird für Szenarien mit kleinen Schleifenkörpern bereitgestellt, die von der statischen Bereichspartitionierung profitieren könnten.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Partitioners must support dynamic partitions.</source>
          <target state="translated">Partitionierer müssen es sich um dynamische Partitionen unterstützt.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>benutzerdefinierte Partitionierer für PLINQ und TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> und <bpt id="p2">[</bpt>Vorgehensweise: Implementieren dynamische Partitionen<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Die <ph id="ph1">`localInit`</ph> Delegat wird einmal für jede Aufgabe, die Ausführung der Schleife beteiligt ist und gibt den ursprünglichen lokalen Zustand für jede dieser Aufgaben aufgerufen.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Diese Anfangszustände übergeben werden, mit dem ersten <ph id="ph1">`body`</ph> Aufrufe für die einzelnen Tasks.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Anschließend übergibt alle nachfolgenden Textaufruf einen möglicherweise Zustandsänderungen-Wert, der für den nächsten Textaufruf übergeben wird.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Schließlich gibt der letzten Textaufruf für die einzelnen Tasks einen Statuswert, der an die <ph id="ph1">`localFinally`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task's local state.</source>
          <target state="translated">Die <ph id="ph1">`localFinally`</ph> Delegat wird einmal pro Aufgabe eine abschließende Aktion ausführt, lokalen Status jeder Aufgabe aufgerufen.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Dieser Delegat kann auf mehrere Aufgaben gleichzeitig aufgerufen werden; aus diesem Grund müssen Sie den Zugriff auf freigegebenen Variablen synchronisieren.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> Methode möglicherweise mehr Aufgaben als Threads verwenden, während der gesamten Lebensdauer der Ausführung als vorhandene Aufgaben werden abgeschlossen, und werden durch neue Aufgaben ersetzt.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">Dadurch werden die zugrunde liegende <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> -Objekt die Möglichkeit zum Hinzufügen, ändern oder Entfernen von Threads für die Schleife.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> returns <ph id="ph4">&lt;see langword="false" /&gt;</ph> or the partitioner returns <ph id="ph5">&lt;see langword="null" /&gt;</ph> partitions.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph>-Eigenschaft im <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> gibt <ph id="ph4">&lt;see langword="false" /&gt;</ph> zurück, oder der Partitionierer gibt die <ph id="ph5">&lt;see langword="null" /&gt;</ph>-Partitionen zurück.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the data in the source.</source>
          <target state="translated">Der Typ der Daten in der Quelle.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Der Typ der threadlokalen Daten.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>An enumerable data source.</source>
          <target state="translated">Eine auflistbare Datenquelle.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with thread-local data and 64-bit indexes on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit threadlokalen Daten und 64-Bit-Indizes für einen <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal aufgerufen, für jedes Element in der <ph id="ph2">`source`</ph> aufzählbar.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>It is provided with the following parameters: the current element, a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, the current element's index (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>), and some local state that may be shared amongst iterations that execute on the same thread.</source>
          <target state="translated">Es wird bereitgestellt, mit den folgenden Parametern: das aktuelle Element einen <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, um vorzeitig aus der Schleife unterbrechen, den Index des aktuellen Elements (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>), und ein lokaler Zustand, der für Iterationen freigegeben werden kann, die ausgeführt auf dem gleichen Thread.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Die <ph id="ph1">`localInit`</ph> Delegat wird einmal für jede Aufgabe, die Ausführung der Schleife beteiligt ist und gibt den ursprünglichen lokalen Zustand für jede dieser Aufgaben aufgerufen.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Diese Anfangszustände übergeben werden, mit dem ersten <ph id="ph1">`body`</ph> Aufrufe für die einzelnen Tasks.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Anschließend übergibt alle nachfolgenden Textaufruf einen möglicherweise Zustandsänderungen-Wert, der für den nächsten Textaufruf übergeben wird.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Schließlich gibt der letzten Textaufruf für die einzelnen Tasks einen Statuswert, der an die <ph id="ph1">`localFinally`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per thread to perform a final action on each task’s local state.</source>
          <target state="translated">Die <ph id="ph1">`localFinally`</ph> Delegat wird einmal pro Thread, um eine abschließende Aktion ausführt, lokalen Status jeder Aufgabe aufgerufen.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Dieser Delegat kann auf mehrere Aufgaben gleichzeitig aufgerufen werden; aus diesem Grund müssen Sie den Zugriff auf freigegebenen Variablen synchronisieren.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> Methode möglicherweise mehr Aufgaben als Threads verwenden, während der gesamten Lebensdauer der Ausführung als vorhandene Aufgaben werden abgeschlossen, und werden durch neue Aufgaben ersetzt.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">Dadurch werden die zugrunde liegende <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> -Objekt die Möglichkeit zum Hinzufügen, ändern oder Entfernen von Threads für die Schleife.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the data in the source.</source>
          <target state="translated">Der Typ der Daten in der Quelle.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Der Typ der threadlokalen Daten.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>An enumerable data source.</source>
          <target state="translated">Eine auflistbare Datenquelle.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Der Delegat, der einmal pro Iteration aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with thread-local data on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated..</source>
          <target state="translated">Führt einen <ph id="ph1">&lt;see langword="foreach" /&gt;</ph>-Vorgang (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) mit threadlokalen Daten für einen <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Die <ph id="ph1">`body`</ph> Delegat wird einmal aufgerufen, für jedes Element in der <ph id="ph2">`source`</ph> aufzählbar.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>It is provided with the following parameters: the current element, a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</source>
          <target state="translated">Es wird bereitgestellt, mit den folgenden Parametern: das aktuelle Element einer <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> -Instanz, die verwendet werden kann, um vorzeitig aus der Schleife zu unterbrechen und ein lokaler Zustand, der für Iterationen freigegeben werden kann, die im selben Thread ausgeführt.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Die <ph id="ph1">`localInit`</ph> Delegat wird einmal für jede Aufgabe, die Ausführung der Schleife beteiligt ist und gibt den ursprünglichen lokalen Zustand für jede dieser Aufgaben aufgerufen.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Diese Anfangszustände übergeben werden, mit dem ersten <ph id="ph1">`body`</ph> Aufrufe für die einzelnen Tasks.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Anschließend übergibt alle nachfolgenden Textaufruf einen möglicherweise Zustandsänderungen-Wert, der für den nächsten Textaufruf übergeben wird.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Schließlich gibt der letzten Textaufruf für die einzelnen Tasks einen Statuswert, der an die <ph id="ph1">`localFinally`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per thread to perform a final action on each task’s local state.</source>
          <target state="translated">Die <ph id="ph1">`localFinally`</ph> Delegat wird einmal pro Thread, um eine abschließende Aktion ausführt, lokalen Status jeder Aufgabe aufgerufen.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Dieser Delegat kann auf mehrere Aufgaben gleichzeitig aufgerufen werden; aus diesem Grund müssen Sie den Zugriff auf freigegebenen Variablen synchronisieren.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> Methode möglicherweise mehr Aufgaben als Threads verwenden, während der gesamten Lebensdauer der Ausführung als vorhandene Aufgaben werden abgeschlossen, und werden durch neue Aufgaben ersetzt.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">Dadurch werden die zugrunde liegende <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> -Objekt die Möglichkeit zum Hinzufügen, ändern oder Entfernen von Threads für die Schleife.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="source" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="body" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument wird abgebrochen.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Parallel">
          <source>Executes each of the provided actions, possibly in parallel.</source>
          <target state="translated">Führt jede der bereitgestellten Aktionen aus (möglicherweise parallel).</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Action" /&gt;</ph> to execute.</source>
          <target state="translated">Ein Array auszuführender <ph id="ph1">&lt;see cref="T:System.Action" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>Executes each of the provided actions, possibly in parallel.</source>
          <target state="translated">Führt jede der bereitgestellten Aktionen aus (möglicherweise parallel).</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>This method can be used to execute a set of operations, potentially in parallel.</source>
          <target state="translated">Diese Methode kann verwendet werden, um eine Reihe von Vorgängen, potenziell parallel auszuführen.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>No guarantees are made about the order in which the operations execute or whether they execute in parallel.</source>
          <target state="translated">Keine Garantien werden über die Reihenfolge, in der die Operationen ausgeführt werden sollen, oder gibt an, ob sie gleichzeitig auszuführen.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>This method does not return until each of the provided operations has completed, regardless of whether completion occurs due to normal or exceptional termination.</source>
          <target state="translated">Diese Methode gibt keinen zurück, bis jede der bereitgestellten Vorgänge abgeschlossen ist, unabhängig davon, ob Abschluss aufgrund herausragende oder nicht ordnungsgemäß beendet auftritt.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Use Parallel.Invoke to Execute Parallel Operations<ept id="p1">](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Gewusst wie: Ausführen von parallelen Aufgaben mithilfe von Parallel.Invoke<ept id="p1">](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>This example demonstrates how to use the <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.Invoke%2A&gt;</ph> method with other methods, anonymous delegates, and lambda expressions.</source>
          <target state="translated">In diesem Beispiel wird veranschaulicht, wie die <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.Invoke%2A&gt;</ph> Methode mit anderen Methoden, anonymen Delegaten und Lambda-Ausdrücke.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>The <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="actions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>The exception that is thrown when any action in the <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> array throws an exception.</source>
          <target state="translated">Diese Ausnahme wird ausgelöst, wenn eine beliebige Aktion im <ph id="ph1">&lt;paramref name="actions" /&gt;</ph>-Array eine Ausnahme auslöst.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>The <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> array contains a <ph id="ph2">&lt;see langword="null" /&gt;</ph> element.</source>
          <target state="translated">Ein <ph id="ph1">&lt;paramref name="actions" /&gt;</ph>-Array enthält ein <ph id="ph2">&lt;see langword="null" /&gt;</ph>-Element.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>An array of actions to execute.</source>
          <target state="translated">Ein Array auszuführender Aktionen.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>Executes each of the provided actions, possibly in parallel, unless the operation is cancelled by the user.</source>
          <target state="translated">Führt die einzelnen bereitgestellten Aktionen (nach Möglichkeit parallel) aus, es sei denn, der Vorgang wird vom Benutzer abgebrochen.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>This method can be used to execute a set of operations, potentially in parallel.</source>
          <target state="translated">Diese Methode kann verwendet werden, um eine Reihe von Vorgängen, potenziell parallel auszuführen.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>The cancellation token passed in with the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelOptions&gt;</ph> structure enables the caller to cancel the entire operation.</source>
          <target state="translated">Das Abbruchtoken zu übergeben, mit der <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelOptions&gt;</ph> Struktur ermöglicht dem Aufrufer, den gesamten Vorgang abzubrechen.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>For more information, see <bpt id="p1">[</bpt>Cancellation in Managed Threads<ept id="p1">](~/docs/standard/threading/cancellation-in-managed-threads.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Abbruch in verwalteten Threads<ept id="p1">](~/docs/standard/threading/cancellation-in-managed-threads.md)</ept>.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>No guarantees are made about the order in which the operations execute or whether they execute in parallel.</source>
          <target state="translated">Keine Garantien werden über die Reihenfolge, in der die Operationen ausgeführt werden sollen, oder gibt an, ob sie gleichzeitig auszuführen.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>This method does not return until each of the provided operations has completed, regardless of whether completion occurs due to normal or exceptional termination.</source>
          <target state="translated">Diese Methode gibt keinen zurück, bis jede der bereitgestellten Vorgänge abgeschlossen ist, unabhängig davon, ob Abschluss aufgrund herausragende oder nicht ordnungsgemäß beendet auftritt.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Use Parallel.Invoke to Execute Parallel Operations<ept id="p1">](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Gewusst wie: Ausführen von parallelen Aufgaben mithilfe von Parallel.Invoke<ept id="p1">](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> is set.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> ist festgelegt.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>The <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="actions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph>-Argument lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>The exception that is thrown when any action in the <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> array throws an exception.</source>
          <target state="translated">Diese Ausnahme wird ausgelöst, wenn eine beliebige Aktion im <ph id="ph1">&lt;paramref name="actions" /&gt;</ph>-Array eine Ausnahme auslöst.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>The <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> array contains a <ph id="ph2">&lt;see langword="null" /&gt;</ph> element.</source>
          <target state="translated">Ein <ph id="ph1">&lt;paramref name="actions" /&gt;</ph>-Array enthält ein <ph id="ph2">&lt;see langword="null" /&gt;</ph>-Element.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>, die der <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> im <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> zugeordnet ist, ist gelöscht worden.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>