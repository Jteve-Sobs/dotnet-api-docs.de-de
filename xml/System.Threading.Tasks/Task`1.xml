<Type Name="Task&lt;TResult&gt;" FullName="System.Threading.Tasks.Task&lt;TResult&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f28f4ddd682df4bfeccd0af7881f372687d59ec7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69144308" /></Metadata><TypeSignature Language="C#" Value="public class Task&lt;TResult&gt; : System.Threading.Tasks.Task" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Task`1&lt;TResult&gt; extends System.Threading.Tasks.Task" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Task`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Task(Of TResult)&#xA;Inherits Task" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class Task : System::Threading::Tasks::Task" />
  <TypeSignature Language="F#" Value="type Task&lt;'Result&gt; = class&#xA;    inherit Task" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Threading.Tasks.Task</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Id = {Id}, Status = {Status}, Method = {DebuggerDisplayMethodDescription}, Result = {DebuggerDisplayResultDescription}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.SystemThreadingTasks_FutureDebugView`1))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TResult"><span data-ttu-id="794f4-101">Der von diesem <see cref="T:System.Threading.Tasks.Task`1" /> erzeugte Ergebnistyp.</span><span class="sxs-lookup"><span data-stu-id="794f4-101">The type of the result produced by this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
    <summary><span data-ttu-id="794f4-102">Stellt einen asynchronen Vorgang dar, der einen Wert zurückgeben kann.</span><span class="sxs-lookup"><span data-stu-id="794f4-102">Represents an asynchronous operation that can return a value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-103">Die <xref:System.Threading.Tasks.Task%601> -Klasse stellt einen einzelnen Vorgang dar, der einen Wert zurückgibt und in der Regel asynchron ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-103">The <xref:System.Threading.Tasks.Task%601> class represents a single operation that returns a value and that usually executes asynchronously.</span></span> <span data-ttu-id="794f4-104"><xref:System.Threading.Tasks.Task%601>Objekte sind eine der zentralen Komponenten des [aufgabenbasierten asynchronen Musters](~/docs/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap.md) , das erstmals in der .NET Framework 4 eingeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-104"><xref:System.Threading.Tasks.Task%601> objects are one of the central components of the [task-based asynchronous pattern](~/docs/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap.md) first introduced in the .NET Framework 4.</span></span> <span data-ttu-id="794f4-105"><xref:System.Threading.Tasks.Task%601> Da die von einem-Objekt ausgeführte Arbeit in der Regel asynchron in einem Thread Pool Thread anstatt synchron im Hauptanwendungs Thread ausgeführt wird, können Sie die <xref:System.Threading.Tasks.Task.Status%2A> -Eigenschaft <xref:System.Threading.Tasks.Task.IsCompleted%2A>sowie die- <xref:System.Threading.Tasks.Task.IsCanceled%2A>Eigenschaft, die-Eigenschaft und die-Eigenschaft verwenden. <xref:System.Threading.Tasks.Task.IsFaulted%2A> Eigenschaften, um den Status einer Aufgabe zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="794f4-105">Because the work performed by a <xref:System.Threading.Tasks.Task%601> object typically executes asynchronously on a thread pool thread rather than synchronously on the main application thread, you can use the <xref:System.Threading.Tasks.Task.Status%2A> property, as well as the <xref:System.Threading.Tasks.Task.IsCanceled%2A>, <xref:System.Threading.Tasks.Task.IsCompleted%2A>, and <xref:System.Threading.Tasks.Task.IsFaulted%2A> properties, to determine the   state of a task.</span></span> <span data-ttu-id="794f4-106">In den meisten Fällen wird ein Lambda-Ausdruck verwendet, um die Arbeit anzugeben, die vom Task ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-106">Most commonly, a lambda expression is used to specify the work that the task is to perform.</span></span>  
  
 <span data-ttu-id="794f4-107"><xref:System.Threading.Tasks.Task%601>Instanzen können auf verschiedene Arten erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="794f4-107"><xref:System.Threading.Tasks.Task%601> instances may be created in a variety of ways.</span></span> <span data-ttu-id="794f4-108">Der gängigste Ansatz, der ab [!INCLUDE[net_v45](~/includes/net-v45-md.md)]verfügbar ist, ist das aufzurufen der statischen <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> -Methode <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> oder der-Methode.</span><span class="sxs-lookup"><span data-stu-id="794f4-108">The most common approach, which is available starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], is to call the static <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> or <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="794f4-109">Diese Methoden bieten eine einfache Möglichkeit, um eine Aufgabe zu starten, indem Standardwerte verwendet und keine zusätzlichen Parameter abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="794f4-109">These methods provide a simple way to start a task by using default values and without acquiring additional parameters.</span></span> <span data-ttu-id="794f4-110">Im folgenden Beispiel wird die <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> -Methode verwendet, um eine Aufgabe zu starten, die eine Schleife durchläuft und dann die Anzahl der Schleifen Iterationen anzeigt:</span><span class="sxs-lookup"><span data-stu-id="794f4-110">The following example uses the <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> method to start a task that loops and then displays the number of loop iterations:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task\`1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task`1/cs/run1.cs#6)]
 [!code-vb[System.Threading.Tasks.Task\`1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task`1/vb/run1.vb#6)]  
  
 <span data-ttu-id="794f4-111">Eine Alternative und die gängigste Methode zum Starten einer Aufgabe in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]besteht darin, die statische <xref:System.Threading.Tasks.TaskFactory.StartNew%2A?displayProperty=nameWithType> -Methode oder <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> die-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="794f4-111">An alternative, and the most common way to start a task in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], is to call the static <xref:System.Threading.Tasks.TaskFactory.StartNew%2A?displayProperty=nameWithType> or <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="794f4-112">Die <xref:System.Threading.Tasks.Task.Factory%2A?displayProperty=nameWithType> -Eigenschaft gibt <xref:System.Threading.Tasks.TaskFactory> ein-Objekt zurück <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> , und die <xref:System.Threading.Tasks.TaskFactory%601> -Eigenschaft gibt ein-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="794f4-112">The <xref:System.Threading.Tasks.Task.Factory%2A?displayProperty=nameWithType> property returns a <xref:System.Threading.Tasks.TaskFactory> object, and the <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property returns a <xref:System.Threading.Tasks.TaskFactory%601> object.</span></span> <span data-ttu-id="794f4-113">Über Ladungen ihrer `StartNew` -Methode ermöglichen es Ihnen, Argumente zu übergeben, Aufgaben Erstellungs Optionen zu definieren und einen Aufgabenplaner anzugeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-113">Overloads of their `StartNew` method let you pass arguments, define task creation options, and specify a task scheduler.</span></span> <span data-ttu-id="794f4-114">Im folgenden Beispiel wird die <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%29?displayProperty=nameWithType> -Methode verwendet, um eine Aufgabe zu starten.</span><span class="sxs-lookup"><span data-stu-id="794f4-114">The following example uses the <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%29?displayProperty=nameWithType> method to start a task.</span></span> <span data-ttu-id="794f4-115">Es ist funktional äquivalent zum Code im vorherigen Beispiel.</span><span class="sxs-lookup"><span data-stu-id="794f4-115">It is functionally equivalent to the code in the previous example.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task\`1#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task`1/cs/startnew1.cs#7)]
 [!code-vb[System.Threading.Tasks.Task\`1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task`1/vb/startnew1.vb#7)]  
  
 <span data-ttu-id="794f4-116">Ausführlichere Beispiele finden Sie unter [aufgabenbasierte asynchrone Programmierung](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="794f4-116">For more complete examples, see [Task-based Asynchronous Programming](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md).</span></span>  
  
 <span data-ttu-id="794f4-117">Die <xref:System.Threading.Tasks.Task%601> -Klasse stellt auch Konstruktoren bereit, die die Aufgabe initialisieren, diese aber nicht für die Ausführung planen.</span><span class="sxs-lookup"><span data-stu-id="794f4-117">The <xref:System.Threading.Tasks.Task%601> class also provides constructors that initialize the task but that do not schedule it for execution.</span></span> <span data-ttu-id="794f4-118">Aus Leistungsgründen sind die <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> - `Task.Factory.StartNew` Methode und die-Methode die bevorzugten Mechanismen zum Erstellen und Planen von Rechenaufgaben. in Szenarios, in denen die Erstellung und Planung von Aufgaben getrennt werden muss, können die-Konstruktoren verwendet werden, und der die- <xref:System.Threading.Tasks.Task.Start%2A> Methode der Aufgabe kann dann verwendet werden, um die Aufgabe zu einem späteren Zeitpunkt für die Ausführung zu planen.</span><span class="sxs-lookup"><span data-stu-id="794f4-118">For performance reasons, the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> and `Task.Factory.StartNew` methods are the preferred mechanisms for creating and scheduling computational tasks, but for scenarios where task creation and scheduling must be separated, the constructors may be used, and the task's <xref:System.Threading.Tasks.Task.Start%2A> method may then be used to schedule the task for execution at a later time.</span></span>  
  
 <span data-ttu-id="794f4-119">Beginnend mit Desktop-Apps, die [!INCLUDE[net_v46](~/includes/net-v46-md.md)]auf ausgerichtet sind, wird die Kultur des Threads, der einen Task erstellt und aufruft, Teil des Thread Kontexts.</span><span class="sxs-lookup"><span data-stu-id="794f4-119">Starting with desktop apps that target the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], the culture of the thread that creates and invokes a task becomes part of the thread's context.</span></span> <span data-ttu-id="794f4-120">Das heißt, unabhängig von der aktuellen Kultur des Threads, in dem die Aufgabe ausgeführt wird, ist die aktuelle Kultur der Aufgabe die Kultur des aufrufenden Threads.</span><span class="sxs-lookup"><span data-stu-id="794f4-120">That is, regardless of the current culture of the thread on which the task executes, the current culture of the task is the culture of the calling thread.</span></span> <span data-ttu-id="794f4-121">Für apps, die auf Versionen des .NET Framework vor dem [!INCLUDE[net_v46](~/includes/net-v46-md.md)]abzielen, ist die Kultur der Aufgabe die Kultur des Threads, in dem die Aufgabe ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-121">For apps that target versions of the .NET Framework prior to the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], the culture of the task is the culture of the thread on which the task executes.</span></span> <span data-ttu-id="794f4-122">Weitere Informationen finden Sie im Abschnitt "Kultur und aufgabenbasierte asynchrone Vorgänge" im <xref:System.Globalization.CultureInfo> Thema.</span><span class="sxs-lookup"><span data-stu-id="794f4-122">For more information, see the "Culture and task-based asynchronous operations" section in the <xref:System.Globalization.CultureInfo> topic.</span></span> <span data-ttu-id="794f4-123">Beachten Sie, dass Store-Apps dem Windows-Runtime unter Festlegen und erzielen der Standard Kultur folgen.</span><span class="sxs-lookup"><span data-stu-id="794f4-123">Note that Store apps follow the Windows Runtime in setting and getting the default culture.</span></span>  
  
<span data-ttu-id="794f4-124">Für Vorgänge, die keinen Wert zurückgeben, verwenden Sie die <xref:System.Threading.Tasks.Task> -Klasse.</span><span class="sxs-lookup"><span data-stu-id="794f4-124">For operations that do not return a value, you use the <xref:System.Threading.Tasks.Task> class.</span></span> <span data-ttu-id="794f4-125">Verwenden Sie C# ab 7,0 die-Struktur für eine einfachere Aufgabe, bei der <xref:System.Threading.Tasks.ValueTask%601?displayProperty=nameWithType> es sich um einen Werttyp und nicht um einen Verweistyp handelt.</span><span class="sxs-lookup"><span data-stu-id="794f4-125">Starting with C# 7.0, for a more lightweight task that is a value type rather than a reference type, use the <xref:System.Threading.Tasks.ValueTask%601?displayProperty=nameWithType> structure.</span></span> 
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="794f4-126">Alle Elemente von <see cref="T:System.Threading.Tasks.Task`1" />, mit Ausnahme <see cref="M:System.Threading.Tasks.Task.Dispose" />von, sind Thread sicher und können von mehreren Threads gleichzeitig verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="794f4-126">All members of <see cref="T:System.Threading.Tasks.Task`1" />, except for <see cref="M:System.Threading.Tasks.Task.Dispose" />, are thread-safe and may be used from multiple threads concurrently.</span></span></threadsafe>
    <altmember cref="T:System.Threading.Tasks.Task" />
    <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-127">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-127">Task Parallel Library (TPL)</span></span></related>
    <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-128">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-128">Task-based Asynchronous Programming</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Samples-for-Parallel-b4b76364"><span data-ttu-id="794f4-129">Beispiele für die parallele Programmierung mit dem .NET Framework</span><span class="sxs-lookup"><span data-stu-id="794f4-129">Samples for Parallel Programming with the .NET Framework</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="794f4-130">Initialisiert ein neues <see cref="T:System.Threading.Tasks.Task`1" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="794f4-130">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;TResult&gt; function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!TResult&gt; function) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (function As Func(Of TResult))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;TResult&gt; ^ function);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; function" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="794f4-131">Der Delegat, der den in der Aufgabe auszuführenden Code darstellt.</span><span class="sxs-lookup"><span data-stu-id="794f4-131">The delegate that represents the code to execute in the task.</span></span> <span data-ttu-id="794f4-132">Nachdem die Funktion abgeschlossen wurde, wird die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft der Aufgabe festgelegt, um den Ergebniswert der Funktion zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-132">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span></span></param>
        <summary><span data-ttu-id="794f4-133">Initialisiert einen neuen <see cref="T:System.Threading.Tasks.Task`1" /> mit der angegebenen Funktion.</span><span class="sxs-lookup"><span data-stu-id="794f4-133">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-134">Dieser Konstruktor sollte nur in erweiterten Szenarien verwendet werden, in denen es erforderlich ist, dass die Erstellung und der Start der Aufgabe getrennt werden.</span><span class="sxs-lookup"><span data-stu-id="794f4-134">This constructor should only be used in advanced scenarios where it is required that the creation and starting of the task is separated.</span></span>  
  
 <span data-ttu-id="794f4-135">Anstatt diesen Konstruktor aufzurufen, ist die gängigste Methode zum Instanziieren <xref:System.Threading.Tasks.Task%601> eines-Objekts und zum Starten einer Aufgabe das Aufrufen <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> der <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%29?displayProperty=nameWithType> statischen-Methode und der-Methode.</span><span class="sxs-lookup"><span data-stu-id="794f4-135">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> and <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%29?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="794f4-136">Wenn eine Aufgabe ohne Aktion nur für den Consumer einer API erforderlich ist, um etwas zu erwarten, sollte eine <xref:System.Threading.Tasks.TaskCompletionSource%601> verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="794f4-136">If a task with no action is needed just for the consumer of an API to have something to await, a <xref:System.Threading.Tasks.TaskCompletionSource%601> should be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="794f4-137">Im folgenden Beispiel wird die ungefähre Anzahl von Wörtern in Textdateien gezählt, die veröffentlichte Bücher darstellen.</span><span class="sxs-lookup"><span data-stu-id="794f4-137">The following example counts the approximate number of words in text files that represent published books.</span></span> <span data-ttu-id="794f4-138">Jede Aufgabe ist für das Öffnen einer Datei, das asynchrone Lesen des gesamten Inhalts und das Berechnen der Wort Anzahl mithilfe eines regulären Ausdrucks verantwortlich.</span><span class="sxs-lookup"><span data-stu-id="794f4-138">Each task is responsible for opening a file, reading its entire contents asynchronously, and calculating the word count by using a regular expression.</span></span> <span data-ttu-id="794f4-139">Die <xref:System.Threading.Tasks.Task.WaitAll%28System.Threading.Tasks.Task%5B%5D%29?displayProperty=nameWithType> -Methode wird aufgerufen, um sicherzustellen, dass alle Aufgaben abgeschlossen sind, bevor die Wort Anzahl der einzelnen Bücher in der Konsole angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-139">The <xref:System.Threading.Tasks.Task.WaitAll%28System.Threading.Tasks.Task%5B%5D%29?displayProperty=nameWithType> method is called to ensure that all tasks have completed before displaying the word count of each book to the console.</span></span>  
  
 <span data-ttu-id="794f4-140">Die Objekt Instanziierung ist in diesem Beispiel von der Objekt Ausführung getrennt, sodass das Beispiel sicherstellen kann, dass jede Datei vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-140">Object instantiation is separated from object execution in this example so that the example can ensure that each file exists.</span></span> <span data-ttu-id="794f4-141">Wenn dies nicht der Fall ist, wird der Name der fehlenden Datei angezeigt.</span><span class="sxs-lookup"><span data-stu-id="794f4-141">If they do not,  it displays the name of the missing file.</span></span> <span data-ttu-id="794f4-142">Andernfalls wird die-Methode <xref:System.Threading.Tasks.Task.Start%2A?displayProperty=nameWithType> aufgerufen, um die einzelnen Aufgaben zu starten.</span><span class="sxs-lookup"><span data-stu-id="794f4-142">Otherwise, it calls the <xref:System.Threading.Tasks.Task.Start%2A?displayProperty=nameWithType> method to launch each task.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.ctor/cs/run3.cs#2)]
 [!code-vb[System.Threading.Tasks.Task.ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.ctor/vb/run3.vb#2)]  
  
 <span data-ttu-id="794f4-143">Das Muster `\p{P}*\s+` für reguläre Ausdrücke entspricht keinem, einem oder mehreren Interpunktions Zeichen, gefolgt von einem oder mehreren Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="794f4-143">The regular expression pattern `\p{P}*\s+` matches zero, one, or more punctuation characters followed by one or more white-space characters.</span></span> <span data-ttu-id="794f4-144">Dabei wird davon ausgegangen, dass die Gesamtzahl der Übereinstimmungen gleich der ungefähren Wort Anzahl ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-144">It assumes that the total number of matches equals the approximate word count.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-145">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-145">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-146">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-146">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-147">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-147">Task-based Asynchronous Programming</span></span></related>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="794f4-148">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-148">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;object,TResult&gt; function, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;object, !TResult&gt; function, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (function As Func(Of Object, TResult), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;obj, 'Result&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; (function, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="794f4-149">Der Delegat, der den in der Aufgabe auszuführenden Code darstellt.</span><span class="sxs-lookup"><span data-stu-id="794f4-149">The delegate that represents the code to execute in the task.</span></span> <span data-ttu-id="794f4-150">Nachdem die Funktion abgeschlossen wurde, wird die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft der Aufgabe festgelegt, um den Ergebniswert der Funktion zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-150">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span></span></param>
        <param name="state"><span data-ttu-id="794f4-151">Ein Objekt, das Daten darstellt, die von der Aktion verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="794f4-151">An object representing data to be used by the action.</span></span></param>
        <summary><span data-ttu-id="794f4-152">Initialisiert einen neuen <see cref="T:System.Threading.Tasks.Task`1" /> mit den angegebenen Werten für Funktion und Zustand.</span><span class="sxs-lookup"><span data-stu-id="794f4-152">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function and state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-153">Anstatt diesen Konstruktor aufzurufen, ist die gängigste Methode zum Instanziieren <xref:System.Threading.Tasks.Task%601> eines-Objekts und zum Starten einer Aufgabe das Aufrufen <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%29?displayProperty=nameWithType> der statischen-Methode.</span><span class="sxs-lookup"><span data-stu-id="794f4-153">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="794f4-154">Der einzige von diesem Konstruktor angebotene Vorteil besteht darin, dass die Objekt Instanziierung von einem Task Aufruf getrennt werden kann.</span><span class="sxs-lookup"><span data-stu-id="794f4-154">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-155">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-155">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-156">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-156">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-157">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-157">Task-based Asynchronous Programming</span></span></related>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="794f4-158">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-158">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; (function, cancellationToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="794f4-159">Der Delegat, der den in der Aufgabe auszuführenden Code darstellt.</span><span class="sxs-lookup"><span data-stu-id="794f4-159">The delegate that represents the code to execute in the task.</span></span> <span data-ttu-id="794f4-160">Nachdem die Funktion abgeschlossen wurde, wird die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft der Aufgabe festgelegt, um den Ergebniswert der Funktion zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-160">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="794f4-161">Das <see cref="T:System.Threading.CancellationToken" />, das dieser Aufgabe zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-161">The <see cref="T:System.Threading.CancellationToken" /> to be assigned to this task.</span></span></param>
        <summary><span data-ttu-id="794f4-162">Initialisiert einen neuen <see cref="T:System.Threading.Tasks.Task`1" /> mit der angegebenen Funktion.</span><span class="sxs-lookup"><span data-stu-id="794f4-162">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-163">Anstatt diesen Konstruktor aufzurufen, ist die gängigste Methode zum Instanziieren <xref:System.Threading.Tasks.Task%601> eines-Objekts und zum Starten einer Aufgabe das Aufrufen <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> der <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> statischen-Methode und der-Methode.</span><span class="sxs-lookup"><span data-stu-id="794f4-163">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> and <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="794f4-164">Der einzige von diesem Konstruktor angebotene Vorteil besteht darin, dass die Objekt Instanziierung von einem Task Aufruf getrennt werden kann.</span><span class="sxs-lookup"><span data-stu-id="794f4-164">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-165">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-165">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-166">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-166">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-167">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-167">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-168">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-168">Task-based Asynchronous Programming</span></span></related>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="794f4-169">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-169">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;TResult&gt; function, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (function As Func(Of TResult), creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;TResult&gt; ^ function, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;'Result&gt; * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; (function, creationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="794f4-170">Der Delegat, der den in der Aufgabe auszuführenden Code darstellt.</span><span class="sxs-lookup"><span data-stu-id="794f4-170">The delegate that represents the code to execute in the task.</span></span> <span data-ttu-id="794f4-171">Nachdem die Funktion abgeschlossen wurde, wird die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft der Aufgabe festgelegt, um den Ergebniswert der Funktion zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-171">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="794f4-172">Das <see cref="T:System.Threading.Tasks.TaskCreationOptions" />, das verwendet wird, um das Verhalten der Aufgabe zu ändern.</span><span class="sxs-lookup"><span data-stu-id="794f4-172">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span></span></param>
        <summary><span data-ttu-id="794f4-173">Initialisiert einen neuen <see cref="T:System.Threading.Tasks.Task`1" /> mit den angegebenen Werten für Funktion und Erstellungsoptionen.</span><span class="sxs-lookup"><span data-stu-id="794f4-173">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function and creation options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-174">Anstatt diesen Konstruktor aufzurufen, ist die gängigste Methode zum Instanziieren <xref:System.Threading.Tasks.Task%601> eines-Objekts und zum Starten einer Aufgabe das Aufrufen <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%2CSystem.Threading.Tasks.TaskCreationOptions%29?displayProperty=nameWithType> der statischen-Methode.</span><span class="sxs-lookup"><span data-stu-id="794f4-174">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%2CSystem.Threading.Tasks.TaskCreationOptions%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="794f4-175">Der einzige von diesem Konstruktor angebotene Vorteil besteht darin, dass die Objekt Instanziierung von einem Task Aufruf getrennt werden kann.</span><span class="sxs-lookup"><span data-stu-id="794f4-175">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794f4-176">Das <paramref name="creationOptions" />-Argument gibt einen ungültigen Wert für <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> an.</span><span class="sxs-lookup"><span data-stu-id="794f4-176">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-177">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-177">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-178">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-178">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-179">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-179">Task-based Asynchronous Programming</span></span></related>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="794f4-180">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-180">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; (function, state, cancellationToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="794f4-181">Der Delegat, der den in der Aufgabe auszuführenden Code darstellt.</span><span class="sxs-lookup"><span data-stu-id="794f4-181">The delegate that represents the code to execute in the task.</span></span> <span data-ttu-id="794f4-182">Nachdem die Funktion abgeschlossen wurde, wird die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft der Aufgabe festgelegt, um den Ergebniswert der Funktion zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-182">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span></span></param>
        <param name="state"><span data-ttu-id="794f4-183">Ein Objekt, das Daten darstellt, die von der Funktion verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="794f4-183">An object representing data to be used by the function.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="794f4-184">Das <see cref="T:System.Threading.CancellationToken" />, das der neuen Aufgabe zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-184">The <see cref="T:System.Threading.CancellationToken" /> to be assigned to the new task.</span></span></param>
        <summary><span data-ttu-id="794f4-185">Initialisiert einen neuen <see cref="T:System.Threading.Tasks.Task`1" /> mit den angegebenen Werten für Aktion, Zustand und Optionen.</span><span class="sxs-lookup"><span data-stu-id="794f4-185">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified action, state, and options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-186">Anstatt diesen Konstruktor aufzurufen, ist die gängigste Methode zum Instanziieren <xref:System.Threading.Tasks.Task%601> eines-Objekts und zum Starten einer Aufgabe das Aufrufen <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> der statischen-Methode.</span><span class="sxs-lookup"><span data-stu-id="794f4-186">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="794f4-187">Der einzige von diesem Konstruktor angebotene Vorteil besteht darin, dass die Objekt Instanziierung von einem Task Aufruf getrennt werden kann.</span><span class="sxs-lookup"><span data-stu-id="794f4-187">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-188">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-188">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-189">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-189">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-190">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-190">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-191">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-191">Task-based Asynchronous Programming</span></span></related>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="794f4-192">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-192">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;object,TResult&gt; function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (function As Func(Of Object, TResult), state As Object, creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;obj, 'Result&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; (function, state, creationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="794f4-193">Der Delegat, der den in der Aufgabe auszuführenden Code darstellt.</span><span class="sxs-lookup"><span data-stu-id="794f4-193">The delegate that represents the code to execute in the task.</span></span> <span data-ttu-id="794f4-194">Nachdem die Funktion abgeschlossen wurde, wird die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft der Aufgabe festgelegt, um den Ergebniswert der Funktion zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-194">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span></span></param>
        <param name="state"><span data-ttu-id="794f4-195">Ein Objekt, das Daten darstellt, die von der Funktion verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="794f4-195">An object representing data to be used by the function.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="794f4-196">Das <see cref="T:System.Threading.Tasks.TaskCreationOptions" />, das verwendet wird, um das Verhalten der Aufgabe zu ändern.</span><span class="sxs-lookup"><span data-stu-id="794f4-196">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span></span></param>
        <summary><span data-ttu-id="794f4-197">Initialisiert einen neuen <see cref="T:System.Threading.Tasks.Task`1" /> mit den angegebenen Werten für Aktion, Zustand und Optionen.</span><span class="sxs-lookup"><span data-stu-id="794f4-197">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified action, state, and options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-198">Anstatt diesen Konstruktor aufzurufen, ist die gängigste Methode zum Instanziieren <xref:System.Threading.Tasks.Task%601> eines-Objekts und zum Starten einer Aufgabe das Aufrufen <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.Tasks.TaskCreationOptions%29?displayProperty=nameWithType> der statischen-Methode.</span><span class="sxs-lookup"><span data-stu-id="794f4-198">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.Tasks.TaskCreationOptions%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="794f4-199">Der einzige von diesem Konstruktor angebotene Vorteil besteht darin, dass die Objekt Instanziierung von einem Task Aufruf getrennt werden kann.</span><span class="sxs-lookup"><span data-stu-id="794f4-199">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794f4-200">Das <paramref name="creationOptions" />-Argument gibt einen ungültigen Wert für <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> an.</span><span class="sxs-lookup"><span data-stu-id="794f4-200">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-201">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-201">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-202">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-202">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-203">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-203">Task-based Asynchronous Programming</span></span></related>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="794f4-204">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-204">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; (function, cancellationToken, creationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="794f4-205">Der Delegat, der den in der Aufgabe auszuführenden Code darstellt.</span><span class="sxs-lookup"><span data-stu-id="794f4-205">The delegate that represents the code to execute in the task.</span></span> <span data-ttu-id="794f4-206">Nachdem die Funktion abgeschlossen wurde, wird die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft der Aufgabe festgelegt, um den Ergebniswert der Funktion zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-206">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="794f4-207">Das <see cref="T:System.Threading.CancellationToken" />, das der neuen Aufgabe zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-207">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="794f4-208">Das <see cref="T:System.Threading.Tasks.TaskCreationOptions" />, das verwendet wird, um das Verhalten der Aufgabe zu ändern.</span><span class="sxs-lookup"><span data-stu-id="794f4-208">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span></span></param>
        <summary><span data-ttu-id="794f4-209">Initialisiert einen neuen <see cref="T:System.Threading.Tasks.Task`1" /> mit den angegebenen Werten für Funktion und Erstellungsoptionen.</span><span class="sxs-lookup"><span data-stu-id="794f4-209">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function and creation options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-210">Anstatt diesen Konstruktor aufzurufen, ist die gängigste Methode zum Instanziieren <xref:System.Threading.Tasks.Task%601> eines-Objekts und zum Starten einer Aufgabe das Aufrufen <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%2CSystem.Threading.Tasks.TaskCreationOptions%2CSystem.Threading.Tasks.TaskScheduler%29?displayProperty=nameWithType> der statischen-Methode.</span><span class="sxs-lookup"><span data-stu-id="794f4-210">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%2CSystem.Threading.Tasks.TaskCreationOptions%2CSystem.Threading.Tasks.TaskScheduler%29?displayProperty=nameWithType> method.</span></span>  <span data-ttu-id="794f4-211">Der einzige von diesem Konstruktor angebotene Vorteil besteht darin, dass die Objekt Instanziierung von einem Task Aufruf getrennt werden kann.</span><span class="sxs-lookup"><span data-stu-id="794f4-211">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-212">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-212">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794f4-213">Das <paramref name="creationOptions" />-Argument gibt einen ungültigen Wert für <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> an.</span><span class="sxs-lookup"><span data-stu-id="794f4-213">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-214">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-214">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-215">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-215">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-216">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-216">Task-based Asynchronous Programming</span></span></related>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="794f4-217">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-217">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; (function, state, cancellationToken, creationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="794f4-218">Der Delegat, der den in der Aufgabe auszuführenden Code darstellt.</span><span class="sxs-lookup"><span data-stu-id="794f4-218">The delegate that represents the code to execute in the task.</span></span> <span data-ttu-id="794f4-219">Nachdem die Funktion abgeschlossen wurde, wird die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft der Aufgabe festgelegt, um den Ergebniswert der Funktion zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-219">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span></span></param>
        <param name="state"><span data-ttu-id="794f4-220">Ein Objekt, das Daten darstellt, die von der Funktion verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="794f4-220">An object representing data to be used by the function.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="794f4-221">Das <see cref="T:System.Threading.CancellationToken" />, das der neuen Aufgabe zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-221">The <see cref="T:System.Threading.CancellationToken" /> to be assigned to the new task.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="794f4-222">Das <see cref="T:System.Threading.Tasks.TaskCreationOptions" />, das verwendet wird, um das Verhalten der Aufgabe zu ändern.</span><span class="sxs-lookup"><span data-stu-id="794f4-222">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span></span></param>
        <summary><span data-ttu-id="794f4-223">Initialisiert einen neuen <see cref="T:System.Threading.Tasks.Task`1" /> mit den angegebenen Werten für Aktion, Zustand und Optionen.</span><span class="sxs-lookup"><span data-stu-id="794f4-223">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified action, state, and options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-224">Anstatt diesen Konstruktor aufzurufen, ist die gängigste Methode zum Instanziieren <xref:System.Threading.Tasks.Task%601> eines-Objekts und zum Starten einer Aufgabe das Aufrufen <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.CancellationToken%2CSystem.Threading.Tasks.TaskCreationOptions%2CSystem.Threading.Tasks.TaskScheduler%29?displayProperty=nameWithType> der statischen-Methode.</span><span class="sxs-lookup"><span data-stu-id="794f4-224">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.CancellationToken%2CSystem.Threading.Tasks.TaskCreationOptions%2CSystem.Threading.Tasks.TaskScheduler%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="794f4-225">Der einzige von diesem Konstruktor angebotene Vorteil besteht darin, dass die Objekt Instanziierung von einem Task Aufruf getrennt werden kann.</span><span class="sxs-lookup"><span data-stu-id="794f4-225">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-226">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-226">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794f4-227">Das <paramref name="creationOptions" />-Argument gibt einen ungültigen Wert für <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> an.</span><span class="sxs-lookup"><span data-stu-id="794f4-227">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-228">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-228">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-229">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-229">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-230">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-230">Task-based Asynchronous Programming</span></span></related>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="794f4-231">Das <paramref name="function" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-231">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConfigureAwait">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;TResult&gt; ConfigureAwait (bool continueOnCapturedContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1&lt;!TResult&gt; ConfigureAwait(bool continueOnCapturedContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ConfigureAwait(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureAwait (continueOnCapturedContext As Boolean) As ConfiguredTaskAwaitable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ConfiguredTaskAwaitable&lt;TResult&gt; ConfigureAwait(bool continueOnCapturedContext);" />
      <MemberSignature Language="F#" Value="override this.ConfigureAwait : bool -&gt; System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;'Result&gt;" Usage="task.ConfigureAwait continueOnCapturedContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continueOnCapturedContext" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="continueOnCapturedContext"><span data-ttu-id="794f4-232">"True", um zu versuchen, die Fortsetzung zurück in den ursprünglich erfassten Text zu marshallen; andernfalls "False".</span><span class="sxs-lookup"><span data-stu-id="794f4-232">true to attempt to marshal the continuation back to the original context captured; otherwise, false.</span></span></param>
        <summary><span data-ttu-id="794f4-233">Konfiguriert einen Awaiter, der verwendet wird, um diese <see cref="T:System.Threading.Tasks.Task`1" /> zu erwarten.</span><span class="sxs-lookup"><span data-stu-id="794f4-233">Configures an awaiter used to await this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></summary>
        <returns><span data-ttu-id="794f4-234">Ein Objekt, das verwendet wird, um diese Aufgabe zu erwarten.</span><span class="sxs-lookup"><span data-stu-id="794f4-234">An object used to await this task.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWith">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="794f4-235">Erstellt eine Fortsetzungsaufgabe, die ausgeführt wird, wenn eine andere Aufgabe beendet ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-235">Creates a continuation task that executes when another task completes.</span></span></summary>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-236">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-236">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-237">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-237">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-238">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-238">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; continuationAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;&gt; continuationAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult))) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ continuationAction);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;&gt; -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith continuationAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="continuationAction"><span data-ttu-id="794f4-239">Eine Aktion, die beim Abschluss vom vorhergehenden <see cref="T:System.Threading.Tasks.Task`1" /> ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-239">An action to run when the antecedent <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-240">Bei der Ausführung wird dem Delegaten die abgeschlossene Aufgabe als Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-240">When run, the delegate will be passed the completed task as an argument.</span></span></param>
        <summary><span data-ttu-id="794f4-241">Erstellt eine Fortsetzung, die asynchron ausgeführt wird, wenn die Zielaufgabe abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-241">Creates a continuation that executes asynchronously when the target task completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-242">Eine neue Fortsetzungsaufgabe.</span><span class="sxs-lookup"><span data-stu-id="794f4-242">A new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-243">Die zurück <xref:System.Threading.Tasks.Task> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob Sie abgeschlossen wurde, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder frühzeitig abgebrochen wird</span><span class="sxs-lookup"><span data-stu-id="794f4-243">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting early due to being canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="794f4-244">Im folgenden Beispiel wird eine Vorgänger Aufgabe erstellt, die das Sieb von Eratosthenes verwendet, um die Primzahlen zwischen 1 und einem Wert zu berechnen, der vom Benutzer eingegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-244">The following example creates an antecedent task that uses the Sieve of Eratosthenes to calculate the prime numbers between 1 and a value entered by the user.</span></span> <span data-ttu-id="794f4-245">Ein Array wird zum Speichern von Informationen über die Primzahlen verwendet.</span><span class="sxs-lookup"><span data-stu-id="794f4-245">An array is used to hold information about the prime numbers.</span></span> <span data-ttu-id="794f4-246">Der Array Index stellt die Zahl dar, und der Wert des Elements gibt an, ob diese Zahl zusammengesetzt ist `true`(der Wert ist) oder Prim (der Wert ist `false`).</span><span class="sxs-lookup"><span data-stu-id="794f4-246">The array index represents the number, and the element's value indicates whether that number is composite (its value is `true`) or prime (its value is `false`).</span></span> <span data-ttu-id="794f4-247">Diese Aufgabe wird dann an eine Fortsetzungs Aufgabe weitergegeben, die dafür verantwortlich ist, die Primzahlen aus dem ganzzahligen Array zu extrahieren und anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="794f4-247">This task is then passed to a continuation task, which is responsible for extracting the prime numbers from the integer array and displaying them.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task\`1.ContinueWith#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/cs/continue2.cs#2)]
 [!code-vb[System.Threading.Tasks.Task\`1.ContinueWith#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/vb/continue2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-248"><see cref="T:System.Threading.Tasks.Task`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="794f4-248">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-249">Das <paramref name="continuationAction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-249">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-250">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-250">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-251">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-251">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-252">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-252">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object&gt; continuationAction, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object&gt; continuationAction, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult), Object), state As Object) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^&gt; ^ continuationAction, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj&gt; * obj -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="continuationAction"><span data-ttu-id="794f4-253">Eine Aktion, die beim Abschluss von <see cref="T:System.Threading.Tasks.Task`1" /> ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-253">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-254">Wenn der Delegat ausgeführt wird, werden ihm der abgeschlossene Task und das vom Aufrufer bereitgestellte Zustandsobjekt als Argumente übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-254">When run, the delegate is   passed the completed task and the caller-supplied state object as arguments.</span></span></param>
        <param name="state"><span data-ttu-id="794f4-255">Ein Objekt, das Daten darstellt, die von der Fortsetzungsaktion verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="794f4-255">An object representing data to be used by the continuation action.</span></span></param>
        <summary><span data-ttu-id="794f4-256">Erstellt eine Fortsetzung, an die Zustandsinformationen übergeben werden und die ausgeführt wird, wenn der Ziel-<see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-256">Creates a continuation that is passed state information and that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-257">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-257">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-258">Der zurück <xref:System.Threading.Tasks.Task> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob der Vorgang abgeschlossen ist, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder ein frühzeitiger Abbruch abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-258">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="794f4-259">Im folgenden Beispiel wird eine Aufgabe erstellt, der eine ganze Zahl zwischen 2 und 20 und ein Array mit den ersten zehn Exponenten (von n<sup>1</sup> bis n<sup>10</sup>) dieser Zahl übermittelt wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-259">The following example creates a task that is passed an integer between 2 and 20 and returns an array that contains the first ten exponents (from n<sup>1</sup> to n<sup>10</sup>) of that number.</span></span> <span data-ttu-id="794f4-260">Eine Fortsetzungs Aufgabe ist dann dafür verantwortlich, die Exponenten anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="794f4-260">A continuation task is then responsible for displaying the exponents.</span></span> <span data-ttu-id="794f4-261">Es werden sowohl der Vorgänger als auch die ursprüngliche Zahl, deren expenten der Vorgänger generiert hat, an Sie übermittelt.</span><span class="sxs-lookup"><span data-stu-id="794f4-261">It is passed both the antecedent and the original number whose exponents the antecedent generates.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task\`1.ContinueWith#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/cs/continuewith3.cs#3)]
 [!code-vb[System.Threading.Tasks.Task\`1.ContinueWith#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/vb/continuewith3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-262">Das <paramref name="continuationAction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-262">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-263">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-263">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; continuationAction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="continuationAction"><span data-ttu-id="794f4-264">Eine Aktion, die beim Abschluss von <see cref="T:System.Threading.Tasks.Task`1" /> ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-264">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-265">Bei der Ausführung wird dem Delegaten die abgeschlossene Aufgabe als Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-265">When run, the delegate is passed the completed task as an argument.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="794f4-266">Das Abbruchtoken, das an die neue Fortsetzungsaufgabe übergeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-266">The cancellation token that is passed to the new continuation task.</span></span></param>
        <summary><span data-ttu-id="794f4-267">Erstellt eine abzubrechende Fortsetzung, die asynchron ausgeführt wird, wenn die Ziel-<see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-267">Creates a cancelable continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-268">Eine neue Fortsetzungsaufgabe.</span><span class="sxs-lookup"><span data-stu-id="794f4-268">A new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-269">Der zurück <xref:System.Threading.Tasks.Task> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob der Vorgang abgeschlossen ist, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder ein frühzeitiger Abbruch abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-269">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="794f4-270">Im folgenden Beispiel wird eine Vorgänger Aufgabe erstellt, die das Sieb von Eratosthenes verwendet, um die Primzahlen zwischen 1 und einem Wert zu berechnen, der vom Benutzer eingegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-270">The following example creates an antecedent task that uses the Sieve of Eratosthenes to calculate the prime numbers between 1 and a value entered by the user.</span></span> <span data-ttu-id="794f4-271">Ein Array wird zum Speichern von Informationen über die Primzahlen verwendet.</span><span class="sxs-lookup"><span data-stu-id="794f4-271">An array is used to hold information about the prime numbers.</span></span> <span data-ttu-id="794f4-272">Der Array Index stellt die Zahl dar, und der Wert des Elements gibt an, ob diese Zahl zusammengesetzt ist `true`(der Wert ist) oder Prim (der Wert ist `false`).</span><span class="sxs-lookup"><span data-stu-id="794f4-272">The array index represents the number, and the element's value indicates whether that number is composite (its value is `true`) or prime (its value is `false`).</span></span> <span data-ttu-id="794f4-273">Diese Aufgabe wird dann an eine Fortsetzungs Aufgabe weitergegeben, die dafür verantwortlich ist, die Primzahlen aus dem ganzzahligen Array zu extrahieren und anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="794f4-273">This task is then passed to a continuation task, which is responsible for extracting the prime numbers from the integer array and displaying them.</span></span>  
  
 <span data-ttu-id="794f4-274">Ein Abbruch Token wird an die vorangehende und Fortsetzungs Aufgabe weitergegeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-274">A cancellation token is passed to both the antecedent and the continuation task.</span></span> <span data-ttu-id="794f4-275">Ein <xref:System.Timers.Timer?displayProperty=nameWithType> -Objekt wird verwendet, um einen Timeout Wert von 100 Millisekunden zu definieren.</span><span class="sxs-lookup"><span data-stu-id="794f4-275">A <xref:System.Timers.Timer?displayProperty=nameWithType> object is used to define a timeout value of 100 milliseconds.</span></span> <span data-ttu-id="794f4-276">Wenn das-Ereignis ausgelöst wird <xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=nameWithType> , wird die-Methode aufgerufen, und das Abbruch Token wird verwendet, um den Abbruch der Tasks anzufordern.</span><span class="sxs-lookup"><span data-stu-id="794f4-276">If the event fires, the <xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=nameWithType> method is called, and the cancellation token is used to request cancellation of the tasks.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task\`1.ContinueWith#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/cs/continue1.cs#1)]
 [!code-vb[System.Threading.Tasks.Task\`1.ContinueWith#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/vb/continue1.vb#1)]  
  
 <span data-ttu-id="794f4-277">Die Angabe eines Werts von ungefähr 100.000 bewirkt in der Regel, dass das Timeout Intervall <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> abläuft und das-Ereignis ausgelöst und die Abbruch Anforderung festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-277">Typically, supplying a value of about 100,000 causes the timeout interval to expire and the <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event to fire, and the cancellation request to be set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-278"><see cref="T:System.Threading.Tasks.Task`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="794f4-278">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span></span>  
  
<span data-ttu-id="794f4-279">- oder -</span><span class="sxs-lookup"><span data-stu-id="794f4-279">-or-</span></span> 
<span data-ttu-id="794f4-280">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde gelöscht.</span><span class="sxs-lookup"><span data-stu-id="794f4-280">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-281">Das <paramref name="continuationAction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-281">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-282">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-282">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-283">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-283">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-284">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-284">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;&gt; continuationAction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult)), continuationOptions As TaskContinuationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ continuationAction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="continuationAction"><span data-ttu-id="794f4-285">Eine Aktion entsprechend der in <paramref name="continuationOptions" /> angegebenen Bedingung.</span><span class="sxs-lookup"><span data-stu-id="794f4-285">An action to according the condition specified in <paramref name="continuationOptions" />.</span></span> <span data-ttu-id="794f4-286">Bei der Ausführung wird dem Delegaten die abgeschlossene Aufgabe als Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-286">When run, the delegate will be passed the completed task as an argument.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="794f4-287">Optionen für die Planung und das Verhalten der Fortsetzung.</span><span class="sxs-lookup"><span data-stu-id="794f4-287">Options for when the continuation is scheduled and how it behaves.</span></span> <span data-ttu-id="794f4-288">Dazu zählen Kriterien wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" /> und Ausführungsoptionen wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-288">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span></span></param>
        <summary><span data-ttu-id="794f4-289">Erstellt eine Fortsetzung, die nach der in <paramref name="continuationOptions" /> angegebenen Bedingung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-289">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span></span></summary>
        <returns><span data-ttu-id="794f4-290">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-290">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-291">Die zurück <xref:System.Threading.Tasks.Task> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-291">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed.</span></span> <span data-ttu-id="794f4-292">Wenn die durch den `continuationOptions` -Parameter angegebenen Fortsetzungs Kriterien nicht erfüllt werden, wird die Fortsetzungs Aufgabe abgebrochen und nicht geplant.</span><span class="sxs-lookup"><span data-stu-id="794f4-292">If the continuation criteria specified through the `continuationOptions` parameter are not met, the continuation task will be canceled instead of scheduled.</span></span>  
  
 <span data-ttu-id="794f4-293">Weitere Informationen finden Sie unter [Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben](~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="794f4-293">For more information, see [Chaining Tasks by Using Continuation Tasks](~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-294"><see cref="T:System.Threading.Tasks.Task`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="794f4-294">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-295">Das <paramref name="continuationAction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-295">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794f4-296">Das <paramref name="continuationOptions" />-Argument gibt einen ungültigen Wert für <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> an.</span><span class="sxs-lookup"><span data-stu-id="794f4-296">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-297">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-297">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-298">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-298">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-299">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-299">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; continuationAction, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;&gt; continuationAction, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult)), scheduler As TaskScheduler) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ continuationAction, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;&gt; * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="continuationAction"><span data-ttu-id="794f4-300">Eine Aktion, die beim Abschluss von <see cref="T:System.Threading.Tasks.Task`1" /> ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-300">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-301">Bei der Ausführung wird dem Delegaten die abgeschlossene Aufgabe als Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-301">When run, the delegate will be passed the completed task as an argument.</span></span></param>
        <param name="scheduler"><span data-ttu-id="794f4-302">Das <see cref="T:System.Threading.Tasks.TaskScheduler" />, das der Fortsetzungsaufgabe zugeordnet und für ihre Ausführung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-302">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span></span></param>
        <summary><span data-ttu-id="794f4-303">Erstellt eine Fortsetzung, die asynchron ausgeführt wird, wenn der Ziel-<see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-303">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-304">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-304">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-305">Der zurück <xref:System.Threading.Tasks.Task> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob der Vorgang abgeschlossen ist, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder ein frühzeitiger Abbruch abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-305">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-306"><see cref="T:System.Threading.Tasks.Task`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="794f4-306">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-307">Das <paramref name="continuationAction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-307">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="794f4-308">- oder -</span><span class="sxs-lookup"><span data-stu-id="794f4-308">-or-</span></span> 
<span data-ttu-id="794f4-309">Das <paramref name="scheduler" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-309">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-310">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-310">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-311">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-311">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-312">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-312">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object&gt; continuationAction, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object&gt; continuationAction, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^&gt; ^ continuationAction, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, state, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="continuationAction"><span data-ttu-id="794f4-313">Eine Aktion, die beim Abschluss von <see cref="T:System.Threading.Tasks.Task`1" /> ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-313">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-314">Bei der Ausführung werden dem Delegaten die abgeschlossene Aufgabe und das vom Aufrufer angegebene Zustandsobjekt als Argumente übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-314">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span></span></param>
        <param name="state"><span data-ttu-id="794f4-315">Ein Objekt, das Daten darstellt, die von der Fortsetzungsaktion verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="794f4-315">An object representing data to be used by the continuation action.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="794f4-316">Das <see cref="T:System.Threading.CancellationToken" />, das der neuen Fortsetzungsaufgabe zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-316">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span></span></param>
        <summary><span data-ttu-id="794f4-317">Erstellt eine Fortsetzung, die ausgeführt wird, wenn die Ziel-<see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-317">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-318">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-318">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-319">Der zurück <xref:System.Threading.Tasks.Task> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob der Vorgang abgeschlossen ist, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder ein frühzeitiger Abbruch abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-319">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has  completed, whether it completes due to running to completion successfully, faulting due to an  unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-320">Das <paramref name="continuationAction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-320">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-321">Das angegebene <see cref="T:System.Threading.CancellationToken" /> wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-321">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-322">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-322">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object&gt; continuationAction, object state, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object&gt; continuationAction, object state, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult), Object), state As Object, continuationOptions As TaskContinuationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^&gt; ^ continuationAction, System::Object ^ state, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj&gt; * obj * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, state, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="continuationAction"><span data-ttu-id="794f4-323">Eine Aktion, die beim Abschluss von <see cref="T:System.Threading.Tasks.Task`1" /> ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-323">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-324">Bei der Ausführung werden dem Delegaten die abgeschlossene Aufgabe und das vom Aufrufer angegebene Zustandsobjekt als Argumente übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-324">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span></span></param>
        <param name="state"><span data-ttu-id="794f4-325">Ein Objekt, das Daten darstellt, die von der Fortsetzungsaktion verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="794f4-325">An object representing data to be used by the continuation action.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="794f4-326">Optionen für die Planung und das Verhalten der Fortsetzung.</span><span class="sxs-lookup"><span data-stu-id="794f4-326">Options for when the continuation is scheduled and how it behaves.</span></span> <span data-ttu-id="794f4-327">Dazu zählen Kriterien wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" /> und Ausführungsoptionen wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-327">This includes criteria, such  as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span></span></param>
        <summary><span data-ttu-id="794f4-328">Erstellt eine Fortsetzung, die ausgeführt wird, wenn die Ziel-<see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-328">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-329">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-329">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-330">Die zurück <xref:System.Threading.Tasks.Task> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-330">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed.</span></span> <span data-ttu-id="794f4-331">Wenn die durch den `continuationOptions` -Parameter angegebenen Fortsetzungs Kriterien nicht erfüllt werden, wird die Fortsetzungs Aufgabe abgebrochen und nicht geplant.</span><span class="sxs-lookup"><span data-stu-id="794f4-331">If the continuation criteria specified through the `continuationOptions` parameter are not met, the continuation task will be canceled instead of scheduled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-332">Das <paramref name="continuationAction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-332">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794f4-333">Das <paramref name="continuationOptions" />-Argument gibt einen ungültigen Wert für <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> an.</span><span class="sxs-lookup"><span data-stu-id="794f4-333">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-334">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-334">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object&gt; continuationAction, object state, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object&gt; continuationAction, object state, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult), Object), state As Object, scheduler As TaskScheduler) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^&gt; ^ continuationAction, System::Object ^ state, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj&gt; * obj * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, state, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="continuationAction"><span data-ttu-id="794f4-335">Eine Aktion, die beim Abschluss von <see cref="T:System.Threading.Tasks.Task`1" /> ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-335">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-336">Bei der Ausführung werden dem Delegaten die abgeschlossene Aufgabe und das vom Aufrufer angegebene Zustandsobjekt als Argumente übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-336">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span></span></param>
        <param name="state"><span data-ttu-id="794f4-337">Ein Objekt, das Daten darstellt, die von der Fortsetzungsaktion verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="794f4-337">An object representing data to be used by the continuation action.</span></span></param>
        <param name="scheduler"><span data-ttu-id="794f4-338">Das <see cref="T:System.Threading.Tasks.TaskScheduler" />, das der Fortsetzungsaufgabe zugeordnet und für ihre Ausführung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-338">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span></span></param>
        <summary><span data-ttu-id="794f4-339">Erstellt eine Fortsetzung, die ausgeführt wird, wenn die Ziel-<see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-339">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-340">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-340">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-341">Der zurück <xref:System.Threading.Tasks.Task> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob der Vorgang abgeschlossen ist, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder ein frühzeitiger Abbruch abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-341">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-342">Das <paramref name="scheduler" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-342">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-343">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-343">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="continuationAction"><span data-ttu-id="794f4-344">Eine Aktion, die entsprechend der in <paramref name="continuationOptions" /> angegebenen Bedingung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-344">An action to run according the condition specified in <paramref name="continuationOptions" />.</span></span> <span data-ttu-id="794f4-345">Bei der Ausführung wird dem Delegaten die abgeschlossene Aufgabe als Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-345">When run, the delegate will be passed the completed task as an argument.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="794f4-346">Das <see cref="T:System.Threading.CancellationToken" />, das der neuen Fortsetzungsaufgabe zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-346">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="794f4-347">Optionen für die Planung und das Verhalten der Fortsetzung.</span><span class="sxs-lookup"><span data-stu-id="794f4-347">Options for when the continuation is scheduled and how it behaves.</span></span> <span data-ttu-id="794f4-348">Dazu zählen Kriterien wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" /> und Ausführungsoptionen wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-348">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span></span></param>
        <param name="scheduler"><span data-ttu-id="794f4-349">Das <see cref="T:System.Threading.Tasks.TaskScheduler" />, das der Fortsetzungsaufgabe zugeordnet und für ihre Ausführung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-349">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span></span></param>
        <summary><span data-ttu-id="794f4-350">Erstellt eine Fortsetzung, die nach der in <paramref name="continuationOptions" /> angegebenen Bedingung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-350">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span></span></summary>
        <returns><span data-ttu-id="794f4-351">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-351">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-352">Die zurück <xref:System.Threading.Tasks.Task> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-352">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed.</span></span> <span data-ttu-id="794f4-353">Wenn die durch den `continuationOptions` -Parameter angegebenen Kriterien nicht erfüllt werden, wird die Fortsetzungs Aufgabe abgebrochen und nicht geplant.</span><span class="sxs-lookup"><span data-stu-id="794f4-353">If the criteria specified through the `continuationOptions` parameter are not met, the continuation task will be canceled instead of scheduled.</span></span> <span data-ttu-id="794f4-354">Weitere Informationen finden Sie unter [Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben](~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="794f4-354">For more information, see [Chaining Tasks by Using Continuation Tasks](~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-355"><see cref="T:System.Threading.Tasks.Task`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="794f4-355">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span></span>  
  
<span data-ttu-id="794f4-356">- oder -</span><span class="sxs-lookup"><span data-stu-id="794f4-356">-or-</span></span> 
<span data-ttu-id="794f4-357">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-357">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-358">Das <paramref name="continuationAction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-358">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="794f4-359">- oder -</span><span class="sxs-lookup"><span data-stu-id="794f4-359">-or-</span></span> 
<span data-ttu-id="794f4-360">Das <paramref name="scheduler" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-360">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794f4-361">Das <paramref name="continuationOptions" />-Argument gibt einen ungültigen Wert für <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> an.</span><span class="sxs-lookup"><span data-stu-id="794f4-361">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-362">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-362">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-363">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-363">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-364">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-364">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object&gt; continuationAction, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object&gt; continuationAction, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^&gt; ^ continuationAction, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj&gt; * obj * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, state, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="continuationAction"><span data-ttu-id="794f4-365">Eine Aktion, die beim Abschluss von <see cref="T:System.Threading.Tasks.Task`1" /> ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-365">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-366">Bei der Ausführung werden dem Delegaten die abgeschlossene Aufgabe und das vom Aufrufer angegebene Zustandsobjekt als Argumente übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-366">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span></span></param>
        <param name="state"><span data-ttu-id="794f4-367">Ein Objekt, das Daten darstellt, die von der Fortsetzungsaktion verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="794f4-367">An object representing data to be used by the continuation action.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="794f4-368">Das <see cref="T:System.Threading.CancellationToken" />, das der neuen Fortsetzungsaufgabe zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-368">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="794f4-369">Optionen für die Planung und das Verhalten der Fortsetzung.</span><span class="sxs-lookup"><span data-stu-id="794f4-369">Options for when the continuation is scheduled and how it behaves.</span></span> <span data-ttu-id="794f4-370">Dazu zählen Kriterien wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" /> und Ausführungsoptionen wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-370">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as  well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span></span></param>
        <param name="scheduler"><span data-ttu-id="794f4-371">Der <see cref="T:System.Threading.Tasks.TaskScheduler" />, der der Fortsetzungsaufgabe zugeordnet und für ihre Ausführung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-371">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its  execution.</span></span></param>
        <summary><span data-ttu-id="794f4-372">Erstellt eine Fortsetzung, die ausgeführt wird, wenn die Ziel-<see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-372">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-373">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-373">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-374">Die zurück <xref:System.Threading.Tasks.Task> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-374">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has  completed.</span></span> <span data-ttu-id="794f4-375">Wenn die durch den `continuationOptions` -Parameter angegebenen Kriterien nicht erfüllt werden, wird die Fortsetzungs Aufgabe abgebrochen und nicht geplant.</span><span class="sxs-lookup"><span data-stu-id="794f4-375">If the criteria specified through the `continuationOptions` parameter  are not met, the continuation task will be canceled instead of scheduled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-376">Das <paramref name="scheduler" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-376">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794f4-377">Das <paramref name="continuationOptions" />-Argument gibt einen ungültigen Wert für <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> an.</span><span class="sxs-lookup"><span data-stu-id="794f4-377">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-378">Das angegebene <see cref="T:System.Threading.CancellationToken" /> wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-378">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-379">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-379">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, !!TNewResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), TNewResult)) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, TNewResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, 'NewResult&gt; -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith continuationFunction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult"><span data-ttu-id="794f4-380">Der Typ des von der Fortsetzung generierten Ergebnisses.</span><span class="sxs-lookup"><span data-stu-id="794f4-380">The type of the result produced by the continuation.</span></span></typeparam>
        <param name="continuationFunction"><span data-ttu-id="794f4-381">Eine Funktion, die ausgeführt werden soll, wenn das <see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-381">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-382">Bei der Ausführung wird dem Delegaten die abgeschlossene Aufgabe als Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-382">When run, the delegate will be passed the completed task as an argument.</span></span></param>
        <summary><span data-ttu-id="794f4-383">Erstellt eine Fortsetzung, die asynchron ausgeführt wird, wenn der Ziel-<see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-383">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-384">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-384">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-385">Der zurück <xref:System.Threading.Tasks.Task%601> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob der Vorgang abgeschlossen ist, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder ein frühzeitiger Abbruch abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-385">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-386"><see cref="T:System.Threading.Tasks.Task`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="794f4-386">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-387">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-387">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-388">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-388">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-389">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-389">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-390">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-390">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object,TNewResult&gt; continuationFunction, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`3&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object, !!TNewResult&gt; continuationFunction, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), Object, TNewResult), state As Object) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^, TNewResult&gt; ^ continuationFunction, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj, 'NewResult&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult"><span data-ttu-id="794f4-391">Der Typ des von der Fortsetzung generierten Ergebnisses.</span><span class="sxs-lookup"><span data-stu-id="794f4-391">The type of the result produced by the continuation.</span></span></typeparam>
        <param name="continuationFunction"><span data-ttu-id="794f4-392">Eine Funktion, die ausgeführt werden soll, wenn das <see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-392">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-393">Bei der Ausführung werden dem Delegaten die abgeschlossene Aufgabe und das vom Aufrufer angegebene Zustandsobjekt als Argumente übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-393">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span></span></param>
        <param name="state"><span data-ttu-id="794f4-394">Ein Objekt, das Daten darstellt, die von der Fortsetzungsfunktion verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="794f4-394">An object representing data to be used by the continuation function.</span></span></param>
        <summary><span data-ttu-id="794f4-395">Erstellt eine Fortsetzung, die ausgeführt wird, wenn die Ziel-<see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-395">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-396">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-396">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-397">Der zurück <xref:System.Threading.Tasks.Task%601> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob der Vorgang abgeschlossen ist, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder ein frühzeitiger Abbruch abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-397">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current  task has completed, whether it completes due to running to completion successfully, faulting due  to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="794f4-398">Im folgenden Beispiel wird eine Kette von Fortsetzungs Aufgaben erstellt.</span><span class="sxs-lookup"><span data-stu-id="794f4-398">The following example creates a chain of continuation tasks.</span></span> <span data-ttu-id="794f4-399">Jede Aufgabe stellt die aktuelle Uhrzeit, ein <xref:System.DateTime> -Objekt, für das State-Argument <xref:System.Threading.Tasks.Task.ContinueWith%28System.Action%7BSystem.Threading.Tasks.Task%2CSystem.Object%7D%2CSystem.Object%29> der-Methode bereit.</span><span class="sxs-lookup"><span data-stu-id="794f4-399">Each task provides the current time, a <xref:System.DateTime> object, for the state argument of the <xref:System.Threading.Tasks.Task.ContinueWith%28System.Action%7BSystem.Threading.Tasks.Task%2CSystem.Object%7D%2CSystem.Object%29> method.</span></span> <span data-ttu-id="794f4-400">Jeder <xref:System.DateTime> Wert stellt die Zeit dar, zu der die Aufgabe zum Fortfahren erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-400">Each <xref:System.DateTime> value represents the time at which the continue task is created.</span></span> <span data-ttu-id="794f4-401">Jede Aufgabe erzeugt als Ergebnis einen zweiten <xref:System.DateTime> Wert, der die Uhrzeit darstellt, zu der die Aufgabe abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-401">Each task produces as its result a second <xref:System.DateTime> value that represents the time at which the task finishes.</span></span> <span data-ttu-id="794f4-402">Nachdem alle Aufgaben abgeschlossen sind, werden im Beispiel die Datums-und Uhrzeitangaben angezeigt, zu denen jede Fortsetzungs Aufgabe beginnt und endet.</span><span class="sxs-lookup"><span data-stu-id="794f4-402">After all tasks finish, the example displays the date and times at which each continuation task starts and finishes.</span></span>  
  
 [!code-csharp[TPL_ContinuationState#1](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_continuationstate/cs/continuationstate.cs#1)]
 [!code-vb[TPL_ContinuationState#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_continuationstate/vb/continuationstate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-403">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-403">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-404">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-404">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, !!TNewResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, TNewResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, 'NewResult&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult"><span data-ttu-id="794f4-405">Der Typ des von der Fortsetzung generierten Ergebnisses.</span><span class="sxs-lookup"><span data-stu-id="794f4-405">The type of the result produced by the continuation.</span></span></typeparam>
        <param name="continuationFunction"><span data-ttu-id="794f4-406">Eine Funktion, die ausgeführt werden soll, wenn das <see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-406">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-407">Bei der Ausführung wird dem Delegaten die abgeschlossene Aufgabe als Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-407">When run, the delegate will be passed the completed task as an argument.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="794f4-408">Das <see cref="T:System.Threading.CancellationToken" />, das der neuen Aufgabe zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-408">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span></span></param>
        <summary><span data-ttu-id="794f4-409">Erstellt eine Fortsetzung, die asynchron ausgeführt wird, wenn der Ziel-<see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-409">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-410">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-410">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-411">Der zurück <xref:System.Threading.Tasks.Task%601> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob der Vorgang abgeschlossen ist, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder ein frühzeitiger Abbruch abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-411">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-412"><see cref="T:System.Threading.Tasks.Task`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="794f4-412">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span></span>  
  
<span data-ttu-id="794f4-413">- oder -</span><span class="sxs-lookup"><span data-stu-id="794f4-413">-or-</span></span> 
<span data-ttu-id="794f4-414">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-414">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-415">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-415">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-416">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-416">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-417">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-417">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-418">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-418">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, !!TNewResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), TNewResult), continuationOptions As TaskContinuationOptions) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, TNewResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, 'NewResult&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult"><span data-ttu-id="794f4-419">Der Typ des von der Fortsetzung generierten Ergebnisses.</span><span class="sxs-lookup"><span data-stu-id="794f4-419">The type of the result produced by the continuation.</span></span></typeparam>
        <param name="continuationFunction"><span data-ttu-id="794f4-420">Eine Funktion, die entsprechend der in <paramref name="continuationOptions" /> angegebenen Bedingung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-420">A function to run according the condition specified in <paramref name="continuationOptions" />.</span></span>  
  
<span data-ttu-id="794f4-421">Bei der Ausführung wird dem Delegaten die abgeschlossene Aufgabe als Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-421">When run, the delegate will be passed the completed task as an argument.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="794f4-422">Optionen für die Planung und das Verhalten der Fortsetzung.</span><span class="sxs-lookup"><span data-stu-id="794f4-422">Options for when the continuation is scheduled and how it behaves.</span></span> <span data-ttu-id="794f4-423">Dazu zählen Kriterien wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" /> und Ausführungsoptionen wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-423">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span></span></param>
        <summary><span data-ttu-id="794f4-424">Erstellt eine Fortsetzung, die nach der in <paramref name="continuationOptions" /> angegebenen Bedingung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-424">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span></span></summary>
        <returns><span data-ttu-id="794f4-425">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-425">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-426">Der zurück <xref:System.Threading.Tasks.Task%601> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob der Vorgang abgeschlossen ist, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder ein frühzeitiger Abbruch abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-426">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 <span data-ttu-id="794f4-427">Gibt `continuationFunction`bei der Ausführung einen <xref:System.Threading.Tasks.Task%601>zurück.</span><span class="sxs-lookup"><span data-stu-id="794f4-427">The `continuationFunction`, when executed, should return a <xref:System.Threading.Tasks.Task%601>.</span></span> 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-428"><see cref="T:System.Threading.Tasks.Task`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="794f4-428">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-429">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-429">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794f4-430">Das <paramref name="continuationOptions" />-Argument gibt einen ungültigen Wert für <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> an.</span><span class="sxs-lookup"><span data-stu-id="794f4-430">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-431">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-431">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-432">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-432">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-433">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-433">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt; continuationFunction, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, !!TNewResult&gt; continuationFunction, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), TNewResult), scheduler As TaskScheduler) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, TNewResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, 'NewResult&gt; * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult"><span data-ttu-id="794f4-434">Der Typ des von der Fortsetzung generierten Ergebnisses.</span><span class="sxs-lookup"><span data-stu-id="794f4-434">The type of the result produced by the continuation.</span></span></typeparam>
        <param name="continuationFunction"><span data-ttu-id="794f4-435">Eine Funktion, die ausgeführt werden soll, wenn das <see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-435">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-436">Bei der Ausführung wird dem Delegaten die abgeschlossene Aufgabe als Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-436">When run, the delegate will be passed the completed task as an argument.</span></span></param>
        <param name="scheduler"><span data-ttu-id="794f4-437">Das <see cref="T:System.Threading.Tasks.TaskScheduler" />, das der Fortsetzungsaufgabe zugeordnet und für ihre Ausführung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-437">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span></span></param>
        <summary><span data-ttu-id="794f4-438">Erstellt eine Fortsetzung, die asynchron ausgeführt wird, wenn der Ziel-<see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-438">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-439">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-439">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-440">Der zurück <xref:System.Threading.Tasks.Task%601> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob der Vorgang abgeschlossen ist, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder ein frühzeitiger Abbruch abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-440">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-441"><see cref="T:System.Threading.Tasks.Task`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="794f4-441">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-442">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-442">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="794f4-443">- oder -</span><span class="sxs-lookup"><span data-stu-id="794f4-443">-or-</span></span> 
<span data-ttu-id="794f4-444">Das <paramref name="scheduler" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-444">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-445">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-445">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-446">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-446">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-447">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-447">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object,TNewResult&gt; continuationFunction, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`3&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object, !!TNewResult&gt; continuationFunction, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^, TNewResult&gt; ^ continuationFunction, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj, 'NewResult&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, state, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult"><span data-ttu-id="794f4-448">Der Typ des von der Fortsetzung generierten Ergebnisses.</span><span class="sxs-lookup"><span data-stu-id="794f4-448">The type of the result produced by the continuation.</span></span></typeparam>
        <param name="continuationFunction"><span data-ttu-id="794f4-449">Eine Funktion, die ausgeführt werden soll, wenn das <see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-449">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-450">Bei der Ausführung werden dem Delegaten die abgeschlossene Aufgabe und das vom Aufrufer angegebene Zustandsobjekt als Argumente übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-450">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span></span></param>
        <param name="state"><span data-ttu-id="794f4-451">Ein Objekt, das Daten darstellt, die von der Fortsetzungsfunktion verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="794f4-451">An object representing data to be used by the continuation function.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="794f4-452">Das <see cref="T:System.Threading.CancellationToken" />, das der neuen Aufgabe zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-452">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span></span></param>
        <summary><span data-ttu-id="794f4-453">Erstellt eine Fortsetzung, die ausgeführt wird, wenn die Ziel-<see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-453">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-454">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-454">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-455">Der zurück <xref:System.Threading.Tasks.Task%601> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob der Vorgang abgeschlossen ist, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder ein frühzeitiger Abbruch abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-455">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current  task has completed, whether it completes due to running to completion successfully, faulting due  to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-456">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-456">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-457">Das angegebene <see cref="T:System.Threading.CancellationToken" /> wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-457">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-458">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-458">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object,TNewResult&gt; continuationFunction, object state, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`3&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object, !!TNewResult&gt; continuationFunction, object state, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), Object, TNewResult), state As Object, continuationOptions As TaskContinuationOptions) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^, TNewResult&gt; ^ continuationFunction, System::Object ^ state, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj, 'NewResult&gt; * obj * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, state, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult"><span data-ttu-id="794f4-459">Der Typ des von der Fortsetzung generierten Ergebnisses.</span><span class="sxs-lookup"><span data-stu-id="794f4-459">The type of the result produced by the continuation.</span></span></typeparam>
        <param name="continuationFunction"><span data-ttu-id="794f4-460">Eine Funktion, die ausgeführt werden soll, wenn das <see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-460">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-461">Bei der Ausführung werden dem Delegaten die abgeschlossene Aufgabe und das vom Aufrufer angegebene Zustandsobjekt als Argumente übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-461">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span></span></param>
        <param name="state"><span data-ttu-id="794f4-462">Ein Objekt, das Daten darstellt, die von der Fortsetzungsfunktion verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="794f4-462">An object representing data to be used by the continuation function.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="794f4-463">Optionen für die Planung und das Verhalten der Fortsetzung.</span><span class="sxs-lookup"><span data-stu-id="794f4-463">Options for when the continuation is scheduled and how it behaves.</span></span> <span data-ttu-id="794f4-464">Dazu zählen Kriterien wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" /> und Ausführungsoptionen wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-464">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span></span></param>
        <summary><span data-ttu-id="794f4-465">Erstellt eine Fortsetzung, die ausgeführt wird, wenn die Ziel-<see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-465">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-466">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-466">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-467">Der zurück <xref:System.Threading.Tasks.Task%601> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob der Vorgang abgeschlossen ist, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder ein frühzeitiger Abbruch abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-467">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current  task has completed, whether it completes due to running to completion successfully, faulting due  to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 <span data-ttu-id="794f4-468">Gibt `continuationFunction`bei der Ausführung einen <xref:System.Threading.Tasks.Task%601>zurück.</span><span class="sxs-lookup"><span data-stu-id="794f4-468">The `continuationFunction`, when executed, should return a <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="794f4-469">Der Abschluss Zustand dieser Aufgabe wird an die Aufgabe übertragen, die vom ContinueWith-Befehl zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-469">This task's completion state will be transferred to the task returned from the ContinueWith call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-470">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-470">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794f4-471">Das <paramref name="continuationOptions" />-Argument gibt einen ungültigen Wert für <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> an.</span><span class="sxs-lookup"><span data-stu-id="794f4-471">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-472">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-472">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object,TNewResult&gt; continuationFunction, object state, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`3&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object, !!TNewResult&gt; continuationFunction, object state, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), Object, TNewResult), state As Object, scheduler As TaskScheduler) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^, TNewResult&gt; ^ continuationFunction, System::Object ^ state, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj, 'NewResult&gt; * obj * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, state, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult"><span data-ttu-id="794f4-473">Der Typ des von der Fortsetzung generierten Ergebnisses.</span><span class="sxs-lookup"><span data-stu-id="794f4-473">The type of the result produced by the continuation.</span></span></typeparam>
        <param name="continuationFunction"><span data-ttu-id="794f4-474">Eine Funktion, die ausgeführt werden soll, wenn das <see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-474">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-475">Bei der Ausführung werden dem Delegaten die abgeschlossene Aufgabe und das vom Aufrufer angegebene Zustandsobjekt als Argumente übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-475">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span></span></param>
        <param name="state"><span data-ttu-id="794f4-476">Ein Objekt, das Daten darstellt, die von der Fortsetzungsfunktion verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="794f4-476">An object representing data to be used by the continuation function.</span></span></param>
        <param name="scheduler"><span data-ttu-id="794f4-477">Das <see cref="T:System.Threading.Tasks.TaskScheduler" />, das der Fortsetzungsaufgabe zugeordnet und für ihre Ausführung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-477">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span></span></param>
        <summary><span data-ttu-id="794f4-478">Erstellt eine Fortsetzung, die ausgeführt wird, wenn die Ziel-<see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-478">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-479">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-479">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-480">Der zurück <xref:System.Threading.Tasks.Task%601> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob der Vorgang abgeschlossen ist, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder ein frühzeitiger Abbruch abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-480">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has  completed, whether it completes due to running to completion successfully, faulting due to an  unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-481">Das <paramref name="scheduler" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-481">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-482">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-482">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, !!TNewResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, TNewResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, 'NewResult&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult"><span data-ttu-id="794f4-483">Der Typ des von der Fortsetzung generierten Ergebnisses.</span><span class="sxs-lookup"><span data-stu-id="794f4-483">The type of the result produced by the continuation.</span></span></typeparam>
        <param name="continuationFunction"><span data-ttu-id="794f4-484">Eine Funktion, die entsprechend der in <paramref name="continuationOptions" /> angegebenen Bedingung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-484">A function to run according the condition specified in <paramref name="continuationOptions" />.</span></span>  
  
<span data-ttu-id="794f4-485">Bei der Ausführung wird dem Delegaten diese abgeschlossene Aufgabe als Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-485">When run, the delegate will be passed as an argument this completed task.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="794f4-486">Das <see cref="T:System.Threading.CancellationToken" />, das der neuen Aufgabe zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-486">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="794f4-487">Optionen für die Planung und das Verhalten der Fortsetzung.</span><span class="sxs-lookup"><span data-stu-id="794f4-487">Options for when the continuation is scheduled and how it behaves.</span></span> <span data-ttu-id="794f4-488">Dazu zählen Kriterien wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" /> und Ausführungsoptionen wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-488">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span></span></param>
        <param name="scheduler"><span data-ttu-id="794f4-489">Das <see cref="T:System.Threading.Tasks.TaskScheduler" />, das der Fortsetzungsaufgabe zugeordnet und für ihre Ausführung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-489">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span></span></param>
        <summary><span data-ttu-id="794f4-490">Erstellt eine Fortsetzung, die nach der in <paramref name="continuationOptions" /> angegebenen Bedingung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-490">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span></span></summary>
        <returns><span data-ttu-id="794f4-491">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-491">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-492">Der zurück <xref:System.Threading.Tasks.Task%601> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob der Vorgang abgeschlossen ist, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder ein frühzeitiger Abbruch abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-492">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 <span data-ttu-id="794f4-493">Gibt `continuationFunction`bei der Ausführung einen <xref:System.Threading.Tasks.Task%601>zurück.</span><span class="sxs-lookup"><span data-stu-id="794f4-493">The `continuationFunction`, when executed, should return a <xref:System.Threading.Tasks.Task%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-494"><see cref="T:System.Threading.Tasks.Task`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="794f4-494">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span></span>  
  
<span data-ttu-id="794f4-495">- oder -</span><span class="sxs-lookup"><span data-stu-id="794f4-495">-or-</span></span> 
<span data-ttu-id="794f4-496">Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-496">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-497">Das <paramref name="continuationFunction" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-497">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="794f4-498">- oder -</span><span class="sxs-lookup"><span data-stu-id="794f4-498">-or-</span></span> 
<span data-ttu-id="794f4-499">Das <paramref name="scheduler" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-499">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794f4-500">Das <paramref name="continuationOptions" />-Argument gibt einen ungültigen Wert für <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> an.</span><span class="sxs-lookup"><span data-stu-id="794f4-500">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-501">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-501">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-502">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-502">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-503">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-503">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object,TNewResult&gt; continuationFunction, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`3&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object, !!TNewResult&gt; continuationFunction, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^, TNewResult&gt; ^ continuationFunction, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj, 'NewResult&gt; * obj * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, state, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult"><span data-ttu-id="794f4-504">Der Typ des von der Fortsetzung generierten Ergebnisses.</span><span class="sxs-lookup"><span data-stu-id="794f4-504">The type of the result produced by the continuation.</span></span></typeparam>
        <param name="continuationFunction"><span data-ttu-id="794f4-505">Eine Funktion, die ausgeführt werden soll, wenn das <see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-505">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span> <span data-ttu-id="794f4-506">Bei der Ausführung werden dem Delegaten die abgeschlossene Aufgabe und das vom Aufrufer angegebene Zustandsobjekt als Argumente übergeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-506">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span></span></param>
        <param name="state"><span data-ttu-id="794f4-507">Ein Objekt, das Daten darstellt, die von der Fortsetzungsfunktion verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="794f4-507">An object representing data to be used by the continuation function.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="794f4-508">Das <see cref="T:System.Threading.CancellationToken" />, das der neuen Aufgabe zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-508">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="794f4-509">Optionen für die Planung und das Verhalten der Fortsetzung.</span><span class="sxs-lookup"><span data-stu-id="794f4-509">Options for when the continuation is scheduled and how it behaves.</span></span> <span data-ttu-id="794f4-510">Dazu zählen Kriterien wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" /> und Ausführungsoptionen wie <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-510">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span></span></param>
        <param name="scheduler"><span data-ttu-id="794f4-511">Das <see cref="T:System.Threading.Tasks.TaskScheduler" />, das der Fortsetzungsaufgabe zugeordnet und für ihre Ausführung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="794f4-511">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span></span></param>
        <summary><span data-ttu-id="794f4-512">Erstellt eine Fortsetzung, die ausgeführt wird, wenn die Ziel-<see cref="T:System.Threading.Tasks.Task`1" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-512">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span></span></summary>
        <returns><span data-ttu-id="794f4-513">Ein neuer Fortsetzungs-<see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-513">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-514">Der zurück <xref:System.Threading.Tasks.Task%601> gegebene wird nicht für die Ausführung geplant, bis die aktuelle Aufgabe abgeschlossen ist, und zwar unabhängig davon, ob der Vorgang abgeschlossen ist, bis der Vorgang erfolgreich abgeschlossen wurde, ein Fehler aufgrund einer nicht behandelten Ausnahme aufgetreten ist oder ein frühzeitiger Abbruch abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-514">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has  completed, whether it completes due to running to completion successfully, faulting due to an  unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 <span data-ttu-id="794f4-515">Gibt `continuationFunction`bei der Ausführung einen <xref:System.Threading.Tasks.Task%601>zurück.</span><span class="sxs-lookup"><span data-stu-id="794f4-515">The `continuationFunction`, when executed, should return a <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="794f4-516">Der Abschluss Zustand dieser Aufgabe wird an die Aufgabe übertragen, die vom <xref:System.Threading.Tasks.Task%601.ContinueWith%2A?displayProperty=nameWithType> -Befehl zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-516">This task's completion state will be transferred to the task returned from the <xref:System.Threading.Tasks.Task%601.ContinueWith%2A?displayProperty=nameWithType> call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794f4-517">Das <paramref name="scheduler" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="794f4-517">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794f4-518">Das <paramref name="continuationOptions" />-Argument gibt einen ungültigen Wert für <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> an.</span><span class="sxs-lookup"><span data-stu-id="794f4-518">The  <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794f4-519">Das angegebene <see cref="T:System.Threading.CancellationToken" /> wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-519">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="794f4-520">Verketten von Aufgaben mithilfe von Fortsetzungsaufgaben</span><span class="sxs-lookup"><span data-stu-id="794f4-520">Chaining Tasks by Using Continuation Tasks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Factory">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.TaskFactory&lt;TResult&gt; Factory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.Tasks.TaskFactory`1&lt;!TResult&gt; Factory" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Task`1.Factory" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Factory As TaskFactory(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::Tasks::TaskFactory&lt;TResult&gt; ^ Factory { System::Threading::Tasks::TaskFactory&lt;TResult&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Factory : System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="System.Threading.Tasks.Task&lt;'Result&gt;.Factory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskFactory&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="794f4-521">Bietet Zugriff auf Factorymethoden zum Erstellen und Konfigurieren von <see cref="T:System.Threading.Tasks.Task`1" />-Instanzen.</span><span class="sxs-lookup"><span data-stu-id="794f4-521">Provides access to factory methods for creating and configuring <see cref="T:System.Threading.Tasks.Task`1" /> instances.</span></span></summary>
        <value><span data-ttu-id="794f4-522">Ein Factoryobjekt, das eine Vielzahl von <see cref="T:System.Threading.Tasks.Task`1" />-Objekten erstellen kann.</span><span class="sxs-lookup"><span data-stu-id="794f4-522">A factory object that can create a variety of <see cref="T:System.Threading.Tasks.Task`1" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-523">Diese Eigenschaft gibt eine Standard Instanz der <xref:System.Threading.Tasks.TaskFactory%601> -Klasse zurück, die mit der übereinstimmt, die durch Aufrufen des Parameter losen <xref:System.Threading.Tasks.TaskFactory%601.%23ctor?displayProperty=nameWithType> Konstruktors erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-523">This property returns a default instance of the <xref:System.Threading.Tasks.TaskFactory%601> class that is identical to the one created by calling the parameterless <xref:System.Threading.Tasks.TaskFactory%601.%23ctor?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="794f4-524">Es verfügt über die folgenden Eigenschaftswerte:</span><span class="sxs-lookup"><span data-stu-id="794f4-524">It has the following property values:</span></span>  
  
|<span data-ttu-id="794f4-525">Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="794f4-525">Property</span></span>|<span data-ttu-id="794f4-526">Wert</span><span class="sxs-lookup"><span data-stu-id="794f4-526">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Threading.Tasks.TaskFactory%601.CancellationToken%2A?displayProperty=nameWithType>|<xref:System.Threading.CancellationToken.None%2A?displayProperty=nameWithType>|  
|<xref:System.Threading.Tasks.TaskFactory%601.ContinuationOptions%2A?displayProperty=nameWithType>|<xref:System.Threading.Tasks.TaskContinuationOptions.None?displayProperty=nameWithType>|  
|<xref:System.Threading.Tasks.TaskFactory%601.CreationOptions%2A?displayProperty=nameWithType>|<xref:System.Threading.Tasks.TaskCreationOptions.None?displayProperty=nameWithType>|  
|<xref:System.Threading.Tasks.TaskFactory%601.Scheduler%2A?displayProperty=nameWithType>|<span data-ttu-id="794f4-527">`null`, oder<xref:System.Threading.Tasks.TaskScheduler.Current%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="794f4-527">`null`, or <xref:System.Threading.Tasks.TaskScheduler.Current%2A?displayProperty=nameWithType></span></span>|  
  
 <span data-ttu-id="794f4-528">Diese Eigenschaft wird am häufigsten verwendet, um eine neue Aufgabe zu erstellen und in einem einzelnen- <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> Methoden aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="794f4-528">The most common use of this property is to create and start a new task in a single call to the <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="794f4-529">Ab bietet die <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> -Methode die einfachste Möglichkeit zum Erstellen eines <xref:System.Threading.Tasks.Task%601> -Objekts mit Standard Konfigurations Werten. [!INCLUDE[net_v45](~/includes/net-v45-md.md)]</span><span class="sxs-lookup"><span data-stu-id="794f4-529">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method provides the easiest way to create a <xref:System.Threading.Tasks.Task%601> object with default configuration values.</span></span>  
  
 <span data-ttu-id="794f4-530">Im folgenden Beispiel wird die statische <xref:System.Threading.Tasks.Task%601.Factory%2A> -Eigenschaft verwendet, um drei Aufrufe <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> an die-Methode durchführen.</span><span class="sxs-lookup"><span data-stu-id="794f4-530">The following example uses the static <xref:System.Threading.Tasks.Task%601.Factory%2A> property to make three calls to the <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="794f4-531">Der erste startet ein `Task<Int32>` -Objekt, das einen Lambda-Ausdruck ausführt, der 1 zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="794f4-531">The first starts a `Task<Int32>` object, which executes a lambda expression that returns 1.</span></span> <span data-ttu-id="794f4-532">Beim zweiten wird ein `Task<Test>` -Objekt gestartet, das einen Lambda-Ausdruck ausführt, der eine `Test` neue-Instanz instanziiert.</span><span class="sxs-lookup"><span data-stu-id="794f4-532">The second starts a `Task<Test>` object, which executes a lambda expression that instantiates a new `Test` instance.</span></span> <span data-ttu-id="794f4-533">Das dritte startet ein `Task<String[]>` -Objekt, das die Dateien im Verzeichnis "c:\Users\Public\Pictures\Sample Pictures \" auflistet.</span><span class="sxs-lookup"><span data-stu-id="794f4-533">The third starts a `Task<String[]>` object, which enumerates the files in the C:\Users\Public\Pictures\Sample Pictures\ directory.</span></span> <span data-ttu-id="794f4-534">(Beachten Sie, dass die erfolgreiche Ausführung des Beispiels erfordert, dass das Verzeichnis vorhanden ist und Dateien enthält.</span><span class="sxs-lookup"><span data-stu-id="794f4-534">(Note that successful execution of the example requires that the directory exist and that it contain files.</span></span>  
  
 [!code-csharp[TPL#10](~/samples/snippets/csharp/VS_Snippets_Misc/tpl/cs/returnavalue10.cs#10)]
 [!code-vb[TPL#10](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl/vb/10_returnavalue.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-535">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-535">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-536">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-536">Task-based Asynchronous Programming</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt; GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.TaskAwaiter`1&lt;!TResult&gt; GetAwaiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.GetAwaiter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAwaiter () As TaskAwaiter(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::TaskAwaiter&lt;TResult&gt; GetAwaiter();" />
      <MemberSignature Language="F#" Value="override this.GetAwaiter : unit -&gt; System.Runtime.CompilerServices.TaskAwaiter&lt;'Result&gt;" Usage="task.GetAwaiter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="794f4-537">Ruft einen Awaiter ab, der verwendet wird, um dieses <see cref="T:System.Threading.Tasks.Task`1" /> zu erwarten.</span><span class="sxs-lookup"><span data-stu-id="794f4-537">Gets an awaiter used to await this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></summary>
        <returns><span data-ttu-id="794f4-538">Eine Awaiter-Instanz.</span><span class="sxs-lookup"><span data-stu-id="794f4-538">An awaiter instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-539">Diese Methode ist für den compilerbenutzer vorgesehen und kann nicht direkt im Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="794f4-539">This method is intended for compiler user rather than use directly in code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public TResult Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TResult Result" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Task`1.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TResult Result { TResult get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : 'Result" Usage="System.Threading.Tasks.Task&lt;'Result&gt;.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="794f4-540">Ruft den Ergebniswert dieses <see cref="T:System.Threading.Tasks.Task`1" /> ab.</span><span class="sxs-lookup"><span data-stu-id="794f4-540">Gets the result value of this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></summary>
        <value><span data-ttu-id="794f4-541">Der Ergebniswert dieses <see cref="T:System.Threading.Tasks.Task`1" />, der vom gleichen Typ wie der Typparameter der Aufgabe ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-541">The result value of this <see cref="T:System.Threading.Tasks.Task`1" />, which is of the same type as the task's type parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794f4-542">Durch den Zugriff auf den Get-Accessor der Eigenschaft wird der aufrufende Thread blockiert, bis der asynchrone Vorgang beendet ist. Dies entspricht dem Aufrufen der <xref:System.Threading.Tasks.Task.Wait%2A> -Methode.</span><span class="sxs-lookup"><span data-stu-id="794f4-542">Accessing the property's get accessor blocks the calling thread until the asynchronous operation is complete; it is equivalent to calling the <xref:System.Threading.Tasks.Task.Wait%2A> method.</span></span>  
  
 <span data-ttu-id="794f4-543">Sobald das Ergebnis eines Vorgangs verfügbar ist, wird es gespeichert und bei nachfolgenden Aufrufen der <xref:System.Threading.Tasks.Task%601.Result%2A> -Eigenschaft sofort zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="794f4-543">Once the result of an operation is available, it is stored and is returned immediately on subsequent calls to the <xref:System.Threading.Tasks.Task%601.Result%2A> property.</span></span> <span data-ttu-id="794f4-544">Beachten Sie, dass die <xref:System.Threading.Tasks.Task%601.Result%2A> Eigenschaft keinen Wert zurückgibt, wenn eine Ausnahme während des Vorgangs der Aufgabe aufgetreten ist oder wenn die Aufgabe abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="794f4-544">Note that, if an exception occurred during the operation of the task, or if the task has been cancelled, the <xref:System.Threading.Tasks.Task%601.Result%2A> property does not return a value.</span></span> <span data-ttu-id="794f4-545">Stattdessen wird beim Versuch, auf den-Eigenschafts <xref:System.AggregateException> Wert zuzugreifen, eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="794f4-545">Instead, attempting to access the property value throws an <xref:System.AggregateException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="794f4-546">Das folgende Beispiel ist ein Befehlszeilen-Hilfsprogramm, das die Anzahl der Bytes in den Dateien in jedem Verzeichnis berechnet, dessen Name als Befehlszeilenargument übermittelt wird.</span><span class="sxs-lookup"><span data-stu-id="794f4-546">The following example is a command-line utility that calculates the number of bytes in the files in each directory whose name is passed as a command-line argument.</span></span> <span data-ttu-id="794f4-547">Wenn das Verzeichnis Dateien enthält, führt es einen Lambda-Ausdruck aus, der ein <xref:System.IO.FileStream> -Objekt für jede Datei im Verzeichnis instanziiert und den Wert seiner <xref:System.IO.FileStream.Length%2A?displayProperty=nameWithType> -Eigenschaft abruft.</span><span class="sxs-lookup"><span data-stu-id="794f4-547">If the directory contains files, it executes a lambda expression that instantiates a <xref:System.IO.FileStream> object for each file in the directory and retrieves the value of its <xref:System.IO.FileStream.Length%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="794f4-548">Wenn ein Verzeichnis keine Dateien enthält, ruft es einfach die <xref:System.Threading.Tasks.Task.FromResult%2A> -Methode auf, um eine <xref:System.Threading.Tasks.Task%601.Result%2A?displayProperty=nameWithType> Aufgabe zu erstellen, deren-Eigenschaft 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="794f4-548">If a directory contains no files, it simply calls the <xref:System.Threading.Tasks.Task.FromResult%2A> method to create a task whose <xref:System.Threading.Tasks.Task%601.Result%2A?displayProperty=nameWithType> property is zero (0).</span></span> <span data-ttu-id="794f4-549">Wenn die Aufgaben abgeschlossen sind, ist die Gesamtzahl der Bytes in allen Dateien eines Verzeichnisses über die <xref:System.Threading.Tasks.Task%601.Result%2A> -Eigenschaft verfügbar.</span><span class="sxs-lookup"><span data-stu-id="794f4-549">When the tasks finish, the total number of bytes in all a directory's files is available from the <xref:System.Threading.Tasks.Task%601.Result%2A> property.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.FromResult#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.fromresult/cs/fromresult1.cs#1)]
 [!code-vb[System.Threading.Tasks.Task.FromResult#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.fromresult/vb/fromresult1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AggregateException"><span data-ttu-id="794f4-550">Der Task wurde abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="794f4-550">The task was canceled.</span></span> <span data-ttu-id="794f4-551">Die <see cref="P:System.AggregateException.InnerExceptions" />-Sammlung enthält ein <see cref="T:System.Threading.Tasks.TaskCanceledException" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="794f4-551">The <see cref="P:System.AggregateException.InnerExceptions" /> collection contains a <see cref="T:System.Threading.Tasks.TaskCanceledException" /> object.</span></span>  
  
<span data-ttu-id="794f4-552">- oder -</span><span class="sxs-lookup"><span data-stu-id="794f4-552">-or-</span></span> 
<span data-ttu-id="794f4-553">Während der Ausführung des Tasks wurde eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="794f4-553">An exception was thrown during the execution of the task.</span></span> <span data-ttu-id="794f4-554">Die <see cref="P:System.AggregateException.InnerExceptions" />-Sammlung enthält Informationen zu der Ausnahme bzw. den Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="794f4-554">The <see cref="P:System.AggregateException.InnerExceptions" /> collection contains information about the exception or exceptions.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="794f4-555">Task Parallel Library (TPL)</span><span class="sxs-lookup"><span data-stu-id="794f4-555">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="794f4-556">Aufgabenbasierte asynchrone Programmierung</span><span class="sxs-lookup"><span data-stu-id="794f4-556">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-return-a-value-from-a-task.md"><span data-ttu-id="794f4-557">Gewusst wie: Zurückgeben eines Werts aus einer Aufgabe</span><span class="sxs-lookup"><span data-stu-id="794f4-557">How to: Return a Value from a Task</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
