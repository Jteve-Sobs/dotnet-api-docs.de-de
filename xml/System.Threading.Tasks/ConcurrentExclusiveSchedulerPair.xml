<Type Name="ConcurrentExclusiveSchedulerPair" FullName="System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="afcfc7ac1eae1efd503a91aafea0c71bc636287a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConcurrentExclusiveSchedulerPair" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConcurrentExclusiveSchedulerPair extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />
  <TypeSignature Language="VB.NET" Value="Public Class ConcurrentExclusiveSchedulerPair" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConcurrentExclusiveSchedulerPair" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Concurrent={ConcurrentTaskCountForDebugger}, Exclusive={ExclusiveTaskCountForDebugger}, Mode={ModeForDebugger}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.ConcurrentExclusiveSchedulerPair/DebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9ce87-101">Stellt Taskplaner bereit, die auszuführende Aufgaben koordinieren, während sie sicherstellen, dass gleichzeitige Aufgaben gleichzeitig ausgeführt werden können, exklusive Aufgaben zu keinerlei Zeitpunkt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9ce87-101">Provides task schedulers that coordinate to execute tasks while ensuring that concurrent tasks may run concurrently and exclusive tasks never do.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9ce87-102">Das folgende Beispiel zeigt die Verwendung der <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair> Klasse.</span><span class="sxs-lookup"><span data-stu-id="9ce87-102">The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair> class.</span></span> <span data-ttu-id="9ce87-103">Leser, die auf der gleichzeitigen Teil des Zeitplanungsmoduls ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="9ce87-103">Readers run on the concurrent part of the scheduler.</span></span> <span data-ttu-id="9ce87-104">Der Writer wird auf der exklusive Bereich des Zeitplanungsmoduls ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="9ce87-104">The writer runs on the exclusive part of the scheduler.</span></span> <span data-ttu-id="9ce87-105">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die [wie: einen Taskplaner in einem Dataflow-Block angeben](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) Thema.</span><span class="sxs-lookup"><span data-stu-id="9ce87-105">This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]
 [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ce87-106">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-106">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentExclusiveSchedulerPair ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentExclusiveSchedulerPair();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ce87-107">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-107">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9ce87-108">Das folgende Beispiel zeigt die Verwendung der <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.%23ctor%2A> Konstruktor zum Erstellen eines neuen <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9ce87-108">The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.%23ctor%2A> constructor to create a new <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair> object.</span></span> <span data-ttu-id="9ce87-109">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die [wie: einen Taskplaner in einem Dataflow-Block angeben](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) Thema.</span><span class="sxs-lookup"><span data-stu-id="9ce87-109">This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]
 [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.TaskScheduler taskScheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentExclusiveSchedulerPair(System::Threading::Tasks::TaskScheduler ^ taskScheduler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskScheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="taskScheduler">
          <span data-ttu-id="9ce87-110">Der Zielplaner, auf dem dieses Paar ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-110">The target scheduler on which this pair should execute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ce87-111">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />-Klasse, die auf den angegebenen Planer abzielt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-111">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> class that targets the specified scheduler.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler, int maxConcurrencyLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.TaskScheduler taskScheduler, int32 maxConcurrencyLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentExclusiveSchedulerPair(System::Threading::Tasks::TaskScheduler ^ taskScheduler, int maxConcurrencyLevel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskScheduler" Type="System.Threading.Tasks.TaskScheduler" />
        <Parameter Name="maxConcurrencyLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="taskScheduler">
          <span data-ttu-id="9ce87-112">Der Zielplaner, auf dem dieses Paar ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-112">The target scheduler on which this pair should execute.</span>
          </span>
        </param>
        <param name="maxConcurrencyLevel">
          <span data-ttu-id="9ce87-113">Die maximale Anzahl von Tasks, die gleichzeitig ausgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-113">The maximum number of tasks to run concurrently.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ce87-114">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />-Klasse für den angegebenen Planer mit einer maximalen Parallelitätsebene.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-114">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> class that targets the specified scheduler with a maximum concurrency level.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler, int maxConcurrencyLevel, int maxItemsPerTask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.TaskScheduler taskScheduler, int32 maxConcurrencyLevel, int32 maxItemsPerTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentExclusiveSchedulerPair(System::Threading::Tasks::TaskScheduler ^ taskScheduler, int maxConcurrencyLevel, int maxItemsPerTask);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskScheduler" Type="System.Threading.Tasks.TaskScheduler" />
        <Parameter Name="maxConcurrencyLevel" Type="System.Int32" />
        <Parameter Name="maxItemsPerTask" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="taskScheduler">
          <span data-ttu-id="9ce87-115">Der Zielplaner, auf dem dieses Paar ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-115">The target scheduler on which this pair should execute.</span>
          </span>
        </param>
        <param name="maxConcurrencyLevel">
          <span data-ttu-id="9ce87-116">Die maximale Anzahl von Tasks, die gleichzeitig ausgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-116">The maximum number of tasks to run concurrently.</span>
          </span>
        </param>
        <param name="maxItemsPerTask">
          <span data-ttu-id="9ce87-117">Die maximale Anzahl auszuführender Tasks für jeden zugrunde liegenden geplanten Task, der von dem Paar verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-117">The maximum number of tasks to process for each underlying scheduled task used by the pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ce87-118">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />-Klasse für den angegebenen Planer mit einer maximalen Parallelitätsebene und einer maximalen Anzahl von geplanten Aufgaben, die als Einheit verarbeitet werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-118">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> class that targets the specified scheduler with a maximum concurrency level and a maximum number of scheduled tasks that may be processed as a unit.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ce87-119">Informiert das Planerpaar, dass es keine weiteren Aufgaben annehmen sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-119">Informs the scheduler pair that it should not accept any more tasks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ce87-120">Aufrufen von <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete%2A> ist optional.</span><span class="sxs-lookup"><span data-stu-id="9ce87-120">Calling <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete%2A> is optional.</span></span> <span data-ttu-id="9ce87-121">Es ist erforderlich, nur dann, wenn Sie auf der vertrauenden Seite sind die <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion%2A> -Eigenschaft für die Benachrichtigung, dass die gesamte Verarbeitung abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="9ce87-121">It is necessary only if you're relying on the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion%2A> property for notification that all processing has been completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ce87-122">Ruft <see cref="T:System.Threading.Tasks.Task" /> ab, der abgeschlossen wird, wenn der Planer die Verarbeitung abgeschlossen hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-122">Gets a <see cref="T:System.Threading.Tasks.Task" /> that will complete when the scheduler has completed processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ce87-123">Der asynchrone Vorgang, der abgeschlossen wird, wenn der Planer die Verarbeitung abschließt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-123">The asynchronous operation that will complete when the scheduler finishes processing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrentScheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler ConcurrentScheduler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler ConcurrentScheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConcurrentScheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ ConcurrentScheduler { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ce87-124">Ruft <see cref="T:System.Threading.Tasks.TaskScheduler" /> ab, das verwendet werden kann, um Aufgaben für dieses Paar zu planen, die gleichzeitig mit anderen Aufgaben für dieses Paar ausgeführt werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-124">Gets a <see cref="T:System.Threading.Tasks.TaskScheduler" /> that can be used to schedule tasks to this pair that may run concurrently with other tasks on this pair.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ce87-125">Ein Objekt, das verwendet werden kann, um Aufgaben gleichzeitig zu planen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-125">An object that can be used to schedule tasks concurrently.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9ce87-126">Das folgende Beispiel zeigt die Verwendung der <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler%2A> -Eigenschaft ein Readers ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="9ce87-126">The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler%2A> property to run a reader.</span></span> <span data-ttu-id="9ce87-127">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die [wie: einen Taskplaner in einem Dataflow-Block angeben](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) Thema.</span><span class="sxs-lookup"><span data-stu-id="9ce87-127">This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]
 [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveScheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler ExclusiveScheduler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler ExclusiveScheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExclusiveScheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ ExclusiveScheduler { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ce87-128">Ruft <see cref="T:System.Threading.Tasks.TaskScheduler" /> ab, das verwendet werden kann, um Aufgaben für dieses Paar zu planen, die in Bezug auf andere Aufgaben für dieses Paar exklusiv ausgeführt werden müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-128">Gets a <see cref="T:System.Threading.Tasks.TaskScheduler" /> that can be used to schedule tasks to this pair that must run exclusively with regards to other tasks on this pair.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ce87-129">Ein Objekt, das verwendet werden kann, um Aufgaben zu planen, die nicht gleichzeitig mit anderen Aufgaben ausgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ce87-129">An object that can be used to schedule tasks that do not run concurrently with other tasks.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9ce87-130">Das folgende Beispiel zeigt die Verwendung der <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler%2A> Eigenschaft einen Writer ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="9ce87-130">The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler%2A> property to run a writer.</span></span> <span data-ttu-id="9ce87-131">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die [wie: einen Taskplaner in einem Dataflow-Block angeben](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) Thema.</span><span class="sxs-lookup"><span data-stu-id="9ce87-131">This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]
 [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>