<Type Name="ParallelOptions" FullName="System.Threading.Tasks.ParallelOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="41147c8213421a6410b90743914718cacad192cb" /><Meta Name="ms.sourcegitcommit" Value="ea104bc7868886a205b1df30baed6ca34ff70ecb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/20/2019" /><Meta Name="ms.locfileid" Value="68368996" /></Metadata><TypeSignature Language="C#" Value="public class ParallelOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParallelOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ParallelOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ParallelOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParallelOptions" />
  <TypeSignature Language="F#" Value="type ParallelOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Speichert Optionen, die die Ausführung von Methoden für die <see cref="T:System.Threading.Tasks.Parallel" />-Klasse konfigurieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

Standardmäßig versuchen Methoden der <xref:System.Threading.Tasks.Parallel> -Klasse, alle verfügbaren Prozessoren zu verwenden, sind nicht Abbruch fähig und Zielen auf den Standard <xref:System.Threading.Tasks.TaskScheduler> Wert (<xref:System.Threading.Tasks.TaskScheduler.Default?displayProperty=nameWithType>) ab. <xref:System.Threading.Tasks.ParallelOptions>aktiviert das Überschreiben dieser Standardwerte.

 ]]></format>
    </remarks>
    <threadsafe>Der Konstruktor ist Thread sicher und kann von mehreren Threads gleichzeitig zum Erstellen mehrerer Instanzen verwendet werden. Keines der anderen öffentlichen Member ist Thread sicher.</threadsafe>
    <related type="Article" href="~/docs/standard/parallel-programming/data-parallelism-task-parallel-library.md">Datenparallelität (Task Parallel Library)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ParallelOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Threading.Tasks.ParallelOptions" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die-Instanz mit Standardwerten. <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A>wird mit-1 initialisiert und gibt an, dass keine obere Grenze für die zu verwendende Parallelität festgelegt ist. <xref:System.Threading.Tasks.ParallelOptions.CancellationToken%2A>wird mit einem nicht Abbruch baren Token initialisiert und <xref:System.Threading.Tasks.ParallelOptions.TaskScheduler%2A> mit dem Standard Planer initialisiert (TaskScheduler. Default).  
  
 Alle diese Standardeinstellungen können mithilfe der Eigenschaften Satz Accessoren für die-Instanz überschrieben werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property CancellationToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); void set(System::Threading::CancellationToken value); };" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken with get, set" Usage="System.Threading.Tasks.ParallelOptions.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Threading.CancellationToken" />-Instanz ab, die dieser <see cref="T:System.Threading.Tasks.ParallelOptions" />-Instanz zugeordnet ist, oder legt die Instanz fest.</summary>
        <value>Das Token, das dieser Instanz zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Threading.CancellationToken> für eine <xref:System.Threading.Tasks.Parallel> Methode bereitgestellt wird, kann der Vorgang frühzeitig beendet werden. Der Code, der für den Vorgang extern ist, kann das Token abbrechen, und wenn der Vorgang das festgelegte Token beachtet, kann er <xref:System.OperationCanceledException>frühzeitig beendet werden, indem ein ausgelöst wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDegreeOfParallelism">
      <MemberSignature Language="C#" Value="public int MaxDegreeOfParallelism { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDegreeOfParallelism" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDegreeOfParallelism As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDegreeOfParallelism { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDegreeOfParallelism : int with get, set" Usage="System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Anzahl paralleler Aufgaben ab, die durch diese <see cref="T:System.Threading.Tasks.ParallelOptions" />-Instanz aktiviert ist, oder legt diese fest.</summary>
        <value>Eine ganze Zahl, die den maximalen Parallelitätsgrad darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> -Eigenschaft wirkt sich auf die Anzahl von gleich <xref:System.Threading.Tasks.Parallel> zeitigen Vorgängen aus, die <xref:System.Threading.Tasks.ParallelOptions> von Methoden aufrufen ausgeführt werden, die dieser Instanz Ein positiver Eigenschafts Wert schränkt die Anzahl der gleichzeitigen Vorgänge auf den festgelegten Wert ein. Wenn der Wert-1 ist, gibt es keine Beschränkung für die Anzahl von gleichzeitig ausgeführten Vorgängen.  
  
 Standardmäßig <xref:System.Threading.Tasks.Parallel.For%2A> werden von <xref:System.Threading.Tasks.Parallel.ForEach%2A> und jedoch viele Threads verwendet, die der zugrunde liegende Scheduler bereit <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> stellt. durch das Ändern der Standardeinstellung wird daher nur die Anzahl der gleichzeitigen Aufgaben beschränkt.  
  
 Im Allgemeinen müssen Sie diese Einstellung nicht ändern. Allerdings können Sie diese explizit in erweiterten Verwendungs Szenarien wie den folgenden festlegen:  
  
-   Wenn Sie wissen, dass ein bestimmter Algorithmus, den Sie verwenden, nicht über eine bestimmte Anzahl von Kernen hinaus skaliert werden. Sie können die-Eigenschaft festlegen, um zu vermeiden, dass Zyklen für zusätzliche Kerne verschwendet werden.  
  
-   Wenn Sie mehrere Algorithmen gleichzeitig ausführen und manuell definieren möchten, wie viel des Systems von den einzelnen Algorithmen verwendet werden kann. Sie können jeweils einen <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> Wert festlegen.  
  
-   Wenn die Heuristik des Thread Pools nicht die richtige Anzahl der zu verwendenden Threads ermitteln kann und möglicherweise zu viele Threads eingefügt werden. Beispielsweise kann der Thread Pool in Schleifen Text Iterationen mit langer Laufzeit den Unterschied zwischen dem angemessenen Status oder dem Deadlock oder Deadlock nicht ermitteln und kann ggf. keine Threads freigeben, die hinzugefügt wurden, um die Leistung zu verbessern. In diesem Fall können Sie die-Eigenschaft festlegen, um sicherzustellen, dass Sie nicht mehr als eine angemessene Anzahl von Threads verwenden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft wird auf 0 (null) oder einen Wert kleiner als -1 festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="TaskScheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler TaskScheduler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler TaskScheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.TaskScheduler" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskScheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ TaskScheduler { System::Threading::Tasks::TaskScheduler ^ get(); void set(System::Threading::Tasks::TaskScheduler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TaskScheduler : System.Threading.Tasks.TaskScheduler with get, set" Usage="System.Threading.Tasks.ParallelOptions.TaskScheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Threading.Tasks.TaskScheduler" />-Instanz ab, die dieser <see cref="T:System.Threading.Tasks.ParallelOptions" />-Instanz zugeordnet ist, oder legt die Instanz fest. Durch Festlegen dieser Eigenschaft auf NULL wird angegeben, dass der aktuelle Taskplaner verwendet werden soll.</summary>
        <value>Der Taskplaner, der dieser Instanz zugeordnet ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
