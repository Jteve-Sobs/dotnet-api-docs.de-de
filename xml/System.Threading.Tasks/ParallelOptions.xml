<Type Name="ParallelOptions" FullName="System.Threading.Tasks.ParallelOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2fc53f67374a6acb893425b4f538af98478427bf" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46642147" /></Metadata><TypeSignature Language="C#" Value="public class ParallelOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParallelOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ParallelOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ParallelOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParallelOptions" />
  <TypeSignature Language="F#" Value="type ParallelOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Speichert Optionen, die die Ausführung von Methoden für die <see cref="T:System.Threading.Tasks.Parallel" />-Klasse konfigurieren.</summary>
    <remarks>To be added.</remarks>
    <threadsafe>Der Konstruktor ist threadsicher und kann gleichzeitig verwendet werden von mehreren Threads zum Erstellen von mehreren Instanzen. Keiner der anderen öffentlichen Member sind threadsicher.</threadsafe>
    <related type="Article" href="~/docs/standard/parallel-programming/data-parallelism-task-parallel-library.md">Datenparallelität (Task Parallel Library)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ParallelOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Threading.Tasks.ParallelOptions" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die Instanz mit den Standardwerten. <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> wird initialisiert,-1, gibt an, dass es ist kein Obergrenze festgelegt, wie viel Parallelismus verwendet werden soll. <xref:System.Threading.Tasks.ParallelOptions.CancellationToken%2A> wird mit einem nicht abbrechbaren-Token wird initialisiert und <xref:System.Threading.Tasks.ParallelOptions.TaskScheduler%2A> mit dem Standardplaner (TaskScheduler.Default initialisiert) initialisiert wird.  
  
 Alle diese Standardwerte können mithilfe von Set-Accessoren der Eigenschaft für die Instanz überschrieben werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property CancellationToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); void set(System::Threading::CancellationToken value); };" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken with get, set" Usage="System.Threading.Tasks.ParallelOptions.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Threading.CancellationToken" /> ab, das dieser <see cref="T:System.Threading.Tasks.ParallelOptions" />-Instanz zugeordnet ist, oder legt dieses fest.</summary>
        <value>Das Token, das dieser Instanz zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bereitstellen einer <xref:System.Threading.CancellationToken> zu einem <xref:System.Threading.Tasks.Parallel> Methode können Sie den Vorgang zu einem frühen Zeitpunkt beendet werden. Code außerhalb der Vorgang kann das Token Abbrechen, und wenn der Vorgang das Festlegen des Tokens verwendet wird, kann es vorzeitig beendet werden, durch Auslösen einer <xref:System.OperationCanceledException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDegreeOfParallelism">
      <MemberSignature Language="C#" Value="public int MaxDegreeOfParallelism { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDegreeOfParallelism" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDegreeOfParallelism As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDegreeOfParallelism { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDegreeOfParallelism : int with get, set" Usage="System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Anzahl paralleler Aufgaben ab, die durch diese <see cref="T:System.Threading.Tasks.ParallelOptions" />-Instanz aktiviert ist, oder legt diese fest.</summary>
        <value>Eine ganze Zahl, die den maximalen Parallelitätsgrad darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> Eigenschaft hat Auswirkungen auf die Anzahl der gleichzeitigen Vorgänge ausführen, indem <xref:System.Threading.Tasks.Parallel> Methodenaufrufe, die dies übergeben werden <xref:System.Threading.Tasks.ParallelOptions> Instanz. Ein positiver Eigenschaftswert beschränkt die Anzahl der gleichzeitigen Vorgänge auf den festgelegten Wert. Wenn sie-1 ist, besteht keine Beschränkung für die Anzahl der gleichzeitig ausgeführten Vorgängen.  
  
 In der Standardeinstellung <xref:System.Threading.Tasks.Parallel.For%2A> und <xref:System.Threading.Tasks.Parallel.ForEach%2A> werden verwendet, aber viele Threads der zugrunde liegenden Planer bereitstellt, so dass die Änderung, die <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> von der Standardeinstellung nur beschränkt, wie viele gleichzeitige Tasks verwendet werden.  
  
 Im Allgemeinen müssen Sie nicht diese Einstellung zu ändern. Sie können jedoch sie explizit in erweiterten Szenarios wie diese festgelegt:  
  
-   Wenn Sie wissen, dass Sie einen bestimmten Algorithmus verwenden wird nicht auf mehr als eine bestimmte Anzahl von Kernen skalieren. Sie können die Eigenschaft, die Zyklen für zusätzliche Kerne verschwendet festlegen.  
  
-   Wenn Sie gleichzeitig mehrere Algorithmen ausführen und manuell definieren möchten wie viel des Systems für jeden Algorithmus nutzen kann. Sie können festlegen, eine <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> Wert für die einzelnen.  
  
-   Wenn Heuristik beim Ermitteln der des Threadpools ist nicht möglich, um zu bestimmen, die richtige Anzahl von Threads zur Verwendung und kann am Ende einfügen zu viele Threads. Beispielsweise in Text Schleifeniterationen lang andauernde, Threadpool der Warteschleife hinzu möglicherweise nicht den Unterschied zwischen angemessenen ausgeführt oder Livelock oder Deadlocks erkennen, und kann möglicherweise nicht zum Freigeben von Threads, die hinzugefügt wurden, um die Leistung zu verbessern. In diesem Fall können Sie durch Festlegen die Eigenschaft, um sicherzustellen, dass Sie nicht mehr als eine angemessene Anzahl von Threads verwenden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft wird auf 0 (null) oder einen Wert kleiner als -1 festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="TaskScheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler TaskScheduler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler TaskScheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.TaskScheduler" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskScheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ TaskScheduler { System::Threading::Tasks::TaskScheduler ^ get(); void set(System::Threading::Tasks::TaskScheduler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TaskScheduler : System.Threading.Tasks.TaskScheduler with get, set" Usage="System.Threading.Tasks.ParallelOptions.TaskScheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Threading.Tasks.TaskScheduler" /> ab, das dieser <see cref="T:System.Threading.Tasks.ParallelOptions" />-Instanz zugeordnet ist, oder legt dieses fest. Durch Festlegen dieser Eigenschaft auf NULL wird angegeben, dass der aktuelle Taskplaner verwendet werden soll.</summary>
        <value>Der Taskplaner, der dieser Instanz zugeordnet ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>