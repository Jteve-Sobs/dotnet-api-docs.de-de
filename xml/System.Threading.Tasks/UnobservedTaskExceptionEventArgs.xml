<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UnobservedTaskExceptionEventArgs.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b06643750f3e02bff79c9e130f56278446831c8a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b06643750f3e02bff79c9e130f56278446831c8a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs">
          <source>Provides data for the event that is raised when a faulted <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>'s exception goes unobserved.</source>
          <target state="translated">Stellt Daten für das Ereignis bereit, das ausgelöst wird, wenn die Ausnahme eines fehlerhaften bemängelte <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>-Objekts nicht beobachtet wird.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs">
          <source>The Exception property is used to examine the exception without marking it as observed, whereas the <ph id="ph1">&lt;xref:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved%2A&gt;</ph> method is used to mark the exception as observed.</source>
          <target state="translated">Die Exception-Eigenschaft wird verwendet, um die Ausnahme zu untersuchen, ohne dass kennzeichnen Sie es als beobachtet, während die <ph id="ph1">&lt;xref:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved%2A&gt;</ph> Methode wird verwendet, um die Ausnahme als beachtet zu markieren.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs">
          <source>Marking the exception as observed prevents it from triggering exception escalation policy which, by default, terminates the process.</source>
          <target state="translated">Markieren die Ausnahme als beachtet verhindert das Auslösen der Ausnahme ausweitungsrichtlinien, die standardmäßig der Prozess beendet wird.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)">
          <source>The Exception that has gone unobserved.</source>
          <target state="translated">Die Ausnahme, deren Überwachung eingestellt wurde.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" /&gt;</ph> class with the unobserved exception.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" /&gt;</ph>-Klasse mit der nicht überwachten Ausnahme.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception">
          <source>The Exception that went unobserved.</source>
          <target state="translated">Die Ausnahme, deren Überwachung eingestellt wurde.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception">
          <source>The Exception that went unobserved.</source>
          <target state="translated">Die Ausnahme, deren Überwachung eingestellt wurde.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed">
          <source>Gets whether this exception has been marked as "observed."</source>
          <target state="translated">Ruft ab, ob diese Ausnahme als "überwacht" gekennzeichnet wurde.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed">
          <source>true if this exception has been marked as "observed"; otherwise false.</source>
          <target state="translated">True, wenn diese Ausnahme als "überwacht" markiert wurde, andernfalls false.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved">
          <source>Marks the <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception" /&gt;</ph> as "observed," thus preventing it from triggering exception escalation policy which, by default, terminates the process.</source>
          <target state="translated">Markiert die <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception" /&gt;</ph>-Eigenschaft als "überwacht". Dadurch wird verhindert, dass eine Ausnahmeneskalierungsrichtlinie ausgelöst wird, durch die der Prozess standardmäßig beendet wird.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>