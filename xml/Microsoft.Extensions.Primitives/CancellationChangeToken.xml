<Type Name="CancellationChangeToken" FullName="Microsoft.Extensions.Primitives.CancellationChangeToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7ff1f9f88600dfac6c820724baff5275137cef43" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83451490" /></Metadata><TypeSignature Language="C#" Value="public class CancellationChangeToken : Microsoft.Extensions.Primitives.IChangeToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CancellationChangeToken extends System.Object implements class Microsoft.Extensions.Primitives.IChangeToken" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Primitives.CancellationChangeToken" />
  <TypeSignature Language="VB.NET" Value="Public Class CancellationChangeToken&#xA;Implements IChangeToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class CancellationChangeToken : Microsoft::Extensions::Primitives::IChangeToken" />
  <TypeSignature Language="F#" Value="type CancellationChangeToken = class&#xA;    interface IChangeToken" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Primitives.IChangeToken</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="4a50d-101">Eine <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" />-Implementierung, die <see cref="T:System.Threading.CancellationToken" /> verwendet.</span><span class="sxs-lookup"><span data-stu-id="4a50d-101">A <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> implementation using <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CancellationChangeToken (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.CancellationChangeToken.#ctor(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cancellationToken As CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CancellationChangeToken(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Primitives.CancellationChangeToken : System.Threading.CancellationToken -&gt; Microsoft.Extensions.Primitives.CancellationChangeToken" Usage="new Microsoft.Extensions.Primitives.CancellationChangeToken cancellationToken" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="4a50d-102">Das <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="4a50d-102">The <see cref="T:System.Threading.CancellationToken" />.</span></span></param>
        <summary><span data-ttu-id="4a50d-103">Initialisiert eine neue Instanz von <see cref="T:Microsoft.Extensions.Primitives.CancellationChangeToken" />.</span><span class="sxs-lookup"><span data-stu-id="4a50d-103">Initializes a new instance of <see cref="T:Microsoft.Extensions.Primitives.CancellationChangeToken" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChangeCallbacks">
      <MemberSignature Language="C#" Value="public bool ActiveChangeCallbacks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ActiveChangeCallbacks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.CancellationChangeToken.ActiveChangeCallbacks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChangeCallbacks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ActiveChangeCallbacks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveChangeCallbacks : bool" Usage="Microsoft.Extensions.Primitives.CancellationChangeToken.ActiveChangeCallbacks" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.Primitives.IChangeToken.ActiveChangeCallbacks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a50d-104">Gibt an, ob dieses Token Rückrufe proaktiv auslöst.</span><span class="sxs-lookup"><span data-stu-id="4a50d-104">Indicates if this token will pro-actively raise callbacks.</span></span> <span data-ttu-id="4a50d-105">Wenn <see langword="false" />, muss der Tokenconsumer <see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" /> abrufen, um Änderungen zu erkennen.</span><span class="sxs-lookup"><span data-stu-id="4a50d-105">If <see langword="false" />, the token consumer must poll <see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" /> to detect changes.</span></span></summary>
        <value><span data-ttu-id="4a50d-106"><see langword="true" />, wenn das Token die Rückrufe proaktiv aufhebt. Andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a50d-106"><see langword="true" /> if the token will proactively raise callbacks; <see langword="false" /> otherwise.</span></span></value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.CancellationChangeToken.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanged : bool" Usage="Microsoft.Extensions.Primitives.CancellationChangeToken.HasChanged" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a50d-107">Ruft einen Wert ab, der angibt, ob eine Änderung aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="4a50d-107">Gets a value that indicates if a change has occurred.</span></span></summary>
        <value><span data-ttu-id="4a50d-108"><see langword="true" />, wenn eine Änderung aufgetreten ist. Andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a50d-108"><see langword="true" /> if a change has occured; <see langword="false" /> otherwise.</span></span></value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="RegisterChangeCallback">
      <MemberSignature Language="C#" Value="public IDisposable RegisterChangeCallback (Action&lt;object&gt; callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable RegisterChangeCallback(class System.Action`1&lt;object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.CancellationChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterChangeCallback (callback As Action(Of Object), state As Object) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ RegisterChangeCallback(Action&lt;System::Object ^&gt; ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member RegisterChangeCallback : Action&lt;obj&gt; * obj -&gt; IDisposable&#xA;override this.RegisterChangeCallback : Action&lt;obj&gt; * obj -&gt; IDisposable" Usage="cancellationChangeToken.RegisterChangeCallback (callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="4a50d-109">Die aufzurufende <see cref="T:System.Action`1" />.</span><span class="sxs-lookup"><span data-stu-id="4a50d-109">The <see cref="T:System.Action`1" /> to invoke.</span></span></param>
        <param name="state"><span data-ttu-id="4a50d-110">Der an den Rückruf zu übergebenden Zustand.</span><span class="sxs-lookup"><span data-stu-id="4a50d-110">State to be passed into the callback.</span></span></param>
        <summary><span data-ttu-id="4a50d-111">Registriert sich für einen Rückruf, der aufgerufen wird, wenn sich der Eintrag geändert hat.</span><span class="sxs-lookup"><span data-stu-id="4a50d-111">Registers for a callback that will be invoked when the entry has changed.</span></span> <span data-ttu-id="4a50d-112"><see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" /> muss festgelegt werden, bevor der Rückruf aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="4a50d-112"><see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" /> must be set before the callback is invoked.</span></span></summary>
        <returns><span data-ttu-id="4a50d-113">Ein <see cref="T:System.IDisposable" />-Objekt, mit dem die Registrierung des Rückrufs aufgehoben werden kann.</span><span class="sxs-lookup"><span data-stu-id="4a50d-113">An <see cref="T:System.IDisposable" /> that is used to unregister the callback.</span></span></returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
