<Type Name="IChangeToken" FullName="Microsoft.Extensions.Primitives.IChangeToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1bbc4084e44a66d8b8e7a5902b4751c12334c238" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83451464" /></Metadata><TypeSignature Language="C#" Value="public interface IChangeToken" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChangeToken" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Primitives.IChangeToken" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChangeToken" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChangeToken" />
  <TypeSignature Language="F#" Value="type IChangeToken = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Verbreitet Benachrichtigungen, wenn eine Änderung aufgetreten ist.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ActiveChangeCallbacks">
      <MemberSignature Language="C#" Value="public bool ActiveChangeCallbacks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ActiveChangeCallbacks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.IChangeToken.ActiveChangeCallbacks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChangeCallbacks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ActiveChangeCallbacks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveChangeCallbacks : bool" Usage="Microsoft.Extensions.Primitives.IChangeToken.ActiveChangeCallbacks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, ob dieses Token Rückrufe proaktiv auslöst. Wenn <see langword="false" />, muss der Tokenconsumer <see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" /> abrufen, um Änderungen zu erkennen.</summary>
        <value><see langword="true" />, wenn das Token die Rückrufe proaktiv aufhebt. Andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanged : bool" Usage="Microsoft.Extensions.Primitives.IChangeToken.HasChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob eine Änderung aufgetreten ist.</summary>
        <value><see langword="true" />, wenn eine Änderung aufgetreten ist. Andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterChangeCallback">
      <MemberSignature Language="C#" Value="public IDisposable RegisterChangeCallback (Action&lt;object&gt; callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable RegisterChangeCallback(class System.Action`1&lt;object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterChangeCallback (callback As Action(Of Object), state As Object) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ RegisterChangeCallback(Action&lt;System::Object ^&gt; ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member RegisterChangeCallback : Action&lt;obj&gt; * obj -&gt; IDisposable" Usage="iChangeToken.RegisterChangeCallback (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Die aufzurufende <see cref="T:System.Action`1" />.</param>
        <param name="state">Der an den Rückruf zu übergebenden Zustand.</param>
        <summary>Registriert sich für einen Rückruf, der aufgerufen wird, wenn sich der Eintrag geändert hat.
            <see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" /> MUSS festgelegt werden, bevor der Rückruf aufgerufen wird.</summary>
        <returns>Ein <see cref="T:System.IDisposable" />-Objekt, mit dem die Registrierung des Rückrufs aufgehoben werden kann.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
