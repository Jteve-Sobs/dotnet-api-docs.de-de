<Type Name="SessionStateStoreProviderBase" FullName="System.Web.SessionState.SessionStateStoreProviderBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ce6b63abe6d57923d9f1b4e8ac6116840111358b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69256734" /></Metadata><TypeSignature Language="C#" Value="public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SessionStateStoreProviderBase extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateStoreProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SessionStateStoreProviderBase&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateStoreProviderBase abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SessionStateStoreProviderBase = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert die erforderlichen Member eines Sitzungszustandsanbieters für einen Datenspeicher.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.net der Sitzungs Status liest und schreibt Sitzungsdaten mithilfe eines Sitzungs Zustands Speicher Anbieters aus und in einen Datenspeicher. Ein Sitzungs Zustands Speicher-Anbieter ist eine Klasse, die die <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstrakte-Klasse erbt und deren Member mit speziell für den Datenspeicher spezifischen Implementierungen überschreibt. Der Sitzungs Zustands Speicher-Anbieter wird von der <xref:System.Web.SessionState.SessionStateModule> -Klasse während der Verarbeitung einer ASP.NET-Seite aufgerufen, um mit dem Datenspeicher zum Speichern und Abrufen von Sitzungsvariablen und zugehöriger Sitzungsinformationen, wie z. b. dem Timeout Wert, zu kommunizieren.  
  
 Sitzungsdaten in jeder ASP.NET-Anwendung werden separat für jede <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Eigenschaft gespeichert. ASP.NET-Anwendungen verwenden keine Sitzungsdaten gemeinsam.  
  
 Sie können eine benutzerdefinierte <xref:System.Web.SessionState.SessionStateStoreProviderBase> Implementierung für eine ASP.NET-Anwendung angeben, `mode` indem Sie das `sessionState` -Attribut des <xref:System.Web.SessionState.SessionStateMode.Custom> -Konfigurations `customProvider` Elements auf und das-Attribut auf den Namen des benutzerdefinierten Anbieters festlegen, als Dies wird im Beispiel für dieses Thema gezeigt.  
  
## <a name="locking-session-store-data"></a>Sperren von Sitzungs Speicherdaten  
 Da ASP.NET-Anwendungen Multithreadanwendungen zur Unterstützung der Reaktion auf gleichzeitige Anforderungen sind, kann es vorkommen, dass gleichzeitige Anforderungen versuchen, auf die gleichen Sitzungsinformationen zuzugreifen. Stellen Sie sich ein Szenario vor, in dem mehrere Frames in einem Frameset alle auf dieselbe Anwendung zugreifen. Die separaten Anforderungen für jeden Frame im Frameset können gleichzeitig auf dem Webserver in verschiedenen Threads ausgeführt werden. Wenn die ASP.NET-Seiten für jede Frame Quelle auf Sitzungs Zustandsvariablen zugreifen, können mehrere Threads gleichzeitig auf den Sitzungs Speicher zugreifen.  
  
 Um Daten Konflikte im Sitzungs Speicher und unerwartetes Sitzungs Zustands Verhalten zu vermeiden, enthalten <xref:System.Web.SessionState.SessionStateModule> die <xref:System.Web.SessionState.SessionStateStoreProviderBase> Klassen und Sperr Funktionen, die das Sitzungs Speicher Element für eine bestimmte Sitzung exklusiv für die Dauer des Ausführung einer ASP.NET-Seite. Beachten Sie, dass, <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> auch wenn das- `ReadOnly`Attribut als gekennzeichnet ist, andere ASP.NET-Seiten in der gleichen Anwendung möglicherweise in den Sitzungs Speicher schreiben können. eine Anforderung für schreibgeschützte Sitzungsdaten aus dem Speicher wartet also möglicherweise weiterhin auf die Verwendung der gesperrten Daten. befreiten.  
  
 Eine Sperre wird für Sitzungs Speicherdaten am Anfang der Anforderung im aufrufungs <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> -der-Methode festgelegt. Wenn die Anforderung abgeschlossen ist, wird die Sperre während des Aufrufes <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> der-Methode aufgehoben.  
  
 Wenn das <xref:System.Web.SessionState.SessionStateModule> -Objekt während des Aufrufes der-Methode <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> oder der <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> -Methode auf gesperrte Sitzungsdaten stößt, werden die Sitzungsdaten in Intervallen von halbsekunden erneut angefordert, bis entweder die Sperre aufgehoben wird oder die Zeitspanne, die der die Sitzungsdaten sind gesperrt und überschreiten den Wert <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> der-Eigenschaft. Wenn das Ausführungs Timeout überschritten wird, ruft <xref:System.Web.SessionState.SessionStateModule> das Objekt die <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> -Methode auf, um die Sitzungsdaten freizugeben und die Sitzungs Speicherdaten zu diesem Zeitpunkt anzufordern.  
  
 Da gesperrte Sitzungs Speicherdaten möglicherweise durch einen Aufrufe der <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> -Methode in einem separaten Thread freigegeben wurden, bevor der- <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> Methode für die aktuelle Antwort aufgerufen wurde, kann versucht werden, Sitzungs Zustands Speicherdaten festzulegen und freizugeben, die wurde bereits von einer anderen Sitzung freigegeben und geändert. Um diese Situation zu vermeiden, <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> geben <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> die Methoden und einen Sperr Bezeichner zurück. Diese Sperr Kennung muss in jeder Anforderung enthalten sein, um gesperrte Sitzungs Speicherdaten zu ändern. Sitzungs Speicherdaten werden nur geändert, wenn der Sperr Bezeichner im Datenspeicher mit dem von <xref:System.Web.SessionState.SessionStateModule>bereitgestellten Sperr Bezeichner übereinstimmt.  
  
## <a name="deleting-expired-session-store-data"></a>Löschen abgelaufener Sitzungs Speicherdaten  
 Wenn die <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> -Methode für eine bestimmte Sitzung aufgerufen wird, werden die Daten für diese Sitzung mithilfe der <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> -Methode aus dem Datenspeicher gelöscht. Andernfalls verbleiben die Daten im Sitzungsdaten Speicher, um zukünftige Anforderungen für die Sitzung zu Server. Es liegt in der <xref:System.Web.SessionState.SessionStateStoreProviderBase> Implementierung, abgelaufene Sitzungsdaten zu löschen.  
  
   
  
## Examples  
 Ein Beispiel für eine Implementierung eines Sitzungs Zustands Speicher Anbieters finden Sie unter [Implementieren eines Sitzungs Zustands Speicher-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 Das folgende Codebeispiel zeigt die Web. config-Datei für eine ASP.NET-Anwendung, die für die Verwendung eines benutzerdefinierten Sitzungs Zustands Speicher-Anbieters konfiguriert ist.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="OdbcSessionServices" connectionString="DSN=SessionState;" />  
  </connectionStrings>  
  
  <system.web>  
    <sessionState   
      mode="Custom"  
      customProvider="OdbcSessionProvider">  
      <providers>  
        <add name="OdbcSessionProvider"  
             type="Samples.AspNet.Session.OdbcSessionStateStore"  
             connectionStringName="OdbcSessionServices" />  
      </providers>  
    </sessionState>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.net Übersicht über den Sitzungszustand</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionStateStoreProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionStateStoreProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen keinen Konstruktor für eine Klasse implementieren, die die <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstrakte Klasse erbt. Initialisierungs Werte für eine <xref:System.Web.SessionState.SessionStateStoreProviderBase> -Implementierung werden an die <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> -Methoden Implementierung übermittelt.  
  
   
  
## Examples  
 Ein Beispiel für eine Implementierung eines Sitzungs Zustands Speicher Anbieters finden Sie unter [Implementieren eines Sitzungs Zustands Speicher-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.net Übersicht über den Sitzungszustand</related>
      </Docs>
    </Member>
    <Member MemberName="CreateNewStoreData">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData CreateNewStoreData(class System.Web.HttpContext context, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateNewStoreData (context As HttpContext, timeout As Integer) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ CreateNewStoreData(System::Web::HttpContext ^ context, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateNewStoreData : System.Web.HttpContext * int -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.CreateNewStoreData (context, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="timeout">Der <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" />-Wert für den Sitzungszustand für die neuen <see cref="T:System.Web.SessionState.SessionStateStoreData" />.</param>
        <summary>Erstellt ein neues <see cref="T:System.Web.SessionState.SessionStateStoreData" />-Objekt, das für die aktuelle Anforderung verwendet werden soll.</summary>
        <returns>Ein neuer <see cref="T:System.Web.SessionState.SessionStateStoreData" /> für die aktuelle Anforderung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> die-Methode am Anfang einer Anforderung für eine ASP.NET-Seite während des <xref:System.Web.HttpApplication.AcquireRequestState> -Ereignisses auf. Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> -Methode wird wie folgt aufgerufen:  
  
-   die eingehende Anforderung weist keine Sitzungs-ID auf, oder  
  
-   die eingehende Anforderung weist eine Sitzungs-ID auf, aber die Sitzung wurde nicht im Datenspeicher gefunden.  
  
 Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> -Methode erstellt ein <xref:System.Web.SessionState.SessionStateStoreData> neues-Objekt mit <xref:System.Web.SessionState.ISessionStateItemCollection> einem leeren- <xref:System.Web.HttpStaticObjectsCollection> Objekt, einer-Auflistung `timeout` und dem angegebenen Wert. Die <xref:System.Web.HttpStaticObjectsCollection> -Auflistung für die ASP.NET-Anwendung kann mithilfe der <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> -Methode abgerufen werden.  
  
   
  
## Examples  
 Ein Beispiel für eine Implementierung eines Sitzungs Zustands Speicher Anbieters finden Sie unter [Implementieren eines Sitzungs Zustands Speicher-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.net Übersicht über den Sitzungszustand</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUninitializedItem">
      <MemberSignature Language="C#" Value="public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateUninitializedItem(class System.Web.HttpContext context, string id, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateUninitializedItem (context As HttpContext, id As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateUninitializedItem(System::Web::HttpContext ^ context, System::String ^ id, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateUninitializedItem : System.Web.HttpContext * string * int -&gt; unit" Usage="sessionStateStoreProviderBase.CreateUninitializedItem (context, id, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="id">Das <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> für die aktuelle Anforderung.</param>
        <param name="timeout">Der <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> der Sitzung für die aktuelle Anforderung.</param>
        <summary>Fügt dem Datenspeicher ein neues Sitzungszustandselement hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> -Methode wird mit Sitzungen verwendet, `cookieless` wenn das-Attribut `true`und das- `regenerateExpiredSessionId` Attribut beide sind. Wenn das `regenerateExpiredSessionId attribute` -Objekt `true` auf fest <xref:System.Web.SessionState.SessionStateModule> gelegt ist, generiert das <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> -Objekt einen neuen <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Wert, wenn ein abgelaufener Wert erreicht wird.  
  
 Beim Generieren eines neuen <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Werts muss der Browser an eine URL umgeleitet werden, die den neu generierten <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Wert enthält. Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> -Methode wird während der ursprünglichen Anforderung aufgerufen, die einen <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> abgelaufenen Wert enthält. Nachdem das <xref:System.Web.SessionState.SessionStateModule> -Objekt einen neuen <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Wert zum Ersetzen des abgelaufenen Werts erhalten hat, ruft <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> es die-Methode auf, um einen nicht initialisierten Eintrag zum Sitzungszustandsdaten Speicher hinzuzufügen. Der Browser wird dann an die URL umgeleitet, die den neu <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> generierten Wert enthält. Wenn der nicht initialisierte Eintrag im Sitzungsdaten Speicher vorhanden ist, wird sichergestellt, dass die umgeleitete Anforderung, <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> die den neu generierten Wert enthält, nicht für eine Anforderung für eine abgelaufene Sitzung falsch ist. Sie wird stattdessen als neue Sitzung behandelt.  
  
 Der nicht initialisierte Eintrag im Sitzungsdaten Speicher ist mit dem neu generierten <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Wert verknüpft und enthält nur Standardwerte, einschließlich eines Ablaufdatums und einer Uhrzeit sowie eines Werts, der dem `actionFlags` -Parameter von <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>entspricht.und <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> -Methoden. Der nicht initialisierte Eintrag im Sitzungs Zustands Speicher sollte einen `actionFlags` Wert enthalten, der gleich dem <xref:System.Web.SessionState.SessionStateActions.InitializeItem> -Enumerationswert ist. Dieser <xref:System.Web.SessionState.SessionStateModule> Wert wird von der <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> -Methode und der- <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Methode an das-Objekt <xref:System.Web.SessionState.SessionStateModule> übermittelt und informiert das-Objekt darüber, dass die aktuelle Sitzung eine neue, aber nicht initialisierte Sitzung ist. Das <xref:System.Web.SessionState.SessionStateModule> -Objekt initialisiert dann die neue Sitzung und hebt das `Session_OnStart` -Ereignis auf.  
  
 Weitere Informationen zu cookielosen Sitzungen finden Sie unter der <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> -Eigenschaft.  
  
   
  
## Examples  
 Ein Beispiel für eine Implementierung eines Sitzungs Zustands Speicher Anbieters finden Sie unter [Implementieren eines Sitzungs Zustands Speicher-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.net Übersicht über den Sitzungszustand</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="sessionStateStoreProviderBase.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle von der <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />-Implementierung verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=nameWithType> -Methode wird aufgerufen, <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=nameWithType> wenn die-Methode beim Schließen der Anwendungsdomäne ausgeführt wird. Klassen, die die <xref:System.Web.SessionState.SessionStateStoreProviderBase> -Klasse erben, können diese Methode verwenden, um alle Ressourcen freizugeben, die nicht mehr verwendet werden.  
  
   
  
## Examples  
 Ein Beispiel für eine Implementierung eines Sitzungs Zustands Speicher Anbieters finden Sie unter [Implementieren eines Sitzungs Zustands Speicher-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.net Übersicht über den Sitzungszustand</related>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public abstract void EndRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.EndRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <summary>Wird am Ende einer Anforderung vom <see cref="T:System.Web.SessionState.SessionStateModule" />-Objekt aufgerufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> die-Methode am Ende einer Anforderung für eine ASP.NET-Seite während des <xref:System.Web.HttpApplication.EndRequest> -Ereignisses auf. Sie können die- <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> Methode verwenden, um eine beliebige pro-Anforderung-Bereinigung auszuführen, die für den Sitzungs Zustands Speicher-Anbieter erforderlich ist.  
  
   
  
## Examples  
 Ein Beispiel für eine Implementierung eines Sitzungs Zustands Speicher Anbieters finden Sie unter [Implementieren eines Sitzungs Zustands Speicher-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.net Übersicht über den Sitzungszustand</related>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItem(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItem (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItem(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItem (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="id">Das <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> für die aktuelle Anforderung.</param>
        <param name="locked">Diese Methode enthält bei der Rückgabe den booleschen Wert <see langword="true" />, wenn das angeforderte Sitzungselement im Sitzungsdatenspeicher gesperrt ist, andernfalls <see langword="false" />.</param>
        <param name="lockAge">Diese Methode enthält bei der Rückgabe ein <see cref="T:System.TimeSpan" />-Objekt, das auf die Zeitdauer festgelegt ist, für das ein Element im Sitzungsdatenspeicher bereits gesperrt ist.</param>
        <param name="lockId">Diese Methode enthält bei der Rückgabe ein Objekt, das auf den Sperrbezeichner für die aktuelle Anforderung festgelegt ist. Weitere Informationen über Sperrbezeichner finden Sie unter "Sperren von Daten im Sitzungsspeicher" in der Zusammenfassung der <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />-Klasse.</param>
        <param name="actions">Diese Methode enthält bei der Rückgabe einen der <see cref="T:System.Web.SessionState.SessionStateActions" />-Werte, der angibt, ob es sich bei der aktuellen Sitzung um eine nicht initialisierte Sitzung ohne Cookies handelt.</param>
        <summary>Gibt schreibgeschützte Sitzungszustandsdaten vom Sitzungsdatenspeicher zurück.</summary>
        <returns>Ein mit Sitzungswerten und Informationen aus dem Sitzungsdatenspeicher gefülltes <see cref="T:System.Web.SessionState.SessionStateStoreData" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> die-Methode am Anfang einer Anforderung während des <xref:System.Web.HttpApplication.AcquireRequestState> -Ereignisses auf, wenn <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> das-Attribut auf `ReadOnly`festgelegt ist. Wenn das <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> -Attribut auf fest `true`gelegt ist <xref:System.Web.SessionState.SessionStateModule> , ruft das- <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Objekt stattdessen die-Methode auf.  
  
 Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> -Methode gibt <xref:System.Web.SessionState.SessionStateStoreData> ein-Objekt zurück, das mit Sitzungsinformationen aus dem Datenspeicher aufgefüllt ist, und aktualisiert das Ablaufdatum der Sitzungsdaten. Wenn keine Sitzungs Elementdaten im Datenspeicher gefunden werden, <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> legt die-Methode den `locked` `out` -Parameter auf `false` fest und `null`gibt zurück. Dies bewirkt, <xref:System.Web.SessionState.SessionStateModule> dass das-Objekt <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> die-Methode aufruft, um ein neues Sitzungs Element im Datenspeicher zu erstellen.  
  
 Wenn Sitzungs Elementdaten im Datenspeicher gefunden werden, die Daten jedoch gesperrt sind, legt die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> -Methode den `locked` `out` -Parameter `true`auf fest, `lockAge` legt den `out` -Parameter auf das aktuelle Datum und die aktuelle Uhrzeit abzüglich des Datums fest. und die Uhrzeit, zu der das Element gesperrt war (aus dem Datenspeicher abgerufen), legt `lockId` den `out` Parameter auf den aus dem Datenspeicher abgerufenen Sperr Bezeichner `null`fest und gibt zurück. Dies bewirkt, <xref:System.Web.SessionState.SessionStateModule> dass das-Objekt <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> die-Methode nach einem halbsekunden-Intervall erneut aufruft, um zu versuchen, die Sitzungs Element Informationen abzurufen.  
  
 Wenn der Wert, auf `lockAge` den der `out` -Parameter festgelegt <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> ist, den Wert <xref:System.Web.SessionState.SessionStateModule> überschreitet, <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Ruft das-Objekt die-Methode auf, um die Sperre für die Sitzungs Element <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Daten zu löschen, und ruft dann die-Methode erneut auf.  
  
 Der `actionFlags` -Parameter wird verwendet, wenn `cookieless` das `regenerateExpiredSessionId` -Attribut und das `true`-Attribut auf festgelegt sind. Ein `actionFlags` -Wert, <xref:System.Web.SessionState.SessionStateActions.InitializeItem> der auf festgelegt ist, gibt an, dass der Eintrag im Sitzungsdaten Speicher eine neue Sitzung ist, die Initialisierung erfordert. Nicht initialisierte Einträge im Sitzungsdaten Speicher werden durch einen Aufrufder <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> -Methode erstellt. Wenn es sich bei dem Element aus dem Sitzungsdaten Speicher nicht um ein nicht initialisiertes `actionFlags` Element handelt, wird der-Parameter auf 0 (null) festgelegt.  
  
 Benutzerdefinierte Sitzungs Zustands Speicher-Implementierungen, die Sitzungen ohne Cookies unterstützen, sollten `actionFlags` den `out` -Parameter auf den Wert festlegen, der aus dem Sitzungsdaten Speicher für das aktuelle Element zurückgegeben wird. Wenn der `actionFlags` Parameterwert für das angeforderte Sitzungs Speicher Element gleich dem <xref:System.Web.SessionState.SessionStateActions.InitializeItem> -Enumerationswert ist <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> , sollte die-Methode den Wert im Datenspeicher nach dem Festlegen des `actionFlags` `out` -Parameters auf 0 (null) festlegen.  
  
   
  
## Examples  
 Ein Beispiel für eine Implementierung eines Sitzungs Zustands Speicher Anbieters finden Sie unter [Implementieren eines Sitzungs Zustands Speicher-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.net Übersicht über den Sitzungszustand</related>
      </Docs>
    </Member>
    <Member MemberName="GetItemExclusive">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItemExclusive(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemExclusive (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItemExclusive : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItemExclusive (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="id">Das <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> für die aktuelle Anforderung.</param>
        <param name="locked">Diese Methode enthält bei der Rückgabe einen booleschen Wert, der auf <see langword="true" /> festgelegt ist, wenn eine Sperrung erfolgte, andernfalls auf <see langword="false" />.</param>
        <param name="lockAge">Diese Methode enthält bei der Rückgabe ein <see cref="T:System.TimeSpan" />-Objekt, das auf die Zeitdauer festgelegt ist, für das ein Element im Sitzungsdatenspeicher bereits gesperrt ist.</param>
        <param name="lockId">Diese Methode enthält bei der Rückgabe ein Objekt, das auf den Sperrbezeichner für die aktuelle Anforderung festgelegt ist. Weitere Informationen über Sperrbezeichner finden Sie unter "Sperren von Daten im Sitzungsspeicher" in der Zusammenfassung der <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />-Klasse.</param>
        <param name="actions">Diese Methode enthält bei der Rückgabe einen der <see cref="T:System.Web.SessionState.SessionStateActions" />-Werte, der angibt, ob es sich bei der aktuellen Sitzung um eine nicht initialisierte Sitzung ohne Cookies handelt.</param>
        <summary>Gibt schreibgeschützte Sitzungszustandsdaten vom Sitzungsdatenspeicher zurück.</summary>
        <returns>Ein mit Sitzungswerten und Informationen aus dem Sitzungsdatenspeicher gefülltes <see cref="T:System.Web.SessionState.SessionStateStoreData" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> die-Methode am Anfang einer Anforderung während des <xref:System.Web.HttpApplication.AcquireRequestState> -Ereignisses auf, wenn <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> das-Attribut auf `true`festgelegt ist. Dies ist die Standardeinstellung. Wenn das <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> -Attribut auf fest `ReadOnly`gelegt ist <xref:System.Web.SessionState.SessionStateModule> , ruft das- <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Objekt stattdessen die-Methode auf.  
  
 Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Methode gibt ein <xref:System.Web.SessionState.SessionStateStoreData> -Objekt zurück, das mit Sitzungsinformationen aus dem Datenspeicher aufgefüllt ist, aktualisiert das Ablaufdatum der gespeicherten Daten und sperrt die Sitzungs Elementdaten im Datenspeicher für die Dauer der Anforderung. Wenn keine Sitzungs Elementdaten im Datenspeicher gefunden werden, <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> legt die-Methode den `locked` `out` -Parameter auf `false` fest und `null`gibt zurück. Dies bewirkt, <xref:System.Web.SessionState.SessionStateModule> dass das-Objekt <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> die-Methode aufruft, um ein neues Sitzungs Element im Datenspeicher zu erstellen. Wenn Sitzungs Elementdaten im Datenspeicher gefunden werden, die Daten jedoch gesperrt sind, legt die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> -Methode den `locked` `out` -Parameter `true`auf fest, `lockAge` legt den `out` -Parameter auf das aktuelle Datum und die aktuelle Uhrzeit abzüglich des Datums fest. und die Uhrzeit, zu der das Element gesperrt war (aus dem Datenspeicher abgerufen), legt `lockId` den `out` Parameter auf den aus dem Datenspeicher abgerufenen Sperr Bezeichner `null`fest und gibt zurück. Dies bewirkt, <xref:System.Web.SessionState.SessionStateModule> dass das-Objekt <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> die-Methode nach einem halbsekunden-Intervall erneut aufruft, um zu versuchen, die Sitzungs Element Informationen abzurufen und eine Sperre für die Daten zu erhalten. Wenn der Wert, auf `lockAge` den der `out` -Parameter festgelegt <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> ist, den Wert <xref:System.Web.SessionState.SessionStateModule> überschreitet <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> , ruft die die-Methode auf, um die Sperre für die Sitzungs Elementdaten <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> zu löschen, und ruft dann die-Methode erneut auf.  
  
 Der `actionFlags` -Parameter wird verwendet, `cookieless` wenn das-Attribut und das `true`- `regenerateExpiredSessionId` Attribut auf festgelegt sind. Ein `actionFlags` -Wert, <xref:System.Web.SessionState.SessionStateActions.InitializeItem> der auf festgelegt ist, gibt an, dass der Eintrag im Sitzungsdaten Speicher eine neue Sitzung ist, die Initialisierung erfordert. Nicht initialisierte Einträge im Sitzungsdaten Speicher werden durch einen Aufrufder <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> -Methode erstellt. Wenn es sich bei dem Element aus dem Sitzungsdaten Speicher nicht um ein nicht initialisiertes `actionFlags` Element handelt, wird der-Parameter auf 0 (null) festgelegt.  
  
 Benutzerdefinierte Sitzungs Zustands Speicher-Implementierungen, die Sitzungen ohne Cookies unterstützen, sollten `actionFlags` den `out` -Parameter auf den Wert festlegen, der aus dem Sitzungsdaten Speicher für das aktuelle Element zurückgegeben wird. Wenn der `actionFlags` Parameterwert für das angeforderte Sitzungs Speicher Element gleich dem <xref:System.Web.SessionState.SessionStateActions.InitializeItem> -Enumerationswert ist <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> , sollte die-Methode den Wert im Datenspeicher nach dem Festlegen des `actionFlags` `out` -Parameters auf 0 (null) festlegen.  
  
   
  
## Examples  
 Ein Beispiel für eine Implementierung eines Sitzungs Zustands Speicher Anbieters finden Sie unter [Implementieren eines Sitzungs Zustands Speicher-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.net Übersicht über den Sitzungszustand</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public abstract void InitializeRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InitializeRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InitializeRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.InitializeRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <summary>Wird vom <see cref="T:System.Web.SessionState.SessionStateModule" />-Objekt für die Initialisierung pro Anforderung aufgerufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> die-Methode auf, <xref:System.Web.SessionState.SessionStateStoreProviderBase> bevor eine andere Methode aufgerufen wird. Sie können die- <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> Methode verwenden, um eine beliebige pro-Anforderung-Initialisierung auszuführen, die für den Sitzungs Zustands Speicher-Anbieter erforderlich ist.  
  
   
  
## Examples  
 Ein Beispiel für eine Implementierung eines Sitzungs Zustands Speicher Anbieters finden Sie unter [Implementieren eines Sitzungs Zustands Speicher-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.net Übersicht über den Sitzungszustand</related>
      </Docs>
    </Member>
    <Member MemberName="ReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseItemExclusive(class System.Web.HttpContext context, string id, object lockId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReleaseItemExclusive (context As HttpContext, id As String, lockId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseItemExclusive : System.Web.HttpContext * string * obj -&gt; unit" Usage="sessionStateStoreProviderBase.ReleaseItemExclusive (context, id, lockId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="id">Die Sitzungs-ID für die aktuelle Anforderung.</param>
        <param name="lockId">Der Sperrbezeichner für die aktuelle Anforderung.</param>
        <summary>Gibt eine Sperre auf einem Element im Sitzungsdatenspeicher frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> die-Methode auf, um das Ablaufdatum zu aktualisieren und eine Sperre für ein Element im Sitzungsdaten Speicher freizugeben. Er wird am Ende einer Anforderung während des Ereignisses aufgerufen, wenn <xref:System.Web.HttpApplication.ReleaseRequestState> die Sitzungs Werte unverändert bleiben. Wenn die Sitzungs Werte geändert wurden, ruft <xref:System.Web.SessionState.SessionStateModule> das-Objekt stattdessen <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> die-Methode auf.  
  
 Das <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft auch <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> die-Methode auf, wenn eine Sperre für ein Element im Sitzungsdaten Speicher <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> den Wert überschritten hat. Weitere Informationen zu sperren und Details zum Sperr Bezeichner finden Sie unter "Sperren von Sitzungs Speicherdaten" in der <xref:System.Web.SessionState.SessionStateStoreProviderBase> Übersicht über die-Klasse.  
  
 Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> -Methode entfernt nur die Sperre aus einem Element im Sitzungsdaten Speicher für die aktuelle Anwendung, die der angegebenen Sitzung `id` und `lockId` den angegebenen Werten entspricht. Wenn die `lockId` nicht mit der im Datenspeicher identisch ist, führt die <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> -Methode keine Aktion aus.  
  
   
  
## Examples  
 Ein Beispiel für eine Implementierung eines Sitzungs Zustands Speicher Anbieters finden Sie unter [Implementieren eines Sitzungs Zustands Speicher-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.net Übersicht über den Sitzungszustand</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveItem(class System.Web.HttpContext context, string id, object lockId, class System.Web.SessionState.SessionStateStoreData item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveItem (context As HttpContext, id As String, lockId As Object, item As SessionStateStoreData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveItem(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId, System::Web::SessionState::SessionStateStoreData ^ item);" />
      <MemberSignature Language="F#" Value="abstract member RemoveItem : System.Web.HttpContext * string * obj * System.Web.SessionState.SessionStateStoreData -&gt; unit" Usage="sessionStateStoreProviderBase.RemoveItem (context, id, lockId, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="id">Die Sitzungs-ID für die aktuelle Anforderung.</param>
        <param name="lockId">Der Sperrbezeichner für die aktuelle Anforderung.</param>
        <param name="item">Das <see cref="T:System.Web.SessionState.SessionStateStoreData" />, das das aus dem Datenspeicher zu löschende Element darstellt.</param>
        <summary>Löscht Elementdaten aus dem Sitzungsdatenspeicher.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> die-Methode am Ende einer Anforderung während des <xref:System.Web.HttpApplication.ReleaseRequestState> -Ereignisses auf, um die Daten für ein Sitzungs Element aus dem Sitzungsdaten Speicher zu löschen <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> , wenn die-Methode aufgerufen wurde. Nur Sitzungsdaten für die aktuelle Anwendung, die mit der angegebenen `id` Sitzung `lockId` übereinstimmen, und Werte werden gelöscht. Weitere Informationen zu sperren und Details zum Sperr Bezeichner finden Sie unter "Sperren von Sitzungs Speicherdaten" in der <xref:System.Web.SessionState.SessionStateStoreProviderBase> Übersicht über die-Klasse.  
  
   
  
## Examples  
 Ein Beispiel für eine Implementierung eines Sitzungs Zustands Speicher Anbieters finden Sie unter [Implementieren eines Sitzungs Zustands Speicher-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.net Übersicht über den Sitzungszustand</related>
      </Docs>
    </Member>
    <Member MemberName="ResetItemTimeout">
      <MemberSignature Language="C#" Value="public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetItemTimeout(class System.Web.HttpContext context, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetItemTimeout (context As HttpContext, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetItemTimeout(System::Web::HttpContext ^ context, System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResetItemTimeout : System.Web.HttpContext * string -&gt; unit" Usage="sessionStateStoreProviderBase.ResetItemTimeout (context, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="id">Die Sitzungs-ID für die aktuelle Anforderung.</param>
        <summary>Aktualisiert das Ablaufdatum und die Ablaufzeit eines Elements im Sitzungsdatenspeicher.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> die-Methode auf, um das Ablaufdatum und die Uhrzeit für eine Sitzung auf das aktuelle Datum und <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> die Uhrzeit sowie den Sitzungs Wert zu aktualisieren, wenn eine der folgenden Optionen  
  
-   Das <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> -Attribut `true`ist, oder.  
  
-   die Anforderung hat die <xref:System.Web.HttpApplication.AcquireRequestState> -und- <xref:System.Web.HttpApplication.ReleaseRequestState> Ereignisse aufgrund eines Fehlers nicht angehoben.  
  
 Wenn eine ASP.NET-Seite angefordert wird und <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> das-Attribut auf `false`festgelegt <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> ist, wird die-Methode immer noch aufgerufen, um das Ablaufdatum und die Ablaufzeit der Daten im Sitzungsdaten Speicher zu aktualisieren.  
  
   
  
## Examples  
 Ein Beispiel für eine Implementierung eines Sitzungs Zustands Speicher Anbieters finden Sie unter [Implementieren eines Sitzungs Zustands Speicher-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.net Übersicht über den Sitzungszustand</related>
      </Docs>
    </Member>
    <Member MemberName="SetAndReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAndReleaseItemExclusive(class System.Web.HttpContext context, string id, class System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetAndReleaseItemExclusive (context As HttpContext, id As String, item As SessionStateStoreData, lockId As Object, newItem As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetAndReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Web::SessionState::SessionStateStoreData ^ item, System::Object ^ lockId, bool newItem);" />
      <MemberSignature Language="F#" Value="abstract member SetAndReleaseItemExclusive : System.Web.HttpContext * string * System.Web.SessionState.SessionStateStoreData * obj * bool -&gt; unit" Usage="sessionStateStoreProviderBase.SetAndReleaseItemExclusive (context, id, item, lockId, newItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="newItem" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="id">Die Sitzungs-ID für die aktuelle Anforderung.</param>
        <param name="item">Das <see cref="T:System.Web.SessionState.SessionStateStoreData" />-Objekt, das die aktuellen zu speichernden Sitzungswerte enthält.</param>
        <param name="lockId">Der Sperrbezeichner für die aktuelle Anforderung.</param>
        <param name="newItem"><see langword="true" />, um das Sitzungselement als neues Element zu bezeichnen, <see langword="false" />, um das Sitzungselement als vorhandenes Element zu bezeichnen.</param>
        <summary>Aktualisiert die Sitzungselementinformationen im Speicher für die Sitzungszustandsdaten mit Werten aus der aktuellen Anforderung und löscht die Sperre der Daten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> die-Methode am Ende einer Anforderung während des <xref:System.Web.HttpApplication.ReleaseRequestState> -Ereignisses auf, um aktuelle Sitzungs Element Informationen in den Datenspeicher einzufügen oder vorhandene Sitzungs Element Informationen im Datenspeicher mit aktuellen Werten zu aktualisieren. , um die Ablaufzeit für das Element zu aktualisieren und die Sperre für die Daten freizugeben. Nur Sitzungsdaten für die aktuelle Anwendung, die mit der angegebenen `id` Sitzung `lockId` übereinstimmen, und Werte werden aktualisiert. Weitere Informationen zu Sperren finden Sie unter "Sperren von Sitzungs Speicherdaten" in <xref:System.Web.SessionState.SessionStateStoreProviderBase> der Übersicht über die-Klasse.  
  
 Wenn die Sitzungs Werte für die aktuelle Anforderung nicht geändert wurden, wird die <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> -Methode nicht aufgerufen. Stattdessen wird die <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> -Methode aufgerufen.  
  
 Wenn die <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> -Methode aufgerufen wurde, wird <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> die-Methode nicht aufgerufen. Stattdessen ruft das <xref:System.Web.SessionState.SessionStateModule> -Objekt die <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> -Methode auf, um Sitzungs Elementdaten aus der Datenquelle zu löschen.  
  
   
  
## Examples  
 Ein Beispiel für eine Implementierung eines Sitzungs Zustands Speicher Anbieters finden Sie unter [Implementieren eines Sitzungs Zustands Speicher-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.net Übersicht über den Sitzungszustand</related>
      </Docs>
    </Member>
    <Member MemberName="SetItemExpireCallback">
      <MemberSignature Language="C#" Value="public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetItemExpireCallback(class System.Web.SessionState.SessionStateItemExpireCallback expireCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SetItemExpireCallback (expireCallback As SessionStateItemExpireCallback) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool SetItemExpireCallback(System::Web::SessionState::SessionStateItemExpireCallback ^ expireCallback);" />
      <MemberSignature Language="F#" Value="abstract member SetItemExpireCallback : System.Web.SessionState.SessionStateItemExpireCallback -&gt; bool" Usage="sessionStateStoreProviderBase.SetItemExpireCallback expireCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expireCallback" Type="System.Web.SessionState.SessionStateItemExpireCallback" />
      </Parameters>
      <Docs>
        <param name="expireCallback">Der <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" />-Delegat für das in der Datei Global.asax definierte <see langword="Session_OnEnd" />-Ereignis.</param>
        <summary>Legt einen Verweis auf den <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" />-Delegaten für das in der Datei Global.asax definierte <see langword="Session_OnEnd" />-Ereignis fest.</summary>
        <returns><see langword="true" />, wenn der Anbieter für den Sitzungszustandsspeicher das Aufrufen des <see langword="Session_OnEnd" />-Ereignisses unterstützt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> die-Methode auf, wenn das Modul initialisiert wird, um `Session_OnEnd` zu bestimmen, ob Aufrufe <xref:System.Web.SessionState.SessionStateStoreProviderBase> des Ereignisses von der Implementierung <xref:System.Web.SessionState.SessionStateItemExpireCallback> unterstützt werden und der Delegat der `Session_OnEnd` -Ereignis.  
  
 Benutzerdefinierte Implementierer des Sitzungs Zustands Speicher Anbieters sollten <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> die-Methode verwenden <xref:System.Web.SessionState.SessionStateModule> , um das Objekt zu `Session_OnEnd` informieren, ob Aufrufe des-Ereignisses unterstützt werden, <xref:System.Web.SessionState.SessionStateItemExpireCallback> und um einen lokalen Verweis auf den Delegaten festzulegen, der von der `expireCallback` -Parameter. Die benutzerdefinierte Implementierung muss entscheiden, wann <xref:System.Web.SessionState.SessionStateItemExpireCallback> der lokale Delegat aufgerufen wird. Der Delegat könnte z. b. während des Aufrufs der <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> -Methode aufgerufen werden, die aufgerufen wird, wenn eine Sitzung abgebrochen wird.  
  
   
  
## Examples  
 Ein Beispiel für eine Implementierung eines Sitzungs Zustands Speicher Anbieters finden Sie unter [Implementieren eines Sitzungs Zustands Speicher-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.net Übersicht über den Sitzungszustand</related>
      </Docs>
    </Member>
  </Members>
</Type>
