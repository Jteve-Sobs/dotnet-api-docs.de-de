<Type Name="SessionStateStoreProviderBase" FullName="System.Web.SessionState.SessionStateStoreProviderBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1841436a6479c0b1c33c26794c28ee86cb78e78f" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51936014" /></Metadata><TypeSignature Language="C#" Value="public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SessionStateStoreProviderBase extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateStoreProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SessionStateStoreProviderBase&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateStoreProviderBase abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SessionStateStoreProviderBase = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert die erforderlichen Member eines Sitzungszustandsanbieters für einen Datenspeicher.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET-Sitzungszustand liest und schreibt, dass die Sitzungsdaten aus dem und in einem Datenspeicher, der Status einer Sitzung mit Anbieter zu speichern. Ein Sitzungszustandsspeicher-Anbieter ist eine Klasse, erbt die <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstrakte Klasse und Außerkraftsetzungen Membern mit Implementierungen, die spezifisch für die Daten zu speichern. Der Anbieter Sitzungszustandsspeicher-wird aufgerufen, durch die <xref:System.Web.SessionState.SessionStateModule> Klasse während der Verarbeitung einer ASP.NET-Seite für die Kommunikation mit dem Datenspeicher für den Speicher und das Abrufen von Sitzungsvariablen und die zugehörigen Sitzungsinformationen wie z. B. den Timeoutwert.  
  
 Sitzungsdaten innerhalb jeder ASP.NET-Anwendung werden separat gespeichert, für die einzelnen <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Eigenschaft. Sitzungsdaten freigeben ASP.NET-Anwendungen nicht.  
  
 Können Sie angeben, ein benutzerdefiniertes <xref:System.Web.SessionState.SessionStateStoreProviderBase> Implementierung für eine ASP.NET-Anwendung durch Festlegen der `mode` Attribut der `sessionState` Konfigurationselement, <xref:System.Web.SessionState.SessionStateMode.Custom> und die `customProvider` auf den Namen des benutzerdefinierten Anbieters, die als Attribut Im Beispiel in diesem Thema gezeigt.  
  
## <a name="locking-session-store-data"></a>Sperren Sitzung Store-Daten  
 Da es sich bei ASP.NET-Anwendungen Multithread zur Unterstützung für gleichzeitige Anforderungen reagiert werden, ist es möglich, dass gleichzeitige Anforderungen versuchen, auf die gleiche Sitzungsinformationen zugreifen. Erwägen Sie ein Szenario, in dem mehrere Frames in einem Frameset derselben Anwendung zugreifen. Die separaten Anforderungen für jeden Frame im Frameset können auf dem Webserver auf verschiedenen Threads gleichzeitig ausgeführt werden. Wenn die ASP.NET-Seiten für jeden Frame Sitzungszustandsvariablen zugreifen, können Sie mehrere Threads gleichzeitig auf den Sitzungsspeicher haben.  
  
 Um Datenkollisionen Sitzungsspeicher und unerwartetem Sitzungszustands-Verhalten zu vermeiden der <xref:System.Web.SessionState.SessionStateModule> und <xref:System.Web.SessionState.SessionStateStoreProviderBase> Klassen umfassen Lock-Funktionen, die im Sitzungsspeicher für eine bestimmte Sitzung für die Dauer der exklusiv gesperrt der die Ausführung einer ASP.NET-Seite. Beachten Sie, selbst wenn die <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> Attribut markiert ist, als `ReadOnly`, andere ASP.NET-Seiten in der gleichen Anwendung möglicherweise in der Sitzungsspeicher zu schreiben, damit eine Anforderung für nur-Lese Sitzung, die Daten aus dem Speicher können letztendlich trotzdem noch warten auf Daten gesperrt freigegeben.  
  
 Eine Sperre festgelegt ist, auf Daten im Sitzungsspeicher am Anfang der Anforderung, in dem Aufruf von der <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Methode. Wenn die Anforderung abgeschlossen ist, wird die Sperre aufgehoben, während des Aufrufs der <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> Methode.  
  
 Wenn die <xref:System.Web.SessionState.SessionStateModule> Objekt trifft die gesperrten Daten während des Aufrufs von entweder die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> oder <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> -Methode, fordert es die Sitzungsdaten halbe Sekunden bis die Sperre aufgehoben wird oder die Zeit, die die Sitzungsdaten gesperrt überschreitet den Wert von der <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> Eigenschaft. Wenn das Ausführungstimeout überschritten wird, die <xref:System.Web.SessionState.SessionStateModule> Objekt ruft die <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Methode, um die Daten im Sitzungsspeicher – kostenlos und Anfordern der Sitzungsspeicher-Daten zu diesem Zeitpunkt.  
  
 Da Sitzungsspeicher gesperrt Daten möglicherweise durch einen Aufruf von freigegeben wurden die <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Methode in einem separaten Thread vor dem Aufruf der <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> Methode für die aktuelle Antwort, könnte versucht festlegen und Sitzungszustandsspeicher-Daten, die Version bereits veröffentlicht und von einer anderen Sitzung geändert. Zum Vermeiden dieser Situation die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> und <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Methoden geben einen Sperrbezeichner zurück. Diese Sperren-ID muss bei jeder Anforderung zum Ändern von Daten der gesperrten Sitzungsspeicher enthalten sein. Sitzungsspeicher Daten geändert werden, nur dann, wenn der Sperrbezeichner im Datenspeicher die vom Sperren-ID entspricht der <xref:System.Web.SessionState.SessionStateModule>.  
  
## <a name="deleting-expired-session-store-data"></a>Löschen von abgelaufenen Sitzungs-Store-Daten  
 Bei der <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Methode wird aufgerufen, für eine bestimmte Sitzung, die Daten für diese Sitzung werden gelöscht, aus der Daten unter Verwendung der <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> Methode; andernfalls die Daten verbleiben in Sitzungsdatenspeicher auf zukünftige serveranforderungen für die Sitzung. Es liegt die <xref:System.Web.SessionState.SessionStateStoreProviderBase> Implementierung, dass abgelaufene Sitzungs-Daten zu löschen.  
  
   
  
## Examples  
 Ein Beispiel für die Implementierung eines Sitzungszustandsspeicher-Anbieters, finden Sie unter [Implementieren eines Sitzungszustands-Store-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 Das folgende Codebeispiel zeigt die Datei "Web.config" für eine ASP.NET-Anwendung, die Verwendung ein benutzerdefinierten Speicheranbieters für Sitzungszustands-konfiguriert ist.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="OdbcSessionServices" connectionString="DSN=SessionState;" />  
  </connectionStrings>  
  
  <system.web>  
    <sessionState   
      mode="Custom"  
      customProvider="OdbcSessionProvider">  
      <providers>  
        <add name="OdbcSessionProvider"  
             type="Samples.AspNet.Session.OdbcSessionStateStore"  
             connectionStringName="OdbcSessionServices" />  
      </providers>  
    </sessionState>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Übersicht über die ASP.NET Session State</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionStateStoreProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionStateStoreProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie sind nicht erforderlich, einen Konstruktor für eine Klasse zu implementieren, erbt die <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstrakte Klasse. Initialisierung Werte für eine <xref:System.Web.SessionState.SessionStateStoreProviderBase> Implementierung übergeben werden, um die <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> methodenimplementierung.  
  
   
  
## Examples  
 Ein Beispiel für die Implementierung eines Sitzungszustandsspeicher-Anbieters, finden Sie unter [Implementieren eines Sitzungszustands-Store-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Übersicht über die ASP.NET Session State</related>
      </Docs>
    </Member>
    <Member MemberName="CreateNewStoreData">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData CreateNewStoreData(class System.Web.HttpContext context, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateNewStoreData (context As HttpContext, timeout As Integer) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ CreateNewStoreData(System::Web::HttpContext ^ context, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateNewStoreData : System.Web.HttpContext * int -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.CreateNewStoreData (context, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="timeout">Der <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" />-Wert für den Sitzungszustand für die neuen <see cref="T:System.Web.SessionState.SessionStateStoreData" />.</param>
        <summary>Erstellt ein neues <see cref="T:System.Web.SessionState.SessionStateStoreData" />-Objekt, das für die aktuelle Anforderung verwendet werden soll.</summary>
        <returns>Ein neuer <see cref="T:System.Web.SessionState.SessionStateStoreData" /> für die aktuelle Anforderung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft die <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> -Methode zu Beginn einer Anforderung für eine ASP.NET-Seite während der <xref:System.Web.HttpApplication.AcquireRequestState> Ereignis. Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> Methode wird aufgerufen, wenn:  
  
-   die eingehende Anforderung enthält keine Sitzungs-ID, oder  
  
-   die eingehende Anforderung enthält eine Sitzungs-ID, aber die Sitzung wird im Datenspeicher nicht gefunden.  
  
 Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> Methode erstellt ein neues <xref:System.Web.SessionState.SessionStateStoreData> Objekt mit einer leeren <xref:System.Web.SessionState.ISessionStateItemCollection> Objekt ein <xref:System.Web.HttpStaticObjectsCollection> Auflistung verwendet werden soll, und der angegebenen `timeout` Wert. Die <xref:System.Web.HttpStaticObjectsCollection> Auflistung für die ASP.NET-Anwendung kann abgerufen werden, mithilfe der <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> Methode.  
  
   
  
## Examples  
 Ein Beispiel für die Implementierung eines Sitzungszustandsspeicher-Anbieters, finden Sie unter [Implementieren eines Sitzungszustands-Store-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Übersicht über die ASP.NET Session State</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUninitializedItem">
      <MemberSignature Language="C#" Value="public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateUninitializedItem(class System.Web.HttpContext context, string id, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateUninitializedItem (context As HttpContext, id As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateUninitializedItem(System::Web::HttpContext ^ context, System::String ^ id, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateUninitializedItem : System.Web.HttpContext * string * int -&gt; unit" Usage="sessionStateStoreProviderBase.CreateUninitializedItem (context, id, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="id">Das <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> für die aktuelle Anforderung.</param>
        <param name="timeout">Der <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> der Sitzung für die aktuelle Anforderung.</param>
        <summary>Fügt dem Datenspeicher ein neues Sitzungszustandselement hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Methode wird verwendet, mit Sitzungen bei der `cookieless` und `regenerateExpiredSessionId` Attribute sind beide `true`. Mit der `regenerateExpiredSessionId attribute` festgelegt `true` bewirkt, dass die <xref:System.Web.SessionState.SessionStateModule> Objekt um eine neue <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Wert, wenn ein abgelaufenes <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Wert festgestellt wird.  
  
 Der Prozess der Generierung einer neuen <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Wert erforderlich ist, der Browser umgeleitet werden, um eine URL, die neu generierten enthält <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Wert. Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Methode wird aufgerufen, während der ursprünglichen Anforderung, die ein abgelaufenes enthält <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Wert. Nach der <xref:System.Web.SessionState.SessionStateModule> -Objekt abruft, eine neue <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Wert, der um den abgelaufenen Wert zu ersetzen, ruft es die <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Methode, um einen nicht initialisierten Eintrag mit dem Sitzungszustand Datenspeicher hinzuzufügen. Der Browser wird dann umgeleitet, auf die URL, die mit dem neu generierten <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Wert. Das Vorhandensein der nicht initialisierte Eintrag im Sitzungsdatenspeicher wird sichergestellt, dass die umgeleitete Anforderung mit dem neu generierten <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Wert ist nicht für eine Anforderung für eine abgelaufene Sitzung gehalten und ist, sondern als eine neue Sitzung behandelt.  
  
 Der nicht initialisierte Eintrag im Sitzungsdatenspeicher bezieht sich auf den neu generierten <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Wert ein, und enthält nur Standardwerte aufweisen, einschließlich ein Ablaufdatum und die Uhrzeit und ein Wert, der die entspricht der `actionFlags` Parameter, der die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>und <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Methoden. Sollte der nicht initialisierte Eintrag in der Sitzungszustandsspeicher enthalten eine `actionFlags` Wert gleich der <xref:System.Web.SessionState.SessionStateActions.InitializeItem> Enumerationswert. Dieser Wert wird übergeben, um die <xref:System.Web.SessionState.SessionStateModule> Objekts, indem die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> und <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Methoden, und informiert den <xref:System.Web.SessionState.SessionStateModule> Objekt, das die aktuelle Sitzung eine neue, aber nicht initialisierte Sitzung. Die <xref:System.Web.SessionState.SessionStateModule> Objekt anschließend initialisieren Sie die neue Sitzung und löst die `Session_OnStart` Ereignis.  
  
 Weitere Informationen zu Sitzungen ohne Cookies, finden Sie unter den <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> Eigenschaft.  
  
   
  
## Examples  
 Ein Beispiel für die Implementierung eines Sitzungszustandsspeicher-Anbieters, finden Sie unter [Implementieren eines Sitzungszustands-Store-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Übersicht über die ASP.NET Session State</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="sessionStateStoreProviderBase.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle von der <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />-Implementierung verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=nameWithType> Methode wird aufgerufen, wenn die <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=nameWithType> Methode, die beim Schließen der Anwendungsdomäne ausgeführt wird. Klassen, erben die <xref:System.Web.SessionState.SessionStateStoreProviderBase> Klasse kann diese Methode zum Freigeben von Ressourcen nicht mehr in Verwendung verwenden.  
  
   
  
## Examples  
 Ein Beispiel für die Implementierung eines Sitzungszustandsspeicher-Anbieters, finden Sie unter [Implementieren eines Sitzungszustands-Store-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Übersicht über die ASP.NET Session State</related>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public abstract void EndRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.EndRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <summary>Wird am Ende einer Anforderung vom <see cref="T:System.Web.SessionState.SessionStateModule" />-Objekt aufgerufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft die <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> Methode am Ende einer Anforderung für eine ASP.NET-Seite, während die <xref:System.Web.HttpApplication.EndRequest> Ereignis. Sie können die <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> Methode zum Durchführen von Bereinigungen pro Anforderung den Sitzungszustandsspeicher erforderlich.  
  
   
  
## Examples  
 Ein Beispiel für die Implementierung eines Sitzungszustandsspeicher-Anbieters, finden Sie unter [Implementieren eines Sitzungszustands-Store-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Übersicht über die ASP.NET Session State</related>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItem(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItem (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItem(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItem (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="id">Das <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> für die aktuelle Anforderung.</param>
        <param name="locked">Diese Methode enthält bei der Rückgabe den booleschen Wert <see langword="true" />, wenn das angeforderte Sitzungselement im Sitzungsdatenspeicher gesperrt ist, andernfalls <see langword="false" />.</param>
        <param name="lockAge">Diese Methode enthält bei der Rückgabe ein <see cref="T:System.TimeSpan" />-Objekt, das auf die Zeitdauer festgelegt ist, für das ein Element im Sitzungsdatenspeicher bereits gesperrt ist.</param>
        <param name="lockId">Diese Methode enthält bei der Rückgabe ein Objekt, das auf den Sperrbezeichner für die aktuelle Anforderung festgelegt ist. Weitere Informationen über Sperrbezeichner finden Sie unter "Sperren von Daten im Sitzungsspeicher" in der Zusammenfassung der <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />-Klasse.</param>
        <param name="actions">Diese Methode enthält bei der Rückgabe einen der <see cref="T:System.Web.SessionState.SessionStateActions" />-Werte, der angibt, ob es sich bei der aktuellen Sitzung um eine nicht initialisierte Sitzung ohne Cookies handelt.</param>
        <summary>Gibt schreibgeschützte Sitzungszustandsdaten vom Sitzungsdatenspeicher zurück.</summary>
        <returns>Ein mit Sitzungswerten und Informationen aus dem Sitzungsdatenspeicher gefülltes <see cref="T:System.Web.SessionState.SessionStateStoreData" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> -Methode zu Beginn einer Anforderung während der <xref:System.Web.HttpApplication.AcquireRequestState> Ereignis, wenn die <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> -Attributsatz auf `ReadOnly`. Wenn die <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> -Attributsatz auf `true`, <xref:System.Web.SessionState.SessionStateModule> -Objekt stattdessen Ruft die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Methode.  
  
 Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Methode gibt eine <xref:System.Web.SessionState.SessionStateStoreData> Objekt mit Informationen aus dem Datenspeicher gefüllt und aktualisiert das Ablaufdatum der Sitzungsdaten. Wenn keine Sitzungs-Element Daten mit dem Datenspeicher gefunden werden. der <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Methode legt die `locked` `out` Parameter, um `false` und gibt `null`. Dies bewirkt, dass die <xref:System.Web.SessionState.SessionStateModule> Objekt aufrufen, die <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> Methode, um eine neue Sitzungs-Element im Datenspeicher zu erstellen.  
  
 Wenn Sitzungselement Daten im Datenspeicher gefunden werden, aber die Daten gesperrt werden der <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Methode wird die `locked` `out` Parameter, um `true`, legt der `lockAge` `out` Parameter, um das aktuelle Datum und Uhrzeit abzüglich des Datums und die Uhrzeit, wenn das Element gesperrt war (die aus dem Datenspeicher abgerufen wird), legt die `lockId` `out` Parameter auf den Sperrbezeichner abgerufen wird, aus dem Datenspeicher und gibt `null`. Dies bewirkt, dass die <xref:System.Web.SessionState.SessionStateModule> Objekt aufrufen, die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Methode später als eine halbe Sekunde Intervall versuchen, die Sitzungselementinformationen abzurufen.  
  
 Wenn der Wert, der `lockAge` `out` -Parameter festgelegt wird, überschreitet der <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> Wert, die <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft der <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Methode, um die Sperre für die Sitzungs-Element Daten, und ruft dann Löschen der <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> -Methode erneut.  
  
 Die `actionFlags` Parameter wird verwendet, wenn sowohl die `cookieless` und `regenerateExpiredSessionId` Attribute werden festgelegt, um `true`. Ein `actionFlags` Wert festgelegt wird, um <xref:System.Web.SessionState.SessionStateActions.InitializeItem> gibt an, dass der Eintrag im Sitzungsdatenspeicher eine neue Sitzung, die Initialisierung erforderlich ist. Nicht initialisierte Einträge im Sitzungsdatenspeicher werden erstellt, durch einen Aufruf der <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Methode. Wenn das Element aus dem Sitzungsdatenspeicher nicht initialisiert, ist die `actionFlags` Parameter auf 0 (null) festgelegt.  
  
 Benutzerdefinierte Sitzungszustandsspeicher-Implementierungen, die Sitzungen ohne Cookies unterstützen sollten Festlegen der `actionFlags` `out` Parameter, um den Wert aus dem Sitzungsdatenspeicher für das aktuelle Element zurückgegeben. Wenn die `actionFlags` Wert für den angeforderten Speichern des Sitzungszustands-Element entspricht der <xref:System.Web.SessionState.SessionStateActions.InitializeItem> -Enumerationswert, der <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Methode sollte den Wert festgelegt, in den Datenspeicher und 0 (null), nach dem Festlegen der `actionFlags` `out` Parameter.  
  
   
  
## Examples  
 Ein Beispiel für die Implementierung eines Sitzungszustandsspeicher-Anbieters, finden Sie unter [Implementieren eines Sitzungszustands-Store-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Übersicht über die ASP.NET Session State</related>
      </Docs>
    </Member>
    <Member MemberName="GetItemExclusive">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItemExclusive(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemExclusive (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItemExclusive : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItemExclusive (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="id">Das <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> für die aktuelle Anforderung.</param>
        <param name="locked">Diese Methode enthält bei der Rückgabe einen booleschen Wert, der auf <see langword="true" /> festgelegt ist, wenn eine Sperrung erfolgte, andernfalls auf <see langword="false" />.</param>
        <param name="lockAge">Diese Methode enthält bei der Rückgabe ein <see cref="T:System.TimeSpan" />-Objekt, das auf die Zeitdauer festgelegt ist, für das ein Element im Sitzungsdatenspeicher bereits gesperrt ist.</param>
        <param name="lockId">Diese Methode enthält bei der Rückgabe ein Objekt, das auf den Sperrbezeichner für die aktuelle Anforderung festgelegt ist. Weitere Informationen über Sperrbezeichner finden Sie unter "Sperren von Daten im Sitzungsspeicher" in der Zusammenfassung der <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />-Klasse.</param>
        <param name="actions">Diese Methode enthält bei der Rückgabe einen der <see cref="T:System.Web.SessionState.SessionStateActions" />-Werte, der angibt, ob es sich bei der aktuellen Sitzung um eine nicht initialisierte Sitzung ohne Cookies handelt.</param>
        <summary>Gibt schreibgeschützte Sitzungszustandsdaten vom Sitzungsdatenspeicher zurück.</summary>
        <returns>Ein mit Sitzungswerten und Informationen aus dem Sitzungsdatenspeicher gefülltes <see cref="T:System.Web.SessionState.SessionStateStoreData" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> -Methode zu Beginn einer Anforderung während der <xref:System.Web.HttpApplication.AcquireRequestState> Ereignis, wenn die <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> -Attributsatz auf `true`, dies ist die Standardeinstellung. Wenn die <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> -Attributsatz auf `ReadOnly`, <xref:System.Web.SessionState.SessionStateModule> -Objekt stattdessen Ruft die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Methode.  
  
 Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Methode gibt eine <xref:System.Web.SessionState.SessionStateStoreData> -Objekt mit den Informationen aus dem Datenspeicher aktualisiert das Ablaufdatum der gespeicherten Daten und sperrt die Sitzungs-Element Daten im Datenspeicher für die Dauer der Anforderung. Wenn keine Sitzungs-Element Daten mit dem Datenspeicher gefunden werden. der <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Methode legt die `locked` `out` Parameter, um `false` und gibt `null`. Dies bewirkt, dass die <xref:System.Web.SessionState.SessionStateModule> Objekt aufrufen, die <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> Methode, um eine neue Sitzungs-Element im Datenspeicher zu erstellen. Wenn Sitzungselement Daten im Datenspeicher gefunden werden, aber die Daten gesperrt werden der <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Methode wird die `locked` `out` Parameter, um `true`, legt der `lockAge` `out` Parameter, um das aktuelle Datum und Uhrzeit abzüglich des Datums und die Uhrzeit, wenn das Element gesperrt war (die aus dem Datenspeicher abgerufen wird), legt die `lockId` `out` Parameter auf den Sperrbezeichner abgerufen wird, aus dem Datenspeicher und gibt `null`. Dies bewirkt, dass die <xref:System.Web.SessionState.SessionStateModule> Objekt aufrufen, die <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Methode nach einem halben Sekunde-Intervall, um zu versuchen, die Sitzungselementinformationen abrufen und eine Sperre für die Daten erneut. Wenn der Wert, der `lockAge` `out` Parametersatz, überschreitet der <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> Wert die <xref:System.Web.SessionState.SessionStateModule> Aufrufe der <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Methode, um die Sperre für die Sitzungs-Element Daten, und ruft dann Löschen der <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> -Methode erneut.  
  
 Die `actionFlags` Parameter wird verwendet, wenn die `cookieless` und `regenerateExpiredSessionId` Attribute festgelegt sind `true`. Ein `actionFlags` Wert festgelegt wird, um <xref:System.Web.SessionState.SessionStateActions.InitializeItem> gibt an, dass der Eintrag im Sitzungsdatenspeicher eine neue Sitzung, die Initialisierung erforderlich ist. Nicht initialisierte Einträge im Sitzungsdatenspeicher werden erstellt, durch einen Aufruf der <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Methode. Wenn das Element aus dem Sitzungsdatenspeicher nicht initialisiert, ist die `actionFlags` Parameter auf 0 (null) festgelegt.  
  
 Benutzerdefinierte Sitzungszustandsspeicher-Implementierungen, die Sitzungen ohne Cookies unterstützen sollten Festlegen der `actionFlags` `out` Parameter, um den Wert aus dem Sitzungsdatenspeicher für das aktuelle Element zurückgegeben. Wenn die `actionFlags` Wert für den angeforderten Speichern des Sitzungszustands-Element entspricht der <xref:System.Web.SessionState.SessionStateActions.InitializeItem> -Enumerationswert, der <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Methode sollte den Wert festgelegt, in den Datenspeicher und 0 (null), nach dem Festlegen der `actionFlags` `out` Parameter.  
  
   
  
## Examples  
 Ein Beispiel für die Implementierung eines Sitzungszustandsspeicher-Anbieters, finden Sie unter [Implementieren eines Sitzungszustands-Store-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Übersicht über die ASP.NET Session State</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public abstract void InitializeRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InitializeRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InitializeRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.InitializeRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <summary>Wird vom <see cref="T:System.Web.SessionState.SessionStateModule" />-Objekt für die Initialisierung pro Anforderung aufgerufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft die <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> Methode vor allen anderen <xref:System.Web.SessionState.SessionStateStoreProviderBase> Methode. Sie können die <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> Methode zum Ausführen von Initialisierungen pro Anforderung den Sitzungszustandsspeicher erforderlich.  
  
   
  
## Examples  
 Ein Beispiel für die Implementierung eines Sitzungszustandsspeicher-Anbieters, finden Sie unter [Implementieren eines Sitzungszustands-Store-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Übersicht über die ASP.NET Session State</related>
      </Docs>
    </Member>
    <Member MemberName="ReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseItemExclusive(class System.Web.HttpContext context, string id, object lockId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReleaseItemExclusive (context As HttpContext, id As String, lockId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseItemExclusive : System.Web.HttpContext * string * obj -&gt; unit" Usage="sessionStateStoreProviderBase.ReleaseItemExclusive (context, id, lockId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="id">Die Sitzungs-ID für die aktuelle Anforderung.</param>
        <param name="lockId">Der Sperrbezeichner für die aktuelle Anforderung.</param>
        <summary>Gibt eine Sperre auf einem Element im Sitzungsdatenspeicher frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft die <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Methode zum Aktualisieren das Ablaufdatum und eine Sperre auf ein Element im Sitzungsdatenspeicher. Es wird am Ende einer Anforderung aufgerufen, während die <xref:System.Web.HttpApplication.ReleaseRequestState> Ereignis, wenn die Sitzungs-Werte nicht geändert werden. Wenn die Sitzungs-Werte geändert wurden, die <xref:System.Web.SessionState.SessionStateModule> -Objekt stattdessen Ruft die <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> Methode.  
  
 Die <xref:System.Web.SessionState.SessionStateModule> Objekt ruft auch die <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Methode, wenn eine Sperre für ein Element im Sitzungsdatenspeicher überschritten hat die <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> Wert. Weitere Informationen zum Sperren und Details zu den Sperrbezeichner finden Sie unter "Sperren von Sitzung-Store-Daten" in der <xref:System.Web.SessionState.SessionStateStoreProviderBase> Übersicht über die Klasse.  
  
 Die <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> -Methode entfernt die Sperre nur ein Element im Sitzungsdatenspeicher für die aktuelle Anwendung, die die angegebene Sitzung entspricht `id` und `lockId` Werte. Wenn die `lockId` entspricht nicht dem im Datenspeicher, der <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Methode führt keine Aktion.  
  
   
  
## Examples  
 Ein Beispiel für die Implementierung eines Sitzungszustandsspeicher-Anbieters, finden Sie unter [Implementieren eines Sitzungszustands-Store-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Übersicht über die ASP.NET Session State</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveItem(class System.Web.HttpContext context, string id, object lockId, class System.Web.SessionState.SessionStateStoreData item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveItem (context As HttpContext, id As String, lockId As Object, item As SessionStateStoreData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveItem(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId, System::Web::SessionState::SessionStateStoreData ^ item);" />
      <MemberSignature Language="F#" Value="abstract member RemoveItem : System.Web.HttpContext * string * obj * System.Web.SessionState.SessionStateStoreData -&gt; unit" Usage="sessionStateStoreProviderBase.RemoveItem (context, id, lockId, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="id">Die Sitzungs-ID für die aktuelle Anforderung.</param>
        <param name="lockId">Der Sperrbezeichner für die aktuelle Anforderung.</param>
        <param name="item">Das <see cref="T:System.Web.SessionState.SessionStateStoreData" />, das das aus dem Datenspeicher zu löschende Element darstellt.</param>
        <summary>Löscht Elementdaten aus dem Sitzungsdatenspeicher.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft die <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> Methode am Ende einer Anforderung während der <xref:System.Web.HttpApplication.ReleaseRequestState> Ereignis, um die Daten für ein Sitzungselement aus dem Datenspeicher für die Sitzung zu löschen, wenn die <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> -Methode aufgerufen wurde. Nur Daten für die aktuelle Anwendung, die die angegebene Sitzung entspricht `id` und `lockId` Werte gelöscht wird. Weitere Informationen zum Sperren und Details zu den Sperrbezeichner finden Sie unter "Sperren von Sitzung-Store-Daten" in der <xref:System.Web.SessionState.SessionStateStoreProviderBase> Übersicht über die Klasse.  
  
   
  
## Examples  
 Ein Beispiel für die Implementierung eines Sitzungszustandsspeicher-Anbieters, finden Sie unter [Implementieren eines Sitzungszustands-Store-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Übersicht über die ASP.NET Session State</related>
      </Docs>
    </Member>
    <Member MemberName="ResetItemTimeout">
      <MemberSignature Language="C#" Value="public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetItemTimeout(class System.Web.HttpContext context, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetItemTimeout (context As HttpContext, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetItemTimeout(System::Web::HttpContext ^ context, System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResetItemTimeout : System.Web.HttpContext * string -&gt; unit" Usage="sessionStateStoreProviderBase.ResetItemTimeout (context, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="id">Die Sitzungs-ID für die aktuelle Anforderung.</param>
        <summary>Aktualisiert das Ablaufdatum und die Ablaufzeit eines Elements im Sitzungsdatenspeicher.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft die <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> Methode, um das Ablaufdatum und die Uhrzeit für eine Sitzung auf dem aktuellen Datum und-Uhrzeit sowie der Sitzung aktualisieren <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> Wert fest, wenn entweder:  
  
-   die <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> Attribut `true`, oder  
  
-   die Anforderung hat nicht ausgelöst. die <xref:System.Web.HttpApplication.AcquireRequestState> und <xref:System.Web.HttpApplication.ReleaseRequestState> Ereignisse aufgrund eines Fehlers.  
  
 Wenn eine ASP.NET-Seite angefordert wird und die <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> -Attributsatz auf `false`, <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> trotzdem aufgerufen, um das Ablaufdatum und die Uhrzeit der Daten im Sitzungsdatenspeicher zu aktualisieren.  
  
   
  
## Examples  
 Ein Beispiel für die Implementierung eines Sitzungszustandsspeicher-Anbieters, finden Sie unter [Implementieren eines Sitzungszustands-Store-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Übersicht über die ASP.NET Session State</related>
      </Docs>
    </Member>
    <Member MemberName="SetAndReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAndReleaseItemExclusive(class System.Web.HttpContext context, string id, class System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetAndReleaseItemExclusive (context As HttpContext, id As String, item As SessionStateStoreData, lockId As Object, newItem As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetAndReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Web::SessionState::SessionStateStoreData ^ item, System::Object ^ lockId, bool newItem);" />
      <MemberSignature Language="F#" Value="abstract member SetAndReleaseItemExclusive : System.Web.HttpContext * string * System.Web.SessionState.SessionStateStoreData * obj * bool -&gt; unit" Usage="sessionStateStoreProviderBase.SetAndReleaseItemExclusive (context, id, item, lockId, newItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="newItem" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</param>
        <param name="id">Die Sitzungs-ID für die aktuelle Anforderung.</param>
        <param name="item">Das <see cref="T:System.Web.SessionState.SessionStateStoreData" />-Objekt, das die aktuellen zu speichernden Sitzungswerte enthält.</param>
        <param name="lockId">Der Sperrbezeichner für die aktuelle Anforderung.</param>
        <param name="newItem"><see langword="true" />, um das Sitzungselement als neues Element zu bezeichnen, <see langword="false" />, um das Sitzungselement als vorhandenes Element zu bezeichnen.</param>
        <summary>Aktualisiert die Sitzungselementinformationen im Speicher für die Sitzungszustandsdaten mit Werten aus der aktuellen Anforderung und löscht die Sperre der Daten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft die <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> Methode am Ende einer Anforderung während der <xref:System.Web.HttpApplication.ReleaseRequestState> Ereignis zum Einfügen von Informationen über die aktuelle Sitzung-Elemente in den Datenspeicher oder Aktualisieren von vorhandenen Sitzungselementinformationen im Datenspeicher mit aktuellen Werten um die Ablaufzeit für das Element zu aktualisieren, und die Sperre für die Daten. Nur Daten für die aktuelle Anwendung, die die angegebene Sitzung entspricht `id` und `lockId` Werte wird aktualisiert. Weitere Informationen zu sperren, finden Sie unter "Sperren der Sitzung Store-Daten" in der <xref:System.Web.SessionState.SessionStateStoreProviderBase> Übersicht über die Klasse.  
  
 Wenn die Sitzungswerte für die aktuelle Anforderung nicht geändert wurden, die <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> Methode wird nicht aufgerufen. Stattdessen die <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Methode wird aufgerufen.  
  
 Wenn die <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Methode aufgerufen wurde, die <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> Methode wird nicht aufgerufen. Stattdessen die <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft die <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> Methode, um das Sitzungselement Daten aus der Datenquelle zu löschen.  
  
   
  
## Examples  
 Ein Beispiel für die Implementierung eines Sitzungszustandsspeicher-Anbieters, finden Sie unter [Implementieren eines Sitzungszustands-Store-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Übersicht über die ASP.NET Session State</related>
      </Docs>
    </Member>
    <Member MemberName="SetItemExpireCallback">
      <MemberSignature Language="C#" Value="public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetItemExpireCallback(class System.Web.SessionState.SessionStateItemExpireCallback expireCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SetItemExpireCallback (expireCallback As SessionStateItemExpireCallback) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool SetItemExpireCallback(System::Web::SessionState::SessionStateItemExpireCallback ^ expireCallback);" />
      <MemberSignature Language="F#" Value="abstract member SetItemExpireCallback : System.Web.SessionState.SessionStateItemExpireCallback -&gt; bool" Usage="sessionStateStoreProviderBase.SetItemExpireCallback expireCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expireCallback" Type="System.Web.SessionState.SessionStateItemExpireCallback" />
      </Parameters>
      <Docs>
        <param name="expireCallback">Der <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" />-Delegat für das in der Datei Global.asax definierte <see langword="Session_OnEnd" />-Ereignis.</param>
        <summary>Legt einen Verweis auf den <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" />-Delegaten für das in der Datei Global.asax definierte <see langword="Session_OnEnd" />-Ereignis fest.</summary>
        <returns><see langword="true" />, wenn der Anbieter für den Sitzungszustandsspeicher das Aufrufen des <see langword="Session_OnEnd" />-Ereignisses unterstützt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.SessionState.SessionStateModule> -Objekt ruft der <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> Methode, wenn das Modul initialisiert wird, um zu bestimmen, ob Aufrufe von der `Session_OnEnd` Ereignis werden von unterstützt die <xref:System.Web.SessionState.SessionStateStoreProviderBase> Implementierung und zuzuordnen der <xref:System.Web.SessionState.SessionStateItemExpireCallback> mit der Delegieren`Session_OnEnd` Ereignis.  
  
 Implementierungen von benutzerdefinierten Sitzungszustandsspeicher-Anbieter verwenden die <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> Methode, um darüber zu informieren die <xref:System.Web.SessionState.SessionStateModule> Objekt, ob Aufrufe von der `Session_OnEnd` Ereignis verwendet werden und auf einen lokalen Verweis festgelegt werden soll die <xref:System.Web.SessionState.SessionStateItemExpireCallback> -Delegaten die `expireCallback` Parameter. Die benutzerdefinierte Implementierung muss entscheiden, wann der lokalen <xref:System.Web.SessionState.SessionStateItemExpireCallback> Delegat aufgerufen wird. Beispielsweise kann der Delegat aufgerufen werden, während des Aufrufs von der <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> -Methode, die aufgerufen wird, wenn eine Sitzung abgebrochen wird.  
  
   
  
## Examples  
 Ein Beispiel für die Implementierung eines Sitzungszustandsspeicher-Anbieters, finden Sie unter [Implementieren eines Sitzungszustands-Store-Anbieters](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Übersicht über die ASP.NET Session State</related>
      </Docs>
    </Member>
  </Members>
</Type>