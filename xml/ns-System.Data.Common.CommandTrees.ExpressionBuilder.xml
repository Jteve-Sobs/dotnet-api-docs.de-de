<Namespace Name="System.Data.Common.CommandTrees.ExpressionBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aef5a3dbc5fbc1d20dfe0ee122df8ba2b97586db" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="66759832" /></Metadata><Docs>
    <summary>Der <see cref="N:System.Data.Common.CommandTrees.ExpressionBuilder" />-Namespace stellt eine Befehlsstruktur-API bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

Die- <xref:System.Data.Common.CommandTrees.ExpressionBuilder> API wird verwendet, um Ausdrücke zu erstellen, die durch-Objekte dargestellt werden <xref:System.Data.Common.CommandTrees.DbExpression> . Die von der-Klasse bereitgestellte Befehlsstruktur-API <xref:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder> weist die folgenden Eigenschaften auf:  

- Funktionstüchtig: <xref:System.Data.Common.CommandTrees.DbExpression> Objekte werden mithilfe von funktionalen Mustern erstellt, die einen natürlichen Fluss der Konstruktion bereitstellen.

- Lose gekoppelt: ein- <xref:System.Data.Common.CommandTrees.DbExpression> Objekt ist nicht an eine bestimmte Befehlsstruktur gebunden und kann in jedem Kontext verwendet werden, in dem die typvereinbarung erfüllt ist.

- Unveränderlich: die API besteht ausschließlich aus unveränderlichen Typen. die muability kann simuliert werden, indem beim erneuten Erstellen einer Ausdrucks Baumstruktur neue Werte ersetzt werden.

 ]]></format>
    </remarks>
  </Docs>
</Namespace>