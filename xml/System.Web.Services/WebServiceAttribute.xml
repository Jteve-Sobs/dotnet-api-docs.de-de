<Type Name="WebServiceAttribute" FullName="System.Web.Services.WebServiceAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c1c9c6d4e03c91939b379f54f7e978728c96d482" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86666096" /></Metadata><TypeSignature Language="C#" Value="public sealed class WebServiceAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebServiceAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebServiceAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebServiceAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebServiceAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WebServiceAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, Inherited=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wird zum Hinzufügen zusätzlicher Informationen zu einem XML-Webdienst verwendet, z. B. beim Hinzufügen einer Zeichenfolge, die die Funktionalität des XML-Webdiensts beschreibt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.Services.WebServiceAttribute> ist nicht erforderlich, damit ein XML-Webdienst veröffentlicht und ausgeführt werden kann. Mit dem können Sie `WebServiceAttribute` einen Namen für den XML-Webdienst angeben, der nicht durch die Regeln für einen Common Language Runtime Bezeichner eingeschränkt ist, der in der Dienst Beschreibung und der Diensthilfe Seite für den XML-Webdienst verwendet wird.  
  
 Ein XML-Webdienst sollte seinen Standard-XML-Namespace ändern, bevor er öffentlich gemacht wird. Jeder XML-Webdienst benötigt einen eindeutigen XML-Namespace, um ihn zu identifizieren, damit Client Anwendungen ihn von anderen Webdiensten unterscheiden können. http://tempuri.org/ist für XML-Webdienste verfügbar, die sich in der Entwicklung befinden, aber veröffentlichte XML-Webdienste sollten einen permanenten Namespace verwenden.  
  
 Der XML-Webdienst sollte durch einen von Ihnen kontrollierten XML-Namespace identifiziert werden. Beispielsweise können Sie den Internet Domänen Namen Ihres Unternehmens als Teil des XML-Namespace verwenden. Obwohl viele XML-Namespaces für XML-Webdienste wie URLs aussehen, müssen Sie nicht auf eine tatsächliche Ressource im Internet verweisen. (XML-Namespaces für XML-Webdienste sind URIs.) Für XML-Webdienste, die mit ASP.NET erstellt wurden, kann der XML-Standard Namespace mithilfe der-Eigenschaft geändert werden <xref:System.Web.Services.WebServiceAttribute.Namespace%2A> .  
  
 Weitere Informationen zum Verwenden von Attributen finden Sie unter [Attribute](/dotnet/standard/attributes/).  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Web.Services.WebServiceAttribute.Description%2A> -Eigenschaft von <xref:System.Web.Services.WebServiceAttribute> auf festgelegt, `"Common Server Variables"` und der XML-Namespace wird auf festgelegt `http://www.microsoft.com/` .

[!code-aspx-csharp[Classic WebServiceAttribute Example](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebServiceAttribute Example/CS/sourcecs.asmx)]
[!code-aspx-vb[Classic WebServiceAttribute Example](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebServiceAttribute Example/VB/sourcevb.asmx)]    
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.WebService" />
    <altmember cref="T:System.Web.Services.WebMethodAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapRpcServiceAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebServiceAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Services.WebServiceAttribute" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultNamespace">
      <MemberSignature Language="C#" Value="public const string DefaultNamespace;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultNamespace" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.WebServiceAttribute.DefaultNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultNamespace As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultNamespace;" />
      <MemberSignature Language="F#" Value="val mutable DefaultNamespace : string" Usage="System.Web.Services.WebServiceAttribute.DefaultNamespace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Der Standardwert für die <see cref="P:System.Web.Services.WebServiceAttribute.Namespace" />-Eigenschaft. Dieses Feld ist konstant.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebServiceAttribute.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.Services.WebServiceAttribute.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine beschreibende Meldung für den XML-Webdienst.</summary>
        <value>Der Text, der die Funktionalität des XML-Webdiensts beschreibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die beschreibende Nachricht wird den potenziellen Consumern des XML-Webdiensts angezeigt, wenn Beschreibungs Dokumente für den XML-Webdienst generiert werden, z. b. die Dienst Beschreibung und die Diensthilfe Seite.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die- <xref:System.Web.Services.WebServiceAttribute.Description%2A> Eigenschaft auf festgelegt `"Common Server Variables"` .
  
[!code-aspx-csharp[Classic WebServiceAttribute Example](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebServiceAttribute Example/CS/sourcecs.asmx)]
[!code-aspx-vb[Classic WebServiceAttribute Example](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebServiceAttribute Example/VB/sourcevb.asmx)]    
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebServiceAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.Services.WebServiceAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des XML-Webdiensts ab oder legt ihn fest.</summary>
        <value>Der Name des XML-Webdiensts. Standardwert ist der Name der Klasse, die den XML-Webdienst implementiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Dienst Beschreibung wird generiert, wenn ein Benutzer zur URL für den XML-Webdienst navigiert und eine Abfrage Zeichenfolge von bereitstellt? WSDL. Innerhalb der Dienst Beschreibung identifiziert die- <xref:System.Web.Services.WebServiceAttribute.Name%2A> Eigenschaft den lokalen Teil des qualifizierten XML-Namens für den XML-Webdienst. Die- `Name` Eigenschaft wird auch verwendet, um den Namen des XML-Webdiensts auf der Diensthilfe Seite anzuzeigen. Die Diensthilfe Seite wird angezeigt, wenn ein potenzieller Consumer zur. ASMX-Seite für den XML-Webdienst navigiert, ohne einen XML-Webdienst Methodennamen und seine Parameter anzugeben.  
  
 Ein qualifizierter XML-Name wird verwendet, um Elemente mit dem gleichen Namen und einem XML-Dokument eindeutig zu machen. Ein qualifizierter XML-Name besteht aus den folgenden zwei Teilen, die durch einen Doppelpunkt getrennt sind: Namespace oder ein Präfix, das einem Namespace und einem lokalen Teil zugeordnet ist. Der Namespace besteht aus einem URI-Verweis und ist für den Zweck der Dienst Beschreibung der Wert der <xref:System.Web.Services.WebServiceAttribute.Namespace%2A> Eigenschaft. Im Allgemeinen wird ein Präfix, das wie ein Alias für einen URI fungiert, dem-Namespace zugeordnet, sodass alle nachfolgenden, qualifizierten XML-Namen, die den-Namespace verwenden, das gekürzte Präfix verwenden können. Der lokale Teil ist eine Zeichenfolge, die mit einem Buchstaben oder Unterstrich beginnt und keine Leerzeichen enthält. Daher weist der qualifizierte XML-Name, der einen XML-Webdienst in der Dienst Beschreibung identifiziert, das folgende Format auf:  
  
 <xref:System.Web.Services.WebServiceAttribute.Namespace%2A> : <xref:System.Web.Services.WebServiceAttribute.Name%2A>  
  
 Weitere Informationen zu qualifizierten XML-Namen finden Sie unter [Namespaces in XML 1,0](https://www.w3.org/TR/REC-xml-names/).
  
   
  
## Examples  
 Im folgenden Beispiel wird der <xref:System.Web.Services.WebServiceAttribute.Name%2A> XML-Webdienst auf festgelegt `MyName` .  
  
[!code-aspx-csharp[Classic WebServiceAttribute.Name Example](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebServiceAttribute.Name Example/CS/sourcecs.asmx)]
[!code-aspx-vb[Classic WebServiceAttribute.Name Example](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebServiceAttribute.Name Example/VB/sourcevb.asmx)]    
  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.WebServiceAttribute.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebServiceAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Web.Services.WebServiceAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den XML-Standardnamespace für den XML-Webdienst ab oder legt ihn fest.</summary>
        <value>Der XML-Standardnamespace für den XML-Webdienst. Der Standardwert wird in der <see cref="F:System.Web.Services.WebServiceAttribute.DefaultNamespace" />-Eigenschaft angegeben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML-Namespaces bieten eine Möglichkeit, Namen in einem XML-Dokument zu erstellen, die durch einen Uniform Resource Identifier (URI) identifiziert werden. Mithilfe von XML-Namespaces können Sie Elemente oder Attribute in einem XML-Dokument eindeutig identifizieren. Die Dienst Beschreibung für einen XML-Webdienst wird in XML definiert, insbesondere in Web Services Description Language (WSDL).  
  
 Innerhalb der Dienst Beschreibung für einen XML-Webdienst <xref:System.Web.Services.WebServiceAttribute.Namespace%2A> wird als Standard Namespace für XML-Elemente verwendet, die sich direkt auf den XML-Webdienst beziehen. Der Name des XML-Webdiensts und der zugehörigen XML-Webdienst Methoden beziehen sich z. b. auf den in der-Eigenschaft angegebenen Namespace `Namespace` . Elemente, die für WSDL spezifisch sind, beziehen sich auf den- <http://schemas.xmlsoap.org/wsdl/> Namespace.  
  
 Für XML-Webdienst Clients, die SOAP zum Abrufen eines XML-Webdiensts verwenden, können Sie optional oder hinzufügen, <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> um eine XML-Webdienst Methode aufzurufen. Wenn der Client einen mit ASP.NET erstellten XML-Webdienst aufrufen, <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace%2A> werden die <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace%2A> -Eigenschaft und die- <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action%2A> <xref:System.Web.Services.WebServiceAttribute.Namespace%2A> Eigenschaft standardmäßig aus der-Eigenschaft abgeleitet. Wenn beispielsweise ein XML-Webdienst Methodenname von `Time` und eine- `Namespace` Eigenschaft von angegeben wird `http://www.contoso.com/` , ist die- `Action` Eigenschaft `http://www.contoso.com/Time` standardmäßig. Wenn Sie die Standardeinstellungen für `RequestNamespace` , `ResponseNamespace` und `Action` für eine XML-Webdienst Methode ändern möchten, können Sie <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> der XML-Webdienst Methode einen hinzufügen.  
  
> [!NOTE]
>  Ein XML-Namespace unterscheidet sich in Bezug auf die Windows SDK von dem Namespace, in dem sich die Klasse befindet. Informationen zum Angeben des Namespace für die Klasse finden Sie unter [Namespace Schlüsselwörter](/dotnet/csharp/language-reference/keywords/namespace-keywords) beim Schreiben in c#.  
  
   
  
## Examples  
 Im folgenden Beispiel wird auf festgelegt, <xref:System.Web.Services.WebServiceAttribute.Namespace%2A> `http://www.contoso.com` und der Namespace für die- <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action%2A> Eigenschaft wird durch Hinzufügen von <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> zur XML- `Time` Webdienst Methode überschrieben.  
  
[!code-aspx-csharp[Classic WebServiceAttribute.Namespace Example](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebServiceAttribute.Namespace Example/CS/sourcecs.asmx)]
[!code-aspx-vb[Classic WebServiceAttribute.Namespace Example](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebServiceAttribute.Namespace Example/VB/sourcevb.asmx)]    
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.Services.WebServiceAttribute.DefaultNamespace" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace" />
        <altmember cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace" />
        <altmember cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action" />
        <altmember cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>
